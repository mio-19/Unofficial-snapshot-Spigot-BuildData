CriterionProgress d ()Ljava/util/Date; getDate
CriterionProgress a DATE_FORMAT
CriterionProgress b obtained
CriterionProgress b ()V grant
CriterionProgress c ()V revoke
CriterionProgress toString ()Ljava/lang/String; toString
CriterionProgress e ()Lcom/google/gson/JsonElement; serializeToJson
CriterionProgress b (LPacketDataSerializer;)LCriterionProgress; fromNetwork
RemoteControlCommandListener b buffer
RemoteControlCommandListener c server
RemoteControlCommandListener d ()V clearMessages
RemoteControlCommandListener e ()Ljava/lang/String; getMessages
RemoteControlCommandListener f ()LCommandListenerWrapper; getWrapper
RemoteControlCommandListener b ()Z acceptsFailure
RemoteControlCommandListener I_ ()Z shouldInformAdmins
RemoteStatusListener$RemoteStatusChallenge b time
RemoteStatusListener$RemoteStatusChallenge c token
RemoteStatusListener$RemoteStatusChallenge d identity
RemoteStatusListener$RemoteStatusChallenge e challengeBytes
RemoteStatusListener$RemoteStatusChallenge f ident
RemoteStatusListener$RemoteStatusChallenge a this$0
RemoteStatusListener$RemoteStatusChallenge b ()[B getChallengeBytes
RemoteStatusListener$RemoteStatusChallenge c ()[B getIdentBytes
RemoteStatusListener$RemoteStatusChallenge d ()Ljava/lang/String; getIdent
SoundEffects S ENTITY_ARMOR_STAND_PLACE
SoundEffects T ENTITY_ARROW_HIT
SoundEffects U ENTITY_ARROW_HIT_PLAYER
SoundEffects V ENTITY_ARROW_SHOOT
SoundEffects W ITEM_AXE_STRIP
SoundEffects X BLOCK_BAMBOO_BREAK
SoundEffects Y BLOCK_BAMBOO_FALL
SoundEffects Z BLOCK_BAMBOO_HIT
SoundEffects aa BLOCK_BAMBOO_PLACE
SoundEffects ab BLOCK_BAMBOO_STEP
SoundEffects ac BLOCK_BAMBOO_SAPLING_BREAK
SoundEffects ad BLOCK_BAMBOO_SAPLING_HIT
SoundEffects ae BLOCK_BAMBOO_SAPLING_PLACE
SoundEffects af BLOCK_BARREL_CLOSE
SoundEffects ag BLOCK_BARREL_OPEN
SoundEffects am ENTITY_BAT_AMBIENT
SoundEffects an ENTITY_BAT_DEATH
SoundEffects ao ENTITY_BAT_HURT
SoundEffects ap ENTITY_BAT_LOOP
SoundEffects aq ENTITY_BAT_TAKEOFF
SoundEffects ar BLOCK_BEACON_ACTIVATE
SoundEffects as BLOCK_BEACON_AMBIENT
SoundEffects at BLOCK_BEACON_DEACTIVATE
SoundEffects au BLOCK_BEACON_POWER_SELECT
SoundEffects av ENTITY_BEE_DEATH
SoundEffects aw ENTITY_BEE_HURT
SoundEffects a AMBIENT_CAVE
SoundEffects aZ ITEM_BOTTLE_FILL_DRAGONBREATH
SoundEffects ba BLOCK_BREWING_STAND_BREW
SoundEffects bb BLOCK_BUBBLE_COLUMN_BUBBLE_POP
SoundEffects bc BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT
SoundEffects bd BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE
SoundEffects be BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
SoundEffects bf BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE
SoundEffects bg ITEM_BUCKET_EMPTY
SoundEffects bh ITEM_BUCKET_EMPTY_FISH
SoundEffects bi ITEM_BUCKET_EMPTY_LAVA
SoundEffects bj ITEM_BUCKET_FILL
SoundEffects bk ITEM_BUCKET_FILL_FISH
SoundEffects bl ITEM_BUCKET_FILL_LAVA
SoundEffects bm BLOCK_CAMPFIRE_CRACKLE
SoundEffects bn ENTITY_CAT_AMBIENT
SoundEffects bo ENTITY_CAT_STRAY_AMBIENT
SoundEffects bp ENTITY_CAT_DEATH
SoundEffects bq ENTITY_CAT_EAT
SoundEffects br ENTITY_CAT_HISS
SoundEffects bs ENTITY_CAT_BEG_FOR_FOOD
SoundEffects bt ENTITY_CAT_HURT
SoundEffects bu ENTITY_CAT_PURR
SoundEffects bv ENTITY_CAT_PURREOW
SoundEffects bw BLOCK_CHEST_CLOSE
SoundEffects bx BLOCK_CHEST_LOCKED
SoundEffects by BLOCK_CHEST_OPEN
SoundEffects ax ENTITY_BEE_LOOP_AGGRESSIVE
SoundEffects ay ENTITY_BEE_LOOP
SoundEffects az ENTITY_BEE_STING
SoundEffects aA ENTITY_BEE_POLLINATE
SoundEffects aB BLOCK_BEEHIVE_DRIP
SoundEffects aC BLOCK_BEEHIVE_ENTER
SoundEffects aD BLOCK_BEEHIVE_EXIT
SoundEffects aE BLOCK_BEEHIVE_SHEAR
SoundEffects aF BLOCK_BEEHIVE_WORK
SoundEffects aG BLOCK_BELL_USE
SoundEffects aH BLOCK_BELL_RESONATE
SoundEffects aI ENTITY_BLAZE_AMBIENT
SoundEffects aJ ENTITY_BLAZE_BURN
SoundEffects aK ENTITY_BLAZE_DEATH
SoundEffects aL ENTITY_BLAZE_HURT
SoundEffects aM ENTITY_BLAZE_SHOOT
SoundEffects aN ENTITY_BOAT_PADDLE_LAND
SoundEffects aO ENTITY_BOAT_PADDLE_WATER
SoundEffects aU ITEM_BOOK_PAGE_TURN
SoundEffects aV ITEM_BOOK_PUT
SoundEffects ec ENTITY_FISHING_BOBBER_RETRIEVE
SoundEffects ed ENTITY_FISHING_BOBBER_SPLASH
SoundEffects ee ENTITY_FISHING_BOBBER_THROW
SoundEffects aW BLOCK_BLASTFURNACE_FIRE_CRACKLE
SoundEffects aX ITEM_BOTTLE_EMPTY
SoundEffects aY ITEM_BOTTLE_FILL
SoundEffects n AMBIENT_UNDERWATER_ENTER
SoundEffects bU BLOCK_CONDUIT_DEACTIVATE
SoundEffects ca ENTITY_COW_AMBIENT
SoundEffects cb ENTITY_COW_DEATH
SoundEffects cc ENTITY_COW_HURT
SoundEffects cd ENTITY_COW_MILK
SoundEffects ce ENTITY_COW_STEP
SoundEffects cf ENTITY_CREEPER_DEATH
SoundEffects cg ENTITY_CREEPER_HURT
SoundEffects ch ENTITY_CREEPER_PRIMED
SoundEffects ci BLOCK_CROP_BREAK
SoundEffects cj ITEM_CROP_PLANT
SoundEffects ck ITEM_CROSSBOW_HIT
SoundEffects cl ITEM_CROSSBOW_LOADING_END
SoundEffects cm ITEM_CROSSBOW_LOADING_MIDDLE
SoundEffects cn ITEM_CROSSBOW_LOADING_START
SoundEffects co ITEM_CROSSBOW_QUICK_CHARGE_1
SoundEffects cp ITEM_CROSSBOW_QUICK_CHARGE_2
SoundEffects cq ITEM_CROSSBOW_QUICK_CHARGE_3
SoundEffects cr ITEM_CROSSBOW_SHOOT
SoundEffects cs BLOCK_DISPENSER_DISPENSE
SoundEffects ct BLOCK_DISPENSER_FAIL
SoundEffects cu BLOCK_DISPENSER_LAUNCH
SoundEffects cv ENTITY_DOLPHIN_AMBIENT
SoundEffects cw ENTITY_DOLPHIN_AMBIENT_WATER
SoundEffects cx ENTITY_DOLPHIN_ATTACK
SoundEffects cy ENTITY_DOLPHIN_DEATH
SoundEffects bz ENTITY_CHICKEN_AMBIENT
SoundEffects bA ENTITY_CHICKEN_DEATH
SoundEffects bB ENTITY_CHICKEN_EGG
SoundEffects bC ENTITY_CHICKEN_HURT
SoundEffects bD ENTITY_CHICKEN_STEP
SoundEffects bE BLOCK_CHORUS_FLOWER_DEATH
SoundEffects bF BLOCK_CHORUS_FLOWER_GROW
SoundEffects bG ITEM_CHORUS_FRUIT_TELEPORT
SoundEffects qv BLOCK_WOOL_BREAK
SoundEffects qw BLOCK_WOOL_FALL
SoundEffects qx BLOCK_WOOL_HIT
SoundEffects qy BLOCK_WOOL_PLACE
SoundEffects qz BLOCK_WOOL_STEP
SoundEffects bH ENTITY_COD_AMBIENT
SoundEffects bI ENTITY_COD_DEATH
SoundEffects bJ ENTITY_COD_FLOP
SoundEffects bK ENTITY_COD_HURT
SoundEffects bL BLOCK_COMPARATOR_CLICK
SoundEffects bM BLOCK_COMPOSTER_EMPTY
SoundEffects bN BLOCK_COMPOSTER_FILL
SoundEffects bO BLOCK_COMPOSTER_FILL_SUCCESS
SoundEffects bP BLOCK_COMPOSTER_READY
SoundEffects bQ BLOCK_CONDUIT_ACTIVATE
SoundEffects bR BLOCK_CONDUIT_AMBIENT
SoundEffects bS BLOCK_CONDUIT_AMBIENT_SHORT
SoundEffects bT BLOCK_CONDUIT_ATTACK_TARGET
SoundEffects o AMBIENT_UNDERWATER_EXIT
SoundEffects cZ ENTITY_ELDER_GUARDIAN_FLOP
SoundEffects da ENTITY_ELDER_GUARDIAN_HURT
SoundEffects db ENTITY_ELDER_GUARDIAN_HURT_LAND
SoundEffects dc ITEM_ELYTRA_FLYING
SoundEffects dd BLOCK_ENCHANTMENT_TABLE_USE
SoundEffects de BLOCK_ENDER_CHEST_CLOSE
SoundEffects df BLOCK_ENDER_CHEST_OPEN
SoundEffects dg ENTITY_ENDER_DRAGON_AMBIENT
SoundEffects dh ENTITY_ENDER_DRAGON_DEATH
SoundEffects di ENTITY_DRAGON_FIREBALL_EXPLODE
SoundEffects dj ENTITY_ENDER_DRAGON_FLAP
SoundEffects dk ENTITY_ENDER_DRAGON_GROWL
SoundEffects dl ENTITY_ENDER_DRAGON_HURT
SoundEffects dm ENTITY_ENDER_DRAGON_SHOOT
SoundEffects dn ENTITY_ENDER_EYE_DEATH
SoundEffects do ENTITY_ENDER_EYE_LAUNCH
SoundEffects dp ENTITY_ENDERMAN_AMBIENT
SoundEffects dq ENTITY_ENDERMAN_DEATH
SoundEffects dr ENTITY_ENDERMAN_HURT
SoundEffects ds ENTITY_ENDERMAN_SCREAM
SoundEffects dt ENTITY_ENDERMAN_STARE
SoundEffects du ENTITY_ENDERMAN_TELEPORT
SoundEffects dv ENTITY_ENDERMITE_AMBIENT
SoundEffects dw ENTITY_ENDERMITE_DEATH
SoundEffects dx ENTITY_ENDERMITE_HURT
SoundEffects dy ENTITY_ENDERMITE_STEP
SoundEffects cz ENTITY_DOLPHIN_EAT
SoundEffects cA ENTITY_DOLPHIN_HURT
SoundEffects cB ENTITY_DOLPHIN_JUMP
SoundEffects cC ENTITY_DOLPHIN_PLAY
SoundEffects cD ENTITY_DOLPHIN_SPLASH
SoundEffects cE ENTITY_DOLPHIN_SWIM
SoundEffects cF ENTITY_DONKEY_AMBIENT
SoundEffects cG ENTITY_DONKEY_ANGRY
SoundEffects cH ENTITY_DONKEY_CHEST
SoundEffects cI ENTITY_DONKEY_DEATH
SoundEffects cJ ENTITY_DONKEY_HURT
SoundEffects cK ENTITY_DROWNED_AMBIENT
SoundEffects cL ENTITY_DROWNED_AMBIENT_WATER
SoundEffects cM ENTITY_DROWNED_DEATH
SoundEffects cN ENTITY_DROWNED_DEATH_WATER
SoundEffects cO ENTITY_DROWNED_HURT
SoundEffects cP ENTITY_DROWNED_HURT_WATER
SoundEffects cQ ENTITY_DROWNED_SHOOT
SoundEffects cR ENTITY_DROWNED_STEP
SoundEffects cS ENTITY_DROWNED_SWIM
SoundEffects cT ENTITY_EGG_THROW
SoundEffects cU ENTITY_ELDER_GUARDIAN_AMBIENT
SoundEffects cV ENTITY_ELDER_GUARDIAN_AMBIENT_LAND
SoundEffects cW ENTITY_ELDER_GUARDIAN_CURSE
SoundEffects cX ENTITY_ELDER_GUARDIAN_DEATH
SoundEffects cY ENTITY_ELDER_GUARDIAN_DEATH_LAND
SoundEffects p AMBIENT_UNDERWATER_LOOP
SoundEffects dZ BLOCK_FIRE_AMBIENT
SoundEffects ea BLOCK_FIRE_EXTINGUISH
SoundEffects eb ENTITY_FISH_SWIM
SoundEffects ef ITEM_FLINTANDSTEEL_USE
SoundEffects eg ENTITY_FOX_AGGRO
SoundEffects eh ENTITY_FOX_AMBIENT
SoundEffects ei ENTITY_FOX_BITE
SoundEffects ej ENTITY_FOX_DEATH
SoundEffects ek ENTITY_FOX_EAT
SoundEffects el ENTITY_FOX_HURT
SoundEffects em ENTITY_FOX_SCREECH
SoundEffects en ENTITY_FOX_SLEEP
SoundEffects eo ENTITY_FOX_SNIFF
SoundEffects ep ENTITY_FOX_SPIT
SoundEffects ev BLOCK_FURNACE_FIRE_CRACKLE
SoundEffects ew ENTITY_GENERIC_BIG_FALL
SoundEffects ex ENTITY_GENERIC_BURN
SoundEffects ey ENTITY_GENERIC_DEATH
SoundEffects ez ENTITY_GENERIC_DRINK
SoundEffects eA ENTITY_GENERIC_EAT
SoundEffects eB ENTITY_GENERIC_EXPLODE
SoundEffects eC ENTITY_GENERIC_EXTINGUISH_FIRE
SoundEffects eD ENTITY_GENERIC_HURT
SoundEffects eE ENTITY_GENERIC_SMALL_FALL
SoundEffects eF ENTITY_GENERIC_SPLASH
SoundEffects eG ENTITY_GENERIC_SWIM
SoundEffects dz ENTITY_ENDER_PEARL_THROW
SoundEffects dA BLOCK_END_GATEWAY_SPAWN
SoundEffects dB BLOCK_END_PORTAL_FRAME_FILL
SoundEffects dC BLOCK_END_PORTAL_SPAWN
SoundEffects dD ENTITY_EVOKER_AMBIENT
SoundEffects dE ENTITY_EVOKER_CAST_SPELL
SoundEffects dF ENTITY_EVOKER_CELEBRATE
SoundEffects dG ENTITY_EVOKER_DEATH
SoundEffects dH ENTITY_EVOKER_FANGS_ATTACK
SoundEffects dI ENTITY_EVOKER_HURT
SoundEffects dJ ENTITY_EVOKER_PREPARE_ATTACK
SoundEffects dK ENTITY_EVOKER_PREPARE_SUMMON
SoundEffects dL ENTITY_EVOKER_PREPARE_WOLOLO
SoundEffects dM ENTITY_EXPERIENCE_BOTTLE_THROW
SoundEffects dN ENTITY_EXPERIENCE_ORB_PICKUP
SoundEffects dO BLOCK_FENCE_GATE_CLOSE
SoundEffects dP BLOCK_FENCE_GATE_OPEN
SoundEffects dQ ITEM_FIRECHARGE_USE
SoundEffects dR ENTITY_FIREWORK_ROCKET_BLAST
SoundEffects dS ENTITY_FIREWORK_ROCKET_BLAST_FAR
SoundEffects dT ENTITY_FIREWORK_ROCKET_LARGE_BLAST
SoundEffects dU ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR
SoundEffects dV ENTITY_FIREWORK_ROCKET_LAUNCH
SoundEffects dW ENTITY_FIREWORK_ROCKET_SHOOT
SoundEffects dX ENTITY_FIREWORK_ROCKET_TWINKLE
SoundEffects dY ENTITY_FIREWORK_ROCKET_TWINKLE_FAR
SoundEffects q AMBIENT_UNDERWATER_LOOP_ADDITIONS
SoundEffects eX BLOCK_GRAVEL_BREAK
SoundEffects eY BLOCK_GRAVEL_FALL
SoundEffects eZ BLOCK_GRAVEL_HIT
SoundEffects fa BLOCK_GRAVEL_PLACE
SoundEffects fb BLOCK_GRAVEL_STEP
SoundEffects fc BLOCK_GRINDSTONE_USE
SoundEffects fd ENTITY_GUARDIAN_AMBIENT
SoundEffects fe ENTITY_GUARDIAN_AMBIENT_LAND
SoundEffects ff ENTITY_GUARDIAN_ATTACK
SoundEffects fg ENTITY_GUARDIAN_DEATH
SoundEffects fh ENTITY_GUARDIAN_DEATH_LAND
SoundEffects fi ENTITY_GUARDIAN_FLOP
SoundEffects fj ENTITY_GUARDIAN_HURT
SoundEffects fk ENTITY_GUARDIAN_HURT_LAND
SoundEffects fl ITEM_HOE_TILL
SoundEffects ft BLOCK_HONEY_BLOCK_BREAK
SoundEffects fu BLOCK_HONEY_BLOCK_FALL
SoundEffects fv BLOCK_HONEY_BLOCK_HIT
SoundEffects fw BLOCK_HONEY_BLOCK_PLACE
SoundEffects fx BLOCK_HONEY_BLOCK_SLIDE
SoundEffects fy BLOCK_HONEY_BLOCK_STEP
SoundEffects fz ITEM_HONEY_BOTTLE_DRINK
SoundEffects fA ENTITY_HORSE_AMBIENT
SoundEffects fB ENTITY_HORSE_ANGRY
SoundEffects fC ENTITY_HORSE_ARMOR
SoundEffects fD ENTITY_HORSE_BREATHE
SoundEffects eH ENTITY_GHAST_AMBIENT
SoundEffects eI ENTITY_GHAST_DEATH
SoundEffects eJ ENTITY_GHAST_HURT
SoundEffects eK ENTITY_GHAST_SCREAM
SoundEffects eL ENTITY_GHAST_SHOOT
SoundEffects eM ENTITY_GHAST_WARN
SoundEffects eN BLOCK_GLASS_BREAK
SoundEffects eO BLOCK_GLASS_FALL
SoundEffects eP BLOCK_GLASS_HIT
SoundEffects eQ BLOCK_GLASS_PLACE
SoundEffects eR BLOCK_GLASS_STEP
SoundEffects eS BLOCK_GRASS_BREAK
SoundEffects eT BLOCK_GRASS_FALL
SoundEffects eU BLOCK_GRASS_HIT
SoundEffects eV BLOCK_GRASS_PLACE
SoundEffects eW BLOCK_GRASS_STEP
SoundEffects pE BLOCK_WET_GRASS_BREAK
SoundEffects pF BLOCK_WET_GRASS_FALL
SoundEffects pG BLOCK_WET_GRASS_HIT
SoundEffects pH BLOCK_WET_GRASS_PLACE
SoundEffects pI BLOCK_WET_GRASS_STEP
SoundEffects bV BLOCK_CORAL_BLOCK_BREAK
SoundEffects bW BLOCK_CORAL_BLOCK_FALL
SoundEffects bX BLOCK_CORAL_BLOCK_HIT
SoundEffects bY BLOCK_CORAL_BLOCK_PLACE
SoundEffects bZ BLOCK_CORAL_BLOCK_STEP
SoundEffects r AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
SoundEffects lx ENTITY_RAVAGER_STUNNED
SoundEffects ly ENTITY_RAVAGER_ROAR
SoundEffects fY ENTITY_ILLUSIONER_AMBIENT
SoundEffects fZ ENTITY_ILLUSIONER_CAST_SPELL
SoundEffects ga ENTITY_ILLUSIONER_DEATH
SoundEffects gb ENTITY_ILLUSIONER_HURT
SoundEffects gc ENTITY_ILLUSIONER_MIRROR_MOVE
SoundEffects gd ENTITY_ILLUSIONER_PREPARE_BLINDNESS
SoundEffects ge ENTITY_ILLUSIONER_PREPARE_MIRROR
SoundEffects gf BLOCK_IRON_DOOR_CLOSE
SoundEffects gg BLOCK_IRON_DOOR_OPEN
SoundEffects gh ENTITY_IRON_GOLEM_ATTACK
SoundEffects gi ENTITY_IRON_GOLEM_DAMAGE
SoundEffects gj ENTITY_IRON_GOLEM_DEATH
SoundEffects gk ENTITY_IRON_GOLEM_HURT
SoundEffects gl ENTITY_IRON_GOLEM_REPAIR
SoundEffects gm ENTITY_IRON_GOLEM_STEP
SoundEffects gn BLOCK_IRON_TRAPDOOR_CLOSE
SoundEffects go BLOCK_IRON_TRAPDOOR_OPEN
SoundEffects gp ENTITY_ITEM_FRAME_ADD_ITEM
SoundEffects gq ENTITY_ITEM_FRAME_BREAK
SoundEffects gr ENTITY_ITEM_FRAME_PLACE
SoundEffects gs ENTITY_ITEM_FRAME_REMOVE_ITEM
SoundEffects gt ENTITY_ITEM_FRAME_ROTATE_ITEM
SoundEffects gu ENTITY_ITEM_BREAK
SoundEffects gv ENTITY_ITEM_PICKUP
SoundEffects fE ENTITY_HORSE_DEATH
SoundEffects fF ENTITY_HORSE_EAT
SoundEffects fG ENTITY_HORSE_GALLOP
SoundEffects fH ENTITY_HORSE_HURT
SoundEffects fI ENTITY_HORSE_JUMP
SoundEffects fJ ENTITY_HORSE_LAND
SoundEffects fK ENTITY_HORSE_SADDLE
SoundEffects fL ENTITY_HORSE_STEP
SoundEffects fM ENTITY_HORSE_STEP_WOOD
SoundEffects fN ENTITY_HOSTILE_BIG_FALL
SoundEffects fO ENTITY_HOSTILE_DEATH
SoundEffects fP ENTITY_HOSTILE_HURT
SoundEffects fQ ENTITY_HOSTILE_SMALL_FALL
SoundEffects fR ENTITY_HOSTILE_SPLASH
SoundEffects fS ENTITY_HOSTILE_SWIM
SoundEffects fT ENTITY_HUSK_AMBIENT
SoundEffects fU ENTITY_HUSK_CONVERTED_TO_ZOMBIE
SoundEffects fV ENTITY_HUSK_DEATH
SoundEffects fW ENTITY_HUSK_HURT
SoundEffects fX ENTITY_HUSK_STEP
SoundEffects lr ENTITY_RAVAGER_AMBIENT
SoundEffects ls ENTITY_RAVAGER_ATTACK
SoundEffects lt ENTITY_RAVAGER_CELEBRATE
SoundEffects lu ENTITY_RAVAGER_DEATH
SoundEffects lv ENTITY_RAVAGER_HURT
SoundEffects lw ENTITY_RAVAGER_STEP
SoundEffects s AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
SoundEffects gW ENTITY_LLAMA_STEP
SoundEffects gX ENTITY_LLAMA_SWAG
SoundEffects gZ ENTITY_MAGMA_CUBE_DEATH
SoundEffects ha ENTITY_MAGMA_CUBE_HURT
SoundEffects hc ENTITY_MAGMA_CUBE_JUMP
SoundEffects hd ENTITY_MAGMA_CUBE_SQUISH
SoundEffects hf BLOCK_METAL_BREAK
SoundEffects hg BLOCK_METAL_FALL
SoundEffects hh BLOCK_METAL_HIT
SoundEffects hi BLOCK_METAL_PLACE
SoundEffects hj BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF
SoundEffects hk BLOCK_METAL_PRESSURE_PLATE_CLICK_ON
SoundEffects hl BLOCK_METAL_STEP
SoundEffects hm ENTITY_MINECART_INSIDE
SoundEffects hn ENTITY_MINECART_RIDING
SoundEffects ho ENTITY_MOOSHROOM_CONVERT
SoundEffects hp ENTITY_MOOSHROOM_EAT
SoundEffects hq ENTITY_MOOSHROOM_MILK
SoundEffects hr ENTITY_MOOSHROOM_SUSPICIOUS_MILK
SoundEffects hs ENTITY_MOOSHROOM_SHEAR
SoundEffects ht ENTITY_MULE_AMBIENT
SoundEffects hu ENTITY_MULE_CHEST
SoundEffects hv ENTITY_MULE_DEATH
SoundEffects hw ENTITY_MULE_HURT
SoundEffects hx MUSIC_CREATIVE
SoundEffects hy MUSIC_CREDITS
SoundEffects gw BLOCK_LADDER_BREAK
SoundEffects gx BLOCK_LADDER_FALL
SoundEffects gy BLOCK_LADDER_HIT
SoundEffects gz BLOCK_LADDER_PLACE
SoundEffects gA BLOCK_LADDER_STEP
SoundEffects gB BLOCK_LANTERN_BREAK
SoundEffects gC BLOCK_LANTERN_FALL
SoundEffects gD BLOCK_LANTERN_HIT
SoundEffects gE BLOCK_LANTERN_PLACE
SoundEffects gF BLOCK_LANTERN_STEP
SoundEffects gG BLOCK_LAVA_AMBIENT
SoundEffects gH BLOCK_LAVA_EXTINGUISH
SoundEffects gI BLOCK_LAVA_POP
SoundEffects gJ ENTITY_LEASH_KNOT_BREAK
SoundEffects gK ENTITY_LEASH_KNOT_PLACE
SoundEffects gL BLOCK_LEVER_CLICK
SoundEffects gM ENTITY_LIGHTNING_BOLT_IMPACT
SoundEffects gN ENTITY_LIGHTNING_BOLT_THUNDER
SoundEffects gO ENTITY_LINGERING_POTION_THROW
SoundEffects gP ENTITY_LLAMA_AMBIENT
SoundEffects gQ ENTITY_LLAMA_ANGRY
SoundEffects gR ENTITY_LLAMA_CHEST
SoundEffects gS ENTITY_LLAMA_DEATH
SoundEffects gT ENTITY_LLAMA_EAT
SoundEffects gU ENTITY_LLAMA_HURT
SoundEffects gV ENTITY_LLAMA_SPIT
SoundEffects y BLOCK_ANVIL_BREAK
SoundEffects je ENTITY_OCELOT_DEATH
SoundEffects jf ENTITY_PAINTING_BREAK
SoundEffects jg ENTITY_PAINTING_PLACE
SoundEffects jh ENTITY_PANDA_PRE_SNEEZE
SoundEffects ji ENTITY_PANDA_SNEEZE
SoundEffects jj ENTITY_PANDA_AMBIENT
SoundEffects jk ENTITY_PANDA_DEATH
SoundEffects jl ENTITY_PANDA_EAT
SoundEffects jm ENTITY_PANDA_STEP
SoundEffects jn ENTITY_PANDA_CANT_BREED
SoundEffects jo ENTITY_PANDA_AGGRESSIVE_AMBIENT
SoundEffects jp ENTITY_PANDA_WORRIED_AMBIENT
SoundEffects jq ENTITY_PANDA_HURT
SoundEffects jr ENTITY_PANDA_BITE
SoundEffects js ENTITY_PARROT_AMBIENT
SoundEffects jt ENTITY_PARROT_DEATH
SoundEffects ju ENTITY_PARROT_EAT
SoundEffects jv ENTITY_PARROT_FLY
SoundEffects jw ENTITY_PARROT_HURT
SoundEffects jx ENTITY_PARROT_IMITATE_BLAZE
SoundEffects jy ENTITY_PARROT_IMITATE_CREEPER
SoundEffects jz ENTITY_PARROT_IMITATE_DROWNED
SoundEffects jA ENTITY_PARROT_IMITATE_ELDER_GUARDIAN
SoundEffects jB ENTITY_PARROT_IMITATE_ENDER_DRAGON
SoundEffects jC ENTITY_PARROT_IMITATE_ENDERMITE
SoundEffects jD ENTITY_PARROT_IMITATE_EVOKER
SoundEffects hL MUSIC_DRAGON
SoundEffects hM MUSIC_END
SoundEffects hN MUSIC_GAME
SoundEffects hO MUSIC_MENU
SoundEffects hP MUSIC_NETHER
SoundEffects hQ MUSIC_UNDER_WATER
SoundEffects hW BLOCK_NETHER_WART_BREAK
SoundEffects hX ITEM_NETHER_WART_PLANT
SoundEffects iM BLOCK_NOTE_BLOCK_BASEDRUM
SoundEffects iN BLOCK_NOTE_BLOCK_BASS
SoundEffects iO BLOCK_NOTE_BLOCK_BELL
SoundEffects iP BLOCK_NOTE_BLOCK_CHIME
SoundEffects iQ BLOCK_NOTE_BLOCK_FLUTE
SoundEffects iR BLOCK_NOTE_BLOCK_GUITAR
SoundEffects iS BLOCK_NOTE_BLOCK_HARP
SoundEffects iT BLOCK_NOTE_BLOCK_HAT
SoundEffects iU BLOCK_NOTE_BLOCK_PLING
SoundEffects iV BLOCK_NOTE_BLOCK_SNARE
SoundEffects iW BLOCK_NOTE_BLOCK_XYLOPHONE
SoundEffects iX BLOCK_NOTE_BLOCK_IRON_XYLOPHONE
SoundEffects iY BLOCK_NOTE_BLOCK_COW_BELL
SoundEffects iZ BLOCK_NOTE_BLOCK_DIDGERIDOO
SoundEffects ja BLOCK_NOTE_BLOCK_BIT
SoundEffects jb BLOCK_NOTE_BLOCK_BANJO
SoundEffects jc ENTITY_OCELOT_HURT
SoundEffects jd ENTITY_OCELOT_AMBIENT
SoundEffects z BLOCK_ANVIL_DESTROY
SoundEffects ke ENTITY_PHANTOM_HURT
SoundEffects kf ENTITY_PHANTOM_SWOOP
SoundEffects kg ENTITY_PIG_AMBIENT
SoundEffects kh ENTITY_PIG_DEATH
SoundEffects ki ENTITY_PIG_HURT
SoundEffects kj ENTITY_PIG_SADDLE
SoundEffects kk ENTITY_PIG_STEP
SoundEffects kv ENTITY_PILLAGER_AMBIENT
SoundEffects kw ENTITY_PILLAGER_CELEBRATE
SoundEffects kx ENTITY_PILLAGER_DEATH
SoundEffects ky ENTITY_PILLAGER_HURT
SoundEffects kz BLOCK_PISTON_CONTRACT
SoundEffects kA BLOCK_PISTON_EXTEND
SoundEffects kB ENTITY_PLAYER_ATTACK_CRIT
SoundEffects kC ENTITY_PLAYER_ATTACK_KNOCKBACK
SoundEffects kD ENTITY_PLAYER_ATTACK_NODAMAGE
SoundEffects kE ENTITY_PLAYER_ATTACK_STRONG
SoundEffects kF ENTITY_PLAYER_ATTACK_SWEEP
SoundEffects kG ENTITY_PLAYER_ATTACK_WEAK
SoundEffects kH ENTITY_PLAYER_BIG_FALL
SoundEffects kI ENTITY_PLAYER_BREATH
SoundEffects kJ ENTITY_PLAYER_BURP
SoundEffects kK ENTITY_PLAYER_DEATH
SoundEffects kL ENTITY_PLAYER_HURT
SoundEffects kM ENTITY_PLAYER_HURT_DROWN
SoundEffects kN ENTITY_PLAYER_HURT_ON_FIRE
SoundEffects jE ENTITY_PARROT_IMITATE_GHAST
SoundEffects jF ENTITY_PARROT_IMITATE_GUARDIAN
SoundEffects jG ENTITY_PARROT_IMITATE_HUSK
SoundEffects jH ENTITY_PARROT_IMITATE_ILLUSIONER
SoundEffects jI ENTITY_PARROT_IMITATE_MAGMA_CUBE
SoundEffects jJ ENTITY_PARROT_IMITATE_PHANTOM
SoundEffects jK ENTITY_PARROT_IMITATE_PILLAGER
SoundEffects jL ENTITY_PARROT_IMITATE_RAVAGER
SoundEffects jM ENTITY_PARROT_IMITATE_SHULKER
SoundEffects jN ENTITY_PARROT_IMITATE_SILVERFISH
SoundEffects jO ENTITY_PARROT_IMITATE_SKELETON
SoundEffects jP ENTITY_PARROT_IMITATE_SLIME
SoundEffects jQ ENTITY_PARROT_IMITATE_SPIDER
SoundEffects jR ENTITY_PARROT_IMITATE_STRAY
SoundEffects jS ENTITY_PARROT_IMITATE_VEX
SoundEffects jT ENTITY_PARROT_IMITATE_VINDICATOR
SoundEffects jU ENTITY_PARROT_IMITATE_WITCH
SoundEffects jV ENTITY_PARROT_IMITATE_WITHER
SoundEffects jW ENTITY_PARROT_IMITATE_WITHER_SKELETON
SoundEffects jX ENTITY_PARROT_IMITATE_ZOMBIE
SoundEffects jY ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER
SoundEffects jZ ENTITY_PARROT_STEP
SoundEffects ka ENTITY_PHANTOM_AMBIENT
SoundEffects kb ENTITY_PHANTOM_BITE
SoundEffects kc ENTITY_PHANTOM_DEATH
SoundEffects kd ENTITY_PHANTOM_FLAP
SoundEffects A BLOCK_ANVIL_FALL
SoundEffects lo ENTITY_RABBIT_HURT
SoundEffects lp ENTITY_RABBIT_JUMP
SoundEffects lq EVENT_RAID_HORN
SoundEffects hz MUSIC_DISC_11
SoundEffects hA MUSIC_DISC_13
SoundEffects hB MUSIC_DISC_BLOCKS
SoundEffects hC MUSIC_DISC_CAT
SoundEffects hD MUSIC_DISC_CHIRP
SoundEffects hE MUSIC_DISC_FAR
SoundEffects hF MUSIC_DISC_MALL
SoundEffects hG MUSIC_DISC_MELLOHI
SoundEffects hH MUSIC_DISC_STAL
SoundEffects hI MUSIC_DISC_STRAD
SoundEffects hJ MUSIC_DISC_WAIT
SoundEffects hK MUSIC_DISC_WARD
SoundEffects lE BLOCK_REDSTONE_TORCH_BURNOUT
SoundEffects lJ ENTITY_SALMON_AMBIENT
SoundEffects lK ENTITY_SALMON_DEATH
SoundEffects lL ENTITY_SALMON_FLOP
SoundEffects lM ENTITY_SALMON_HURT
SoundEffects lN BLOCK_SAND_BREAK
SoundEffects lO BLOCK_SAND_FALL
SoundEffects lP BLOCK_SAND_HIT
SoundEffects lQ BLOCK_SAND_PLACE
SoundEffects lR BLOCK_SAND_STEP
SoundEffects lS BLOCK_SCAFFOLDING_BREAK
SoundEffects kO ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH
SoundEffects kP ENTITY_PLAYER_LEVELUP
SoundEffects kQ ENTITY_PLAYER_SMALL_FALL
SoundEffects kR ENTITY_PLAYER_SPLASH
SoundEffects kS ENTITY_PLAYER_SPLASH_HIGH_SPEED
SoundEffects kT ENTITY_PLAYER_SWIM
SoundEffects kU ENTITY_POLAR_BEAR_AMBIENT
SoundEffects kV ENTITY_POLAR_BEAR_AMBIENT_BABY
SoundEffects kW ENTITY_POLAR_BEAR_DEATH
SoundEffects kX ENTITY_POLAR_BEAR_HURT
SoundEffects kY ENTITY_POLAR_BEAR_STEP
SoundEffects kZ ENTITY_POLAR_BEAR_WARNING
SoundEffects la BLOCK_PORTAL_AMBIENT
SoundEffects lb BLOCK_PORTAL_TRAVEL
SoundEffects lc BLOCK_PORTAL_TRIGGER
SoundEffects ld ENTITY_PUFFER_FISH_AMBIENT
SoundEffects le ENTITY_PUFFER_FISH_BLOW_OUT
SoundEffects lf ENTITY_PUFFER_FISH_BLOW_UP
SoundEffects lg ENTITY_PUFFER_FISH_DEATH
SoundEffects lh ENTITY_PUFFER_FISH_FLOP
SoundEffects li ENTITY_PUFFER_FISH_HURT
SoundEffects lj ENTITY_PUFFER_FISH_STING
SoundEffects lk BLOCK_PUMPKIN_CARVE
SoundEffects ll ENTITY_RABBIT_AMBIENT
SoundEffects lm ENTITY_RABBIT_ATTACK
SoundEffects ln ENTITY_RABBIT_DEATH
SoundEffects B BLOCK_ANVIL_HIT
SoundEffects my ENTITY_SILVERFISH_HURT
SoundEffects mz ENTITY_SILVERFISH_STEP
SoundEffects mA ENTITY_SKELETON_AMBIENT
SoundEffects mB ENTITY_SKELETON_DEATH
SoundEffects mC ENTITY_SKELETON_HORSE_AMBIENT
SoundEffects mD ENTITY_SKELETON_HORSE_DEATH
SoundEffects mE ENTITY_SKELETON_HORSE_HURT
SoundEffects mF ENTITY_SKELETON_HORSE_SWIM
SoundEffects mG ENTITY_SKELETON_HORSE_AMBIENT_WATER
SoundEffects mH ENTITY_SKELETON_HORSE_GALLOP_WATER
SoundEffects mI ENTITY_SKELETON_HORSE_JUMP_WATER
SoundEffects mJ ENTITY_SKELETON_HORSE_STEP_WATER
SoundEffects mK ENTITY_SKELETON_HURT
SoundEffects mL ENTITY_SKELETON_SHOOT
SoundEffects mM ENTITY_SKELETON_STEP
SoundEffects mN ENTITY_SLIME_ATTACK
SoundEffects mO ENTITY_SLIME_DEATH
SoundEffects mP ENTITY_SLIME_HURT
SoundEffects mQ ENTITY_SLIME_JUMP
SoundEffects mR ENTITY_SLIME_SQUISH
SoundEffects mS BLOCK_SLIME_BLOCK_BREAK
SoundEffects mT BLOCK_SLIME_BLOCK_FALL
SoundEffects mU BLOCK_SLIME_BLOCK_HIT
SoundEffects mV BLOCK_SLIME_BLOCK_PLACE
SoundEffects mW BLOCK_SLIME_BLOCK_STEP
SoundEffects gY ENTITY_MAGMA_CUBE_DEATH_SMALL
SoundEffects lT BLOCK_SCAFFOLDING_FALL
SoundEffects lU BLOCK_SCAFFOLDING_HIT
SoundEffects lV BLOCK_SCAFFOLDING_PLACE
SoundEffects lW BLOCK_SCAFFOLDING_STEP
SoundEffects lX ENTITY_SHEEP_AMBIENT
SoundEffects lY ENTITY_SHEEP_DEATH
SoundEffects lZ ENTITY_SHEEP_HURT
SoundEffects ma ENTITY_SHEEP_SHEAR
SoundEffects mb ENTITY_SHEEP_STEP
SoundEffects mc ITEM_SHIELD_BLOCK
SoundEffects md ITEM_SHIELD_BREAK
SoundEffects mj ITEM_SHOVEL_FLATTEN
SoundEffects mk ENTITY_SHULKER_AMBIENT
SoundEffects ml BLOCK_SHULKER_BOX_CLOSE
SoundEffects mm BLOCK_SHULKER_BOX_OPEN
SoundEffects mn ENTITY_SHULKER_BULLET_HIT
SoundEffects mo ENTITY_SHULKER_BULLET_HURT
SoundEffects mp ENTITY_SHULKER_CLOSE
SoundEffects mq ENTITY_SHULKER_DEATH
SoundEffects mr ENTITY_SHULKER_HURT
SoundEffects ms ENTITY_SHULKER_HURT_CLOSED
SoundEffects mt ENTITY_SHULKER_OPEN
SoundEffects mu ENTITY_SHULKER_SHOOT
SoundEffects mv ENTITY_SHULKER_TELEPORT
SoundEffects mw ENTITY_SILVERFISH_AMBIENT
SoundEffects mx ENTITY_SILVERFISH_DEATH
SoundEffects C BLOCK_ANVIL_LAND
SoundEffects nI ENTITY_SQUID_SQUIRT
SoundEffects nJ BLOCK_STONE_BREAK
SoundEffects nK BLOCK_STONE_BUTTON_CLICK_OFF
SoundEffects nL BLOCK_STONE_BUTTON_CLICK_ON
SoundEffects nM BLOCK_STONE_FALL
SoundEffects nN BLOCK_STONE_HIT
SoundEffects nO BLOCK_STONE_PLACE
SoundEffects nP BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF
SoundEffects nQ BLOCK_STONE_PRESSURE_PLATE_CLICK_ON
SoundEffects nR BLOCK_STONE_STEP
SoundEffects nS ENTITY_STRAY_AMBIENT
SoundEffects nT ENTITY_STRAY_DEATH
SoundEffects nU ENTITY_STRAY_HURT
SoundEffects nV ENTITY_STRAY_STEP
SoundEffects nW BLOCK_SWEET_BERRY_BUSH_BREAK
SoundEffects nX BLOCK_SWEET_BERRY_BUSH_PLACE
SoundEffects nY ITEM_SWEET_BERRIES_PICK_FROM_BUSH
SoundEffects nZ ENCHANT_THORNS_HIT
SoundEffects oa ENTITY_TNT_PRIMED
SoundEffects ob ITEM_TOTEM_USE
SoundEffects oc ITEM_TRIDENT_HIT
SoundEffects od ITEM_TRIDENT_HIT_GROUND
SoundEffects oe ITEM_TRIDENT_RETURN
SoundEffects of ITEM_TRIDENT_RIPTIDE_1
SoundEffects og ITEM_TRIDENT_RIPTIDE_2
SoundEffects oh ITEM_TRIDENT_RIPTIDE_3
SoundEffects hb ENTITY_MAGMA_CUBE_HURT_SMALL
SoundEffects he ENTITY_MAGMA_CUBE_SQUISH_SMALL
SoundEffects ni ENTITY_SLIME_DEATH_SMALL
SoundEffects nj ENTITY_SLIME_HURT_SMALL
SoundEffects nk ENTITY_SLIME_JUMP_SMALL
SoundEffects nl ENTITY_SLIME_SQUISH_SMALL
SoundEffects nn BLOCK_SMOKER_SMOKE
SoundEffects no ENTITY_SNOWBALL_THROW
SoundEffects np BLOCK_SNOW_BREAK
SoundEffects nq BLOCK_SNOW_FALL
SoundEffects nr ENTITY_SNOW_GOLEM_AMBIENT
SoundEffects ns ENTITY_SNOW_GOLEM_DEATH
SoundEffects nt ENTITY_SNOW_GOLEM_HURT
SoundEffects nu ENTITY_SNOW_GOLEM_SHOOT
SoundEffects nw BLOCK_SNOW_HIT
SoundEffects nx BLOCK_SNOW_PLACE
SoundEffects ny BLOCK_SNOW_STEP
SoundEffects nz ENTITY_SPIDER_AMBIENT
SoundEffects nA ENTITY_SPIDER_DEATH
SoundEffects nB ENTITY_SPIDER_HURT
SoundEffects nC ENTITY_SPIDER_STEP
SoundEffects nD ENTITY_SPLASH_POTION_BREAK
SoundEffects nE ENTITY_SPLASH_POTION_THROW
SoundEffects nF ENTITY_SQUID_AMBIENT
SoundEffects nG ENTITY_SQUID_DEATH
SoundEffects nH ENTITY_SQUID_HURT
SoundEffects D BLOCK_ANVIL_PLACE
SoundEffects oI UI_STONECUTTER_TAKE_RESULT
SoundEffects oJ UI_STONECUTTER_SELECT_RECIPE
SoundEffects oK UI_TOAST_CHALLENGE_COMPLETE
SoundEffects oL UI_TOAST_IN
SoundEffects oM UI_TOAST_OUT
SoundEffects oN ENTITY_VEX_AMBIENT
SoundEffects oO ENTITY_VEX_CHARGE
SoundEffects oP ENTITY_VEX_DEATH
SoundEffects oQ ENTITY_VEX_HURT
SoundEffects oR ENTITY_VILLAGER_AMBIENT
SoundEffects oS ENTITY_VILLAGER_CELEBRATE
SoundEffects oT ENTITY_VILLAGER_DEATH
SoundEffects oU ENTITY_VILLAGER_HURT
SoundEffects oV ENTITY_VILLAGER_NO
SoundEffects oW ENTITY_VILLAGER_TRADE
SoundEffects oX ENTITY_VILLAGER_YES
SoundEffects oY ENTITY_VILLAGER_WORK_ARMORER
SoundEffects oZ ENTITY_VILLAGER_WORK_BUTCHER
SoundEffects pa ENTITY_VILLAGER_WORK_CARTOGRAPHER
SoundEffects pb ENTITY_VILLAGER_WORK_CLERIC
SoundEffects pc ENTITY_VILLAGER_WORK_FARMER
SoundEffects pd ENTITY_VILLAGER_WORK_FISHERMAN
SoundEffects pe ENTITY_VILLAGER_WORK_FLETCHER
SoundEffects pf ENTITY_VILLAGER_WORK_LEATHERWORKER
SoundEffects pg ENTITY_VILLAGER_WORK_LIBRARIAN
SoundEffects ph ENTITY_VILLAGER_WORK_MASON
SoundEffects oi ITEM_TRIDENT_THROW
SoundEffects oj ITEM_TRIDENT_THUNDER
SoundEffects ok BLOCK_TRIPWIRE_ATTACH
SoundEffects ol BLOCK_TRIPWIRE_CLICK_OFF
SoundEffects om BLOCK_TRIPWIRE_CLICK_ON
SoundEffects on BLOCK_TRIPWIRE_DETACH
SoundEffects oo ENTITY_TROPICAL_FISH_AMBIENT
SoundEffects op ENTITY_TROPICAL_FISH_DEATH
SoundEffects oq ENTITY_TROPICAL_FISH_FLOP
SoundEffects or ENTITY_TROPICAL_FISH_HURT
SoundEffects os ENTITY_TURTLE_AMBIENT_LAND
SoundEffects ot ENTITY_TURTLE_DEATH
SoundEffects ou ENTITY_TURTLE_DEATH_BABY
SoundEffects ov ENTITY_TURTLE_EGG_BREAK
SoundEffects ow ENTITY_TURTLE_EGG_CRACK
SoundEffects ox ENTITY_TURTLE_EGG_HATCH
SoundEffects oy ENTITY_TURTLE_HURT
SoundEffects oz ENTITY_TURTLE_HURT_BABY
SoundEffects oA ENTITY_TURTLE_LAY_EGG
SoundEffects oB ENTITY_TURTLE_SHAMBLE
SoundEffects oC ENTITY_TURTLE_SHAMBLE_BABY
SoundEffects oD ENTITY_TURTLE_SWIM
SoundEffects oE UI_BUTTON_CLICK
SoundEffects oF UI_LOOM_SELECT_PATTERN
SoundEffects oG UI_LOOM_TAKE_RESULT
SoundEffects oH UI_CARTOGRAPHY_TABLE_TAKE_RESULT
SoundEffects E BLOCK_ANVIL_STEP
SoundEffects pO ENTITY_WITCH_THROW
SoundEffects pP ENTITY_WITHER_AMBIENT
SoundEffects pQ ENTITY_WITHER_BREAK_BLOCK
SoundEffects pR ENTITY_WITHER_DEATH
SoundEffects pS ENTITY_WITHER_HURT
SoundEffects pT ENTITY_WITHER_SHOOT
SoundEffects pU ENTITY_WITHER_SKELETON_AMBIENT
SoundEffects pV ENTITY_WITHER_SKELETON_DEATH
SoundEffects pW ENTITY_WITHER_SKELETON_HURT
SoundEffects pX ENTITY_WITHER_SKELETON_STEP
SoundEffects pY ENTITY_WITHER_SPAWN
SoundEffects pZ ENTITY_WOLF_AMBIENT
SoundEffects qa ENTITY_WOLF_DEATH
SoundEffects qb ENTITY_WOLF_GROWL
SoundEffects qc ENTITY_WOLF_HOWL
SoundEffects qd ENTITY_WOLF_HURT
SoundEffects qe ENTITY_WOLF_PANT
SoundEffects qf ENTITY_WOLF_SHAKE
SoundEffects qg ENTITY_WOLF_STEP
SoundEffects qh ENTITY_WOLF_WHINE
SoundEffects qi BLOCK_WOODEN_DOOR_CLOSE
SoundEffects qj BLOCK_WOODEN_DOOR_OPEN
SoundEffects qk BLOCK_WOODEN_TRAPDOOR_CLOSE
SoundEffects ql BLOCK_WOODEN_TRAPDOOR_OPEN
SoundEffects qm BLOCK_WOOD_BREAK
SoundEffects qn BLOCK_WOODEN_BUTTON_CLICK_OFF
SoundEffects pi ENTITY_VILLAGER_WORK_SHEPHERD
SoundEffects pj ENTITY_VILLAGER_WORK_TOOLSMITH
SoundEffects pk ENTITY_VILLAGER_WORK_WEAPONSMITH
SoundEffects pl ENTITY_VINDICATOR_AMBIENT
SoundEffects pm ENTITY_VINDICATOR_CELEBRATE
SoundEffects pn ENTITY_VINDICATOR_DEATH
SoundEffects po ENTITY_VINDICATOR_HURT
SoundEffects pq BLOCK_LILY_PAD_PLACE
SoundEffects pr ENTITY_WANDERING_TRADER_AMBIENT
SoundEffects ps ENTITY_WANDERING_TRADER_DEATH
SoundEffects pt ENTITY_WANDERING_TRADER_DISAPPEARED
SoundEffects pu ENTITY_WANDERING_TRADER_DRINK_MILK
SoundEffects pv ENTITY_WANDERING_TRADER_DRINK_POTION
SoundEffects pw ENTITY_WANDERING_TRADER_HURT
SoundEffects px ENTITY_WANDERING_TRADER_NO
SoundEffects py ENTITY_WANDERING_TRADER_REAPPEARED
SoundEffects pz ENTITY_WANDERING_TRADER_TRADE
SoundEffects pA ENTITY_WANDERING_TRADER_YES
SoundEffects pB BLOCK_WATER_AMBIENT
SoundEffects pC WEATHER_RAIN
SoundEffects pD WEATHER_RAIN_ABOVE
SoundEffects pJ ENTITY_WITCH_AMBIENT
SoundEffects pK ENTITY_WITCH_CELEBRATE
SoundEffects pL ENTITY_WITCH_DEATH
SoundEffects pM ENTITY_WITCH_DRINK
SoundEffects pN ENTITY_WITCH_HURT
SoundEffects F BLOCK_ANVIL_USE
SoundEffects qT ENTITY_ZOMBIE_VILLAGER_CURE
SoundEffects qU ENTITY_ZOMBIE_VILLAGER_DEATH
SoundEffects qV ENTITY_ZOMBIE_VILLAGER_HURT
SoundEffects qW ENTITY_ZOMBIE_VILLAGER_STEP
SoundEffects qo BLOCK_WOODEN_BUTTON_CLICK_ON
SoundEffects qp BLOCK_WOOD_FALL
SoundEffects qq BLOCK_WOOD_HIT
SoundEffects qr BLOCK_WOOD_PLACE
SoundEffects qs BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF
SoundEffects qt BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON
SoundEffects qu BLOCK_WOOD_STEP
SoundEffects qA ENTITY_ZOMBIE_AMBIENT
SoundEffects qB ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR
SoundEffects qC ENTITY_ZOMBIE_ATTACK_IRON_DOOR
SoundEffects qD ENTITY_ZOMBIE_BREAK_WOODEN_DOOR
SoundEffects qE ENTITY_ZOMBIE_CONVERTED_TO_DROWNED
SoundEffects qF ENTITY_ZOMBIE_DEATH
SoundEffects qG ENTITY_ZOMBIE_DESTROY_EGG
SoundEffects qH ENTITY_ZOMBIE_HORSE_AMBIENT
SoundEffects qI ENTITY_ZOMBIE_HORSE_DEATH
SoundEffects qJ ENTITY_ZOMBIE_HORSE_HURT
SoundEffects qK ENTITY_ZOMBIE_HURT
SoundEffects qL ENTITY_ZOMBIE_INFECT
SoundEffects qM ENTITY_ZOMBIE_PIGMAN_AMBIENT
SoundEffects qN ENTITY_ZOMBIE_PIGMAN_ANGRY
SoundEffects qO ENTITY_ZOMBIE_PIGMAN_DEATH
SoundEffects qP ENTITY_ZOMBIE_PIGMAN_HURT
SoundEffects qQ ENTITY_ZOMBIE_STEP
SoundEffects qR ENTITY_ZOMBIE_VILLAGER_AMBIENT
SoundEffects qS ENTITY_ZOMBIE_VILLAGER_CONVERTED
SoundEffects G ITEM_ARMOR_EQUIP_CHAIN
SoundEffects H ITEM_ARMOR_EQUIP_DIAMOND
SoundEffects I ITEM_ARMOR_EQUIP_ELYTRA
SoundEffects J ITEM_ARMOR_EQUIP_GENERIC
SoundEffects K ITEM_ARMOR_EQUIP_GOLD
SoundEffects L ITEM_ARMOR_EQUIP_IRON
SoundEffects M ITEM_ARMOR_EQUIP_LEATHER
SoundEffects O ITEM_ARMOR_EQUIP_TURTLE
SoundEffects P ENTITY_ARMOR_STAND_BREAK
SoundEffects Q ENTITY_ARMOR_STAND_FALL
SoundEffects R ENTITY_ARMOR_STAND_HIT
SoundEffects b AMBIENT_CRIMSON_FOREST_ADDITIONS
SoundEffects c AMBIENT_CRIMSON_FOREST_LOOP
SoundEffects d AMBIENT_CRIMSON_FOREST_MOOD
SoundEffects e AMBIENT_NETHER_WASTES_ADDITIONS
SoundEffects f AMBIENT_NETHER_WASTES_LOOP
SoundEffects g AMBIENT_NETHER_WASTES_MOOD
SoundEffects h AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
SoundEffects i AMBIENT_SOUL_SAND_VALLEY_LOOP
SoundEffects j AMBIENT_SOUL_SAND_VALLEY_MOOD
SoundEffects k AMBIENT_WARPED_FOREST_ADDITIONS
SoundEffects l AMBIENT_WARPED_FOREST_LOOP
SoundEffects m AMBIENT_WARPED_FOREST_MOOD
SoundEffects t ANCIENT_DEBRIS_BREAK
SoundEffects u ANCIENT_DEBRIS_STEP
SoundEffects v ANCIENT_DEBRIS_PLACE
SoundEffects w ANCIENT_DEBRIS_HIT
SoundEffects x ANCIENT_DEBRIS_FALL
SoundEffects N ARMOR_EQUIP_NETHERITE
SoundEffects ah BASALT_BREAK
SoundEffects ai BASALT_STEP
SoundEffects aj BASALT_PLACE
SoundEffects ak BASALT_HIT
SoundEffects al BASALT_FALL
SoundEffects aP BONE_BLOCK_BREAK
SoundEffects aQ BONE_BLOCK_FALL
SoundEffects aR BONE_BLOCK_HIT
SoundEffects aS BONE_BLOCK_PLACE
SoundEffects aT BONE_BLOCK_STEP
SoundEffects eq ROOTS_BREAK
SoundEffects er ROOTS_STEP
SoundEffects es ROOTS_PLACE
SoundEffects et ROOTS_HIT
SoundEffects eu ROOTS_FALL
SoundEffects fm HOGLIN_AMBIENT
SoundEffects fn HOGLIN_ANGRY
SoundEffects fo HOGLIN_ATTACK
SoundEffects fp HOGLIN_DEATH
SoundEffects fq HOGLIN_HURT
SoundEffects fr HOGLIN_RETREAT
SoundEffects fs HOGLIN_STEP
SoundEffects hR NETHER_BRICKS_BREAK
SoundEffects hS NETHER_BRICKS_STEP
SoundEffects hT NETHER_BRICKS_PLACE
SoundEffects hU NETHER_BRICKS_HIT
SoundEffects hV NETHER_BRICKS_FALL
SoundEffects hY STEM_BREAK
SoundEffects hZ STEM_STEP
SoundEffects ia STEM_PLACE
SoundEffects ib STEM_HIT
SoundEffects ic STEM_FALL
SoundEffects id NYLIUM_BREAK
SoundEffects ie NYLIUM_STEP
SoundEffects if NYLIUM_PLACE
SoundEffects ig NYLIUM_HIT
SoundEffects ih NYLIUM_FALL
SoundEffects ii NETHER_SPROUTS_BREAK
SoundEffects ij NETHER_SPROUTS_STEP
SoundEffects ik NETHER_SPROUTS_PLACE
SoundEffects il NETHER_SPROUTS_HIT
SoundEffects im NETHER_SPROUTS_FALL
SoundEffects in FUNGUS_BREAK
SoundEffects io FUNGUS_STEP
SoundEffects ip FUNGUS_PLACE
SoundEffects iq FUNGUS_HIT
SoundEffects ir FUNGUS_FALL
SoundEffects is WEEPING_VINES_BREAK
SoundEffects it WEEPING_VINES_STEP
SoundEffects iu WEEPING_VINES_PLACE
SoundEffects iv WEEPING_VINES_HIT
SoundEffects iw WEEPING_VINES_FALL
SoundEffects ix WART_BLOCK_BREAK
SoundEffects iy WART_BLOCK_STEP
SoundEffects iz WART_BLOCK_PLACE
SoundEffects iA WART_BLOCK_HIT
SoundEffects iB WART_BLOCK_FALL
SoundEffects iC NETHERITE_BLOCK_BREAK
SoundEffects iD NETHERITE_BLOCK_STEP
SoundEffects iE NETHERITE_BLOCK_PLACE
SoundEffects iF NETHERITE_BLOCK_HIT
SoundEffects iG NETHERITE_BLOCK_FALL
SoundEffects iH NETHERRACK_BREAK
SoundEffects iI NETHERRACK_STEP
SoundEffects iJ NETHERRACK_PLACE
SoundEffects iK NETHERRACK_HIT
SoundEffects iL NETHERRACK_FALL
SoundEffects kl PIGLIN_ADMIRING_ITEM
SoundEffects km PIGLIN_AMBIENT
SoundEffects kn PIGLIN_ANGRY
SoundEffects ko PIGLIN_CELEBRATE
SoundEffects kp PIGLIN_DEATH
SoundEffects kq PIGLIN_JEALOUS
SoundEffects kr PIGLIN_HURT
SoundEffects ks PIGLIN_RETREAT
SoundEffects kt PIGLIN_STEP
SoundEffects ku PIGLIN_CONVERTED_TO_ZOMBIFIED
SoundEffects lz NETHER_ORE_BREAK
SoundEffects lA NETHER_ORE_FALL
SoundEffects lB NETHER_ORE_HIT
SoundEffects lC NETHER_ORE_PLACE
SoundEffects lD NETHER_ORE_STEP
SoundEffects lF RESPAWN_ANCHOR_AMBIENT
SoundEffects lG RESPAWN_ANCHOR_CHARGE
SoundEffects lH RESPAWN_ANCHOR_DEPLETE
SoundEffects lI RESPAWN_ANCHOR_SET_SPAWN
SoundEffects me SHROOMLIGHT_BREAK
SoundEffects mf SHROOMLIGHT_STEP
SoundEffects mg SHROOMLIGHT_PLACE
SoundEffects mh SHROOMLIGHT_HIT
SoundEffects mi SHROOMLIGHT_FALL
SoundEffects mX SOUL_SAND_BREAK
SoundEffects mY SOUL_SAND_STEP
SoundEffects mZ SOUL_SAND_PLACE
SoundEffects na SOUL_SAND_HIT
SoundEffects nb SOUL_SAND_FALL
SoundEffects nc SOUL_SOIL_BREAK
SoundEffects nd SOUL_SOIL_STEP
SoundEffects ne SOUL_SOIL_PLACE
SoundEffects nf SOUL_SOIL_HIT
SoundEffects ng SOUL_SOIL_FALL
SoundEffects nh SOUL_ESCAPE
SoundEffects nm SMITHING_TABLE_USE
SoundEffects nv SNOW_GOLEM_SHEAR
SoundEffects pp VINE_STEP
SoundCategory a MASTER
SoundCategory b MUSIC
SoundCategory c RECORDS
SoundCategory d WEATHER
SoundCategory e BLOCKS
SoundCategory f HOSTILE
SoundCategory g NEUTRAL
SoundCategory h PLAYERS
SoundCategory i AMBIENT
SoundCategory j VOICE
SoundCategory k BY_NAME
SoundCategory l name
SoundCategory m $VALUES
SoundCategory values ()[LSoundCategory; values
SoundCategory valueOf (Ljava/lang/String;)LSoundCategory; valueOf
SoundCategory b ()Ljava/util/Set; getNames
RecipeBookServer i ()LNBTTagCompound; save
RecipeBookServer k LOGGER
RecipeBookServer l manager
RecipeBookServer b (Ljava/util/Collection;LEntityPlayer;)I removeRecipes
Statistic a ()LStatisticWrapper; getWrapper
Statistic o formatter
Statistic p value
Statistic q type
Statistic b ()Ljava/lang/Object; getValue
Statistic equals (Ljava/lang/Object;)Z equals
Statistic hashCode ()I hashCode
Statistic toString ()Ljava/lang/String; toString
Counter a DECIMAL_FORMAT
Counter b DEFAULT
Counter c DIVIDE_BY_TEN
Counter d DISTANCE
Counter e TIME
Counter format (I)Ljava/lang/String; format
Counter b (I)Ljava/lang/String; lambda$static$2
Counter c (I)Ljava/lang/String; lambda$static$1
StatisticWrapper a ()LIRegistry; getRegistry
StatisticWrapper a registry
StatisticWrapper b map
StatisticWrapper b ()I size
StatisticWrapper iterator ()Ljava/util/Iterator; iterator
StatisticWrapper b (Ljava/lang/Object;)LStatistic; get
StatisticWrapper c ()Ljava/lang/String; getTranslationKey
StatisticList A AVIATE_ONE_CM
StatisticList B SWIM_ONE_CM
StatisticList C JUMP
StatisticList D DROP
StatisticList E DAMAGE_DEALT
StatisticList F DAMAGE_DEALT_ABSORBED
StatisticList G DAMAGE_DEALT_RESISTED
StatisticList H DAMAGE_TAKEN
StatisticList I DAMAGE_BLOCKED_BY_SHIELD
StatisticList J DAMAGE_ABSORBED
StatisticList K DAMAGE_RESISTED
StatisticList L DEATHS
StatisticList M MOB_KILLS
StatisticList N ANIMALS_BRED
StatisticList O PLAYER_KILLS
StatisticList P FISH_CAUGHT
StatisticList Q TALKED_TO_VILLAGER
StatisticList R TRADED_WITH_VILLAGER
StatisticList S EAT_CAKE_SLICE
StatisticList T FILL_CAULDRON
StatisticList U USE_CAULDRON
StatisticList V CLEAN_ARMOR
StatisticList W CLEAN_BANNER
StatisticList X CLEAN_SHULKER_BOX
StatisticList Y INTERACT_WITH_BREWINGSTAND
StatisticList Z INTERACT_WITH_BEACON
StatisticList a BLOCK_MINED
StatisticList aA INTERACT_WITH_ANVIL
StatisticList aB INTERACT_WITH_GRINDSTONE
StatisticList aa INSPECT_DROPPER
StatisticList ab INSPECT_HOPPER
StatisticList ac INSPECT_DISPENSER
StatisticList ad PLAY_NOTEBLOCK
StatisticList ae TUNE_NOTEBLOCK
StatisticList af POT_FLOWER
StatisticList ag TRIGGER_TRAPPED_CHEST
StatisticList ah OPEN_ENDERCHEST
StatisticList ai ENCHANT_ITEM
StatisticList aj PLAY_RECORD
StatisticList ak INTERACT_WITH_FURNACE
StatisticList al INTERACT_WITH_CRAFTING_TABLE
StatisticList am OPEN_CHEST
StatisticList an SLEEP_IN_BED
StatisticList ao OPEN_SHULKER_BOX
StatisticList ap OPEN_BARREL
StatisticList aq INTERACT_WITH_BLAST_FURNACE
StatisticList ar INTERACT_WITH_SMOKER
StatisticList as INTERACT_WITH_LECTERN
StatisticList at INTERACT_WITH_CAMPFIRE
StatisticList au INTERACT_WITH_CARTOGRAPHY_TABLE
StatisticList av INTERACT_WITH_LOOM
StatisticList aw INTERACT_WITH_STONECUTTER
StatisticList ax BELL_RING
StatisticList ay RAID_TRIGGER
StatisticList az RAID_WIN
StatisticList b ITEM_CRAFTED
StatisticList c ITEM_USED
StatisticList d ITEM_BROKEN
StatisticList e ITEM_PICKED_UP
StatisticList f ITEM_DROPPED
StatisticList g ENTITY_KILLED
StatisticList h ENTITY_KILLED_BY
StatisticList i CUSTOM
StatisticList j LEAVE_GAME
StatisticList k PLAY_ONE_MINUTE
StatisticList l TIME_SINCE_DEATH
StatisticList m TIME_SINCE_REST
StatisticList n SNEAK_TIME
StatisticList o WALK_ONE_CM
StatisticList p CROUCH_ONE_CM
StatisticList q SPRINT_ONE_CM
StatisticList r WALK_ON_WATER_ONE_CM
StatisticList s FALL_ONE_CM
StatisticList t CLIMB_ONE_CM
StatisticList u FLY_ONE_CM
StatisticList v WALK_UNDER_WATER_ONE_CM
StatisticList w MINECART_ONE_CM
StatisticList x BOAT_ONE_CM
StatisticList y PIG_ONE_CM
StatisticList z HORSE_ONE_CM
StatisticList aC TARGET_HIT
StatisticList aD INTERACT_WITH_SMITHING_TABLE
StatisticManager a (LEntityHuman;LStatistic;I)V setStatistic
StatisticManager a (LStatistic;)I getStatisticValue
StatisticManager a stats
StatisticManager b (LEntityHuman;LStatistic;I)V increment
TagsBlock C ANVIL
TagsBlock D RAILS
TagsBlock E LEAVES
TagsBlock F TRAPDOORS
TagsBlock G SMALL_FLOWERS
TagsBlock H BEDS
TagsBlock I FENCES
TagsBlock J TALL_FLOWERS
TagsBlock K FLOWERS
TagsBlock ap SHULKER_BOXES
TagsBlock N FLOWER_POTS
TagsBlock O ENDERMAN_HOLDABLE
TagsBlock P ICE
TagsBlock Q VALID_SPAWN
TagsBlock R IMPERMEABLE
TagsBlock S UNDERWATER_BONEMEALS
TagsBlock T CORAL_BLOCKS
TagsBlock U WALL_CORALS
TagsBlock V CORAL_PLANTS
TagsBlock W CORALS
TagsBlock X BAMBOO_PLANTABLE_ON
TagsBlock Y STANDING_SIGNS
TagsBlock Z WALL_SIGNS
TagsBlock aa SIGNS
TagsBlock ab DRAGON_IMMUNE
TagsBlock ac WITHER_IMMUNE
TagsBlock a WOOL
TagsBlock ae BEEHIVES
TagsBlock af CROPS
TagsBlock ag BEE_GROWABLES
TagsBlock ah PORTALS
TagsBlock b PLANKS
TagsBlock c STONE_BRICKS
TagsBlock d WOODEN_BUTTONS
TagsBlock e BUTTONS
TagsBlock f CARPETS
TagsBlock g WOODEN_DOORS
TagsBlock h WOODEN_STAIRS
TagsBlock i WOODEN_SLABS
TagsBlock j WOODEN_FENCES
TagsBlock k WOODEN_PRESSURE_PLATES
TagsBlock l WOODEN_TRAPDOORS
TagsBlock m DOORS
TagsBlock n SAPLINGS
TagsBlock o LOGS
TagsBlock p DARK_OAK_LOGS
TagsBlock q OAK_LOGS
TagsBlock r BIRCH_LOGS
TagsBlock s ACACIA_LOGS
TagsBlock t JUNGLE_LOGS
TagsBlock u SPRUCE_LOGS
TagsBlock x BANNERS
TagsBlock y SAND
TagsBlock z STAIRS
TagsBlock A SLABS
TagsBlock B WALLS
TagsBlock as source
TagsBlock at resetCount
TagsBlock v CRIMSON_STEMS
TagsBlock w WARPED_STEMS
TagsBlock L PIGLIN_REPELLENTS
TagsBlock M GOLD_ORES
TagsBlock ad WITHER_SUMMON_BASE_BLOCKS
TagsBlock ai FIRE
TagsBlock aj NYLIUM
TagsBlock ak WART_BLOCKS
TagsBlock al BEACON_BASE_BLOCKS
TagsBlock am SOUL_SPEED_BLOCKS
TagsBlock an WALL_POST_OVERRIDE
TagsBlock ao CLIMBABLE
TagsBlock aq HOGLIN_REPELLENTS
TagsBlock ar SOUL_FIRE_BASE_BLOCKS
TagsBlock b ()I access$000
TagsBlock c ()LTags; access$100
TagsEntity a SKELETONS
TagsEntity b RADIERS
TagsEntity c BEEHIVE_INHABITORS
TagsEntity d ARROWS
TagsEntity f source
TagsEntity g resetCount
TagsEntity e IMPACT_PROJECTILES
TagsEntity b ()I access$000
TagsEntity c ()LTags; access$100
TagsFluid a WATER
TagsFluid b LAVA
TagsFluid c source
TagsFluid d resetCount
TagsFluid b ()I access$000
TagsFluid c ()LTags; access$100
TagsItem C ANVIL
TagsItem D RAILS
TagsItem E LEAVES
TagsItem F TRAPDOORS
TagsItem G SMALL_FLOWERS
TagsItem H BEDS
TagsItem I FENCES
TagsItem J TALL_FLOWERS
TagsItem K FLOWERS
TagsItem N BOATS
TagsItem O FISHES
TagsItem P SIGNS
TagsItem Q MUSIC_DISCS
TagsItem R COALS
TagsItem S ARROWS
TagsItem T LECTERN_BOOKS
TagsItem a WOOL
TagsItem b PLANKS
TagsItem c STONE_BRICKS
TagsItem d WOODEN_BUTTONS
TagsItem e BUTTONS
TagsItem f CARPETS
TagsItem g WOODEN_DOORS
TagsItem h WOODEN_STAIRS
TagsItem i WOODEN_SLABS
TagsItem j WOODEN_FENCES
TagsItem k WOODEN_PRESSURE_PLATES
TagsItem l WOODEN_TRAPDOORS
TagsItem m DOORS
TagsItem n SAPLINGS
TagsItem o LOGS
TagsItem p DARK_OAK_LOGS
TagsItem q OAK_LOGS
TagsItem r BIRCH_LOGS
TagsItem s ACACIA_LOGS
TagsItem t JUNGLE_LOGS
TagsItem u SPRUCE_LOGS
TagsItem x BANNERS
TagsItem y SAND
TagsItem z STAIRS
TagsItem A SLABS
TagsItem B WALLS
TagsItem V source
TagsItem W resetCount
TagsItem v CRIMSON_STEMS
TagsItem w WARPED_STEMS
TagsItem L PIGLIN_REPELLENTS
TagsItem M GOLD_ORES
TagsItem U BEACON_PAYMENT_ITEMS
TagsItem b ()I access$000
TagsItem c ()LTags; access$100
Tag a (Ljava/lang/Object;)Z isTagged
Tag a id
Tag b values
Tag c source
Tag b ()Ljava/util/Collection; getSource
Tag c ()LMinecraftKey; getId
TagRegistry a blockTags
TagRegistry b itemTags
TagRegistry c fluidTags
TagRegistry d entityTags
TagRegistry a ()LTagsServer; getBlockTags
TagRegistry b ()LTagsServer; getItemTags
TagRegistry c ()LTagsServer; getFluidTags
TagRegistry d ()LTagsServer; getEntityTags
TagRegistry b (LPacketDataSerializer;)LTagRegistry; deserializeFromNetwork
RegistryID a (I)Ljava/lang/Object; fromId
RegistryID a (Ljava/lang/Object;)I getId
RegistryID a EMPTY_SLOT
RegistryID b keys
RegistryID c values
RegistryID d byId
RegistryID e nextId
RegistryID f size
RegistryID c (I)I getValue
RegistryID b (Ljava/lang/Object;)Z contains
RegistryID b (I)Z contains
RegistryID c (Ljava/lang/Object;)I add
RegistryID c ()I nextId
RegistryID d (I)V grow
RegistryID d (Ljava/lang/Object;)I hash
RegistryID b (Ljava/lang/Object;I)I indexOf
RegistryID e (I)I findEmpty
RegistryID iterator ()Ljava/util/Iterator; iterator
RegistryID b ()I size
MinecraftEncryption a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (ILjava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
MinecraftEncryption a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
MinecraftEncryption a LOGGER
MinecraftEncryption b ()Ljava/security/KeyPair; generateKeyPair
MinecraftEncryption b (Ljava/security/Key;[B)[B decryptUsingKey
MathHelper a (D)F sqrt
MathHelper a (F)F sin
MathHelper a (III)I clamp
MathHelper a (Ljava/util/Random;II)I nextInt
MathHelper b (F)F cos
MathHelper c (D)I floor
MathHelper a SQRT_OF_TWO
MathHelper b SIN
MathHelper c RANDOM
MathHelper d MULTIPLY_DE_BRUIJN_BIT_POSITION
MathHelper e FRAC_BIAS
MathHelper f ASIN_TAB
MathHelper g COS_TAB
MathHelper c (F)F sqrt
MathHelper d (F)I floor
MathHelper b (D)I fastFloor
MathHelper d (D)J lfloor
MathHelper e (D)I absFloor
MathHelper e (F)F abs
MathHelper f (F)I ceil
MathHelper f (D)I ceil
MathHelper b (DDD)D clampedLerp
MathHelper b (DD)Z equal
MathHelper b (II)I positiveModulo
MathHelper b (FF)F positiveModulo
MathHelper c (DD)D positiveModulo
MathHelper b (I)I wrapDegrees
MathHelper g (F)F wrapDegrees
MathHelper g (D)D wrapDegrees
MathHelper c (FF)F degreesDifference
MathHelper d (FF)F degreesDifferenceAbs
MathHelper b (FFF)F rotateIfNecessary
MathHelper c (FFF)F approach
MathHelper d (FFF)F approachDegrees
MathHelper c (I)I smallestEncompassingPowerOfTwo
MathHelper g (I)Z isPowerOfTwo
MathHelper d (I)I ceillog2
MathHelper e (I)I log2
MathHelper c (II)I roundUp
MathHelper e (FFF)I color
MathHelper b (III)I color
MathHelper d (II)I colorMultiply
MathHelper h (F)F frac
MathHelper h (D)D frac
MathHelper c (III)J getSeed
MathHelper c (DDD)D pct
MathHelper d (DD)D atan2
MathHelper i (F)F fastInvSqrt
MathHelper i (D)D fastInvSqrt
MathHelper j (F)F fastInvCubeRoot
MathHelper f (FFF)I hsvToRgb
MathHelper f (I)I murmurHash3Mixer
MathHelper g (FFF)F lerp
MathHelper d (DDD)D lerp
MathHelper j (D)D smoothstep
MathHelper k (D)I sign
MathHelper h (FFF)F rotLerp
MathHelper i (FFF)F diffuseLight
MathHelper j (FFF)F rotlerp
MathHelper l (D)F rotWrap
MathHelper e (FF)F triangleWave
INamable o ()Ljava/lang/String; getName
Unit a INSTANCE
Unit b $VALUES
Unit values ()[LUnit; values
Unit valueOf (Ljava/lang/String;)LUnit; valueOf
DataFixTypes a LEVEL
DataFixTypes b PLAYER
DataFixTypes c CHUNK
DataFixTypes d HOTBAR
DataFixTypes e OPTIONS
DataFixTypes f STRUCTURE
DataFixTypes g STATS
DataFixTypes h SAVED_DATA
DataFixTypes i ADVANCEMENTS
DataFixTypes j POI_CHUNK
DataFixTypes k CHUNK_GENERATOR_SETTINGS
DataFixTypes l type
DataFixTypes m $VALUES
DataFixTypes values ()[LDataFixTypes; values
DataFixTypes valueOf (Ljava/lang/String;)LDataFixTypes; valueOf
DataConverterFlattenData a (ILjava/lang/String;[Ljava/lang/String;)V map
DataConverterFlattenData a LOGGER
DataConverterFlattenData b MAP
DataConverterFlattenData c BLOCK_DEFAULTS
DataConverterFlattenData d ID_BY_OLD
DataConverterFlattenData e ID_BY_OLD_NAME
DataConverterFlattenData b (Ljava/lang/String;)Lcom/mojang/datafixers/Dynamic; parse
DataConverterFlattenData b (I)Lcom/mojang/datafixers/Dynamic; getTag
DataConverterFlattenData b (Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V lambda$static$0
ChunkConverterPalette$Direction a DOWN
ChunkConverterPalette$Direction b UP
ChunkConverterPalette$Direction c NORTH
ChunkConverterPalette$Direction d SOUTH
ChunkConverterPalette$Direction e WEST
ChunkConverterPalette$Direction f EAST
ChunkConverterPalette$Direction g axis
ChunkConverterPalette$Direction h axisDirection
ChunkConverterPalette$Direction i $VALUES
ChunkConverterPalette$Direction values ()[LChunkConverterPalette$Direction; values
ChunkConverterPalette$Direction valueOf (Ljava/lang/String;)LChunkConverterPalette$Direction; valueOf
ChunkConverterPalette$Direction b ()LChunkConverterPalette$Direction$Axis; getAxis
ChunkConverterPalette$Direction$Axis a X
ChunkConverterPalette$Direction$Axis b Y
ChunkConverterPalette$Direction$Axis c Z
ChunkConverterPalette$Direction$Axis d $VALUES
ChunkConverterPalette$Direction$Axis values ()[LChunkConverterPalette$Direction$Axis; values
ChunkConverterPalette$Direction$Axis valueOf (Ljava/lang/String;)LChunkConverterPalette$Direction$Axis; valueOf
ChunkConverterPalette$Direction$AxisDirection a POSITIVE
ChunkConverterPalette$Direction$AxisDirection b NEGATIVE
ChunkConverterPalette$Direction$AxisDirection c step
ChunkConverterPalette$Direction$AxisDirection d $VALUES
ChunkConverterPalette$Direction$AxisDirection values ()[LChunkConverterPalette$Direction$AxisDirection; values
ChunkConverterPalette$Direction$AxisDirection valueOf (Ljava/lang/String;)LChunkConverterPalette$Direction$AxisDirection; valueOf
AdvancementFrameType a TASK
AdvancementFrameType b CHALLENGE
AdvancementFrameType c GOAL
AdvancementFrameType d name
AdvancementFrameType e texture
AdvancementFrameType f chatColor
AdvancementFrameType g $VALUES
AdvancementFrameType values ()[LAdvancementFrameType; values
AdvancementFrameType valueOf (Ljava/lang/String;)LAdvancementFrameType; valueOf
AdvancementFrameType b ()I getTexture
AdvancementFrameType c ()LEnumChatFormat; getChatColor
DataConverterMaterialId a ID_MAPPING
DataConverterMaterialId makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterSpawnEgg a ID_MAPPING
DataConverterSpawnEgg makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterSpawnEgg b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$2
DataConverterSpawnEgg c (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$1
AdvancementRequirements a AND
AdvancementRequirements b OR
AdvancementRequirements createRequirements (Ljava/util/Collection;)[[Ljava/lang/String; createRequirements
AdvancementRequirements b (Ljava/util/Collection;)[[Ljava/lang/String; lambda$static$0
DataConverterTypes a LEVEL
DataConverterTypes b PLAYER
DataConverterTypes c CHUNK
DataConverterTypes d HOTBAR
DataConverterTypes e OPTIONS
DataConverterTypes f STRUCTURE
DataConverterTypes g STATS
DataConverterTypes h SAVED_DATA
DataConverterTypes i ADVANCEMENTS
DataConverterTypes j POI_CHUNK
DataConverterTypes k BLOCK_ENTITY
DataConverterTypes l ITEM_STACK
DataConverterTypes m BLOCK_STATE
DataConverterTypes n ENTITY_NAME
DataConverterTypes o ENTITY_TREE
DataConverterTypes p ENTITY
DataConverterTypes q BLOCK_NAME
DataConverterTypes r ITEM_NAME
DataConverterTypes s UNTAGGED_SPAWNER
DataConverterTypes t STRUCTURE_FEATURE
DataConverterTypes u OBJECTIVE
DataConverterTypes v TEAM
DataConverterTypes w RECIPE
DataConverterTypes x BIOME
DataConverterTypes y CHUNK_GENERATOR_SETTINGS
DataConverterTypes b ()Ljava/lang/String; lambda$static$23
DataConverterTypes c ()Ljava/lang/String; lambda$static$22
DataConverterTypes d ()Ljava/lang/String; lambda$static$21
DataConverterTypes e ()Ljava/lang/String; lambda$static$20
DataConverterTypes f ()Ljava/lang/String; lambda$static$19
DataConverterTypes g ()Ljava/lang/String; lambda$static$18
DataConverterTypes h ()Ljava/lang/String; lambda$static$17
DataConverterTypes i ()Ljava/lang/String; lambda$static$16
DataConverterTypes j ()Ljava/lang/String; lambda$static$15
DataConverterTypes k ()Ljava/lang/String; lambda$static$14
DataConverterTypes l ()Ljava/lang/String; lambda$static$13
DataConverterTypes m ()Ljava/lang/String; lambda$static$12
DataConverterTypes n ()Ljava/lang/String; lambda$static$11
DataConverterTypes o ()Ljava/lang/String; lambda$static$10
DataConverterTypes p ()Ljava/lang/String; lambda$static$9
DataConverterTypes q ()Ljava/lang/String; lambda$static$8
DataConverterTypes r ()Ljava/lang/String; lambda$static$7
DataConverterTypes s ()Ljava/lang/String; lambda$static$6
DataConverterTypes t ()Ljava/lang/String; lambda$static$5
DataConverterTypes u ()Ljava/lang/String; lambda$static$4
DataConverterTypes v ()Ljava/lang/String; lambda$static$3
DataConverterTypes w ()Ljava/lang/String; lambda$static$2
DataConverterTypes x ()Ljava/lang/String; lambda$static$1
DataConverterTypes y ()Ljava/lang/String; lambda$static$0
GameProfilerFiller a (Ljava/lang/String;)V enter
GameProfilerFiller b (Ljava/lang/String;)V exitEnter
GameProfilerFiller c ()V exit
GameProfilerFiller b ()V endTick
GameProfilerFiller b (Ljava/util/function/Supplier;)V popPush
GameProfilerFiller c (Ljava/lang/String;)V incrementCounter
GameProfilerFiller c (Ljava/util/function/Supplier;)V incrementCounter
IAsyncTaskHandler a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; executeFuture
IAsyncTaskHandler ax ()Z isNotMainThread
IAsyncTaskHandler ay ()Ljava/lang/Thread; getThread
IAsyncTaskHandler bi ()Z isMainThread
IAsyncTaskHandler bm ()V executeAll
IAsyncTaskHandler c (Ljava/lang/Runnable;)V executeTask
IAsyncTaskHandler c (Ljava/util/function/BooleanSupplier;)V awaitTasks
IAsyncTaskHandler d (Ljava/lang/Runnable;)Z canExecute
IAsyncTaskHandler e (Ljava/lang/Runnable;)Ljava/lang/Runnable; postToMainThread
IAsyncTaskHandler g (Ljava/lang/Runnable;)V executeSync
IAsyncTaskHandler w ()Z executeNext
IAsyncTaskHandler b name
IAsyncTaskHandler c LOGGER
IAsyncTaskHandler d pendingRunnables
IAsyncTaskHandler e blockingCount
IAsyncTaskHandler bj ()I getPendingTasksCount
IAsyncTaskHandler bk ()Ljava/lang/String; name
IAsyncTaskHandler f (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; submit
IAsyncTaskHandler h (Ljava/lang/Runnable;)V tell
IAsyncTaskHandler execute (Ljava/lang/Runnable;)V execute
IAsyncTaskHandler bl ()V dropAllTasks
IAsyncTaskHandler bn ()V waitForTasks
IAsyncTaskHandler b (Ljava/lang/Runnable;)Ljava/lang/Void; lambda$submitAsync$0
IAsyncTaskHandlerReentrant b depth
IAsyncTaskHandlerReentrant bo ()Z isEntered
IAsyncTaskHandlerReentrant ax ()Z scheduleExecutables
IAsyncTaskHandlerReentrant c (Ljava/lang/Runnable;)V doRunTask
BossBattle a title
BossBattle c color
BossBattle d style
BossBattle k ()F getProgress
BossBattle n ()Z isDarkenSky
BossBattle o ()Z isPlayMusic
BossBattle p ()Z isCreateFog
BossBattle h id
BossBattle b percent
BossBattle e darkenScreen
BossBattle f playBossMusic
BossBattle g createWorldFog
BossBattle i ()Ljava/util/UUID; getId
BossBattle j ()LIChatBaseComponent; getName
BossBattle l ()LBossBattle$BarColor; getColor
BossBattle m ()LBossBattle$BarStyle; getOverlay
BossBattle b (Z)LBossBattle; setPlayBossMusic
BossBattle c (Z)LBossBattle; setCreateWorldFog
BossBattle$BarColor a PINK
BossBattle$BarColor b BLUE
BossBattle$BarColor c RED
BossBattle$BarColor d GREEN
BossBattle$BarColor e YELLOW
BossBattle$BarColor f PURPLE
BossBattle$BarColor g WHITE
BossBattle$BarColor h name
BossBattle$BarColor i formatting
BossBattle$BarColor j $VALUES
BossBattle$BarColor values ()[LBossBattle$BarColor; values
BossBattle$BarColor valueOf (Ljava/lang/String;)LBossBattle$BarColor; valueOf
BossBattle$BarColor b ()Ljava/lang/String; getName
BossBattle$BarStyle a PROGRESS
BossBattle$BarStyle b NOTCHED_6
BossBattle$BarStyle c NOTCHED_10
BossBattle$BarStyle d NOTCHED_12
BossBattle$BarStyle e NOTCHED_20
BossBattle$BarStyle f name
BossBattle$BarStyle g $VALUES
BossBattle$BarStyle values ()[LBossBattle$BarStyle; values
BossBattle$BarStyle valueOf (Ljava/lang/String;)LBossBattle$BarStyle; valueOf
Clearable P_ ()V clear
InventoryLargeChest a left
InventoryLargeChest b right
InventoryLargeChest Q_ ()I getContainerSize
InventoryLargeChest c ()Z isEmpty
InventoryLargeChest b (I)LItemStack; removeItemNoUpdate
InventoryLargeChest N_ ()I getMaxStackSize
InventoryLargeChest e ()V setChanged
InventoryLargeChest a_ (LEntityHuman;)V startOpen
InventoryLargeChest b_ (LEntityHuman;)V stopOpen
InventoryLargeChest b (ILItemStack;)Z canPlaceItem
InventoryLargeChest P_ ()V clearContent
IInventory N_ ()I getMaxStackSize
IInventory Q_ ()I getSize
IInventory a (I)LItemStack; getItem
IInventory a (II)LItemStack; splitStack
IInventory a (ILItemStack;)V setItem
IInventory a_ (LEntityHuman;)V startOpen
IInventory b (I)LItemStack; splitWithoutUpdate
IInventory b_ (LEntityHuman;)V closeContainer
IInventory c ()Z isEmpty
IInventory e ()V update
IInventory b (ILItemStack;)Z canPlaceItem
InventoryUtils a (LWorld;DDDLIInventory;)V dropInventory
InventoryUtils a (LWorld;DDDLItemStack;)V dropItem
InventoryUtils a (LWorld;LBlockPosition;LIInventory;)V dropInventory
InventoryUtils a (LWorld;LEntity;LIInventory;)V dropEntity
InventoryUtils a RANDOM
EnumDifficulty a PEACEFUL
EnumDifficulty b EASY
EnumDifficulty c NORMAL
EnumDifficulty d HARD
EnumDifficulty a (I)LEnumDifficulty; getById
EnumDifficulty e BY_ID
EnumDifficulty f id
EnumDifficulty g key
EnumDifficulty h $VALUES
EnumDifficulty values ()[LEnumDifficulty; values
EnumDifficulty valueOf (Ljava/lang/String;)LEnumDifficulty; valueOf
EnumDifficulty b ()LIChatBaseComponent; getDisplayName
EnumDifficulty c ()Ljava/lang/String; getKey
EnumDifficulty b (I)[LEnumDifficulty; lambda$static$0
EnumHand a MAIN_HAND
EnumHand b OFF_HAND
EnumHand c $VALUES
EnumHand values ()[LEnumHand; values
EnumHand valueOf (Ljava/lang/String;)LEnumHand; valueOf
EnumInteractionResult a SUCCESS
EnumInteractionResult b CONSUME
EnumInteractionResult c PASS
EnumInteractionResult d FAIL
EnumInteractionResult e $VALUES
EnumInteractionResult values ()[LEnumInteractionResult; values
EnumInteractionResult valueOf (Ljava/lang/String;)LEnumInteractionResult; valueOf
EnumInteractionResult b ()Z shouldSwing
InteractionResultWrapper a (Ljava/lang/Object;)LInteractionResultWrapper; success
InteractionResultWrapper b (Ljava/lang/Object;)LInteractionResultWrapper; consume
InteractionResultWrapper c (Ljava/lang/Object;)LInteractionResultWrapper; pass
InteractionResultWrapper d (Ljava/lang/Object;)LInteractionResultWrapper; fail
InteractionResultWrapper a result
InteractionResultWrapper b object
InteractionResultWrapper b ()Ljava/lang/Object; getObject
ChestLock b key
ChestLock a NO_LOCK
ChestLock b (LNBTTagCompound;)LChestLock; fromTag
ITileInventory d ()LIChatBaseComponent; getScoreboardDisplayName
INamableTileEntity P ()LIChatBaseComponent; getDisplayName
INamableTileEntity Q ()Z hasCustomName
INamableTileEntity R ()LIChatBaseComponent; getCustomName
INamableTileEntity d ()LIChatBaseComponent; getScoreboardDisplayName
InventorySubcontainer b items
InventorySubcontainer e ()V update
InventorySubcontainer a size
InventorySubcontainer c listeners
InventorySubcontainer b (LIInventoryListener;)V removeListener
InventorySubcontainer f ()Ljava/util/List; removeAllItems
InventorySubcontainer b (I)LItemStack; removeItemNoUpdate
InventorySubcontainer Q_ ()I getContainerSize
InventorySubcontainer c ()Z isEmpty
InventorySubcontainer P_ ()V clearContent
InventorySubcontainer toString ()Ljava/lang/String; toString
InventorySubcontainer b (LItemStack;)V moveItemToEmptySlots
InventorySubcontainer c (LItemStack;)V moveItemToOccupiedSlotsWithSameType
InventorySubcontainer b (LItemStack;LItemStack;)V moveItemsBetweenStacks
InventorySubcontainer g ()LNBTTagList; createTag
InventorySubcontainer d (LItemStack;)Z lambda$toString$1
InventorySubcontainer e (LItemStack;)Z lambda$removeAllItems$0
IWorldInventory a (ILItemStack;LEnumDirection;)Z canPlaceItemThroughFace
IWorldInventory a (LEnumDirection;)[I getSlotsForFace
IWorldInventory b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
CombatTracker a (LDamageSource;FF)V trackDamage
CombatTracker b ()LIChatBaseComponent; getDeathMessage
CombatTracker a entries
CombatTracker b mob
CombatTracker c lastDamageTime
CombatTracker d combatStartTime
CombatTracker e combatEndTime
CombatTracker f inCombat
CombatTracker g takingDamage
CombatTracker h nextLocation
CombatTracker c ()LEntityLiving; getKiller
CombatTracker j ()LCombatEntry; getMostSignificantFall
CombatTracker d ()Z isTakingDamage
CombatTracker e ()Z isInCombat
CombatTracker f ()I getCombatDuration
CombatTracker k ()V resetPreparedStatus
CombatTracker g ()V recheckStatus
CombatTracker h ()LEntityLiving; getMob
CombatTracker i ()LCombatEntry; getLastEntry
DamageSource a FIRE
DamageSource b LIGHTNING
DamageSource c BURN
DamageSource d LAVA
DamageSource e HOT_FLOOR
DamageSource f STUCK
DamageSource g CRAMMING
DamageSource h DROWN
DamageSource i STARVE
DamageSource j CACTUS
DamageSource k FALL
DamageSource l FLY_INTO_WALL
DamageSource m OUT_OF_WORLD
DamageSource n GENERIC
DamageSource o MAGIC
DamageSource p WITHER
DamageSource q ANVIL
DamageSource r FALLING_BLOCK
DamageSource s DRAGON_BREATH
DamageSource t DRYOUT
DamageSource u SWEET_BERRY_BUSH
DamageSource v translationIndex
DamageSource a (LEntityArrow;LEntity;)LDamageSource; arrow
DamageSource a (LEntityFireball;LEntity;)LDamageSource; fireball
DamageSource a (LEntityHuman;)LDamageSource; playerAttack
DamageSource a (LExplosion;)LDamageSource; explosion
DamageSource b (LEntity;LEntity;)LDamageSource; projectile
DamageSource b (LEntityLiving;)LDamageSource; mobAttack
DamageSource d ()Z isExplosion
DamageSource d (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
DamageSource e ()LDamageSource; setExplosion
DamageSource f ()Z ignoresArmor
DamageSource g ()F getExhaustionCost
DamageSource h ()Z ignoresInvulnerability
DamageSource i ()Z isStarvation
DamageSource k ()LEntity; getEntity
DamageSource l ()LDamageSource; setIgnoreArmor
DamageSource m ()LDamageSource; setIgnoresInvulnerability
DamageSource n ()LDamageSource; setStarvation
DamageSource o ()LDamageSource; setFire
DamageSource p ()Z isFire
DamageSource t ()Z isMagic
DamageSource u ()LDamageSource; setMagic
DamageSource w bypassArmor
DamageSource x bypassInvul
DamageSource y bypassMagic
DamageSource z exhaustion
DamageSource A isFireSource
DamageSource B isProjectile
DamageSource C scalesWithDifficulty
DamageSource D isMagic
DamageSource E isExplosion
DamageSource c (LEntity;LEntity;)LDamageSource; indirectMagic
DamageSource c (LEntityLiving;)LDamageSource; explosion
DamageSource toString ()Ljava/lang/String; toString
DamageSource b ()Z isProjectile
DamageSource c ()LDamageSource; setProjectile
DamageSource j ()LEntity; getDirectEntity
DamageSource q ()Ljava/lang/String; getMsgId
DamageSource r ()LDamageSource; setScalesWithDifficulty
DamageSource s ()Z scalesWithDifficulty
DamageSource v ()Z isCreativePlayer
DamageSource w ()LVec3D; getSourcePosition
EntityDamageSource d (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
EntityDamageSource k ()LEntity; getEntity
EntityDamageSource w entity
EntityDamageSource x isThorns
EntityDamageSource x ()LEntityDamageSource; setThorns
EntityDamageSource y ()Z isThorns
EntityDamageSource s ()Z scalesWithDifficulty
EntityDamageSource w ()LVec3D; getSourcePosition
EntityDamageSource toString ()Ljava/lang/String; toString
EntityDamageSourceIndirect x owner
EntityDamageSourceIndirect j ()LEntity; getDirectEntity
EntityDamageSourceIndirect k ()LEntity; getEntity
EntityDamageSourceIndirect d (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
MobEffectList a ()Z isInstant
MobEffectList a (I)LMobEffectList; fromId
MobEffectList a (LEntity;LEntity;LEntityLiving;ID)V applyInstantEffect
MobEffectList a (LEntityLiving;I)V tick
MobEffectList a (LMobEffectList;)I getId
MobEffectList f ()I getColor
MobEffectList a attributeModifiers
MobEffectList b category
MobEffectList c color
MobEffectList d descriptionId
MobEffectList b ()Ljava/lang/String; getOrCreateDescriptionId
MobEffectList c ()Ljava/lang/String; getDescriptionId
MobEffectList d ()LIChatBaseComponent; getDisplayName
MobEffectList e ()LMobEffectInfo; getCategory
MobEffectList g ()Ljava/util/Map; getAttributeModifiers
MobEffectList b (LEntityLiving;LAttributeMapBase;I)V addAttributeModifiers
MobEffectList h ()Z isBeneficial
MobEffectInfo a BENEFICIAL
MobEffectInfo b HARMFUL
MobEffectInfo c NEUTRAL
MobEffectInfo d tooltipFormatting
MobEffectInfo e $VALUES
MobEffectInfo values ()[LMobEffectInfo; values
MobEffectInfo valueOf (Ljava/lang/String;)LMobEffectInfo; valueOf
MobEffect c duration
MobEffect d amplification
MobEffect e splash
MobEffect f ambient
MobEffect h showParticles
MobEffect i showIcon
MobEffect j hiddenEffect
MobEffect a ()LMobEffectList; getMobEffect
MobEffect a (LEntityLiving;Ljava/lang/Runnable;)Z tick
MobEffect b ()I getDuration
MobEffect c ()I getAmplifier
MobEffect d ()Z isAmbient
MobEffect e ()Z isShowParticles
MobEffect f ()Z isShowIcon
MobEffect a LOGGER
MobEffect b effect
MobEffect g noCounter
MobEffect b (LMobEffect;)Z update
MobEffect i ()I tickDownDuration
MobEffect g ()Ljava/lang/String; getDescriptionId
MobEffect toString ()Ljava/lang/String; toString
MobEffect equals (Ljava/lang/Object;)Z equals
MobEffect hashCode ()I hashCode
MobEffect c (LNBTTagCompound;)V writeDetailsTo
MobEffect b (LNBTTagCompound;)LMobEffect; load
MobEffect b (Z)V setNoCounter
MobEffect h ()Z isNoCounter
MobEffect c (LMobEffect;)I compareTo
MobEffect compareTo (Ljava/lang/Object;)I compareTo
MobEffects A UNLUCK
MobEffects B SLOW_FALLING
MobEffects C CONDUIT_POWER
MobEffects D DOLPHINS_GRACE
MobEffects E BAD_OMEN
MobEffects F HERO_OF_THE_VILLAGE
MobEffects a FASTER_MOVEMENT
MobEffects b SLOWER_MOVEMENT
MobEffects c FASTER_DIG
MobEffects d SLOWER_DIG
MobEffects e INCREASE_DAMAGE
MobEffects f HEAL
MobEffects g HARM
MobEffects h JUMP
MobEffects i CONFUSION
MobEffects j REGENERATION
MobEffects k RESISTANCE
MobEffects l FIRE_RESISTANCE
MobEffects m WATER_BREATHING
MobEffects n INVISIBILITY
MobEffects o BLINDNESS
MobEffects p NIGHT_VISION
MobEffects q HUNGER
MobEffects r WEAKNESS
MobEffects s POISON
MobEffects t WITHER
MobEffects u HEALTH_BOOST
MobEffects v ABSORBTION
MobEffects w SATURATION
MobEffects x GLOWING
MobEffects y LEVITATION
MobEffects z LUCK
EntityAgeable a (I)V setAge
EntityAgeable a (IZ)V setAge
EntityAgeable a (LEntityAgeable;)LEntityAgeable; createChild
EntityAgeable b_ (I)V setAgeRaw
EntityAgeable k ()I getAge
EntityAgeable bv DATA_BABY_ID
EntityAgeable b age
EntityAgeable c forcedAge
EntityAgeable d forcedAgeTimer
EntityAgeable w_ ()V defineSynchedData
EntityAgeable i ()Z canBreed
EntityAgeable b (LNBTTagCompound;)V addAdditionalSaveData
EntityAgeable l ()V aiStep
EntityAgeable m ()V ageBoundaryReached
EntityAgeable x_ ()Z isBaby
EntityAreaEffectCloud an effects
EntityAreaEffectCloud ao affectedEntities
EntityAreaEffectCloud ap duration
EntityAreaEffectCloud aq waitTime
EntityAreaEffectCloud ar reapplicationDelay
EntityAreaEffectCloud as hasColor
EntityAreaEffectCloud at durationOnUse
EntityAreaEffectCloud au radiusOnUse
EntityAreaEffectCloud av radiusPerTick
EntityAreaEffectCloud d COLOR
EntityAreaEffectCloud g potionRegistry
EntityAreaEffectCloud a (F)V setRadius
EntityAreaEffectCloud a (I)V setColor
EntityAreaEffectCloud a (LEntityLiving;)V setSource
EntityAreaEffectCloud a (LMobEffect;)V addEffect
EntityAreaEffectCloud a (LParticleParam;)V setParticle
EntityAreaEffectCloud b (F)V setRadiusOnUse
EntityAreaEffectCloud b (I)V setDuration
EntityAreaEffectCloud c (F)V setRadiusPerTick
EntityAreaEffectCloud d (I)V setWaitTime
EntityAreaEffectCloud f ()F getRadius
EntityAreaEffectCloud i ()I getColor
EntityAreaEffectCloud k ()LParticleParam; getParticle
EntityAreaEffectCloud m ()I getDuration
EntityAreaEffectCloud u ()LEntityLiving; getSource
EntityAreaEffectCloud b LOGGER
EntityAreaEffectCloud c DATA_RADIUS
EntityAreaEffectCloud e DATA_WAITING
EntityAreaEffectCloud f DATA_PARTICLE
EntityAreaEffectCloud aw owner
EntityAreaEffectCloud ax ownerUUID
EntityAreaEffectCloud w_ ()V defineSynchedData
EntityAreaEffectCloud z_ ()V refreshDimensions
EntityAreaEffectCloud z ()V updateColor
EntityAreaEffectCloud l ()Z isWaiting
EntityAreaEffectCloud h ()V tick
EntityAreaEffectCloud n ()F getRadiusOnUse
EntityAreaEffectCloud o ()F getRadiusPerTick
EntityAreaEffectCloud p ()I getDurationOnUse
EntityAreaEffectCloud c (I)V setDurationOnUse
EntityAreaEffectCloud q ()I getWaitTime
EntityAreaEffectCloud r ()V use
EntityAreaEffectCloud s ()Z canUse
EntityAreaEffectCloud b (LNBTTagCompound;)V addAdditionalSaveData
EntityAreaEffectCloud v ()LPotionRegistry; getPotion
EntityAreaEffectCloud w ()Ljava/util/List; getEffects
EntityAreaEffectCloud A_ ()LEnumPistonReaction; getPistonPushReaction
EntityAreaEffectCloud O ()LPacket; getAddEntityPacket
Entity C fallDistance
Entity H noclip
Entity J random
Entity K ticksLived
Entity L inWater
Entity O inLava
Entity P noDamageTicks
Entity Q justCreated
Entity R datawatcher
Entity T POSE
Entity U inChunk
Entity V chunkX
Entity W chunkY
Entity X chunkZ
Entity aC invulnerable
Entity aH size
Entity aI headHeight
Entity ac impulse
Entity ad portalCooldown
Entity ag dimension
Entity ak uniqueID
Entity am glowing
Entity ao passengers
Entity ap vehicle
Entity as mot
Entity at boundingBox
Entity aw fireTicks
Entity ax AIR_TICKS
Entity b entityCount
Entity an id
Entity k attachedToPlayer
Entity l world
Entity m lastX
Entity n lastY
Entity o lastZ
Entity p yaw
Entity q pitch
Entity r lastYaw
Entity s lastPitch
Entity t onGround
Entity u positionChanged
Entity w velocityChanged
Entity y dead
Entity A_ ()LEnumPistonReaction; getPushReaction
Entity Q ()Z hasCustomName
Entity T ()V decouple
Entity U ()LEntityTypes; getEntityType
Entity V ()I getId
Entity W ()Ljava/util/Set; getScoreboardTags
Entity X ()V killEntity
Entity Y ()LDataWatcher; getDataWatcher
Entity aa ()V die
Entity ab ()LEntityPose; getPose
Entity a (DDD)V enderTeleportTo
Entity a (DDDFF)V setLocation
Entity a (FF)V setYawPitch
Entity a (LBlockPosition;FF)V setPositionRotation
Entity a (LCrashReportSystemDetails;)V appendEntityCrashDetails
Entity a (LDamageSource;F)Z damageEntity
Entity a (LEntityLightning;)V onLightningStrike
Entity a (LEntityPose;LEntitySize;)F getHeadHeight
Entity a (LEnumItemSlot;LItemStack;)V setEquipment
Entity a (LEnumMoveType;LVec3D;)V move
Entity a (LWorld;)V spawnIn
Entity a (Ljava/lang/String;)Z addScoreboardTag
Entity aP ()V velocityChanged
Entity aQ ()Z isInteractable
Entity aR ()Z isCollidable
Entity aT ()Ljava/lang/String; getSaveID
Entity aU ()Z isAlive
Entity aV ()Z inBlock
Entity aW ()V passengerTick
Entity ba ()V ejectPassengers
Entity bc ()LVec3D; getLookDirection
Entity bf ()V doPortalTick
Entity ad ()V entityBaseTick
Entity af ()V burnFromLava
Entity ah ()V extinguish
Entity ap ()V recalcPosition
Entity aq ()LSoundEffect; getSoundSwim
Entity ar ()LSoundEffect; getSoundSplash
Entity as ()LSoundEffect; getSoundSplashHighSpeed
Entity at ()V checkBlockCollisions
Entity av ()Z isSilent
Entity aw ()Z isNoGravity
Entity ax ()Z playStepSound
Entity az ()Z isFireProof
Entity aA ()Z isInWater
Entity aB ()Z isInWaterOrRain
Entity b (DDD)V teleportAndSync
Entity b (DDDFF)V setPositionRotation
Entity b (IZ)V setFlag
Entity b (LDamageSource;)Z isInvulnerable
Entity b (LEntityHuman;)V pickup
Entity b (LEntityPose;)V setPose
Entity b (LIChatBaseComponent;)V setCustomName
Entity b (Ljava/lang/String;)Z removeScoreboardTag
Entity bH ()Z isInvulnerable
Entity bI ()Z canPortal
Entity bL ()LVec3D; getPortalOffset
Entity bM ()LEnumDirection; getPortalDirection
Entity bN ()Z isIgnoreBlockTrigger
Entity bP ()Ljava/util/UUID; getUniqueID
Entity bQ ()Ljava/lang/String; getUniqueIDString
Entity bR ()Ljava/lang/String; getName
Entity bU ()Z getCustomNameVisible
Entity bW ()LEnumDirection; getDirection
Entity bX ()LEnumDirection; getAdjustedDirection
Entity bZ ()LAxisAlignedBB; getBoundingBox
Entity cb ()F getHeadHeight
Entity cc ()LWorld; getWorld
Entity cd ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
Entity bj ()Ljava/lang/Iterable; getArmorItems
Entity bl ()Z isBurning
Entity bm ()Z isPassenger
Entity bn ()Z isVehicle
Entity bp ()Z isSneaking
Entity bv ()Z isSprinting
Entity bw ()Z isSwimming
Entity bA ()Z isInvisible
Entity bB ()LScoreboardTeamBase; getScoreboardTeam
Entity bD ()I getAirTicks
Entity bF ()F getHeadRotation
Entity d (Z)V setSilent
Entity ch ()LEntity; getRidingPassenger
Entity ci ()Ljava/util/List; getPassengers
Entity cj ()Ljava/util/Collection; getAllPassengers
Entity cl ()Z hasSinglePlayerPassenger
Entity cm ()LEntity; getRootVehicle
Entity co ()LEntity; getVehicle
Entity cp ()LSoundCategory; getSoundCategory
Entity cq ()I getMaxFireTicks
Entity cr ()LCommandListenerWrapper; getCommandListener
Entity ct ()F getWidth
Entity cu ()F getHeight
Entity cv ()LVec3D; getPositionVector
Entity cx ()LVec3D; getMot
Entity cy ()D locX
Entity cz ()D locY
Entity cB ()D getHeadY
Entity cC ()D locZ
Entity cD ()V checkDespawn
Entity d ()LIChatBaseComponent; getScoreboardDisplayName
Entity d (DDD)V setPosition
Entity d (LVec3D;)V setMot
Entity e (Z)V setNoGravity
Entity e (LNBTTagCompound;)LNBTTagCompound; save
Entity f (Z)V setSneaking
Entity f (I)V setOnFire
Entity g (Z)V setSprinting
Entity h (Z)V setSwimming
Entity h ()V tick
Entity h (I)V burn
Entity i (I)Z getFlag
Entity i (LEntity;)V collide
Entity j (Z)V setInvisible
Entity j ()V stopRiding
Entity j (I)V setAirTicks
Entity l ()Z isInRain
Entity k (F)V setHeadRotation
Entity l (DDD)V enderTeleportAndLoad
Entity m (Z)V setInvulnerable
Entity m (DDD)V setMot
Entity m (LEntity;)Z startRiding
Entity n (Z)V setCustomNameVisible
Entity n (DDD)V setPositionRaw
Entity o (LEntity;)V addPassenger
Entity p (LEntity;)V removePassenger
Entity t ()Z isSpectator
Entity w_ ()V initDatawatcher
Entity x (LEntity;)Z isSameVehicle
Entity z_ ()V updateSize
Entity h LOGGER
Entity c EMPTY_LIST
Entity d POSE_DISMOUNT_HEIGHTS
Entity e INITIAL_AABB
Entity f viewScale
Entity g type
Entity i blocksBuilding
Entity j boardingCooldown
Entity aq position
Entity ar blockPosition
Entity v verticalCollision
Entity x stuckSpeedMultiplier
Entity z walkDistO
Entity A walkDist
Entity B moveDist
Entity au nextStep
Entity av nextFlap
Entity D xOld
Entity E yOld
Entity F zOld
Entity G maxUpStep
Entity I pushthrough
Entity M fluidHeight
Entity N wasUnderWater
Entity S DATA_SHARED_FLAGS_ID
Entity ay DATA_CUSTOM_NAME
Entity az DATA_CUSTOM_NAME_VISIBLE
Entity aA DATA_SILENT
Entity aB DATA_NO_GRAVITY
Entity Y xp
Entity Z yp
Entity aa zp
Entity ab noCulling
Entity ae isInsidePortal
Entity af portalTime
Entity ah portalEntranceBlock
Entity ai portalEntranceOffset
Entity aj portalEntranceForwards
Entity al stringUUID
Entity aD tags
Entity aE teleported
Entity aF pistonDeltas
Entity aG pistonDeltasGameTime
Entity S ()I getTeamColor
Entity c (DDD)V setPacketCoordinates
Entity e (I)V setId
Entity equals (Ljava/lang/Object;)Z equals
Entity hashCode ()I hashCode
Entity Z ()V resetPos
Entity a_ (Z)V setDropContainerContent
Entity ac ()V reapplyPosition
Entity E ()V processDimensionDelay
Entity ae ()I getPortalWaitTime
Entity g (I)V setRemainingFireTicks
Entity ag ()I getRemainingFireTicks
Entity ai ()V outOfWorld
Entity e (DDD)Z isFree
Entity b (LAxisAlignedBB;)Z isFree
Entity c (Z)V setOnGround
Entity aj ()Z isOnGround
Entity ak ()LBlockPosition; getOnPos
Entity al ()F getBlockJumpFactor
Entity am ()F getBlockSpeedFactor
Entity an ()LBlockPosition; getBlockPosBelowThatAffectsMyMovement
Entity e (LVec3D;)LVec3D; collide
Entity b (LVec3D;)D getHorizontalDistanceSqr
Entity ao ()F nextStep
Entity d (F)V playSwimSound
Entity e (F)F playFlySound
Entity au ()Z makeFlySound
Entity ay ()LAxisAlignedBB; getCollideBox
Entity b (FF)Z causeFallDamage
Entity m ()Z isInBubbleColumn
Entity aC ()Z isInWaterRainOrBubble
Entity aD ()Z isInWaterOrBubble
Entity aE ()Z isUnderWater
Entity aF ()V updateSwimming
Entity aG ()Z updateInWaterStateAndDoFluidPushing
Entity aH ()V updateInWaterStateAndDoWaterCurrentPushing
Entity n ()V updateUnderWaterState
Entity aI ()V doWaterSplashEffect
Entity aJ ()LIBlockData; getBlockStateOn
Entity aK ()V updateSprintingState
Entity aL ()V doSprintParticleEffect
Entity aM ()V setInLava
Entity aN ()Z isInLava
Entity aO ()F getBrightness
Entity f (DDD)V setPosAndOldPos
Entity g (LEntity;)F distanceTo
Entity g (DDD)D distanceToSqr
Entity h (LEntity;)D distanceToSqr
Entity c (LVec3D;)D distanceToSqr
Entity h (DDD)V push
Entity f (F)LVec3D; getViewVector
Entity g (F)F getViewXRot
Entity h (F)F getViewYRot
Entity c (FF)LVec3D; calculateViewVector
Entity i (F)LVec3D; getUpVector
Entity d (FF)LVec3D; calculateUpVector
Entity j (F)LVec3D; getEyePosition
Entity i (DDD)Z shouldRender
Entity c (LNBTTagCompound;)Z saveAsPassenger
Entity d (LNBTTagCompound;)Z save
Entity f (LNBTTagCompound;)V load
Entity aS ()Z repositionEntityAfterLoad
Entity b (LNBTTagCompound;)V addAdditionalSaveData
Entity j (LEntity;)LAxisAlignedBB; getCollideAgainstBox
Entity k (LEntity;)V positionRider
Entity l (LEntity;)V onPassengerTurned
Entity aX ()D getRidingHeight
Entity aY ()D getRideHeight
Entity aZ ()Z showVehicleHealth
Entity n (LEntity;)Z canRide
Entity c (LEntityPose;)Z canEnterPose
Entity q (LEntity;)Z canAddPassenger
Entity bb ()F getPickRadius
Entity bd ()LVec2F; getRotationVector
Entity be ()LVec3D; getForward
Entity d (LBlockPosition;)V handleInsidePortal
Entity bg ()I getDimensionChangingDelay
Entity j (DDD)V lerpMotion
Entity bh ()V animateHurt
Entity bi ()Ljava/lang/Iterable; getHandSlots
Entity bk ()Ljava/lang/Iterable; getAllSlots
Entity bo ()Z rideableUnderWater
Entity bq ()Z isSteppingCarefully
Entity br ()Z isSuppressingBounce
Entity bs ()Z isDiscrete
Entity bt ()Z isDescending
Entity bu ()Z isCrouching
Entity bx ()Z isVisuallySwimming
Entity by ()Z isVisuallyCrawling
Entity bz ()Z isGlowing
Entity i (Z)V setGlowing
Entity c (LEntityHuman;)Z isInvisibleTo
Entity r (LEntity;)Z isAlliedTo
Entity bC ()I getMaxAirSupply
Entity k (Z)V onAboveBubbleCol
Entity l (Z)V onInsideBubbleColumn
Entity b (LEntityLiving;)V killed
Entity k (DDD)V checkInBlock
Entity c (LIChatBaseComponent;)V removeAction
Entity P ()LIChatBaseComponent; getName
Entity bE ()LIChatBaseComponent; getTypeName
Entity s (LEntity;)Z is
Entity l (F)V setYBodyRot
Entity bG ()Z isAttackable
Entity t (LEntity;)Z skipAttackInteraction
Entity toString ()Ljava/lang/String; toString
Entity u (LEntity;)V copyPosition
Entity v (LEntity;)V restoreFrom
Entity bJ ()I getMaxFallDistance
Entity bK ()LBlockPosition; getPortalEntranceBlock
Entity bO ()Z displayFireAnimation
Entity bS ()Z isPushedByFluid
Entity bT ()D getViewScale
Entity b (D)V setViewScale
Entity R ()LIChatBaseComponent; getCustomName
Entity bV ()Z shouldShowName
Entity bY ()LChatHoverable; createHoverEvent
Entity ca ()LAxisAlignedBB; getBoundingBoxForCulling
Entity d (LEntityPose;)LAxisAlignedBB; getBoundingBoxForPose
Entity e (LEntityPose;)F getEyeHeight
Entity a_ (ILItemStack;)Z setSlot
Entity ce ()Z ignoreExplosion
Entity b (LEntityPlayer;)V startSeenByPlayer
Entity c (LEntityPlayer;)V stopSeenByPlayer
Entity cf ()Z onlyOpCanSetNbt
Entity cg ()Z checkAndResetTeleportedFlag
Entity w (LEntity;)Z hasPassenger
Entity ck ()Ljava/util/stream/Stream; getSelfAndPassengers
Entity y (LEntity;)Z hasIndirectPassenger
Entity cn ()Z isControlledByLocalInstance
Entity c (LEntityLiving;)LVec3D; getDismountLocationForPassenger
Entity y ()I getPermissionLevel
Entity k (I)Z hasPermissions
Entity b ()Z acceptsFailure
Entity I_ ()Z shouldInformAdmins
Entity cs ()D getFluidHeight
Entity O ()LPacket; getAddEntityPacket
Entity cw ()LBlockPosition; blockPosition
Entity c (D)D getX
Entity d (D)D getRandomX
Entity e (D)D getY
Entity cA ()D getRandomY
Entity f (D)D getZ
Entity g (D)D getRandomZ
Entity o ()Ljava/lang/String; lambda$fillCrashReportCategory$4
Entity p ()Ljava/lang/String; lambda$fillCrashReportCategory$3
Entity q ()Ljava/lang/String; lambda$fillCrashReportCategory$2
Entity r ()Ljava/lang/String; lambda$fillCrashReportCategory$1
Entity b (LChatModifier;)V lambda$removeAction$0
EntitySize a width
EntitySize b height
EntitySize c fixed
EntitySize b (FF)LEntitySize; scalable
EntitySize c (FF)LEntitySize; fixed
EntitySize toString ()Ljava/lang/String; toString
EntityTypes A FALLING_BLOCK
EntityTypes B FIREWORK_ROCKET
EntityTypes C FOX
EntityTypes D GHAST
EntityTypes E GIANT
EntityTypes F GUARDIAN
EntityTypes G HORSE
EntityTypes H HUSK
EntityTypes I ILLUSIONER
EntityTypes J ITEM
EntityTypes K ITEM_FRAME
EntityTypes L FIREBALL
EntityTypes M LEASH_KNOT
EntityTypes N LLAMA
EntityTypes O LLAMA_SPIT
EntityTypes P MAGMA_CUBE
EntityTypes Q MINECART
EntityTypes R CHEST_MINECART
EntityTypes S COMMAND_BLOCK_MINECART
EntityTypes T FURNACE_MINECART
EntityTypes U HOPPER_MINECART
EntityTypes V SPAWNER_MINECART
EntityTypes W TNT_MINECART
EntityTypes X MULE
EntityTypes Y MOOSHROOM
EntityTypes Z OCELOT
EntityTypes a AREA_EFFECT_CLOUD
EntityTypes aA TURTLE
EntityTypes aB EGG
EntityTypes aC ENDER_PEARL
EntityTypes aD EXPERIENCE_BOTTLE
EntityTypes aE POTION
EntityTypes aF TRIDENT
EntityTypes aG VEX
EntityTypes aH VILLAGER
EntityTypes aI IRON_GOLEM
EntityTypes aJ VINDICATOR
EntityTypes aK PILLAGER
EntityTypes aL WANDERING_TRADER
EntityTypes aM WITCH
EntityTypes aN WITHER
EntityTypes aO WITHER_SKELETON
EntityTypes aP WITHER_SKULL
EntityTypes aQ WOLF
EntityTypes aR ZOMBIE
EntityTypes aS ZOMBIE_HORSE
EntityTypes aT ZOMBIE_VILLAGER
EntityTypes aU PHANTOM
EntityTypes aV RAVAGER
EntityTypes aY LIGHTNING_BOLT
EntityTypes aZ PLAYER
EntityTypes ba FISHING_BOBBER
EntityTypes aa PAINTING
EntityTypes ab PANDA
EntityTypes ac PARROT
EntityTypes ad PIG
EntityTypes ae PUFFERFISH
EntityTypes af ZOMBIE_PIGMAN
EntityTypes ag POLAR_BEAR
EntityTypes ah TNT
EntityTypes ai RABBIT
EntityTypes aj SALMON
EntityTypes ak SHEEP
EntityTypes al SHULKER
EntityTypes am SHULKER_BULLET
EntityTypes an SILVERFISH
EntityTypes ao SKELETON
EntityTypes ap SKELETON_HORSE
EntityTypes aq SLIME
EntityTypes ar SMALL_FIREBALL
EntityTypes as SNOW_GOLEM
EntityTypes at SNOWBALL
EntityTypes au SPECTRAL_ARROW
EntityTypes av SPIDER
EntityTypes aw SQUID
EntityTypes ax STRAY
EntityTypes ay TRADER_LLAMA
EntityTypes az TROPICAL_FISH
EntityTypes b ARMOR_STAND
EntityTypes c ARROW
EntityTypes d BAT
EntityTypes e BEE
EntityTypes f BLAZE
EntityTypes g BOAT
EntityTypes h CAT
EntityTypes i CAVE_SPIDER
EntityTypes j CHICKEN
EntityTypes k COD
EntityTypes l COW
EntityTypes m CREEPER
EntityTypes n DONKEY
EntityTypes o DOLPHIN
EntityTypes p DRAGON_FIREBALL
EntityTypes q DROWNED
EntityTypes r ELDER_GUARDIAN
EntityTypes s END_CRYSTAL
EntityTypes t ENDER_DRAGON
EntityTypes u ENDERMAN
EntityTypes v ENDERMITE
EntityTypes w EVOKER_FANGS
EntityTypes x EVOKER
EntityTypes y EXPERIENCE_ORB
EntityTypes z EYE_OF_ENDER
EntityTypes a (LEntityTypes;)LMinecraftKey; getName
EntityTypes a (LWorld;LItemStack;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes a (LWorld;LNBTTagCompound;LIChatBaseComponent;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes b (LWorld;LNBTTagCompound;LIChatBaseComponent;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; createCreature
EntityTypes n ()I getChunkRange
EntityTypes o ()I getUpdateInterval
EntityTypes p ()Z isDeltaTracking
EntityTypes bb LOGGER
EntityTypes aW HOGLIN
EntityTypes aX PIGLIN
EntityTypes bc factory
EntityTypes bd category
EntityTypes be serialize
EntityTypes bf summon
EntityTypes bg fireImmune
EntityTypes bh canSpawnFarFromPlayer
EntityTypes bi instantDespawnDistance
EntityTypes bj noDespawnDistance
EntityTypes bk descriptionId
EntityTypes bl description
EntityTypes bm lootTable
EntityTypes bn dimensions
EntityTypes b ()Z canSummon
EntityTypes c ()Z fireImmune
EntityTypes d ()Z canSpawnFarFromPlayer
EntityTypes e ()I getInstantDespawnDistance
EntityTypes f ()I getNoDespawnDistance
EntityTypes g ()LEnumCreatureType; getCategory
EntityTypes h ()Ljava/lang/String; getDescriptionId
EntityTypes i ()LIChatBaseComponent; getDescription
EntityTypes j ()LMinecraftKey; getDefaultLootTable
EntityTypes k ()F getWidth
EntityTypes l ()F getHeight
EntityTypes m ()LEntitySize; getDimensions
EntityTypes b (LNBTTagCompound;LWorld;)Ljava/util/Optional; loadStaticEntity
EntityTypes b (LNBTTagCompound;)V lambda$create$2
EntityTypes b (LWorld;LEntityTypes;)LEntity; lambda$create$0
EntityTypes q ()Lorg/apache/logging/log4j/Logger; access$000
EnumItemSlot a MAINHAND
EnumItemSlot b OFFHAND
EnumItemSlot c FEET
EnumItemSlot d LEGS
EnumItemSlot e CHEST
EnumItemSlot f HEAD
EnumItemSlot a (Ljava/lang/String;)LEnumItemSlot; fromName
EnumItemSlot d ()Ljava/lang/String; getSlotName
EnumItemSlot g type
EnumItemSlot h index
EnumItemSlot i filterFlag
EnumItemSlot j name
EnumItemSlot k $VALUES
EnumItemSlot values ()[LEnumItemSlot; values
EnumItemSlot valueOf (Ljava/lang/String;)LEnumItemSlot; valueOf
EnumItemSlot b ()I getIndex
EnumItemSlot c ()I getFilterFlag
EnumItemSlot$Function a HAND
EnumItemSlot$Function b ARMOR
EnumItemSlot$Function c $VALUES
EnumItemSlot$Function values ()[LEnumItemSlot$Function; values
EnumItemSlot$Function valueOf (Ljava/lang/String;)LEnumItemSlot$Function; valueOf
EntityExperienceOrb an targetTime
EntityExperienceOrb f value
EntityExperienceOrb g targetPlayer
EntityExperienceOrb a (I)I getOrbValue
EntityExperienceOrb b tickCount
EntityExperienceOrb c age
EntityExperienceOrb d throwTime
EntityExperienceOrb e health
EntityExperienceOrb ax ()Z isMovementNoisy
EntityExperienceOrb w_ ()V defineSynchedData
EntityExperienceOrb h ()V tick
EntityExperienceOrb k ()V setUnderwaterMovement
EntityExperienceOrb aI ()V doWaterSplashEffect
EntityExperienceOrb h (I)V burn
EntityExperienceOrb b (LNBTTagCompound;)V addAdditionalSaveData
EntityExperienceOrb b (LEntityHuman;)V playerTouch
EntityExperienceOrb b (I)I durabilityToXp
EntityExperienceOrb c (I)I xpToDurability
EntityExperienceOrb f ()I getValue
EntityExperienceOrb i ()I getIcon
EntityExperienceOrb bG ()Z isAttackable
EntityExperienceOrb O ()LPacket; getAddEntityPacket
EnumMainHand a LEFT
EnumMainHand b RIGHT
EnumMainHand c name
EnumMainHand d $VALUES
EnumMainHand values ()[LEnumMainHand; values
EnumMainHand valueOf (Ljava/lang/String;)LEnumMainHand; valueOf
EnumMainHand toString ()Ljava/lang/String; toString
EntityLiving aE maxNoDamageTicks
EntityLiving aM killer
EntityLiving aN lastDamageByPlayerTime
EntityLiving aO killed
EntityLiving aP ticksFarFromPlayer
EntityLiving aW lastDamage
EntityLiving aX jumping
EntityLiving au hurtTicks
EntityLiving av hurtDuration
EntityLiving ax deathTicks
EntityLiving bC jumpTicks
EntityLiving bj activeItem
EntityLiving br attributeMap
EntityLiving bs combatTracker
EntityLiving bt effects
EntityLiving bw updateEffects
EntityLiving bx lastDamager
EntityLiving by hurtTimestamp
EntityLiving e HEALTH
EntityLiving D (LEntity;)Z hasLineOfSight
EntityLiving a (LDamageSource;)V die
EntityLiving a (LDamageSource;F)Z damageEntity
EntityLiving a (LDamageSource;IZ)V dropDeathLoot
EntityLiving a (LEntity;I)V receive
EntityLiving a (LEntityLiving;)V setLastDamager
EntityLiving a (LEnumItemSlot;LItemStack;)V setSlot
EntityLiving a (LIAttribute;)LAttributeInstance; getAttributeInstance
EntityLiving a (LMobEffectList;)Z hasEffect
EntityLiving o (Z)V setJumping
EntityLiving b (F)V heal
EntityLiving c (LDamageSource;F)F applyArmorModifier
EntityLiving b (LEnumItemSlot;)LItemStack; getEquipment
EntityLiving b (LMobEffectList;)LMobEffect; getEffect
EntityLiving c (F)V setHealth
EntityLiving d (LDamageSource;F)F applyMagicModifier
EntityLiving c (LEnumItemSlot;)V broadcastItemBreak
EntityLiving c (LMobEffect;)Z addEffect
EntityLiving cF ()V initAttributes
EntityLiving cK ()Z isDropExperience
EntityLiving cL ()Z alwaysGivesExp
EntityLiving cM ()Ljava/util/Random; getRandom
EntityLiving cN ()LEntityLiving; getLastDamager
EntityLiving cS ()V tickPotionEffects
EntityLiving cU ()Z removeAllEffects
EntityLiving cV ()Ljava/util/Collection; getEffects
EntityLiving cY ()F getHealth
EntityLiving da ()V dropInventory
EntityLiving db ()V dropExperience
EntityLiving dd ()LSoundEffect; getSoundDeath
EntityLiving cE ()LBehaviorController; getBehaviorController
EntityLiving e (LDamageSource;F)V damageEntity0
EntityLiving d (LEntityHuman;)I getExpValue
EntityLiving e (LEntityLiving;)V shieldBlock
EntityLiving d (LEnumHand;)V broadcastItemBreak
EntityLiving d (LMobEffectList;)Z removeEffect
EntityLiving dH ()LEnumMainHand; getMainHand
EntityLiving dI ()Z isHandRaised
EntityLiving dJ ()LEnumHand; getRaisedHand
EntityLiving dN ()V clearActiveItem
EntityLiving dP ()Z isBlocking
EntityLiving dR ()Z isGliding
EntityLiving dX ()Ljava/util/Optional; getBedPosition
EntityLiving dZ ()Z isSleeping
EntityLiving ea ()V entityWakeup
EntityLiving dh ()I getArmorStrength
EntityLiving di ()LCombatTracker; getCombatTracker
EntityLiving dj ()LEntityLiving; getKillingEntity
EntityLiving dk ()F getMaxHealth
EntityLiving dl ()I getArrowCount
EntityLiving do ()LAttributeMapBase; getAttributeMap
EntityLiving dp ()LEnumMonsterType; getMonsterType
EntityLiving dq ()LItemStack; getItemInMainHand
EntityLiving dr ()LItemStack; getItemInOffHand
EntityLiving dt ()F getSoundVolume
EntityLiving dv ()Z isFrozen
EntityLiving dx ()V jump
EntityLiving dB ()V doTick
EntityLiving dC ()V collideNearby
EntityLiving dD ()Z isRiptiding
EntityLiving dE ()Z doAITick
EntityLiving dF ()F getAbsorptionHearts
EntityLiving e ()V enterCombat
EntityLiving b (LBlockPosition;)V entitySleep
EntityLiving e (LDamageSource;)LSoundEffect; getSoundHurt
EntityLiving f ()V exitCombat
EntityLiving g (LDamageSource;)Z applyBlockingModifier
EntityLiving l ()V movementTick
EntityLiving m (F)V damageShield
EntityLiving o (I)LSoundEffect; getSoundFall
EntityLiving p (I)V setArrowCount
EntityLiving p (F)V setAbsorptionHearts
EntityLiving x_ ()Z isBaby
EntityLiving b SPEED_MODIFIER_SPRINTING_UUID
EntityLiving c SPEED_MODIFIER_SOUL_SPEED_UUID
EntityLiving d SPEED_MODIFIER_SPRINTING
EntityLiving an DATA_LIVING_ENTITY_FLAGS
EntityLiving f DATA_EFFECT_COLOR_ID
EntityLiving g DATA_EFFECT_AMBIENCE_ID
EntityLiving bo DATA_ARROW_COUNT_ID
EntityLiving bp DATA_STINGER_COUNT_ID
EntityLiving bq SLEEPING_POS_ID
EntityLiving ao SLEEPING_DIMENSIONS
EntityLiving bu lastHandItemStacks
EntityLiving bv lastArmorItemStacks
EntityLiving ap swinging
EntityLiving aq swingingArm
EntityLiving ar swingTime
EntityLiving as removeArrowTime
EntityLiving at removeStingerTime
EntityLiving aw hurtDir
EntityLiving ay oAttackAnim
EntityLiving az attackAnim
EntityLiving aA attackStrengthTicker
EntityLiving aB animationSpeedOld
EntityLiving aC animationSpeed
EntityLiving aD animationPosition
EntityLiving aF timeOffs
EntityLiving aG rotA
EntityLiving aH yBodyRot
EntityLiving aI yBodyRotO
EntityLiving aJ yHeadRot
EntityLiving aK yHeadRotO
EntityLiving aL flyingSpeed
EntityLiving aQ oRun
EntityLiving aR run
EntityLiving aS animStep
EntityLiving aT animStepO
EntityLiving aU rotOffs
EntityLiving aV deathScore
EntityLiving aY xxa
EntityLiving aZ yya
EntityLiving ba zza
EntityLiving bb lerpSteps
EntityLiving bc lerpX
EntityLiving bd lerpY
EntityLiving be lerpZ
EntityLiving bf lerpYRot
EntityLiving bg lerpXRot
EntityLiving bh lyHeadRot
EntityLiving bi lerpHeadSteps
EntityLiving bz lastHurtMob
EntityLiving bA lastHurtMobTimestamp
EntityLiving bB speed
EntityLiving bD absorptionAmount
EntityLiving bk useItemRemaining
EntityLiving bl fallFlyTicks
EntityLiving bE lastPos
EntityLiving bF lastClimbablePos
EntityLiving bG lastDamageSource
EntityLiving bH lastDamageStamp
EntityLiving bm autoSpinAttackTicks
EntityLiving bI swimAmount
EntityLiving bJ swimAmountO
EntityLiving bn brain
EntityLiving X ()V kill
EntityLiving w_ ()V defineSynchedData
EntityLiving cG ()Z canBreatheUnderwater
EntityLiving ad ()V baseTick
EntityLiving aK ()V updateSprintingState
EntityLiving cH ()V doSoulSpeedParticles
EntityLiving am ()F getBlockSpeedFactor
EntityLiving c (LBlockPosition;)V onChangedBlock
EntityLiving cI ()F getScale
EntityLiving bo ()Z rideableUnderWater
EntityLiving cJ ()V tickDeath
EntityLiving l (I)I decreaseAirSupply
EntityLiving m (I)I increaseAirSupply
EntityLiving cO ()I getLastHurtByMobTimestamp
EntityLiving cP ()LEntityLiving; getLastHurtMob
EntityLiving cQ ()I getLastHurtMobTimestamp
EntityLiving z (LEntity;)V setLastHurtMob
EntityLiving cR ()I getNoActionTime
EntityLiving n (I)V setNoActionTime
EntityLiving b (LItemStack;)V playEquipSound
EntityLiving b (LNBTTagCompound;)V addAdditionalSaveData
EntityLiving C ()V updateInvisibilityStatus
EntityLiving A (LEntity;)D getVisibilityPercent
EntityLiving d (LEntityLiving;)Z canAttack
EntityLiving c (Ljava/util/Collection;)Z areAllEffectsAmbient
EntityLiving cT ()V removeEffectParticles
EntityLiving cW ()Ljava/util/Map; getActiveEffectsMap
EntityLiving d (LMobEffect;)Z canBeAffected
EntityLiving e (LMobEffect;)V forceAddEffect
EntityLiving cX ()Z isInvertedHealAndHarm
EntityLiving c (LMobEffectList;)LMobEffect; removeEffectNoUpdate
EntityLiving b (LMobEffect;)V onEffectRemoved
EntityLiving f (LEntityLiving;)V blockedByShield
EntityLiving f (LDamageSource;)Z checkTotemDeathProtection
EntityLiving cZ ()LDamageSource; getLastDamageSource
EntityLiving c (LDamageSource;)V playHurtSound
EntityLiving g (LItemStack;)V breakItem
EntityLiving g (LEntityLiving;)V createWitherRose
EntityLiving d (LDamageSource;)V dropAllDeathLoot
EntityLiving dc ()LMinecraftKey; getLootTable
EntityLiving c (LItemStack;)LSoundEffect; getDrinkingSound
EntityLiving d (LItemStack;)LSoundEffect; getEatingSound
EntityLiving c (Z)V setOnGround
EntityLiving de ()Ljava/util/Optional; getLastClimbablePos
EntityLiving y_ ()Z onClimbable
EntityLiving df ()LIBlockData; getFeetBlockState
EntityLiving b (LBlockPosition;LIBlockData;)Z trapdoorUsableAsLadder
EntityLiving aU ()Z isAlive
EntityLiving b (FF)Z causeFallDamage
EntityLiving e (FF)I calculateFallDamage
EntityLiving dg ()V playBlockFallSound
EntityLiving bh ()V animateHurt
EntityLiving b (LDamageSource;F)V hurtArmor
EntityLiving dm ()I getStingerCount
EntityLiving q (I)V setStingerCount
EntityLiving m ()I getCurrentSwingDuration
EntityLiving ai ()V outOfWorld
EntityLiving dn ()V updateSwingTime
EntityLiving bi ()Ljava/lang/Iterable; getHandSlots
EntityLiving b (LEnumHand;)LItemStack; getItemInHand
EntityLiving bj ()Ljava/lang/Iterable; getArmorSlots
EntityLiving ds ()F getArmorCoverPercentage
EntityLiving g (Z)V setSprinting
EntityLiving du ()F getVoicePitch
EntityLiving i (LEntity;)V push
EntityLiving bV ()Z shouldShowName
EntityLiving dw ()F getJumpPower
EntityLiving dy ()V goDownInWater
EntityLiving b (LTag;)V jumpInLiquid
EntityLiving dz ()F getWaterSlowDown
EntityLiving e (LVec3D;)V travel
EntityLiving f (LVec3D;)LVec3D; handleOnClimbable
EntityLiving q (F)F getFrictionInfluencedSpeed
EntityLiving dA ()F getSpeed
EntityLiving n (F)V setSpeed
EntityLiving B (LEntity;)Z doHurtTarget
EntityLiving h ()V tick
EntityLiving f (FF)F tickHeadTurn
EntityLiving o ()V updateFallFlying
EntityLiving C (LEntity;)V doPush
EntityLiving h (LEntityLiving;)V doAutoAttackOnTouch
EntityLiving r (I)V startAutoSpinAttack
EntityLiving j ()V stopRiding
EntityLiving aW ()V rideTick
EntityLiving h (F)F getViewYRot
EntityLiving o (F)F getAttackAnim
EntityLiving aQ ()Z isPickable
EntityLiving aR ()Z isPushable
EntityLiving aP ()V markHurt
EntityLiving bF ()F getYHeadRot
EntityLiving k (F)V setYHeadRot
EntityLiving l (F)V setYBodyRot
EntityLiving dG ()V updateEffectVisibility
EntityLiving p ()V updatingUsingItem
EntityLiving r ()Z shouldTriggerItemUseEffects
EntityLiving s ()V updateSwimAmount
EntityLiving c (IZ)V setLivingEntityFlag
EntityLiving c (LEnumHand;)V startUsingItem
EntityLiving b (LItemStack;I)V triggerItemUseEffects
EntityLiving q ()V completeUsingItem
EntityLiving dK ()LItemStack; getUseItem
EntityLiving dL ()I getUseItemRemainingTicks
EntityLiving dM ()I getTicksUsingItem
EntityLiving dO ()V stopUsingItem
EntityLiving dQ ()Z isSuppressingSlidingDownLadder
EntityLiving bx ()Z isVisuallySwimming
EntityLiving dS ()I getFallFlyingTicks
EntityLiving dT ()Z isAffectedByPotions
EntityLiving dU ()Z attackable
EntityLiving e (LItemStack;)Z canTakeItem
EntityLiving O ()LPacket; getAddEntityPacket
EntityLiving dV ()Lcom/google/common/collect/ImmutableList; getDismountPoses
EntityLiving dW ()LEntityPose; getShortestDismountPose
EntityLiving f (LEntityPose;)LAxisAlignedBB; getLocalBoundsForPose
EntityLiving e (LBlockPosition;)V setSleepingPos
EntityLiving dY ()V clearSleepingPos
EntityLiving u ()Z checkBedExists
EntityLiving eb ()LEnumDirection; getBedOrientation
EntityLiving aV ()Z isInWall
EntityLiving b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityLiving f (LItemStack;)LItemStack; getProjectile
EntityLiving d (LEnumItemSlot;)B entityEventForEquipmentBreak
EntityLiving f (LBlockPosition;)V lambda$stopSleeping$9
EntityLiving g (LBlockPosition;)LVec3D; lambda$null$8
EntityLiving h (LBlockPosition;)Ljava/lang/Boolean; lambda$checkBedExists$7
EntityLiving g (LEntityPose;)Ljava/lang/Float; lambda$getShortestDismountPose$6
EntityLiving i (LEntityLiving;)V lambda$updateFallFlying$5
EntityLiving j (LEntityLiving;)V lambda$hurt$3
EntityLiving f (LMobEffect;)V lambda$tickEffects$2
EntityLiving k (LEntityLiving;)V lambda$onChangedBlock$0
EntityInsentient bz persistent
EntityInsentient bB lootTableKey
EntityInsentient bC lootTableSeed
EntityInsentient bD leashHolder
EntityInsentient bo moveController
EntityInsentient bq navigation
EntityInsentient br goalSelector
EntityInsentient bs targetSelector
EntityInsentient bt dropChanceHand
EntityInsentient bu dropChanceArmor
EntityInsentient by canPickUpLoot
EntityInsentient d goalTarget
EntityInsentient g lookController
EntityInsentient F ()V doSpawnEffect
EntityInsentient H ()LSoundEffect; getSoundAmbient
EntityInsentient I ()LMinecraftKey; getDefaultLootTable
EntityInsentient a (LGeneratorAccess;LDifficultyDamageScaler;LEnumMobSpawn;LGroupDataEntity;LNBTTagCompound;)LGroupDataEntity; prepare
EntityInsentient a (ZZ)V unleash
EntityInsentient b (LEntity;Z)V setLeashHolder
EntityInsentient d (LEntityHuman;)I getExpValue
EntityInsentient M ()V mobTick
EntityInsentient ee ()I getMaxSpawnGroup
EntityInsentient eg ()V setPersistent
EntityInsentient eh ()Z canPickupLoot
EntityInsentient ei ()Z isPersistent
EntityInsentient ep ()Z isLeashed
EntityInsentient eq ()LEntity; getLeashHolder
EntityInsentient er ()Z isNoAI
EntityInsentient es ()Z isLeftHanded
EntityInsentient h (D)Z isTypeNotPersistent
EntityInsentient i (LEntityLiving;)V setGoalTarget
EntityInsentient o ()V initPathfinder
EntityInsentient p (Z)V setCanPickupLoot
EntityInsentient q (Z)V setNoAI
EntityInsentient r ()LControllerLook; getControllerLook
EntityInsentient s ()LControllerMove; getControllerMove
EntityInsentient u ()LControllerJump; getControllerJump
EntityInsentient v ()LNavigationAbstract; getNavigation
EntityInsentient w ()LEntitySenses; getEntitySenses
EntityInsentient z ()LEntityLiving; getGoalTarget
EntityInsentient A ()V blockEaten
EntityInsentient b DATA_MOB_FLAGS_ID
EntityInsentient e ambientSoundTime
EntityInsentient f xpReward
EntityInsentient bp jumpControl
EntityInsentient c bodyRotationControl
EntityInsentient bv sensing
EntityInsentient bw handItems
EntityInsentient bx armorItems
EntityInsentient bA pathfindingMalus
EntityInsentient bE delayedLeashHolderId
EntityInsentient bF leashInfoTag
EntityInsentient bG restrictCenter
EntityInsentient bH restrictRadius
EntityInsentient cF ()V registerAttributes
EntityInsentient b (LWorld;)LNavigationAbstract; createNavigation
EntityInsentient p ()LEntityAIBodyControl; createBodyControl
EntityInsentient w_ ()V defineSynchedData
EntityInsentient B ()I getAmbientSoundInterval
EntityInsentient D ()V playAmbientSound
EntityInsentient ad ()V baseTick
EntityInsentient c (LDamageSource;)V playHurtSound
EntityInsentient m ()V resetAmbientSoundTime
EntityInsentient h ()V tick
EntityInsentient G ()V updateControlFlags
EntityInsentient f (FF)F tickHeadTurn
EntityInsentient b (LNBTTagCompound;)V addAdditionalSaveData
EntityInsentient dc ()LMinecraftKey; getLootTable
EntityInsentient q (F)V setZza
EntityInsentient r (F)V setYya
EntityInsentient s (F)V setXxa
EntityInsentient n (F)V setSpeed
EntityInsentient l ()V aiStep
EntityInsentient g (LItemStack;)Z equipItemIfPossible
EntityInsentient b (LEnumItemSlot;LItemStack;)V setItemSlotAndDropWhenKilled
EntityInsentient d (LEnumItemSlot;)V setGuaranteedDrop
EntityInsentient h (LItemStack;)Z canHoldItem
EntityInsentient i (LItemStack;)Z wantsToPickUp
EntityInsentient J ()Z requiresCustomPersistence
EntityInsentient K ()Z shouldDespawnInPeaceful
EntityInsentient cD ()V checkDespawn
EntityInsentient dB ()V serverAiStep
EntityInsentient L ()V sendDebugPackets
EntityInsentient N ()I getMaxHeadXRot
EntityInsentient ec ()I getMaxHeadYRot
EntityInsentient ed ()I getHeadRotSpeed
EntityInsentient c (I)Z isMaxGroupSizeReached
EntityInsentient bJ ()I getMaxFallDistance
EntityInsentient bi ()Ljava/lang/Iterable; getHandSlots
EntityInsentient bj ()Ljava/lang/Iterable; getArmorSlots
EntityInsentient b (LEnumItemSlot;)LItemStack; getItemBySlot
EntityInsentient e (LEnumItemSlot;)F getEquipmentDropChance
EntityInsentient j (LItemStack;)LEnumItemSlot; getEquipmentSlotForItem
EntityInsentient b (LDifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
EntityInsentient ef ()Z canBeControlledByRider
EntityInsentient e (LItemStack;)Z canTakeItem
EntityInsentient b (LEntityHuman;LEnumHand;)Z mobInteract
EntityInsentient ej ()Z isWithinRestriction
EntityInsentient ek ()LBlockPosition; getRestrictCenter
EntityInsentient el ()F getRestrictRadius
EntityInsentient em ()V clearRestriction
EntityInsentient en ()Z hasRestriction
EntityInsentient eo ()V tickLeash
EntityInsentient d (I)V setDelayedLeashHolderId
EntityInsentient ev ()V restoreLeashFromSave
EntityInsentient a_ (ILItemStack;)Z setSlot
EntityInsentient cn ()Z isControlledByLocalInstance
EntityInsentient c (LEnumItemSlot;LItemStack;)Z isValidSlotForItem
EntityInsentient dE ()Z isEffectiveAi
EntityInsentient r (Z)V setLeftHanded
EntityInsentient s (Z)V setAggressive
EntityInsentient et ()Z isAggressive
EntityInsentient dH ()LEnumMainHand; getMainArm
EntityInsentient d (LEntityLiving;)Z canAttack
EntityInsentient B (LEntity;)Z doHurtTarget
EntityInsentient eu ()Z isSunBurnTick
EntityInsentient b (LTag;)V jumpInLiquid
EntityInsentient b (LEntityHuman;LEntityInsentient;)V lambda$mobInteract$0
EnumCreatureType a MONSTER
EnumCreatureType b CREATURE
EnumCreatureType c AMBIENT
EnumCreatureType d WATER_CREATURE
EnumCreatureType e MISC
EnumCreatureType f BY_NAME
EnumCreatureType g max
EnumCreatureType h isFriendly
EnumCreatureType i isPersistent
EnumCreatureType j name
EnumCreatureType k $VALUES
EnumCreatureType values ()[LEnumCreatureType; values
EnumCreatureType valueOf (Ljava/lang/String;)LEnumCreatureType; valueOf
EnumCreatureType b ()I getMaxInstancesPerChunk
EnumCreatureType c ()Z isFriendly
EnumCreatureType d ()Z isPersistent
EnumMobSpawn a NATURAL
EnumMobSpawn b CHUNK_GENERATION
EnumMobSpawn c SPAWNER
EnumMobSpawn d STRUCTURE
EnumMobSpawn e BREEDING
EnumMobSpawn f MOB_SUMMONED
EnumMobSpawn g JOCKEY
EnumMobSpawn h EVENT
EnumMobSpawn i CONVERSION
EnumMobSpawn j REINFORCEMENT
EnumMobSpawn k TRIGGERED
EnumMobSpawn l BUCKET
EnumMobSpawn m SPAWN_EGG
EnumMobSpawn n COMMAND
EnumMobSpawn o DISPENSER
EnumMobSpawn p PATROL
EnumMobSpawn q $VALUES
EnumMobSpawn values ()[LEnumMobSpawn; values
EnumMobSpawn valueOf (Ljava/lang/String;)LEnumMobSpawn; valueOf
EnumMonsterType a UNDEFINED
EnumMonsterType b UNDEAD
EnumMonsterType c ARTHROPOD
EnumMonsterType d ILLAGER
EnumMonsterType e WATER
EnumMoveType a SELF
EnumMoveType b PLAYER
EnumMoveType c PISTON
EnumMoveType d SHULKER_BOX
EnumMoveType e SHULKER
EnumMoveType f $VALUES
EnumMoveType values ()[LEnumMoveType; values
EnumMoveType valueOf (Ljava/lang/String;)LEnumMoveType; valueOf
EntityPose a STANDING
EntityPose b FALL_FLYING
EntityPose c SLEEPING
EntityPose d SWIMMING
EntityPose e SPIN_ATTACK
EntityPose f CROUCHING
EntityPose g DYING
EntityPose h $VALUES
EntityPose values ()[LEntityPose; values
EntityPose valueOf (Ljava/lang/String;)LEntityPose; valueOf
EntityPositionTypes$Surface a ON_GROUND
EntityPositionTypes$Surface b IN_WATER
EntityPositionTypes$Surface c NO_RESTRICTIONS
EntityPositionTypes$Surface d $VALUES
EntityPositionTypes$Surface values ()[LEntityPositionTypes$Surface; values
EntityPositionTypes$Surface valueOf (Ljava/lang/String;)LEntityPositionTypes$Surface; valueOf
EntityTameableAnimal C_ ()Ljava/util/UUID; getOwnerUUID
EntityTameableAnimal b (Ljava/util/UUID;)V setOwnerUUID
EntityTameableAnimal e (LEntityHuman;)V tame
EntityTameableAnimal ex ()Z isTamed
EntityTameableAnimal eA ()LEntityLiving; getOwner
EntityTameableAnimal u (Z)V setTamed
EntityTameableAnimal bv DATA_FLAGS_ID
EntityTameableAnimal bw DATA_OWNERUUID_ID
EntityTameableAnimal bx orderedToSit
EntityTameableAnimal w_ ()V defineSynchedData
EntityTameableAnimal b (LNBTTagCompound;)V addAdditionalSaveData
EntityTameableAnimal t (Z)V spawnTamingParticles
EntityTameableAnimal ey ()V reassessTameGoals
EntityTameableAnimal ez ()Z isInSittingPose
EntityTameableAnimal v (Z)V setInSittingPose
EntityTameableAnimal d (LEntityLiving;)Z canAttack
EntityTameableAnimal j (LEntityLiving;)Z isOwnedBy
EntityTameableAnimal bB ()LScoreboardTeamBase; getTeam
EntityTameableAnimal r (LEntity;)Z isAlliedTo
EntityTameableAnimal eB ()Z isOrderedToSit
EntityTameableAnimal w (Z)V setOrderedToSit
EntityTameableAnimal D_ ()LEntity; getOwner
BehaviorController a memories
BehaviorController b sensors
BehaviorController d schedule
BehaviorController a (LMemoryModuleType;)Z hasMemory
BehaviorController a (LMemoryModuleType;Ljava/lang/Object;)V setMemory
BehaviorController a (LMemoryModuleType;Ljava/util/Optional;)V setMemory
BehaviorController a (LSchedule;)V setSchedule
BehaviorController b ()LSchedule; getSchedule
BehaviorController b (LMemoryModuleType;)V removeMemory
BehaviorController c (LMemoryModuleType;)Ljava/util/Optional; getMemory
BehaviorController c availableBehaviorsByPriority
BehaviorController e activityRequirements
BehaviorController f activityMemoriesToEraseWhenStopped
BehaviorController g coreActivities
BehaviorController h activeActivities
BehaviorController i defaultActivity
BehaviorController j lastScheduleUpdate
BehaviorController b (LMemoryModuleType;Ljava/util/Optional;)V setMemoryInternal
BehaviorController b (LMemoryModuleType;Ljava/lang/Object;)Z isMemoryValue
BehaviorController c ()Ljava/util/Set; getActiveActivities
BehaviorController d ()Ljava/util/stream/Stream; getRunningBehaviorsStream
BehaviorController e ()V useDefaultActivity
BehaviorController f ()Ljava/util/Optional; getActiveNonCoreActivity
BehaviorController d (LActivity;)V setActiveActivity
BehaviorController e (LActivity;)V eraseMemoriesForOtherActivitesThan
BehaviorController b (LActivity;)V setDefaultActivity
BehaviorController c (LActivity;)Z isActive
BehaviorController g ()LBehaviorController; copyWithoutBehaviors
BehaviorController b (LWorldServer;LEntityLiving;)V stopAll
BehaviorController c (LWorldServer;LEntityLiving;)V startEachNonRunningBehavior
BehaviorController d (LWorldServer;LEntityLiving;)V tickEachRunningBehavior
BehaviorController c (LMemoryModuleType;Ljava/util/Optional;)V tickMemoryAndRemoveIfExpired
BehaviorController f (LActivity;)Z activityRequirementsAreMet
BehaviorController b (LWorldServer;LEntityLiving;JLBehavior;)V lambda$startEachNonRunningBehavior$20
BehaviorController b (Ljava/util/Map$Entry;)Z lambda$serialize$15
BehaviorController c (LWorldServer;LEntityLiving;JLBehavior;)V lambda$stopAll$14
BehaviorController g (LActivity;)Ljava/util/Set; lambda$null$9
BehaviorController h (LActivity;)Z lambda$getActiveNonCoreActivity$6
BehaviorController b (LBehavior;)Z lambda$getRunningBehaviorsStream$5
BehaviorController b (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRunningBehaviorsStream$4
BehaviorController d (LMemoryModuleType;)V lambda$new$0
IAttribute a ()Ljava/lang/String; getName
IAttribute b ()D getDefault
IAttribute c ()Z isClientSyncable
IAttribute d ()LIAttribute; getParentAttribute
AttributeInstance a ()LIAttribute; getAttribute
AttributeInstance a (D)V setValue
AttributeInstance b ()D getBaseValue
AttributeInstance b (LAttributeModifier;)V addModifier
AttributeInstance c ()Ljava/util/Set; getModifiers
AttributeInstance c (LAttributeModifier;)V removeModifier
AttributeInstance e ()D getValue
AttributeInstance b (Ljava/lang/String;)V removeModifiers
AttributeInstance b (Ljava/util/UUID;)V removeModifier
AttributeInstance d ()V removeModifiers
AttributeModifier a ()Ljava/util/UUID; getUniqueId
AttributeModifier b ()Ljava/lang/String; getName
AttributeModifier c ()LAttributeModifier$Operation; getOperation
AttributeModifier d ()D getAmount
AttributeModifier a amount
AttributeModifier b operation
AttributeModifier c nameGetter
AttributeModifier d id
AttributeModifier e serialize
AttributeModifier e ()Z isSerializable
AttributeModifier equals (Ljava/lang/Object;)Z equals
AttributeModifier hashCode ()I hashCode
AttributeModifier toString ()Ljava/lang/String; toString
AttributeModifier b (Ljava/lang/String;)Ljava/lang/String; lambda$new$0
AttributeModifier$Operation a ADDITION
AttributeModifier$Operation b MULTIPLY_BASE
AttributeModifier$Operation c MULTIPLY_TOTAL
AttributeModifier$Operation d OPERATIONS
AttributeModifier$Operation e value
AttributeModifier$Operation f $VALUES
AttributeModifier$Operation values ()[LAttributeModifier$Operation; values
AttributeModifier$Operation valueOf (Ljava/lang/String;)LAttributeModifier$Operation; valueOf
AttributeMapServer b ()Ljava/util/Set; getAttributes
AttributeMapServer e dirtyAttributes
AttributeMapServer d attributesByLegacy
AttributeMapServer e (LIAttribute;)LAttributeModifiable; getInstance
AttributeMapServer b (Ljava/lang/String;)LAttributeModifiable; getInstance
AttributeMapServer b (LIAttribute;)LAttributeInstance; registerAttribute
AttributeMapServer c (LIAttribute;)LAttributeInstance; createAttributeInstance
AttributeMapServer c ()Ljava/util/Collection; getSyncableAttributes
AttributeRanged b maximum
AttributeRanged a minValue
AttributeRanged c importLegacyName
AttributeRanged e ()D getMinValue
AttributeRanged f ()D getMaxValue
AttributeRanged g ()Ljava/lang/String; getImportLegacyName
Behavior$Status a STOPPED
Behavior$Status b RUNNING
Behavior$Status c $VALUES
Behavior$Status values ()[LBehavior$Status; values
Behavior$Status valueOf (Ljava/lang/String;)LBehavior$Status; valueOf
BehaviorGate$Order a ORDERED
BehaviorGate$Order b SHUFFLED
BehaviorGate$Order c consumer
BehaviorGate$Order d $VALUES
BehaviorGate$Order values ()[LBehaviorGate$Order; values
BehaviorGate$Order valueOf (Ljava/lang/String;)LBehaviorGate$Order; valueOf
BehaviorGate$Order b (LWeightedList;)V lambda$static$0
BehaviorGate$Execution a RUN_ONE
BehaviorGate$Execution b TRY_ALL
BehaviorGate$Execution c $VALUES
BehaviorGate$Execution values ()[LBehaviorGate$Execution; values
BehaviorGate$Execution valueOf (Ljava/lang/String;)LBehaviorGate$Execution; valueOf
ControllerJump a ()V jump
ControllerJump b mob
ControllerJump a jump
ControllerJump b ()V tick
ControllerMove$Operation a WAIT
ControllerMove$Operation b MOVE_TO
ControllerMove$Operation c STRAFE
ControllerMove$Operation d JUMPING
ControllerMove$Operation e $VALUES
ControllerMove$Operation values ()[LControllerMove$Operation; values
ControllerMove$Operation valueOf (Ljava/lang/String;)LControllerMove$Operation; valueOf
PathfinderGoalBoat a GO_TO_BOAT
PathfinderGoalBoat b GO_IN_BOAT_DIRECTION
PathfinderGoalBoat c $VALUES
PathfinderGoalBoat values ()[LPathfinderGoalBoat; values
PathfinderGoalBoat valueOf (Ljava/lang/String;)LPathfinderGoalBoat; valueOf
PathfinderGoalBreed a animal
PathfinderGoalBreed c partner
PathfinderGoalBreed d PARTNER_TARGETING
PathfinderGoalBreed e partnerClass
PathfinderGoalBreed b level
PathfinderGoalBreed f loveTime
PathfinderGoalBreed g speedModifier
PathfinderGoalBreed b ()Z canContinueToUse
PathfinderGoalBreed d ()V stop
PathfinderGoalBreed e ()V tick
PathfinderGoalBreed h ()LEntityAnimal; getFreePartner
PathfinderGoalBreed g ()V breed
PathfinderGoalDoorInteract d entity
PathfinderGoalDoorInteract e door
PathfinderGoalDoorInteract f hasDoor
PathfinderGoalDoorInteract a passed
PathfinderGoalDoorInteract b doorOpenDirX
PathfinderGoalDoorInteract c doorOpenDirZ
PathfinderGoalDoorInteract g ()Z isOpen
PathfinderGoalDoorInteract b ()Z canContinueToUse
PathfinderGoalDoorInteract c ()V start
PathfinderGoalDoorInteract e ()V tick
PathfinderGoal$Type a MOVE
PathfinderGoal$Type b LOOK
PathfinderGoal$Type c JUMP
PathfinderGoal$Type d TARGET
PathfinderGoal$Type e $VALUES
PathfinderGoal$Type values ()[LPathfinderGoal$Type; values
PathfinderGoal$Type valueOf (Ljava/lang/String;)LPathfinderGoal$Type; valueOf
PathfinderGoalSelector a ()V doTick
PathfinderGoalSelector a LOGGER
PathfinderGoalSelector b NO_GOAL
PathfinderGoalSelector c lockedFlags
PathfinderGoalSelector d availableGoals
PathfinderGoalSelector e profiler
PathfinderGoalSelector f disabledFlags
PathfinderGoalSelector g newGoalRate
PathfinderGoalSelector b ()Ljava/util/Set; getAvailableGoals
PathfinderGoalSelector c ()Ljava/util/stream/Stream; getRunningGoals
PathfinderGoalSelector b (LPathfinderGoal$Type;)V enableControlFlag
PathfinderGoalSelector b (LPathfinderGoalWrapped;)Z lambda$tick$7
PathfinderGoalSelector b (LPathfinderGoalWrapped;LPathfinderGoal$Type;)Z lambda$null$6
PathfinderGoalSelector c (LPathfinderGoalWrapped;)Z lambda$tick$5
PathfinderGoalSelector d (LPathfinderGoalWrapped;)Z lambda$tick$4
PathfinderGoalSelector e (LPathfinderGoalWrapped;)Z lambda$tick$2
PathfinderGoalSelector b (LPathfinderGoal;LPathfinderGoalWrapped;)Z lambda$removeGoal$0
PathfinderGoalRandomStroll a (I)V setTimeBetweenMovement
PathfinderGoalRandomStroll a mob
PathfinderGoalRandomStroll b wantedX
PathfinderGoalRandomStroll c wantedY
PathfinderGoalRandomStroll d wantedZ
PathfinderGoalRandomStroll e speedModifier
PathfinderGoalRandomStroll f interval
PathfinderGoalRandomStroll g forceTrigger
PathfinderGoalRandomStroll g ()LVec3D; getPosition
PathfinderGoalRandomStroll b ()Z canContinueToUse
PathfinderGoalRandomStroll c ()V start
PathfinderGoalRandomStroll d ()V stop
PathfinderGoalRandomStroll h ()V trigger
PathfinderGoalCrossbowAttack$State a UNCHARGED
PathfinderGoalCrossbowAttack$State b CHARGING
PathfinderGoalCrossbowAttack$State c CHARGED
PathfinderGoalCrossbowAttack$State d READY_TO_ATTACK
PathfinderGoalCrossbowAttack$State e $VALUES
PathfinderGoalCrossbowAttack$State values ()[LPathfinderGoalCrossbowAttack$State; values
PathfinderGoalCrossbowAttack$State valueOf (Ljava/lang/String;)LPathfinderGoalCrossbowAttack$State; valueOf
PathfinderGoalRemoveBlock h entity
PathfinderGoalRemoveBlock g blockToRemove
PathfinderGoalRemoveBlock i ticksSinceReachedGoal
PathfinderGoalRemoveBlock m ()Z tryFindBlock
PathfinderGoalRemoveBlock d ()V stop
PathfinderGoalRemoveBlock c ()V start
PathfinderGoalRemoveBlock e ()V tick
PathfinderGoalTame a entity
PathfinderGoalTame b speedModifier
PathfinderGoalTame c posX
PathfinderGoalTame d posY
PathfinderGoalTame e posZ
PathfinderGoalTame c ()V start
PathfinderGoalTame b ()Z canContinueToUse
PathfinderGoalTame e ()V tick
PathfinderGoalSit a entity
PathfinderGoalSit b ()Z canContinueToUse
PathfinderGoalSit c ()V start
PathfinderGoalSit d ()V stop
PathfinderGoalTempt b target
PathfinderGoalTempt c TEMP_TARGETING
PathfinderGoalTempt a mob
PathfinderGoalTempt d speedModifier
PathfinderGoalTempt e px
PathfinderGoalTempt f py
PathfinderGoalTempt g pz
PathfinderGoalTempt h pRotX
PathfinderGoalTempt i pRotY
PathfinderGoalTempt j calmDown
PathfinderGoalTempt k isRunning
PathfinderGoalTempt l items
PathfinderGoalTempt m canScare
PathfinderGoalTempt b ()Z canContinueToUse
PathfinderGoalTempt g ()Z canScare
PathfinderGoalTempt c ()V start
PathfinderGoalTempt d ()V stop
PathfinderGoalTempt e ()V tick
PathfinderGoalTempt h ()Z isRunning
ReputationType a MAJOR_NEGATIVE
ReputationType b MINOR_NEGATIVE
ReputationType c MINOR_POSITIVE
ReputationType d MAJOR_POSITIVE
ReputationType e TRADING
ReputationType f id
ReputationType g weight
ReputationType h max
ReputationType i decayPerDay
ReputationType j decayPerTransfer
ReputationType k BY_ID
ReputationType l $VALUES
ReputationType values ()[LReputationType; values
ReputationType valueOf (Ljava/lang/String;)LReputationType; valueOf
MemoryModuleType F LAST_WOKEN
MemoryModuleType G LAST_WORKED_AT_POI
MemoryModuleType a DUMMY
MemoryModuleType b HOME
MemoryModuleType c JOB_SITE
MemoryModuleType d MEETING_POINT
MemoryModuleType e SECONDARY_JOB_SITE
MemoryModuleType f MOBS
MemoryModuleType g VISIBLE_MOBS
MemoryModuleType h VISIBLE_VILLAGER_BABIES
MemoryModuleType i NEAREST_PLAYERS
MemoryModuleType j NEAREST_VISIBLE_PLAYER
MemoryModuleType l WALK_TARGET
MemoryModuleType m LOOK_TARGET
MemoryModuleType p INTERACTION_TARGET
MemoryModuleType q BREED_TARGET
MemoryModuleType s PATH
MemoryModuleType t INTERACTABLE_DOORS
MemoryModuleType u OPENED_DOORS
MemoryModuleType v NEAREST_BED
MemoryModuleType w HURT_BY
MemoryModuleType x HURT_BY_ENTITY
MemoryModuleType z NEAREST_HOSTILE
MemoryModuleType A HIDING_PLACE
MemoryModuleType B HEARD_BELL_TIME
MemoryModuleType C CANT_REACH_WALK_TARGET_SINCE
MemoryModuleType D GOLEM_LAST_SEEN_TIME
MemoryModuleType E LAST_SLEPT
MemoryModuleType a ()Ljava/util/Optional; getSerializer
MemoryModuleType k NEAREST_VISIBLE_TARGETABLE_PLAYER
MemoryModuleType n ATTACK_TARGET
MemoryModuleType o ATTACK_COOLING_DOWN
MemoryModuleType r RIDE_TARGET
MemoryModuleType y AVOID_TARGET
MemoryModuleType H NEAREST_VISIBLE_WANTED_ITEM
MemoryModuleType I ANGRY_AT
MemoryModuleType J ADMIRING_ITEM
MemoryModuleType K ADMIRING_DISABLED
MemoryModuleType L HUNTED_RECENTLY
MemoryModuleType M CELEBRATE_LOCATION
MemoryModuleType N NEAREST_VISIBLE_WITHER_SKELETON
MemoryModuleType O NEAREST_VISIBLE_ADULT_HOGLIN
MemoryModuleType P NEAREST_VISIBLE_BABY_HOGLIN
MemoryModuleType Q NEAREST_VISIBLE_BABY_PIGLIN
MemoryModuleType R NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
MemoryModuleType S NEAREST_VISIBLE_ADULT_PIGLINS
MemoryModuleType T NEAREST_VISIBLE_ADULT_HOGLINS
MemoryModuleType U NEAREST_VISIBLE_ADULT_PIGLIN
MemoryModuleType V NEAREST_VISIBLE_ZOMBIFIED_PIGLIN
MemoryModuleType W VISIBLE_ADULT_PIGLIN_COUNT
MemoryModuleType X VISIBLE_ADULT_HOGLIN_COUNT
MemoryModuleType Y NEAREST_PLAYER_HOLDING_WANTED_ITEM
MemoryModuleType Z ATE_RECENTLY
MemoryModuleType aa NEAREST_REPELLENT
MemoryModuleType ab PACIFIED
MemoryModuleType ac deserializer
MemoryModuleType toString ()Ljava/lang/String; toString
MemoryStatus a VALUE_PRESENT
MemoryStatus b VALUE_ABSENT
MemoryStatus c REGISTERED
MemoryStatus d $VALUES
MemoryStatus values ()[LMemoryStatus; values
MemoryStatus valueOf (Ljava/lang/String;)LMemoryStatus; valueOf
VillageSiege$State a SIEGE_CAN_ACTIVATE
VillageSiege$State b SIEGE_TONIGHT
VillageSiege$State c SIEGE_DONE
VillageSiege$State d $VALUES
VillageSiege$State values ()[LVillageSiege$State; values
VillageSiege$State valueOf (Ljava/lang/String;)LVillageSiege$State; valueOf
VillagePlace$Occupancy a HAS_SPACE
VillagePlace$Occupancy b IS_OCCUPIED
VillagePlace$Occupancy c ANY
VillagePlace$Occupancy d test
VillagePlace$Occupancy e $VALUES
VillagePlace$Occupancy values ()[LVillagePlace$Occupancy; values
VillagePlace$Occupancy valueOf (Ljava/lang/String;)LVillagePlace$Occupancy; valueOf
EntityBat k ()Z isAsleep
EntityBat t (Z)V setAsleep
EntityBat b DATA_ID_FLAGS
EntityBat c BAT_RESTING_TARGETING
EntityBat d targetPosition
EntityBat w_ ()V defineSynchedData
EntityBat dt ()F getSoundVolume
EntityBat du ()F getVoicePitch
EntityBat H ()LSoundEffect; getAmbientSound
EntityBat e (LDamageSource;)LSoundEffect; getHurtSound
EntityBat dd ()LSoundEffect; getDeathSound
EntityBat aR ()Z isPushable
EntityBat C (LEntity;)V doPush
EntityBat dC ()V pushEntities
EntityBat cF ()V registerAttributes
EntityBat h ()V tick
EntityBat M ()V customServerAiStep
EntityBat ax ()Z isMovementNoisy
EntityBat b (FF)Z causeFallDamage
EntityBat bN ()Z isIgnoringBlockTriggers
EntityBat b (LNBTTagCompound;)V addAdditionalSaveData
EntityBat b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkBatSpawnRules
EntityBat m ()Z isHalloween
EntityBat b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityFish b FROM_BUCKET
EntityFish ex ()LSoundEffect; getSoundFlop
EntityFish ey ()Z isFromBucket
EntityFish t (Z)V setFromBucket
EntityFish b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityFish cF ()V registerAttributes
EntityFish J ()Z requiresCustomPersistence
EntityFish b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkFishSpawnRules
EntityFish h (D)Z removeWhenFarAway
EntityFish ee ()I getMaxSpawnClusterSize
EntityFish w_ ()V defineSynchedData
EntityFish b (LNBTTagCompound;)V addAdditionalSaveData
EntityFish o ()V registerGoals
EntityFish b (LWorld;)LNavigationAbstract; createNavigation
EntityFish e (LVec3D;)V travel
EntityFish l ()V aiStep
EntityFish b (LEntityHuman;LEnumHand;)Z mobInteract
EntityFish k (LItemStack;)V saveToBucketTag
EntityFish k ()LItemStack; getBucketItemStack
EntityFish m ()Z canRandomSwim
EntityFish aq ()LSoundEffect; getSwimSound
EntityAnimal bv loveTicks
EntityAnimal bw breedCause
EntityAnimal a (LDamageSource;F)Z damageEntity
EntityAnimal a (LEntityAnimal;)Z mate
EntityAnimal d (LEntityHuman;)I getExpValue
EntityAnimal eD ()LEntityPlayer; getBreedCause
EntityAnimal eE ()Z isInLove
EntityAnimal eF ()V resetLove
EntityAnimal s (I)V setLoveTicks
EntityAnimal M ()V customServerAiStep
EntityAnimal l ()V aiStep
EntityAnimal b (LNBTTagCompound;)V addAdditionalSaveData
EntityAnimal aX ()D getRidingHeight
EntityAnimal b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkAnimalSpawnRules
EntityAnimal B ()I getAmbientSoundInterval
EntityAnimal h (D)Z removeWhenFarAway
EntityAnimal k (LItemStack;)Z isFood
EntityAnimal b (LEntityHuman;LEnumHand;)Z mobInteract
EntityAnimal eC ()Z canFallInLove
EntityAnimal f (LEntityHuman;)V setInLove
EntityBee bB ticksSincePollination
EntityBee bC cannotEnterHiveTicks
EntityBee bD numCropsGrownSincePollination
EntityBee bG flowerPos
EntityBee bH hivePos
EntityBee bx hurtBy
EntityBee eH ()Z hasHivePos
EntityBee eI ()LBlockPosition; getHivePos
EntityBee eK ()Z hasNectar
EntityBee eL ()Z hasStung
EntityBee eO ()Z canPollinate
EntityBee eS ()I getAnger
EntityBee eT ()I getNumCropsGrownSincePollination
EntityBee ex ()LBlockPosition; getFlowerPos
EntityBee ey ()Z hasFlowerPos
EntityBee eG ()Z isAngry
EntityBee g (LBlockPosition;)V setFlowerPos
EntityBee t (Z)V setHasNectar
EntityBee u (Z)V setHasStung
EntityBee t (I)V setCannotEnterHiveTicks
EntityBee u (I)V setAnger
EntityBee bv DATA_FLAGS_ID
EntityBee bw ANGER_TIME
EntityBee by rollAmount
EntityBee bz rollAmountO
EntityBee bA timeSinceSting
EntityBee bE remainingCooldownBeforeLocatingNewHive
EntityBee bF remainingCooldownBeforeLocatingNewFlower
EntityBee bI beePollinateGoal
EntityBee bJ goToHiveGoal
EntityBee bK goToKnownFlowerGoal
EntityBee bL underWaterTicks
EntityBee w_ ()V defineSynchedData
EntityBee o ()V registerGoals
EntityBee b (LNBTTagCompound;)V addAdditionalSaveData
EntityBee B (LEntity;)Z doHurtTarget
EntityBee h ()V tick
EntityBee h (LBlockPosition;)V pathfindRandomlyTowards
EntityBee ez ()I getTravellingTicks
EntityBee eA ()Ljava/util/List; getBlacklistedHives
EntityBee eP ()Z wantsToEnterHive
EntityBee u (F)F getRollAmount
EntityBee eQ ()V updateRollAmount
EntityBee M ()V customServerAiStep
EntityBee eB ()V resetTicksWithoutNectarSinceExitingHive
EntityBee eR ()Z isHiveNearFire
EntityBee i (LBlockPosition;)Z doesHiveHaveSpace
EntityBee eJ ()LPathfinderGoalSelector; getGoalSelector
EntityBee L ()V sendDebugPackets
EntityBee eU ()V resetNumCropsGrownSincePollination
EntityBee eV ()V incrementNumCropsGrownSincePollination
EntityBee l ()V aiStep
EntityBee eW ()Z isHiveValid
EntityBee eX ()Z isRolling
EntityBee v (Z)V setRolling
EntityBee j (LBlockPosition;)Z isTooFarAway
EntityBee d (IZ)V setFlag
EntityBee v (I)Z getFlag
EntityBee cF ()V registerAttributes
EntityBee b (LWorld;)LNavigationAbstract; createNavigation
EntityBee k (LItemStack;)Z isFood
EntityBee k (LBlockPosition;)Z isFlowerValid
EntityBee H ()LSoundEffect; getAmbientSound
EntityBee e (LDamageSource;)LSoundEffect; getHurtSound
EntityBee dd ()LSoundEffect; getDeathSound
EntityBee dt ()F getSoundVolume
EntityBee b (LEntityAgeable;)LEntityBee; getBreedOffspring
EntityBee b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityBee b (FF)Z causeFallDamage
EntityBee au ()Z makeFlySound
EntityBee eM ()Z isFlying
EntityBee eN ()V dropOffNectar
EntityBee dp ()LEnumMonsterType; getMobType
EntityBee b (LTag;)V jumpInLiquid
EntityBee b (LBlockPosition;I)Z closerThan
EntityBee b (LEntityBee;)LNavigationAbstract; access$900
EntityBee c (LEntityBee;)Ljava/util/Random; access$1000
EntityBee d (LEntityBee;)LNavigationAbstract; access$1100
EntityBee e (LEntityBee;)LNavigationAbstract; access$1200
EntityBee f (LEntityBee;)LNavigationAbstract; access$1300
EntityBee g (LEntityBee;)Z access$1400
EntityBee h (LEntityBee;)LBlockPosition; access$1500
EntityBee i (LEntityBee;)Z access$1800
EntityBee j (LEntityBee;)LNavigationAbstract; access$1900
EntityBee k (LEntityBee;)LNavigationAbstract; access$2000
EntityBee l (LEntityBee;)LNavigationAbstract; access$2100
EntityBee m (LEntityBee;)LNavigationAbstract; access$2200
EntityBee n (LEntityBee;)LNavigationAbstract; access$2300
EntityBee b (LEntityBee;LBlockPosition;)V access$2500
EntityBee o (LEntityBee;)LNavigationAbstract; access$2600
EntityBee p (LEntityBee;)LNavigationAbstract; access$2700
EntityBee q (LEntityBee;)LNavigationAbstract; access$2800
EntityBee r (LEntityBee;)LNavigationAbstract; access$2900
EntityBee c (LEntityBee;LBlockPosition;)LBlockPosition; access$1502
EntityBee s (LEntityBee;)LNavigationAbstract; access$3100
EntityBee t (LEntityBee;)LBlockPosition; access$3200
EntityBee d (LEntityBee;LBlockPosition;)Z access$3300
EntityBee u (LEntityBee;)LNavigationAbstract; access$3400
EntityBee v (LEntityBee;)LNavigationAbstract; access$3500
EntityBee e (LEntityBee;LBlockPosition;)LBlockPosition; access$3202
EntityBee w (LEntityBee;)LNavigationAbstract; access$3600
EntityBee x (LEntityBee;)I access$3700
EntityBee y (LEntityBee;)I access$3800
EntityBee z (LEntityBee;)Ljava/util/Random; access$3900
EntityBee A (LEntityBee;)LNavigationAbstract; access$4000
EntityBee B (LEntityBee;)Ljava/util/Random; access$4100
EntityBee C (LEntityBee;)LNavigationAbstract; access$4300
EntityBee b (LEntityBee;I)I access$3802
EntityBee D (LEntityBee;)Ljava/util/Random; access$4400
EntityBee E (LEntityBee;)LNavigationAbstract; access$4500
EntityBee F (LEntityBee;)Ljava/util/Random; access$4600
EntityBee G (LEntityBee;)Ljava/util/Random; access$4700
EntityBee H (LEntityBee;)I access$3000
EntityBee I (LEntityBee;)LEntityBee$BeeGoToHiveGoal; access$4800
EntityBee f (LEntityBee;LBlockPosition;)Z access$5100
EntityBee J (LEntityBee;)I access$5200
EntityBee K (LEntityBee;)Ljava/util/Random; access$5300
EntityBee L (LEntityBee;)Ljava/util/Random; access$5400
EntityBee M (LEntityBee;)V access$5500
EntityCat a (LEnumColor;)V setCollarColor
EntityCat eH ()I getCatType
EntityCat eK ()LEnumColor; getCollarColor
EntityCat t (I)V setCatType
EntityCat by TEMPT_INGREDIENT
EntityCat bz DATA_TYPE_ID
EntityCat bA IS_LYING
EntityCat bB RELAX_STATE_ONE
EntityCat bC DATA_COLLAR_COLOR
EntityCat bx TEXTURE_BY_TYPE
EntityCat bD avoidPlayersGoal
EntityCat bE temptGoal
EntityCat bF lieDownAmount
EntityCat bG lieDownAmountO
EntityCat bH lieDownAmountTail
EntityCat bI lieDownAmountOTail
EntityCat bJ relaxStateOneAmount
EntityCat bK relaxStateOneAmountO
EntityCat eG ()LMinecraftKey; getResourceLocation
EntityCat o ()V registerGoals
EntityCat x (Z)V setLying
EntityCat eI ()Z isLying
EntityCat y (Z)V setRelaxStateOne
EntityCat eJ ()Z isRelaxStateOne
EntityCat w_ ()V defineSynchedData
EntityCat b (LNBTTagCompound;)V addAdditionalSaveData
EntityCat M ()V customServerAiStep
EntityCat H ()LSoundEffect; getAmbientSound
EntityCat B ()I getAmbientSoundInterval
EntityCat eL ()V hiss
EntityCat e (LDamageSource;)LSoundEffect; getHurtSound
EntityCat dd ()LSoundEffect; getDeathSound
EntityCat cF ()V registerAttributes
EntityCat b (FF)Z causeFallDamage
EntityCat eM ()F getAttackDamage
EntityCat B (LEntity;)Z doHurtTarget
EntityCat h ()V tick
EntityCat eN ()V handleLieDown
EntityCat eO ()V updateLieDownAmount
EntityCat eP ()V updateRelaxStateOneAmount
EntityCat u (F)F getLieDownAmount
EntityCat v (F)F getLieDownAmountTail
EntityCat w (F)F getRelaxStateOneAmount
EntityCat b (LEntityAgeable;)LEntityCat; getBreedOffspring
EntityCat b (LEntityHuman;LEnumHand;)Z mobInteract
EntityCat k (LItemStack;)Z isFood
EntityCat b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityCat h (D)Z removeWhenFarAway
EntityCat ey ()V reassessTameGoals
EntityCat$PathfinderGoalTemptChance c chosenTarget
EntityCat$PathfinderGoalTemptChance d cat
EntityCat$PathfinderGoalTemptChance e ()V tick
EntityCat$PathfinderGoalTemptChance g ()Z canScare
EntityChicken bA eggLayTime
EntityChicken ex ()Z isChickenJockey
EntityChicken bC FOOD_ITEMS
EntityChicken bv flap
EntityChicken bw flapSpeed
EntityChicken bx oFlapSpeed
EntityChicken by oFlap
EntityChicken bz flapping
EntityChicken bB isChickenJockey
EntityChicken o ()V registerGoals
EntityChicken b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityChicken cF ()V registerAttributes
EntityChicken l ()V aiStep
EntityChicken b (FF)Z causeFallDamage
EntityChicken H ()LSoundEffect; getAmbientSound
EntityChicken e (LDamageSource;)LSoundEffect; getHurtSound
EntityChicken dd ()LSoundEffect; getDeathSound
EntityChicken b (LEntityAgeable;)LEntityChicken; getBreedOffspring
EntityChicken k (LItemStack;)Z isFood
EntityChicken d (LEntityHuman;)I getExperienceReward
EntityChicken b (LNBTTagCompound;)V addAdditionalSaveData
EntityChicken h (D)Z removeWhenFarAway
EntityChicken k (LEntity;)V positionRider
EntityChicken t (Z)V setChickenJockey
EntityFox bx FIRST_TRUSTED_PLAYER
EntityFox by SECOND_TRUSTED_PLAYER
EntityFox a (LEntityFox$Type;)V setFoxType
EntityFox bu ()Z isCrouching
EntityFox eK ()V initializePathFinderGoals
EntityFox ex ()LEntityFox$Type; getFoxType
EntityFox ey ()Z isSitting
EntityFox t (Z)V setSitting
EntityFox v (Z)V setCrouching
EntityFox z (Z)V setSleeping
EntityFox bv DATA_TYPE_ID
EntityFox bw DATA_FLAGS_ID
EntityFox bz ALLOWED_ITEMS
EntityFox bA TRUSTED_TARGET_SELECTOR
EntityFox bB STALKABLE_PREY
EntityFox bC AVOID_PLAYERS
EntityFox bD landTargetGoal
EntityFox bE turtleEggTargetGoal
EntityFox bF fishTargetGoal
EntityFox bG interestedAngle
EntityFox bH interestedAngleO
EntityFox bI crouchAmount
EntityFox bJ crouchAmountO
EntityFox bK ticksSinceEaten
EntityFox w_ ()V defineSynchedData
EntityFox o ()V registerGoals
EntityFox d (LItemStack;)LSoundEffect; getEatingSound
EntityFox l ()V aiStep
EntityFox dv ()Z isImmobile
EntityFox l (LItemStack;)Z canEat
EntityFox cF ()V registerAttributes
EntityFox b (LEntityAgeable;)LEntityFox; getBreedOffspring
EntityFox b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityFox eL ()Ljava/util/List; getTrustedUUIDs
EntityFox b (Ljava/util/UUID;)V addTrustedUUID
EntityFox b (LNBTTagCompound;)V addAdditionalSaveData
EntityFox ez ()Z isFaceplanted
EntityFox x (Z)V setFaceplanted
EntityFox eM ()Z isDefending
EntityFox y (Z)V setDefending
EntityFox dZ ()Z isSleeping
EntityFox d (IZ)V setFlag
EntityFox t (I)Z getFlag
EntityFox e (LItemStack;)Z canTakeItem
EntityFox h (LItemStack;)Z canHoldItem
EntityFox m (LItemStack;)V spitOutItem
EntityFox n (LItemStack;)V dropItemStack
EntityFox h ()V tick
EntityFox k (LItemStack;)Z isFood
EntityFox eA ()Z isPouncing
EntityFox u (Z)V setIsPouncing
EntityFox eB ()Z isJumping
EntityFox eG ()Z isFullyCrouched
EntityFox w (Z)V setIsInterested
EntityFox eH ()Z isInterested
EntityFox u (F)F getHeadRollAngle
EntityFox v (F)F getCrouchAmount
EntityFox i (LEntityLiving;)V setTarget
EntityFox e (FF)I calculateFallDamage
EntityFox eN ()V wakeUp
EntityFox eO ()V clearStates
EntityFox eP ()Z canMove
EntityFox D ()V playAmbientSound
EntityFox H ()LSoundEffect; getAmbientSound
EntityFox e (LDamageSource;)LSoundEffect; getHurtSound
EntityFox dd ()LSoundEffect; getDeathSound
EntityFox c (Ljava/util/UUID;)Z trusts
EntityFox d (LDamageSource;)V dropAllDeathLoot
EntityFox j (LEntityLiving;)Z lambda$registerGoals$9
EntityFox k (LEntityLiving;)Z lambda$registerGoals$8
EntityFox l (LEntityLiving;)Z lambda$registerGoals$7
EntityFox m (LEntityLiving;)Z lambda$registerGoals$6
EntityFox n (LEntityLiving;)Z lambda$registerGoals$5
EntityFox o (LEntityLiving;)Z lambda$registerGoals$4
EntityFox b (LEntity;)Z lambda$static$2
EntityFox c (LEntity;)Z lambda$static$1
EntityFox b (LEntityItem;)Z lambda$static$0
EntityFox eI ()Ljava/util/function/Predicate; access$100
EntityFox eJ ()Ljava/util/function/Predicate; access$200
EntityFox b (LEntityFox;)Z access$300
EntityFox c (LEntityFox;)V access$500
EntityFox d (LEntityFox;)Ljava/util/List; access$700
EntityFox b (LEntityFox;Z)V access$800
EntityFox e (LEntityFox;)V access$900
EntityFox b (LEntityFox;Ljava/util/UUID;)Z access$1000
EntityFox f (LEntityFox;)Ljava/util/Random; access$1200
EntityFox g (LEntityFox;)Ljava/util/Random; access$1300
EntityFox c (LEntityFox;Z)V access$1400
EntityFox h (LEntityFox;)Ljava/util/Random; access$1500
EntityFox i (LEntityFox;)Z access$1600
EntityFox j (LEntityFox;)Z access$1700
EntityFox b (LEntityFox;F)F access$1902
EntityFox k (LEntityFox;)Z access$2000
EntityFox$Type a RED
EntityFox$Type b SNOW
EntityFox$Type c BY_ID
EntityFox$Type d BY_NAME
EntityFox$Type e id
EntityFox$Type f name
EntityFox$Type g biomes
EntityFox$Type h $VALUES
EntityFox$Type values ()[LEntityFox$Type; values
EntityFox$Type valueOf (Ljava/lang/String;)LEntityFox$Type; valueOf
EntityFox$Type b ()Ljava/util/List; getBiomes
EntityFox$Type c ()I getId
EntityFox$Type b (I)[LEntityFox$Type; lambda$static$0
EntityIronGolem ey ()Z isPlayerCreated
EntityIronGolem u (Z)V setPlayerCreated
EntityIronGolem b DATA_FLAGS_ID
EntityIronGolem c attackAnimationTick
EntityIronGolem d offerFlowerTick
EntityIronGolem o ()V registerGoals
EntityIronGolem w_ ()V defineSynchedData
EntityIronGolem cF ()V registerAttributes
EntityIronGolem l (I)I decreaseAirSupply
EntityIronGolem C (LEntity;)V doPush
EntityIronGolem l ()V aiStep
EntityIronGolem b (LNBTTagCompound;)V addAdditionalSaveData
EntityIronGolem ez ()F getAttackDamage
EntityIronGolem B (LEntity;)Z doHurtTarget
EntityIronGolem k ()LEntityIronGolem$CrackLevel; getCrackiness
EntityIronGolem m ()I getAttackAnimationTick
EntityIronGolem t (Z)V offerFlower
EntityIronGolem e (LDamageSource;)LSoundEffect; getHurtSound
EntityIronGolem dd ()LSoundEffect; getDeathSound
EntityIronGolem b (LEntityHuman;LEnumHand;)Z mobInteract
EntityIronGolem ex ()I getOfferFlowerTick
EntityIronGolem j (LEntityLiving;)Z lambda$registerGoals$1
EntityIronGolem eA ()Z lambda$registerGoals$0
EntityIronGolem$CrackLevel a NONE
EntityIronGolem$CrackLevel b LOW
EntityIronGolem$CrackLevel c MEDIUM
EntityIronGolem$CrackLevel d HIGH
EntityIronGolem$CrackLevel e BY_DAMAGE
EntityIronGolem$CrackLevel f fraction
EntityIronGolem$CrackLevel g $VALUES
EntityIronGolem$CrackLevel values ()[LEntityIronGolem$CrackLevel; values
EntityIronGolem$CrackLevel valueOf (Ljava/lang/String;)LEntityIronGolem$CrackLevel; valueOf
EntityMushroomCow a (LEntityMushroomCow$Type;)V setVariant
EntityMushroomCow ex ()LEntityMushroomCow$Type; getVariant
EntityMushroomCow bv DATA_TYPE
EntityMushroomCow bw effect
EntityMushroomCow bx effectDuration
EntityMushroomCow by lastLightningBoltUUID
EntityMushroomCow c (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkMushroomSpawnRules
EntityMushroomCow w_ ()V defineSynchedData
EntityMushroomCow b (LEntityHuman;LEnumHand;)Z mobInteract
EntityMushroomCow b (LNBTTagCompound;)V addAdditionalSaveData
EntityMushroomCow l (LItemStack;)Lorg/apache/commons/lang3/tuple/Pair; getEffectFromItemStack
EntityMushroomCow c (LEntityAgeable;)LEntityMushroomCow; getBreedOffspring
EntityMushroomCow b (LEntityAgeable;)LEntityCow; getBreedOffspring
EntityMushroomCow$Type a RED
EntityMushroomCow$Type b BROWN
EntityMushroomCow$Type c type
EntityMushroomCow$Type d blockState
EntityMushroomCow$Type e $VALUES
EntityMushroomCow$Type values ()[LEntityMushroomCow$Type; values
EntityMushroomCow$Type valueOf (Ljava/lang/String;)LEntityMushroomCow$Type; valueOf
EntityMushroomCow$Type b (Ljava/lang/String;)LEntityMushroomCow$Type; byType
EntityMushroomCow$Type b (LEntityMushroomCow$Type;)LIBlockData; access$100
EntityOcelot ey ()Z isTrusting
EntityOcelot t (Z)V setTrusting
EntityOcelot bv TEMPT_INGREDIENT
EntityOcelot bw DATA_TRUSTING
EntityOcelot bx ocelotAvoidPlayersGoal
EntityOcelot by temptGoal
EntityOcelot b (LNBTTagCompound;)V addAdditionalSaveData
EntityOcelot w_ ()V defineSynchedData
EntityOcelot o ()V registerGoals
EntityOcelot M ()V customServerAiStep
EntityOcelot h (D)Z removeWhenFarAway
EntityOcelot cF ()V registerAttributes
EntityOcelot b (FF)Z causeFallDamage
EntityOcelot H ()LSoundEffect; getAmbientSound
EntityOcelot B ()I getAmbientSoundInterval
EntityOcelot e (LDamageSource;)LSoundEffect; getHurtSound
EntityOcelot dd ()LSoundEffect; getDeathSound
EntityOcelot ez ()F getAttackDamage
EntityOcelot B (LEntity;)Z doHurtTarget
EntityOcelot b (LEntityHuman;LEnumHand;)Z mobInteract
EntityOcelot u (Z)V spawnTrustingParticles
EntityOcelot ex ()V reassessTrustingGoals
EntityOcelot b (LEntityAgeable;)LEntityOcelot; getBreedOffspring
EntityOcelot k (LItemStack;)Z isFood
EntityOcelot c (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkOcelotSpawnRules
EntityPanda bN PICKUP_PREDICATE
EntityPanda a (LEntityPanda$Gene;)V setMainGene
EntityPanda b (LEntityPanda$Gene;)V setHiddenGene
EntityPanda eH ()LEntityPanda$Gene; getMainGene
EntityPanda eI ()LEntityPanda$Gene; getHiddenGene
EntityPanda bw UNHAPPY_COUNTER
EntityPanda bx SNEEZE_COUNTER
EntityPanda by EAT_COUNTER
EntityPanda bz MAIN_GENE_ID
EntityPanda bA HIDDEN_GENE_ID
EntityPanda bB DATA_ID_FLAGS
EntityPanda bC BREED_TARGETING
EntityPanda bD gotBamboo
EntityPanda bE didBite
EntityPanda bv rollCounter
EntityPanda bF rollDelta
EntityPanda bG sitAmount
EntityPanda bH sitAmountO
EntityPanda bI onBackAmount
EntityPanda bJ onBackAmountO
EntityPanda bK rollAmount
EntityPanda bL rollAmountO
EntityPanda bM lookAtPlayerGoal
EntityPanda e (LItemStack;)Z canTakeItem
EntityPanda ex ()I getUnhappyCounter
EntityPanda t (I)V setUnhappyCounter
EntityPanda ey ()Z isSneezing
EntityPanda ez ()Z isSitting
EntityPanda t (Z)V sit
EntityPanda eA ()Z isOnBack
EntityPanda u (Z)V setOnBack
EntityPanda eB ()Z isEating
EntityPanda v (Z)V eat
EntityPanda eV ()I getEatCounter
EntityPanda v (I)V setEatCounter
EntityPanda w (Z)V sneeze
EntityPanda eG ()I getSneezeCounter
EntityPanda u (I)V setSneezeCounter
EntityPanda eJ ()Z isRolling
EntityPanda x (Z)V roll
EntityPanda w_ ()V defineSynchedData
EntityPanda w (I)Z getFlag
EntityPanda d (IZ)V setFlag
EntityPanda b (LNBTTagCompound;)V addAdditionalSaveData
EntityPanda o ()V registerGoals
EntityPanda cF ()V registerAttributes
EntityPanda eK ()LEntityPanda$Gene; getVariant
EntityPanda eL ()Z isLazy
EntityPanda eM ()Z isWorried
EntityPanda eN ()Z isPlayful
EntityPanda eO ()Z isBrown
EntityPanda eP ()Z isWeak
EntityPanda et ()Z isAggressive
EntityPanda B (LEntity;)Z doHurtTarget
EntityPanda h ()V tick
EntityPanda eQ ()Z isScared
EntityPanda eW ()V handleEating
EntityPanda eX ()V addEatingParticles
EntityPanda eY ()V updateSitAmount
EntityPanda eZ ()V updateOnBackAnimation
EntityPanda fa ()V updateRollAmount
EntityPanda u (F)F getSitAmount
EntityPanda v (F)F getLieOnBackAmount
EntityPanda w (F)F getRollAmount
EntityPanda fb ()V handleRoll
EntityPanda fc ()V afterSneeze
EntityPanda fd ()LEntityPanda$Gene; getOneOfGenesRandomly
EntityPanda eR ()V setAttributes
EntityPanda fe ()V tryToSit
EntityPanda b (LEntityHuman;LEnumHand;)Z mobInteract
EntityPanda H ()LSoundEffect; getAmbientSound
EntityPanda k (LItemStack;)Z isFood
EntityPanda l (LItemStack;)Z isFoodOrCake
EntityPanda dd ()LSoundEffect; getDeathSound
EntityPanda e (LDamageSource;)LSoundEffect; getHurtSound
EntityPanda eS ()Z canPerformAction
EntityPanda b (LEntityItem;)Z lambda$static$0
EntityPanda b (LEntityPanda;)Ljava/util/Random; access$200
EntityPanda c (LEntityPanda;)Ljava/util/Random; access$300
EntityPanda d (LEntityPanda;)Ljava/util/Random; access$400
EntityPanda e (LEntityPanda;)Ljava/util/Random; access$500
EntityPanda eT ()LPathfinderTargetCondition; access$600
EntityPanda f (LEntityPanda;)LEntityPanda$PandaLookAtPlayerGoal; access$700
EntityPanda eU ()Ljava/util/function/Predicate; access$800
EntityPanda g (LEntityPanda;)Ljava/util/Random; access$900
EntityPanda h (LEntityPanda;)Ljava/util/Random; access$1000
EntityPanda i (LEntityPanda;)V access$1100
EntityPanda j (LEntityPanda;)Ljava/util/Random; access$1200
EntityPanda k (LEntityPanda;)Ljava/util/Random; access$1300
EntityPanda l (LEntityPanda;)Ljava/util/Random; access$1400
EntityPanda m (LEntityPanda;)Ljava/util/Random; access$1500
EntityPanda n (LEntityPanda;)Ljava/util/Random; access$1600
EntityPanda o (LEntityPanda;)Z access$1700
EntityPanda p (LEntityPanda;)Z access$1800
EntityPanda$Gene a NORMAL
EntityPanda$Gene b LAZY
EntityPanda$Gene c WORRIED
EntityPanda$Gene d PLAYFUL
EntityPanda$Gene e BROWN
EntityPanda$Gene f WEAK
EntityPanda$Gene g AGGRESSIVE
EntityPanda$Gene c ()Z isRecessive
EntityPanda$Gene h BY_ID
EntityPanda$Gene i id
EntityPanda$Gene j name
EntityPanda$Gene k isRecessive
EntityPanda$Gene l $VALUES
EntityPanda$Gene values ()[LEntityPanda$Gene; values
EntityPanda$Gene valueOf (Ljava/lang/String;)LEntityPanda$Gene; valueOf
EntityPanda$Gene b ()Ljava/lang/String; getName
EntityPanda$Gene b (LEntityPanda$Gene;LEntityPanda$Gene;)LEntityPanda$Gene; getVariantFromGenes
EntityPanda$Gene b (I)[LEntityPanda$Gene; lambda$static$0
EntityParrot eH ()I getVariant
EntityParrot t (I)V setVariant
EntityParrot bB DATA_VARIANT_ID
EntityParrot bC NOT_PARROT_PREDICATE
EntityParrot bD POISONOUS_FOOD
EntityParrot bE TAME_FOOD
EntityParrot bF MOB_SOUND_MAP
EntityParrot bx flap
EntityParrot by flapSpeed
EntityParrot bz oFlapSpeed
EntityParrot bA oFlap
EntityParrot bG flapping
EntityParrot bH partyParrot
EntityParrot bI jukebox
EntityParrot x_ ()Z isBaby
EntityParrot o ()V registerGoals
EntityParrot cF ()V registerAttributes
EntityParrot b (LWorld;)LNavigationAbstract; createNavigation
EntityParrot b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityParrot l ()V aiStep
EntityParrot eG ()Z isPartyParrot
EntityParrot eK ()V calculateFlapping
EntityParrot b (LEntityHuman;LEnumHand;)Z mobInteract
EntityParrot k (LItemStack;)Z isFood
EntityParrot c (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkParrotSpawnRules
EntityParrot b (FF)Z causeFallDamage
EntityParrot B (LEntity;)Z doHurtTarget
EntityParrot H ()LSoundEffect; getAmbientSound
EntityParrot b (LEntityTypes;)LSoundEffect; getImitatedSound
EntityParrot e (LDamageSource;)LSoundEffect; getHurtSound
EntityParrot dd ()LSoundEffect; getDeathSound
EntityParrot e (F)F playFlySound
EntityParrot au ()Z makeFlySound
EntityParrot du ()F getVoicePitch
EntityParrot cp ()LSoundCategory; getSoundSource
EntityParrot aR ()Z isPushable
EntityParrot C (LEntity;)V doPush
EntityParrot w_ ()V defineSynchedData
EntityParrot b (LNBTTagCompound;)V addAdditionalSaveData
EntityParrot eM ()Z isFlying
EntityParrot eI ()Ljava/util/Map; access$000
EntityPig ex ()Z hasSaddle
EntityPig t (Z)V setSaddle
EntityPig bv DATA_SADDLE_ID
EntityPig bw DATA_BOOST_TIME
EntityPig bx FOOD_ITEMS
EntityPig by boosting
EntityPig bz boostTime
EntityPig bA boostTimeTotal
EntityPig o ()V registerGoals
EntityPig cF ()V registerAttributes
EntityPig ch ()LEntity; getControllingPassenger
EntityPig ef ()Z canBeControlledByRider
EntityPig w_ ()V defineSynchedData
EntityPig b (LNBTTagCompound;)V addAdditionalSaveData
EntityPig H ()LSoundEffect; getAmbientSound
EntityPig e (LDamageSource;)LSoundEffect; getHurtSound
EntityPig dd ()LSoundEffect; getDeathSound
EntityPig b (LEntityHuman;LEnumHand;)Z mobInteract
EntityPig da ()V dropEquipment
EntityPig e (LVec3D;)V travel
EntityPig ey ()Z boost
EntityPig b (LEntityAgeable;)LEntityPig; getBreedOffspring
EntityPig k (LItemStack;)Z isFood
EntityPufferFish b (I)V setPuffState
EntityPufferFish ey ()I getPuffState
EntityPufferFish b PUFF_STATE
EntityPufferFish c inflateCounter
EntityPufferFish d deflateTimer
EntityPufferFish bv NO_SPECTATORS_AND_NO_WATER_MOB
EntityPufferFish w_ ()V defineSynchedData
EntityPufferFish b (LNBTTagCompound;)V addAdditionalSaveData
EntityPufferFish k ()LItemStack; getBucketItemStack
EntityPufferFish o ()V registerGoals
EntityPufferFish h ()V tick
EntityPufferFish l ()V aiStep
EntityPufferFish b (LEntityHuman;)V playerTouch
EntityPufferFish H ()LSoundEffect; getAmbientSound
EntityPufferFish dd ()LSoundEffect; getDeathSound
EntityPufferFish e (LDamageSource;)LSoundEffect; getHurtSound
EntityPufferFish ex ()LSoundEffect; getFlopSound
EntityPufferFish s (I)F getScale
EntityPufferFish j (LEntityLiving;)Z lambda$static$0
EntityPufferFish ez ()Ljava/util/function/Predicate; access$000
EntityPufferFish b (LEntityPufferFish;I)I access$202
EntityRabbit ey ()LSoundEffect; getSoundJump
EntityRabbit ez ()I getRabbitType
EntityRabbit t (I)V setRabbitType
EntityRabbit bv DATA_TYPE_ID
EntityRabbit bw KILLER_BUNNY
EntityRabbit bx jumpTicks
EntityRabbit by jumpDuration
EntityRabbit bz wasOnGround
EntityRabbit bA jumpDelayTicks
EntityRabbit bB moreCarrotTicks
EntityRabbit o ()V registerGoals
EntityRabbit dw ()F getJumpPower
EntityRabbit dx ()V jumpFromGround
EntityRabbit u (F)F getJumpCompletion
EntityRabbit i (D)V setSpeedModifier
EntityRabbit o (Z)V setJumping
EntityRabbit ex ()V startJumping
EntityRabbit w_ ()V defineSynchedData
EntityRabbit M ()V customServerAiStep
EntityRabbit aK ()V updateSprintingState
EntityRabbit b (DD)V facePoint
EntityRabbit eA ()V enableJumpControl
EntityRabbit eB ()V disableJumpControl
EntityRabbit eG ()V setLandingDelay
EntityRabbit eH ()V checkLandingDelay
EntityRabbit l ()V aiStep
EntityRabbit cF ()V registerAttributes
EntityRabbit b (LNBTTagCompound;)V addAdditionalSaveData
EntityRabbit H ()LSoundEffect; getAmbientSound
EntityRabbit e (LDamageSource;)LSoundEffect; getHurtSound
EntityRabbit dd ()LSoundEffect; getDeathSound
EntityRabbit B (LEntity;)Z doHurtTarget
EntityRabbit cp ()LSoundCategory; getSoundSource
EntityRabbit b (LItem;)Z isTemptingItem
EntityRabbit b (LEntityAgeable;)LEntityRabbit; getBreedOffspring
EntityRabbit k (LItemStack;)Z isFood
EntityRabbit c (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkRabbitSpawnRules
EntityRabbit eI ()Z wantsMoreFood
EntityRabbit b (LEntityRabbit;)Z access$100
EntityRabbit c (LEntityRabbit;)LControllerJump; access$200
EntityRabbit d (LEntityRabbit;)Z access$300
EntityRabbit$PathfinderGoalEatCarrots g entity
EntityRabbit$PathfinderGoalEatCarrots h wantsToRaid
EntityRabbit$PathfinderGoalEatCarrots i canRaid
EntityRabbit$PathfinderGoalEatCarrots b ()Z canContinueToUse
EntityRabbit$PathfinderGoalEatCarrots e ()V tick
EntitySheep b (LEnumColor;)V setColor
EntitySheep ex ()V shear
EntitySheep ey ()LEnumColor; getColor
EntitySheep ez ()Z isSheared
EntitySheep t (Z)V setSheared
EntitySheep bv DATA_WOOL_ID
EntitySheep bw ITEM_BY_DYE
EntitySheep bx COLORARRAY_BY_COLOR
EntitySheep by eatAnimationTick
EntitySheep bz eatBlockGoal
EntitySheep c (LEnumColor;)[F createSheepColor
EntitySheep o ()V registerGoals
EntitySheep M ()V customServerAiStep
EntitySheep l ()V aiStep
EntitySheep cF ()V registerAttributes
EntitySheep w_ ()V defineSynchedData
EntitySheep I ()LMinecraftKey; getDefaultLootTable
EntitySheep u (F)F getHeadEatPositionScale
EntitySheep v (F)F getHeadEatAngleScale
EntitySheep b (LEntityHuman;LEnumHand;)Z mobInteract
EntitySheep b (LNBTTagCompound;)V addAdditionalSaveData
EntitySheep H ()LSoundEffect; getAmbientSound
EntitySheep e (LDamageSource;)LSoundEffect; getHurtSound
EntitySheep dd ()LSoundEffect; getDeathSound
EntitySheep b (LEntityAgeable;)LEntitySheep; getBreedOffspring
EntitySheep A ()V ate
EntitySheep b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntitySheep b (LEnumColor;LEnumColor;)LEnumColor; lambda$getOffspringColor$4
EntitySheep d (LEnumColor;)LEnumColor; lambda$static$1
EntitySnowman k ()Z hasPumpkin
EntitySnowman t (Z)V setHasPumpkin
EntitySnowman b DATA_PUMPKIN_ID
EntitySnowman o ()V registerGoals
EntitySnowman cF ()V registerAttributes
EntitySnowman w_ ()V defineSynchedData
EntitySnowman b (LNBTTagCompound;)V addAdditionalSaveData
EntitySnowman l ()V aiStep
EntitySnowman b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntitySnowman b (LEntityHuman;LEnumHand;)Z mobInteract
EntitySnowman H ()LSoundEffect; getAmbientSound
EntitySnowman e (LDamageSource;)LSoundEffect; getHurtSound
EntitySnowman dd ()LSoundEffect; getDeathSound
EntitySnowman j (LEntityLiving;)Z lambda$registerGoals$0
EntityTropicalFish eF ()I getVariant
EntityTropicalFish v (I)V setVariant
EntityTropicalFish c DATA_ID_TYPE_VARIANT
EntityTropicalFish d BASE_TEXTURE_LOCATIONS
EntityTropicalFish bv PATTERN_A_TEXTURE_LOCATIONS
EntityTropicalFish bw PATTERN_B_TEXTURE_LOCATIONS
EntityTropicalFish b COMMON_VARIANTS
EntityTropicalFish bx isSchool
EntityTropicalFish b (I)Ljava/lang/String; getPredefinedName
EntityTropicalFish s (I)LEnumColor; getBaseColor
EntityTropicalFish t (I)LEnumColor; getPatternColor
EntityTropicalFish u (I)Ljava/lang/String; getFishTypeName
EntityTropicalFish w_ ()V defineSynchedData
EntityTropicalFish b (LNBTTagCompound;)V addAdditionalSaveData
EntityTropicalFish c (I)Z isMaxGroupSizeReached
EntityTropicalFish k (LItemStack;)V saveToBucketTag
EntityTropicalFish k ()LItemStack; getBucketItemStack
EntityTropicalFish H ()LSoundEffect; getAmbientSound
EntityTropicalFish dd ()LSoundEffect; getDeathSound
EntityTropicalFish e (LDamageSource;)LSoundEffect; getHurtSound
EntityTropicalFish ex ()LSoundEffect; getFlopSound
EntityTropicalFish x (I)I getBaseColorIdx
EntityTropicalFish eG ()[F getBaseColor
EntityTropicalFish y (I)I getPatternColorIdx
EntityTropicalFish eH ()[F getPatternColor
EntityTropicalFish w (I)I getBaseVariant
EntityTropicalFish eI ()I getBaseVariant
EntityTropicalFish z (I)I getPatternVariant
EntityTropicalFish eJ ()LMinecraftKey; getPatternTextureLocation
EntityTropicalFish eK ()LMinecraftKey; getBaseTextureLocation
EntityTropicalFish$Variant a KOB
EntityTropicalFish$Variant b SUNSTREAK
EntityTropicalFish$Variant c SNOOPER
EntityTropicalFish$Variant d DASHER
EntityTropicalFish$Variant e BRINELY
EntityTropicalFish$Variant f SPOTTY
EntityTropicalFish$Variant g FLOPPER
EntityTropicalFish$Variant h STRIPEY
EntityTropicalFish$Variant i GLITTER
EntityTropicalFish$Variant j BLOCKFISH
EntityTropicalFish$Variant k BETTY
EntityTropicalFish$Variant l CLAYFISH
EntityTropicalFish$Variant m base
EntityTropicalFish$Variant n index
EntityTropicalFish$Variant o VALUES
EntityTropicalFish$Variant p $VALUES
EntityTropicalFish$Variant values ()[LEntityTropicalFish$Variant; values
EntityTropicalFish$Variant valueOf (Ljava/lang/String;)LEntityTropicalFish$Variant; valueOf
EntityTropicalFish$Variant b ()I getIndex
EntityTropicalFish$Variant c ()Ljava/lang/String; getName
EntityWolf a (LEnumColor;)V setCollarColor
EntityWolf eI ()Z isAngry
EntityWolf eJ ()LEnumColor; getCollarColor
EntityWolf x (Z)V setAngry
EntityWolf by DATA_INTERESTED_ID
EntityWolf bz DATA_COLLAR_COLOR
EntityWolf bx PREY_SELECTOR
EntityWolf bA interestedAngle
EntityWolf bB interestedAngleO
EntityWolf bC isWet
EntityWolf bD isShaking
EntityWolf bE shakeAnim
EntityWolf bF shakeAnimO
EntityWolf o ()V registerGoals
EntityWolf cF ()V registerAttributes
EntityWolf i (LEntityLiving;)V setTarget
EntityWolf w_ ()V defineSynchedData
EntityWolf b (LNBTTagCompound;)V addAdditionalSaveData
EntityWolf H ()LSoundEffect; getAmbientSound
EntityWolf e (LDamageSource;)LSoundEffect; getHurtSound
EntityWolf dd ()LSoundEffect; getDeathSound
EntityWolf dt ()F getSoundVolume
EntityWolf l ()V aiStep
EntityWolf h ()V tick
EntityWolf eG ()Z isWet
EntityWolf u (F)F getWetShade
EntityWolf g (FF)F getBodyRollAngle
EntityWolf v (F)F getHeadRollAngle
EntityWolf b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityWolf N ()I getMaxHeadXRot
EntityWolf B (LEntity;)Z doHurtTarget
EntityWolf u (Z)V setTame
EntityWolf b (LEntityHuman;LEnumHand;)Z mobInteract
EntityWolf eH ()F getTailAngle
EntityWolf k (LItemStack;)Z isFood
EntityWolf ee ()I getMaxSpawnClusterSize
EntityWolf b (LEntityAgeable;)LEntityWolf; getBreedOffspring
EntityWolf y (Z)V setIsInterested
EntityWolf eK ()Z isInterested
EntityWolf k (LEntityLiving;)Z lambda$static$0
EntityHorseChestedAbstract ex ()Z isCarryingChest
EntityHorseChestedAbstract t (Z)V setCarryingChest
EntityHorseChestedAbstract bE DATA_ID_CHEST
EntityHorseChestedAbstract w_ ()V defineSynchedData
EntityHorseChestedAbstract cF ()V registerAttributes
EntityHorseChestedAbstract ey ()I getInventorySize
EntityHorseChestedAbstract aY ()D getRideHeight
EntityHorseChestedAbstract ez ()LSoundEffect; getAngrySound
EntityHorseChestedAbstract da ()V dropEquipment
EntityHorseChestedAbstract b (LNBTTagCompound;)V addAdditionalSaveData
EntityHorseChestedAbstract a_ (ILItemStack;)Z setSlot
EntityHorseChestedAbstract b (LEntityHuman;LEnumHand;)Z mobInteract
EntityHorseChestedAbstract eA ()V playChestEquipsSound
EntityHorseChestedAbstract eB ()I getInventoryColumns
EntityHorseAbstract bz inventoryChest
EntityHorseAbstract bB jumpPower
EntityHorseAbstract bL canSlide
EntityHorseAbstract bv attributeJumpStrength
EntityHorseAbstract b (Ljava/util/UUID;)V setOwnerUUID
EntityHorseAbstract eH ()Z isTamed
EntityHorseAbstract eI ()Ljava/util/UUID; getOwnerUUID
EntityHorseAbstract eM ()Z hasReproduced
EntityHorseAbstract eN ()I getTemper
EntityHorseAbstract eO ()V loadChest
EntityHorseAbstract eQ ()D getJumpStrength
EntityHorseAbstract eT ()I getMaxDomestication
EntityHorseAbstract ey ()I getChestSlots
EntityHorseAbstract ez ()LSoundEffect; getSoundAngry
EntityHorseAbstract u (Z)V setTamed
EntityHorseAbstract u (I)V setTemper
EntityHorseAbstract z (Z)V setStanding
EntityHorseAbstract bE PARENT_HORSE_SELECTOR
EntityHorseAbstract bF MOMMY_TARGETING
EntityHorseAbstract bG DATA_ID_FLAGS
EntityHorseAbstract bH DATA_ID_OWNER_UUID
EntityHorseAbstract bI eatingCounter
EntityHorseAbstract bJ mouthCounter
EntityHorseAbstract bK standCounter
EntityHorseAbstract bw tailCounter
EntityHorseAbstract bx sprintCounter
EntityHorseAbstract by isJumping
EntityHorseAbstract bA temper
EntityHorseAbstract bM eatAnim
EntityHorseAbstract bN eatAnimO
EntityHorseAbstract bO standAnim
EntityHorseAbstract bP standAnimO
EntityHorseAbstract bQ mouthAnim
EntityHorseAbstract bR mouthAnimO
EntityHorseAbstract bC canGallop
EntityHorseAbstract bD gallopSoundCounter
EntityHorseAbstract o ()V registerGoals
EntityHorseAbstract eG ()V addBehaviourGoals
EntityHorseAbstract w_ ()V defineSynchedData
EntityHorseAbstract t (I)Z getFlag
EntityHorseAbstract d (IZ)V setFlag
EntityHorseAbstract eJ ()Z isJumping
EntityHorseAbstract v (Z)V setIsJumping
EntityHorseAbstract t (F)V onLeashDistance
EntityHorseAbstract eK ()Z isEating
EntityHorseAbstract eL ()Z isStanding
EntityHorseAbstract w (Z)V setBred
EntityHorseAbstract x (Z)V setSaddled
EntityHorseAbstract v (I)I modifyTemper
EntityHorseAbstract aR ()Z isPushable
EntityHorseAbstract ex ()V eating
EntityHorseAbstract b (FF)Z causeFallDamage
EntityHorseAbstract e (FF)I calculateFallDamage
EntityHorseAbstract eP ()V updateEquipment
EntityHorseAbstract dd ()LSoundEffect; getDeathSound
EntityHorseAbstract e (LDamageSource;)LSoundEffect; getHurtSound
EntityHorseAbstract H ()LSoundEffect; getAmbientSound
EntityHorseAbstract eR ()Z canBeSaddled
EntityHorseAbstract eS ()Z isSaddled
EntityHorseAbstract cF ()V registerAttributes
EntityHorseAbstract ee ()I getMaxSpawnClusterSize
EntityHorseAbstract dt ()F getSoundVolume
EntityHorseAbstract B ()I getAmbientSoundInterval
EntityHorseAbstract e (LEntityHuman;)V openInventory
EntityHorseAbstract b (LEntityHuman;LItemStack;)Z handleEating
EntityHorseAbstract g (LEntityHuman;)V doPlayerRide
EntityHorseAbstract dv ()Z isImmobile
EntityHorseAbstract k (LItemStack;)Z isFood
EntityHorseAbstract eA ()V moveTail
EntityHorseAbstract da ()V dropEquipment
EntityHorseAbstract l ()V aiStep
EntityHorseAbstract eU ()V followMommy
EntityHorseAbstract eV ()Z canEatGrass
EntityHorseAbstract h ()V tick
EntityHorseAbstract eB ()V openMouth
EntityHorseAbstract y (Z)V setEating
EntityHorseAbstract fd ()V stand
EntityHorseAbstract eW ()V makeMad
EntityHorseAbstract h (LEntityHuman;)Z tameWithName
EntityHorseAbstract e (LVec3D;)V travel
EntityHorseAbstract eX ()V playJumpSound
EntityHorseAbstract b (LNBTTagCompound;)V addAdditionalSaveData
EntityHorseAbstract eY ()Z canParent
EntityHorseAbstract ef ()Z canBeControlledByRider
EntityHorseAbstract u (F)F getEatAnim
EntityHorseAbstract v (F)F getStandAnim
EntityHorseAbstract w (F)F getMouthAnim
EntityHorseAbstract a_ (I)V onPlayerJump
EntityHorseAbstract G_ ()Z canJump
EntityHorseAbstract H_ ()F getJumpRidingScale
EntityHorseAbstract a_ (F)V setJumpRidingScale
EntityHorseAbstract b (I)V handleStartJump
EntityHorseAbstract c ()V handleStopJump
EntityHorseAbstract A (Z)V spawnTamingParticles
EntityHorseAbstract k (LEntity;)V positionRider
EntityHorseAbstract eZ ()F generateRandomMaxHealth
EntityHorseAbstract fa ()D generateRandomJumpStrength
EntityHorseAbstract fb ()D generateRandomSpeed
EntityHorseAbstract y_ ()Z onClimbable
EntityHorseAbstract b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityHorseAbstract fc ()Z wearsArmor
EntityHorseAbstract l (LItemStack;)Z isArmor
EntityHorseAbstract a_ (ILItemStack;)Z setSlot
EntityHorseAbstract ch ()LEntity; getControllingPassenger
EntityHorseAbstract c (LEntityLiving;)LVec3D; getDismountLocationForPassenger
EntityHorseAbstract j (LEntityLiving;)Z lambda$static$0
EntityHorse eA ()I getVariant
EntityHorse w (I)V setVariant
EntityHorse bE ARMOR_MODIFIER_UUID
EntityHorse bF DATA_ID_TYPE_VARIANT
EntityHorse bG VARIANT_TEXTURES
EntityHorse bH VARIANT_HASHES
EntityHorse bI MARKING_TEXTURES
EntityHorse bJ MARKING_HASHES
EntityHorse bK layerTextureHashName
EntityHorse bL layerTextureLayers
EntityHorse w_ ()V defineSynchedData
EntityHorse b (LNBTTagCompound;)V addAdditionalSaveData
EntityHorse ex ()LItemStack; getArmor
EntityHorse m (LItemStack;)V setArmor
EntityHorse fe ()V clearLayeredTextureInfo
EntityHorse ff ()V rebuildLayeredTextureInfo
EntityHorse eB ()Ljava/lang/String; getLayeredTextureHashName
EntityHorse fd ()[Ljava/lang/String; getLayeredTextureLayers
EntityHorse eP ()V updateEquipment
EntityHorse n (LItemStack;)V setArmorEquipment
EntityHorse cF ()V registerAttributes
EntityHorse h ()V tick
EntityHorse H ()LSoundEffect; getAmbientSound
EntityHorse dd ()LSoundEffect; getDeathSound
EntityHorse e (LDamageSource;)LSoundEffect; getHurtSound
EntityHorse ez ()LSoundEffect; getAngrySound
EntityHorse b (LEntityHuman;LEnumHand;)Z mobInteract
EntityHorse fc ()Z wearsArmor
EntityHorse l (LItemStack;)Z isArmor
EntityLlama fe ()I getStrength
EntityLlama ff ()I getVariant
EntityLlama w (I)V setVariant
EntityLlama x (I)V setStrength
EntityLlama bE DATA_STRENGTH_ID
EntityLlama bF DATA_SWAG_ID
EntityLlama bG DATA_VARIANT_ID
EntityLlama bH didSpit
EntityLlama bI caravanHead
EntityLlama bJ caravanTail
EntityLlama fd ()Z isTraderLlama
EntityLlama fm ()V setRandomStrength
EntityLlama b (LNBTTagCompound;)V addAdditionalSaveData
EntityLlama o ()V registerGoals
EntityLlama cF ()V registerAttributes
EntityLlama w_ ()V defineSynchedData
EntityLlama ey ()I getInventorySize
EntityLlama k (LEntity;)V positionRider
EntityLlama aY ()D getRideHeight
EntityLlama ef ()Z canBeControlledByRider
EntityLlama b (LEntityHuman;LItemStack;)Z handleEating
EntityLlama dv ()Z isImmobile
EntityLlama ez ()LSoundEffect; getAngrySound
EntityLlama H ()LSoundEffect; getAmbientSound
EntityLlama e (LDamageSource;)LSoundEffect; getHurtSound
EntityLlama dd ()LSoundEffect; getDeathSound
EntityLlama eA ()V playChestEquipsSound
EntityLlama eW ()V makeMad
EntityLlama eB ()I getInventoryColumns
EntityLlama fc ()Z wearsArmor
EntityLlama l (LItemStack;)Z isArmor
EntityLlama eR ()Z canBeSaddled
EntityLlama eP ()V updateEquipment
EntityLlama m (LItemStack;)LEnumColor; getDyeColor
EntityLlama fg ()LEnumColor; getSwag
EntityLlama eT ()I getMaxTemper
EntityLlama b (LEntityAgeable;)LEntityLlama; getBreedOffspring
EntityLlama fh ()LEntityLlama; makeBabyLlama
EntityLlama j (LEntityLiving;)V spit
EntityLlama B (Z)V setDidSpit
EntityLlama b (FF)Z causeFallDamage
EntityLlama fi ()V leaveCaravan
EntityLlama fj ()Z hasCaravanTail
EntityLlama fk ()Z inCaravan
EntityLlama fl ()LEntityLlama; getCaravanHead
EntityLlama ew ()D followLeashSpeed
EntityLlama eU ()V followMommy
EntityLlama eV ()Z canEatGrass
EntityLlama b (LEntityLlama;)Z access$100
EntityComplexPart b owner
EntityComplexPart c name
EntityComplexPart d size
EntityComplexPart w_ ()V defineSynchedData
EntityComplexPart b (LNBTTagCompound;)V addAdditionalSaveData
EntityComplexPart aQ ()Z isPickable
EntityComplexPart s (LEntity;)Z is
EntityComplexPart O ()LPacket; getAddEntityPacket
EntityEnderCrystal a (LBlockPosition;)V setBeamTarget
EntityEnderCrystal a (Z)V setShowingBottom
EntityEnderCrystal f ()LBlockPosition; getBeamTarget
EntityEnderCrystal i ()Z isShowingBottom
EntityEnderCrystal c DATA_BEAM_TARGET
EntityEnderCrystal d DATA_SHOW_BOTTOM
EntityEnderCrystal b time
EntityEnderCrystal ax ()Z isMovementNoisy
EntityEnderCrystal w_ ()V defineSynchedData
EntityEnderCrystal h ()V tick
EntityEnderCrystal b (LNBTTagCompound;)V addAdditionalSaveData
EntityEnderCrystal aQ ()Z isPickable
EntityEnderCrystal X ()V kill
EntityEnderCrystal O ()LPacket; getAddEntityPacket
EntityEnderDragon b PHASE
EntityEnderDragon bB currentEnderCrystal
EntityEnderDragon bE children
EntityEnderDragon f (LDamageSource;F)Z dealDamage
EntityEnderDragon ev ()LDragonControllerManager; getDragonControllerManager
EntityEnderDragon ew ()LEnderDragonBattle; getEnderDragonBattle
EntityEnderDragon bC LOGGER
EntityEnderDragon bD CRYSTAL_DESTROY_TARGETING
EntityEnderDragon c positions
EntityEnderDragon d posPointer
EntityEnderDragon bv head
EntityEnderDragon bF neck
EntityEnderDragon bG body
EntityEnderDragon bH tail1
EntityEnderDragon bI tail2
EntityEnderDragon bJ tail3
EntityEnderDragon bK wing1
EntityEnderDragon bL wing2
EntityEnderDragon bw oFlapTime
EntityEnderDragon bx flapTime
EntityEnderDragon by inWall
EntityEnderDragon bz dragonDeathTime
EntityEnderDragon bA yRotA
EntityEnderDragon bM dragonFight
EntityEnderDragon bN phaseManager
EntityEnderDragon bO growlTime
EntityEnderDragon bP sittingDamageReceived
EntityEnderDragon bQ nodes
EntityEnderDragon bR nodeAdjacency
EntityEnderDragon bS openSet
EntityEnderDragon cF ()V registerAttributes
EntityEnderDragon w_ ()V defineSynchedData
EntityEnderDragon l ()V aiStep
EntityEnderDragon ex ()F getHeadYOffset
EntityEnderDragon ey ()V checkCrystals
EntityEnderDragon b (Ljava/util/List;)V hurt
EntityEnderDragon i (D)F rotWrap
EntityEnderDragon b (LAxisAlignedBB;)Z checkWalls
EntityEnderDragon X ()V kill
EntityEnderDragon cJ ()V tickDeath
EntityEnderDragon k ()I findClosestNode
EntityEnderDragon o (DDD)I findClosestNode
EntityEnderDragon b (LNBTTagCompound;)V addAdditionalSaveData
EntityEnderDragon cD ()V checkDespawn
EntityEnderDragon m ()[LEntityComplexPart; getSubEntities
EntityEnderDragon aQ ()Z isPickable
EntityEnderDragon cp ()LSoundCategory; getSoundSource
EntityEnderDragon H ()LSoundEffect; getAmbientSound
EntityEnderDragon e (LDamageSource;)LSoundEffect; getHurtSound
EntityEnderDragon dt ()F getSoundVolume
EntityEnderDragon t (F)LVec3D; getHeadLookVector
EntityEnderDragon c (LMobEffect;)Z addEffect
EntityEnderDragon n (LEntity;)Z canRide
EntityEnderDragon bI ()Z canChangeDimensions
IDragonController i ()LDragonControllerPhase; getControllerPhase
IDragonController b ()V doClientTick
IDragonController c ()V doServerTick
IDragonController d ()V begin
IDragonController e ()V end
IDragonController f ()F getFlySpeed
IDragonController h ()F getTurnSpeed
IDragonController g ()LVec3D; getFlyTargetLocation
DragonControllerPhase a HOLDING_PATTERN
DragonControllerPhase b STRAFE_PLAYER
DragonControllerPhase c LANDING_APPROACH
DragonControllerPhase d LANDING
DragonControllerPhase e TAKEOFF
DragonControllerPhase f SITTING_FLAMING
DragonControllerPhase g SITTING_SCANNING
DragonControllerPhase h SITTING_ATTACKING
DragonControllerPhase i CHARGING_PLAYER
DragonControllerPhase j DYING
DragonControllerPhase k HOVER
DragonControllerPhase a (I)LDragonControllerPhase; getById
DragonControllerPhase l phases
DragonControllerPhase m instanceClass
DragonControllerPhase n id
DragonControllerPhase o name
DragonControllerPhase b ()I getId
DragonControllerPhase toString ()Ljava/lang/String; toString
DragonControllerPhase c ()I getCount
DragonControllerManager b enderDragon
DragonControllerManager c dragonControllers
DragonControllerManager d currentDragonController
DragonControllerManager a (LDragonControllerPhase;)V setControllerPhase
DragonControllerManager a LOGGER
DragonControllerManager b (LDragonControllerPhase;)LIDragonController; getPhase
EntityWither bE bossBattle
EntityWither a (II)V setHeadTarget
EntityWither t (I)I getHeadTarget
EntityWither b DATA_TARGET_A
EntityWither c DATA_TARGET_B
EntityWither d DATA_TARGET_C
EntityWither bv DATA_TARGETS
EntityWither bw DATA_ID_INV
EntityWither bx xRotHeads
EntityWither by yRotHeads
EntityWither bz xRotOHeads
EntityWither bA yRotOHeads
EntityWither bB nextHeadUpdate
EntityWither bC idleHeadUpdates
EntityWither bD destroyBlocksTick
EntityWither bF LIVING_ENTITY_SELECTOR
EntityWither bG TARGETING_CONDITIONS
EntityWither o ()V registerGoals
EntityWither w_ ()V defineSynchedData
EntityWither b (LNBTTagCompound;)V addAdditionalSaveData
EntityWither b (LIChatBaseComponent;)V setCustomName
EntityWither H ()LSoundEffect; getAmbientSound
EntityWither e (LDamageSource;)LSoundEffect; getHurtSound
EntityWither dd ()LSoundEffect; getDeathSound
EntityWither l ()V aiStep
EntityWither M ()V customServerAiStep
EntityWither b (LIBlockData;)Z canDestroy
EntityWither k ()V makeInvulnerable
EntityWither b (LEntityPlayer;)V startSeenByPlayer
EntityWither c (LEntityPlayer;)V stopSeenByPlayer
EntityWither u (I)D getHeadX
EntityWither v (I)D getHeadY
EntityWither w (I)D getHeadZ
EntityWither cD ()V checkDespawn
EntityWither b (FF)Z causeFallDamage
EntityWither c (LMobEffect;)Z addEffect
EntityWither cF ()V registerAttributes
EntityWither b (I)F getHeadXRot
EntityWither m ()I getInvulnerableTicks
EntityWither s (I)V setInvulnerableTicks
EntityWither J_ ()Z isPowered
EntityWither dp ()LEnumMonsterType; getMobType
EntityWither n (LEntity;)Z canRide
EntityWither bI ()Z canChangeDimensions
EntityWither d (LMobEffect;)Z canBeAffected
EntityWither j (LEntityLiving;)Z lambda$static$0
EntityArmorStand bz armorStandInvisible
EntityArmorStand bB headPose
EntityArmorStand bC bodyPose
EntityArmorStand bD leftArmPose
EntityArmorStand bE rightArmPose
EntityArmorStand bF leftLegPose
EntityArmorStand bG rightLegPose
EntityArmorStand bx handItems
EntityArmorStand by armorItems
EntityArmorStand a (LVector3f;)V setHeadPose
EntityArmorStand b (LVector3f;)V setBodyPose
EntityArmorStand c (LVector3f;)V setLeftArmPose
EntityArmorStand d (LVector3f;)V setRightArmPose
EntityArmorStand e (LVector3f;)V setLeftLegPose
EntityArmorStand f (LVector3f;)V setRightLegPose
EntityArmorStand k ()Z isSmall
EntityArmorStand m ()Z hasArms
EntityArmorStand a (Z)V setSmall
EntityArmorStand o ()Z hasBasePlate
EntityArmorStand p (Z)V setArms
EntityArmorStand p ()Z isMarker
EntityArmorStand q (Z)V setBasePlate
EntityArmorStand r (Z)V setMarker
EntityArmorStand bq DEFAULT_HEAD_POSE
EntityArmorStand br DEFAULT_BODY_POSE
EntityArmorStand bs DEFAULT_LEFT_ARM_POSE
EntityArmorStand bt DEFAULT_RIGHT_ARM_POSE
EntityArmorStand bu DEFAULT_LEFT_LEG_POSE
EntityArmorStand bv DEFAULT_RIGHT_LEG_POSE
EntityArmorStand b DATA_CLIENT_FLAGS
EntityArmorStand c DATA_HEAD_POSE
EntityArmorStand d DATA_BODY_POSE
EntityArmorStand e DATA_LEFT_ARM_POSE
EntityArmorStand f DATA_RIGHT_ARM_POSE
EntityArmorStand g DATA_LEFT_LEG_POSE
EntityArmorStand bo DATA_RIGHT_LEG_POSE
EntityArmorStand bw RIDABLE_MINECARTS
EntityArmorStand bp lastHit
EntityArmorStand bA disabledSlots
EntityArmorStand z_ ()V refreshDimensions
EntityArmorStand A ()Z hasPhysics
EntityArmorStand dE ()Z isEffectiveAi
EntityArmorStand w_ ()V defineSynchedData
EntityArmorStand bi ()Ljava/lang/Iterable; getHandSlots
EntityArmorStand bj ()Ljava/lang/Iterable; getArmorSlots
EntityArmorStand b (LEnumItemSlot;)LItemStack; getItemBySlot
EntityArmorStand a_ (ILItemStack;)Z setSlot
EntityArmorStand e (LItemStack;)Z canTakeItem
EntityArmorStand b (LNBTTagCompound;)V addAdditionalSaveData
EntityArmorStand g (LNBTTagCompound;)V readPose
EntityArmorStand B ()LNBTTagCompound; writePose
EntityArmorStand aR ()Z isPushable
EntityArmorStand C (LEntity;)V doPush
EntityArmorStand dC ()V pushEntities
EntityArmorStand f (LVec3D;)LEnumItemSlot; getClickedSlot
EntityArmorStand d (LEnumItemSlot;)Z isDisabled
EntityArmorStand D ()V showBreakingParticles
EntityArmorStand f (LDamageSource;F)V causeDamage
EntityArmorStand f (LDamageSource;)V brokenByPlayer
EntityArmorStand g (LDamageSource;)V brokenByAnything
EntityArmorStand F ()V playBrokenSound
EntityArmorStand f (FF)F tickHeadTurn
EntityArmorStand b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityArmorStand aX ()D getRidingHeight
EntityArmorStand e (LVec3D;)V travel
EntityArmorStand l (F)V setYBodyRot
EntityArmorStand k (F)V setYHeadRot
EntityArmorStand h ()V tick
EntityArmorStand C ()V updateInvisibilityStatus
EntityArmorStand j (Z)V setInvisible
EntityArmorStand x_ ()Z isBaby
EntityArmorStand X ()V kill
EntityArmorStand ce ()Z ignoreExplosion
EntityArmorStand A_ ()LEnumPistonReaction; getPistonPushReaction
EntityArmorStand r ()LVector3f; getHeadPose
EntityArmorStand s ()LVector3f; getBodyPose
EntityArmorStand u ()LVector3f; getLeftArmPose
EntityArmorStand v ()LVector3f; getRightArmPose
EntityArmorStand w ()LVector3f; getLeftLegPose
EntityArmorStand z ()LVector3f; getRightLegPose
EntityArmorStand aQ ()Z isPickable
EntityArmorStand t (LEntity;)Z skipAttackInteraction
EntityArmorStand dH ()LEnumMainHand; getMainArm
EntityArmorStand o (I)LSoundEffect; getFallDamageSound
EntityArmorStand e (LDamageSource;)LSoundEffect; getHurtSound
EntityArmorStand dd ()LSoundEffect; getDeathSound
EntityArmorStand dT ()Z isAffectedByPotions
EntityArmorStand dU ()Z attackable
EntityHanging c blockPosition
EntityHanging d direction
EntityHanging a (LDamageSource;F)Z damageEntity
EntityHanging a (LEnumDirection;)V setDirection
EntityHanging f ()V updateBoundingBox
EntityHanging i ()Z survives
EntityHanging k ()I getHangingWidth
EntityHanging l ()I getHangingHeight
EntityHanging m ()V playPlaceSound
EntityHanging n ()LBlockPosition; getBlockPosition
EntityHanging b HANGING_ENTITY
EntityHanging e checkInterval
EntityHanging w_ ()V defineSynchedData
EntityHanging h ()V tick
EntityHanging aQ ()Z isPickable
EntityHanging t (LEntity;)Z skipAttackInteraction
EntityHanging bW ()LEnumDirection; getDirection
EntityHanging h (DDD)V push
EntityHanging b (LNBTTagCompound;)V addAdditionalSaveData
EntityHanging aS ()Z repositionEntityAfterLoad
EntityHanging d (DDD)V setPos
EntityHanging z_ ()V refreshDimensions
EntityHanging b (LEntity;)Z lambda$static$0
EntityItemFrame f ITEM
EntityItemFrame a (I)V setRotation
EntityItemFrame a (IZ)V setRotation
EntityItemFrame a (LItemStack;Z)V setItem
EntityItemFrame b (LItemStack;)V setItem
EntityItemFrame o ()LItemStack; getItem
EntityItemFrame p ()I getRotation
EntityItemFrame e LOGGER
EntityItemFrame g DATA_ROTATION
EntityItemFrame an dropChance
EntityItemFrame ao fixed
EntityItemFrame w_ ()V defineSynchedData
EntityItemFrame f ()V recalculateBoundingBox
EntityItemFrame i ()Z survives
EntityItemFrame h (DDD)V push
EntityItemFrame bb ()F getPickRadius
EntityItemFrame X ()V kill
EntityItemFrame k ()I getWidth
EntityItemFrame l ()I getHeight
EntityItemFrame m ()V playPlacementSound
EntityItemFrame b (LEntity;Z)V dropItem
EntityItemFrame c (LItemStack;)V removeFramedMap
EntityItemFrame a_ (ILItemStack;)Z setSlot
EntityItemFrame b (LNBTTagCompound;)V addAdditionalSaveData
EntityItemFrame q ()I getAnalogOutput
EntityItemFrame O ()LPacket; getAddEntityPacket
Paintings a ()I getWidth
Paintings b ()I getHeight
Paintings a KEBAB
Paintings b AZTEC
Paintings c ALBAN
Paintings d AZTEC2
Paintings e BOMB
Paintings f PLANT
Paintings g WASTELAND
Paintings h POOL
Paintings i COURBET
Paintings j SEA
Paintings k SUNSET
Paintings l CREEBET
Paintings m WANDERER
Paintings n GRAHAM
Paintings o MATCH
Paintings p BUST
Paintings q STAGE
Paintings r VOID
Paintings s SKULL_AND_ROSES
Paintings t WITHER
Paintings u FIGHTERS
Paintings v POINTER
Paintings w PIGSCENE
Paintings x BURNING_SKULL
Paintings y SKELETON
Paintings z DONKEY_KONG
Paintings A width
Paintings B height
EntityPainting e art
EntityPainting b (LNBTTagCompound;)V addAdditionalSaveData
EntityPainting k ()I getWidth
EntityPainting l ()I getHeight
EntityPainting m ()V playPlacementSound
EntityPainting b (DDDFF)V moveTo
EntityPainting O ()LPacket; getAddEntityPacket
EntityFishingHook b hooked
EntityFishingHook e owner
EntityFishingHook i ()V reel
EntityFishingHook c DATA_HOOKED_ENTITY
EntityFishingHook d life
EntityFishingHook f flightTime
EntityFishingHook g nibble
EntityFishingHook an timeUntilLured
EntityFishingHook ao timeUntilHooked
EntityFishingHook ap fishAngle
EntityFishingHook aq openWater
EntityFishingHook ar currentState
EntityFishingHook as luck
EntityFishingHook at lureSpeed
EntityFishingHook w_ ()V defineSynchedData
EntityFishingHook h ()V tick
EntityFishingHook l ()Z shouldStopFishing
EntityFishingHook m ()V updateRotation
EntityFishingHook n ()V checkCollision
EntityFishingHook o ()V setHookedEntity
EntityFishingHook b (LBlockPosition;)Z calculateOpenWater
EntityFishingHook c (LBlockPosition;)Z validOpenWaterBlockAt
EntityFishingHook f ()Z isOpenWaterFishing
EntityFishingHook b (LNBTTagCompound;)V addAdditionalSaveData
EntityFishingHook b (LItemStack;)I retrieve
EntityFishingHook ax ()Z isMovementNoisy
EntityFishingHook aa ()V remove
EntityFishingHook k ()LEntityHuman; getOwner
EntityFishingHook bI ()Z canChangeDimensions
EntityFishingHook O ()LPacket; getAddEntityPacket
EntityFishingHook b (LEntity;)Z lambda$checkCollision$0
EntityFishingHook$HookState a FLYING
EntityFishingHook$HookState b HOOKED_IN_ENTITY
EntityFishingHook$HookState c BOBBING
EntityFishingHook$HookState d $VALUES
EntityFishingHook$HookState values ()[LEntityFishingHook$HookState; values
EntityFishingHook$HookState valueOf (Ljava/lang/String;)LEntityFishingHook$HookState; valueOf
EntityLightning c lifeTicks
EntityLightning b seed
EntityLightning d flashes
EntityLightning e visualOnly
EntityLightning f cause
EntityLightning cp ()LSoundCategory; getSoundSource
EntityLightning f ()LEntityPlayer; getCause
EntityLightning d (LEntityPlayer;)V setCause
EntityLightning h ()V tick
EntityLightning w_ ()V defineSynchedData
EntityLightning b (LNBTTagCompound;)V addAdditionalSaveData
EntityLightning O ()LPacket; getAddEntityPacket
EntityFallingBlock an hurtEntities
EntityFallingBlock ao fallHurtMax
EntityFallingBlock ap fallHurtAmount
EntityFallingBlock b ticksLived
EntityFallingBlock c dropItem
EntityFallingBlock d tileEntityData
EntityFallingBlock f block
EntityFallingBlock k ()LIBlockData; getBlock
EntityFallingBlock g cancelDrop
EntityFallingBlock e DATA_START_POS
EntityFallingBlock bG ()Z isAttackable
EntityFallingBlock f ()LBlockPosition; getStartPos
EntityFallingBlock ax ()Z isMovementNoisy
EntityFallingBlock w_ ()V defineSynchedData
EntityFallingBlock aQ ()Z isPickable
EntityFallingBlock h ()V tick
EntityFallingBlock b (FF)Z causeFallDamage
EntityFallingBlock b (LNBTTagCompound;)V addAdditionalSaveData
EntityFallingBlock i ()LWorld; getLevel
EntityFallingBlock bO ()Z displayFireAnimation
EntityFallingBlock cf ()Z onlyOpCanSetNbt
EntityFallingBlock O ()LPacket; getAddEntityPacket
EntityItem an owner
EntityItem c ITEM
EntityItem d age
EntityItem e pickupDelay
EntityItem g thrower
EntityItem a (I)V setPickupDelay
EntityItem b (LItemStack;)V setItemStack
EntityItem b (Ljava/util/UUID;)V setOwner
EntityItem c (Ljava/util/UUID;)V setThrower
EntityItem f ()LItemStack; getItemStack
EntityItem i ()Ljava/util/UUID; getOwner
EntityItem k ()Ljava/util/UUID; getThrower
EntityItem m ()V defaultPickupDelay
EntityItem w ()V mergeNearby
EntityItem f health
EntityItem b bobOffs
EntityItem ax ()Z isMovementNoisy
EntityItem w_ ()V defineSynchedData
EntityItem h ()V tick
EntityItem u ()V setUnderwaterMovement
EntityItem v ()V setUnderLavaMovement
EntityItem z ()Z isMergable
EntityItem az ()Z fireImmune
EntityItem h (I)V burn
EntityItem b (LNBTTagCompound;)V addAdditionalSaveData
EntityItem b (LEntityHuman;)V playerTouch
EntityItem P ()LIChatBaseComponent; getName
EntityItem bG ()Z isAttackable
EntityItem l ()I getAge
EntityItem n ()V setNoPickUpDelay
EntityItem o ()V setNeverPickUp
EntityItem p ()Z hasPickUpDelay
EntityItem q ()V setUnlimitedLifetime
EntityItem r ()V setExtendedLifetime
EntityItem s ()V makeFakeItem
EntityItem O ()LPacket; getAddEntityPacket
EntityItem b (LEntityItem;)Z lambda$mergeWithNeighbours$0
EntityTNTPrimed b FUSE_TICKS
EntityTNTPrimed c source
EntityTNTPrimed d fuseTicks
EntityTNTPrimed a (I)V setFuseTicks
EntityTNTPrimed f ()LEntityLiving; getSource
EntityTNTPrimed k ()I getFuseTicks
EntityTNTPrimed l ()V explode
EntityTNTPrimed w_ ()V defineSynchedData
EntityTNTPrimed ax ()Z isMovementNoisy
EntityTNTPrimed aQ ()Z isPickable
EntityTNTPrimed h ()V tick
EntityTNTPrimed b (LNBTTagCompound;)V addAdditionalSaveData
EntityTNTPrimed i ()I getFuse
EntityTNTPrimed O ()LPacket; getAddEntityPacket
EntityCreeper bw fuseTicks
EntityCreeper bx maxFuseTicks
EntityCreeper by explosionRadius
EntityCreeper c POWERED
EntityCreeper J_ ()Z isPowered
EntityCreeper m ()Z isIgnited
EntityCreeper ex ()V ignite
EntityCreeper ey ()Z canCauseHeadDrop
EntityCreeper ez ()V setCausedHeadDrop
EntityCreeper eA ()V explode
EntityCreeper eB ()V createEffectCloud
EntityCreeper b DATA_SWELL_DIR
EntityCreeper d DATA_IS_IGNITED
EntityCreeper bv oldSwell
EntityCreeper bz droppedSkulls
EntityCreeper o ()V registerGoals
EntityCreeper cF ()V registerAttributes
EntityCreeper bJ ()I getMaxFallDistance
EntityCreeper b (FF)Z causeFallDamage
EntityCreeper w_ ()V defineSynchedData
EntityCreeper b (LNBTTagCompound;)V addAdditionalSaveData
EntityCreeper h ()V tick
EntityCreeper e (LDamageSource;)LSoundEffect; getHurtSound
EntityCreeper dd ()LSoundEffect; getDeathSound
EntityCreeper B (LEntity;)Z doHurtTarget
EntityCreeper u (F)F getSwelling
EntityCreeper k ()I getSwellDir
EntityCreeper b (LEntityHuman;LEnumHand;)Z mobInteract
ICrossbow z ()LEntityLiving; getGoalTarget
ICrossbow b (Z)V setChargingCrossbow
ICrossbow L_ ()V onCrossbowAttackPerformed
ICrossbow b (LEntityLiving;F)V performCrossbowAttack
EntityDrowned b navigationWater
EntityDrowned c navigationLand
EntityDrowned bv searchingForLand
EntityDrowned k ()V addBehaviourGoals
EntityDrowned b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkDrownedSpawnRules
EntityDrowned m ()Z supportsBreakDoorGoal
EntityDrowned H ()LSoundEffect; getAmbientSound
EntityDrowned e (LDamageSource;)LSoundEffect; getHurtSound
EntityDrowned dd ()LSoundEffect; getDeathSound
EntityDrowned ex ()LSoundEffect; getStepSound
EntityDrowned aq ()LSoundEffect; getSwimSound
EntityDrowned ey ()LItemStack; getSkull
EntityDrowned ez ()Z convertsInWater
EntityDrowned j (LEntityLiving;)Z okTarget
EntityDrowned bS ()Z isPushedByFluid
EntityDrowned eF ()Z wantsToSwim
EntityDrowned e (LVec3D;)V travel
EntityDrowned aF ()V updateSwimming
EntityDrowned eA ()Z closeToNextPos
EntityDrowned t (Z)V setSearchingForLand
EntityDrowned b (LEntityDrowned;)Z access$200
EntityDrowned c (LEntityDrowned;)Z access$300
EntityEnderman b (LIBlockData;)V setCarried
EntityEnderman ex ()LIBlockData; getCarried
EntityEnderman b SPEED_MODIFIER_ATTACKING_UUID
EntityEnderman c SPEED_MODIFIER_ATTACKING
EntityEnderman d DATA_CARRY_STATE
EntityEnderman bv DATA_CREEPY
EntityEnderman bw DATA_STARED_AT
EntityEnderman bx ENDERMITE_SELECTOR
EntityEnderman by lastStareSound
EntityEnderman bz targetChangeTime
EntityEnderman o ()V registerGoals
EntityEnderman cF ()V registerAttributes
EntityEnderman i (LEntityLiving;)V setTarget
EntityEnderman w_ ()V defineSynchedData
EntityEnderman k ()V playStareSound
EntityEnderman b (LNBTTagCompound;)V addAdditionalSaveData
EntityEnderman f (LEntityHuman;)Z isLookingAtMe
EntityEnderman b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityEnderman l ()V aiStep
EntityEnderman M ()V customServerAiStep
EntityEnderman m ()Z teleport
EntityEnderman o (DDD)Z teleport
EntityEnderman H ()LSoundEffect; getAmbientSound
EntityEnderman e (LDamageSource;)LSoundEffect; getHurtSound
EntityEnderman dd ()LSoundEffect; getDeathSound
EntityEnderman ey ()Z isCreepy
EntityEnderman ez ()Z hasBeenStaredAt
EntityEnderman eA ()V setBeingStaredAt
EntityEnderman j (LEntityLiving;)Z lambda$static$0
EntityEnderman$PathfinderGoalEndermanPickupBlock a enderman
EntityEnderman$PathfinderGoalEndermanPickupBlock e ()V tick
EntityEndermite k ()Z isPlayerSpawned
EntityEndermite t (Z)V setPlayerSpawned
EntityEndermite b life
EntityEndermite c playerSpawned
EntityEndermite o ()V registerGoals
EntityEndermite b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityEndermite cF ()V registerAttributes
EntityEndermite ax ()Z isMovementNoisy
EntityEndermite H ()LSoundEffect; getAmbientSound
EntityEndermite e (LDamageSource;)LSoundEffect; getHurtSound
EntityEndermite dd ()LSoundEffect; getDeathSound
EntityEndermite b (LNBTTagCompound;)V addAdditionalSaveData
EntityEndermite h ()V tick
EntityEndermite l (F)V setYBodyRot
EntityEndermite aX ()D getRidingHeight
EntityEndermite l ()V aiStep
EntityEndermite b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkEndermiteSpawnRules
EntityEndermite dp ()LEnumMonsterType; getMobType
EntityGhast m ()I getPower
EntityGhast b DATA_IS_CHARGING
EntityGhast c explosionPower
EntityGhast o ()V registerGoals
EntityGhast k ()Z isCharging
EntityGhast t (Z)V setCharging
EntityGhast K ()Z shouldDespawnInPeaceful
EntityGhast w_ ()V defineSynchedData
EntityGhast cF ()V registerAttributes
EntityGhast cp ()LSoundCategory; getSoundSource
EntityGhast H ()LSoundEffect; getAmbientSound
EntityGhast e (LDamageSource;)LSoundEffect; getHurtSound
EntityGhast dd ()LSoundEffect; getDeathSound
EntityGhast dt ()F getSoundVolume
EntityGhast b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkGhastSpawnRules
EntityGhast ee ()I getMaxSpawnClusterSize
EntityGhast b (LNBTTagCompound;)V addAdditionalSaveData
EntityGhast b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityGhast j (LEntityLiving;)Z lambda$registerGoals$0
EntityGhast$PathfinderGoalGhastAttackTarget b ghast
EntityGhast$PathfinderGoalGhastAttackTarget a chargeTime
EntityGhast$PathfinderGoalGhastAttackTarget c ()V start
EntityGhast$PathfinderGoalGhastAttackTarget d ()V stop
EntityGhast$PathfinderGoalGhastAttackTarget e ()V tick
EntityGuardian by goalRandomStroll
EntityGuardian ex ()LSoundEffect; getSoundFlop
EntityGuardian b DATA_ID_MOVING
EntityGuardian bz DATA_ID_ATTACK_TARGET
EntityGuardian c clientSideTailAnimation
EntityGuardian d clientSideTailAnimationO
EntityGuardian bv clientSideTailAnimationSpeed
EntityGuardian bw clientSideSpikesAnimation
EntityGuardian bx clientSideSpikesAnimationO
EntityGuardian bA clientSideCachedAttackTarget
EntityGuardian bB clientSideAttackTime
EntityGuardian bC clientSideTouchedGround
EntityGuardian o ()V registerGoals
EntityGuardian cF ()V registerAttributes
EntityGuardian b (LWorld;)LNavigationAbstract; createNavigation
EntityGuardian w_ ()V defineSynchedData
EntityGuardian cG ()Z canBreatheUnderwater
EntityGuardian dp ()LEnumMonsterType; getMobType
EntityGuardian ey ()Z isMoving
EntityGuardian t (Z)V setMoving
EntityGuardian k ()I getAttackDuration
EntityGuardian ez ()Z hasActiveAttackTarget
EntityGuardian eA ()LEntityLiving; getActiveAttackTarget
EntityGuardian B ()I getAmbientSoundInterval
EntityGuardian H ()LSoundEffect; getAmbientSound
EntityGuardian e (LDamageSource;)LSoundEffect; getHurtSound
EntityGuardian dd ()LSoundEffect; getDeathSound
EntityGuardian ax ()Z isMovementNoisy
EntityGuardian b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityGuardian l ()V aiStep
EntityGuardian u (F)F getTailAnimation
EntityGuardian v (F)F getSpikesAnimation
EntityGuardian w (F)F getAttackAnimationScale
EntityGuardian b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkGuardianSpawnRules
EntityGuardian N ()I getMaxHeadXRot
EntityGuardian e (LVec3D;)V travel
EntityMonster a (LDamageSource;F)Z damageEntity
EntityMonster cp ()LSoundCategory; getSoundSource
EntityMonster l ()V aiStep
EntityMonster eC ()V updateNoActionTime
EntityMonster K ()Z shouldDespawnInPeaceful
EntityMonster aq ()LSoundEffect; getSwimSound
EntityMonster ar ()LSoundEffect; getSwimSplashSound
EntityMonster e (LDamageSource;)LSoundEffect; getHurtSound
EntityMonster dd ()LSoundEffect; getDeathSound
EntityMonster o (I)LSoundEffect; getFallDamageSound
EntityMonster c (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkMonsterSpawnRules
EntityMonster d (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkAnyLightMonsterSpawnRules
EntityMonster cF ()V registerAttributes
EntityMonster cK ()Z shouldDropExperience
EntityMonster e (LEntityHuman;)Z isPreventingPlayerRest
EntityMonster f (LItemStack;)LItemStack; getProjectile
EntityMonsterPatrolling b patrolTarget
EntityMonsterPatrolling c patrolLeader
EntityMonsterPatrolling d patrolling
EntityMonsterPatrolling ez ()LBlockPosition; getPatrolTarget
EntityMonsterPatrolling eB ()Z isPatrolLeader
EntityMonsterPatrolling eF ()Z isPatrolling
EntityMonsterPatrolling g (LBlockPosition;)V setPatrolTarget
EntityMonsterPatrolling t (Z)V setPatrolLeader
EntityMonsterPatrolling o ()V registerGoals
EntityMonsterPatrolling b (LNBTTagCompound;)V addAdditionalSaveData
EntityMonsterPatrolling aX ()D getRidingHeight
EntityMonsterPatrolling ey ()Z canBeLeader
EntityMonsterPatrolling b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkPatrollingMonsterSpawnRules
EntityMonsterPatrolling h (D)Z removeWhenFarAway
EntityMonsterPatrolling eA ()Z hasPatrolTarget
EntityMonsterPatrolling eD ()Z canJoinPatrol
EntityMonsterPatrolling eE ()V findPatrolTarget
EntityMonsterPatrolling u (Z)V setPatrolling
EntityPhantom a (I)V setSize
EntityPhantom k ()I getSize
EntityPhantom b ID_SIZE
EntityPhantom c moveTargetPoint
EntityPhantom d anchorPoint
EntityPhantom bv attackPhase
EntityPhantom p ()LEntityAIBodyControl; createBodyControl
EntityPhantom o ()V registerGoals
EntityPhantom cF ()V registerAttributes
EntityPhantom w_ ()V defineSynchedData
EntityPhantom ev ()V updatePhantomSizeInfo
EntityPhantom b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityPhantom K ()Z shouldDespawnInPeaceful
EntityPhantom h ()V tick
EntityPhantom l ()V aiStep
EntityPhantom M ()V customServerAiStep
EntityPhantom b (LNBTTagCompound;)V addAdditionalSaveData
EntityPhantom cp ()LSoundCategory; getSoundSource
EntityPhantom H ()LSoundEffect; getAmbientSound
EntityPhantom e (LDamageSource;)LSoundEffect; getHurtSound
EntityPhantom dd ()LSoundEffect; getDeathSound
EntityPhantom dp ()LEnumMonsterType; getMobType
EntityPhantom dt ()F getSoundVolume
EntityPhantom m ()LVec3D; getMovementTarget
EntityPhantom b (LEntityPhantom;)LEntityPhantom$AttackPhase; access$500
EntityPhantom c (LEntityPhantom;)Ljava/util/Random; access$600
EntityPhantom d (LEntityPhantom;)Ljava/util/Random; access$700
EntityPhantom e (LEntityPhantom;)Ljava/util/Random; access$800
EntityPhantom f (LEntityPhantom;)Ljava/util/Random; access$900
EntityPhantom g (LEntityPhantom;)Ljava/util/Random; access$1000
EntityPhantom h (LEntityPhantom;)Ljava/util/Random; access$1100
EntityPhantom i (LEntityPhantom;)Ljava/util/Random; access$1200
EntityPhantom j (LEntityPhantom;)Ljava/util/Random; access$1300
EntityPhantom k (LEntityPhantom;)LBlockPosition; access$1400
EntityPhantom l (LEntityPhantom;)Ljava/util/Random; access$1500
EntityPhantom m (LEntityPhantom;)Ljava/util/Random; access$1600
EntityPhantom n (LEntityPhantom;)Ljava/util/Random; access$1700
EntityPhantom o (LEntityPhantom;)Ljava/util/Random; access$1800
EntityPhantom$AttackPhase a CIRCLE
EntityPhantom$AttackPhase b SWOOP
EntityPhantom$AttackPhase c $VALUES
EntityPhantom$AttackPhase values ()[LEntityPhantom$AttackPhase; values
EntityPhantom$AttackPhase valueOf (Ljava/lang/String;)LEntityPhantom$AttackPhase; valueOf
EntityPigZombie bv angerLevel
EntityPigZombie bw soundDelay
EntityPigZombie bx hurtBy
EntityPigZombie b SPEED_MODIFIER_ATTACKING_UUID
EntityPigZombie c SPEED_MODIFIER_ATTACKING
EntityPigZombie k ()V addBehaviourGoals
EntityPigZombie cF ()V registerAttributes
EntityPigZombie ez ()Z convertsInWater
EntityPigZombie M ()V customServerAiStep
EntityPigZombie b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkZombifiedPiglinSpawnRules
EntityPigZombie b (LNBTTagCompound;)V addAdditionalSaveData
EntityPigZombie j (LEntityLiving;)Z makeAngry
EntityPigZombie eF ()I getAngerTime
EntityPigZombie eG ()Z isAngry
EntityPigZombie H ()LSoundEffect; getAmbientSound
EntityPigZombie e (LDamageSource;)LSoundEffect; getHurtSound
EntityPigZombie dd ()LSoundEffect; getDeathSound
EntityPigZombie ey ()LItemStack; getSkull
EntityPigZombie e (LEntityHuman;)Z isPreventingPlayerRest
EntityPillager bv inventory
EntityPillager eG ()LInventorySubcontainer; getInventory
EntityPillager b IS_CHARGING_CROSSBOW
EntityPillager o ()V registerGoals
EntityPillager cF ()V registerAttributes
EntityPillager w_ ()V defineSynchedData
EntityPillager ex ()Z isChargingCrossbow
EntityPillager b (Z)V setChargingCrossbow
EntityPillager L_ ()V onCrossbowAttackPerformed
EntityPillager b (LNBTTagCompound;)V addAdditionalSaveData
EntityPillager k ()LEntityIllagerAbstract$IllagerArmPose; getArmPose
EntityPillager ee ()I getMaxSpawnClusterSize
EntityPillager r (LEntity;)Z isAlliedTo
EntityPillager H ()LSoundEffect; getAmbientSound
EntityPillager dd ()LSoundEffect; getDeathSound
EntityPillager e (LDamageSource;)LSoundEffect; getHurtSound
EntityPillager b (LItem;)Z wantsItem
EntityPillager a_ (ILItemStack;)Z setSlot
EntityPillager m ()LSoundEffect; getCelebrateSound
GenericAttributes a MAX_HEALTH
GenericAttributes b FOLLOW_RANGE
GenericAttributes c KNOCKBACK_RESISTANCE
GenericAttributes d MOVEMENT_SPEED
GenericAttributes e FLYING_SPEED
GenericAttributes f ATTACK_DAMAGE
GenericAttributes g ATTACK_KNOCKBACK
GenericAttributes h ATTACK_SPEED
GenericAttributes i ARMOR
GenericAttributes j ARMOR_TOUGHNESS
GenericAttributes k LUCK
GenericAttributes l LOGGER
EntityShulker bv COLOR
EntityShulker bw COVERED_ARMOR_MODIFIER_UUID
EntityShulker bx COVERED_ARMOR_MODIFIER
EntityShulker b DATA_ATTACH_FACE_ID
EntityShulker c DATA_ATTACH_POS_ID
EntityShulker d DATA_PEEK_ID
EntityShulker by currentPeekAmountO
EntityShulker bz currentPeekAmount
EntityShulker bA oldAttachPosition
EntityShulker bB clientSideTeleportInterpolation
EntityShulker o ()V registerGoals
EntityShulker ax ()Z isMovementNoisy
EntityShulker cp ()LSoundCategory; getSoundSource
EntityShulker H ()LSoundEffect; getAmbientSound
EntityShulker D ()V playAmbientSound
EntityShulker dd ()LSoundEffect; getDeathSound
EntityShulker e (LDamageSource;)LSoundEffect; getHurtSound
EntityShulker w_ ()V defineSynchedData
EntityShulker cF ()V registerAttributes
EntityShulker p ()LEntityAIBodyControl; createBodyControl
EntityShulker b (LNBTTagCompound;)V addAdditionalSaveData
EntityShulker h ()V tick
EntityShulker d (DDD)V setPos
EntityShulker g (LBlockPosition;)LEnumDirection; findAttachableFace
EntityShulker k ()Z teleportSomewhere
EntityShulker l ()V aiStep
EntityShulker eE ()Z isClosed
EntityShulker ay ()LAxisAlignedBB; getCollideBox
EntityShulker m ()LEnumDirection; getAttachFace
EntityShulker ex ()LBlockPosition; getAttachPosition
EntityShulker h (LBlockPosition;)V setAttachPosition
EntityShulker ey ()I getRawPeekAmount
EntityShulker u (F)F getClientPeekAmount
EntityShulker ez ()I getClientSideTeleportInterpolation
EntityShulker eA ()LBlockPosition; getOldAttachPosition
EntityShulker b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityShulker N ()I getMaxHeadXRot
EntityShulker ec ()I getMaxHeadYRot
EntityShulker i (LEntity;)V push
EntityShulker bb ()F getPickRadius
EntityShulker eB ()Z hasValidInterpolationPositions
EntityShulker eC ()V setDefaultColor
EntityShulker eD ()LEnumColor; getColor
EntityShulker b (LEntityShulker;)Ljava/util/Random; access$200
EntityShulker c (LEntityShulker;)Ljava/util/Random; access$300
EntityShulker d (LEntityShulker;)Ljava/util/Random; access$400
EntityShulker e (LEntityShulker;)Ljava/util/Random; access$500
EntitySilverfish$PathfinderGoalSilverfishWakeOthers a silverfish
EntitySilverfish$PathfinderGoalSilverfishWakeOthers b lookForFriends
EntitySilverfish$PathfinderGoalSilverfishWakeOthers g ()V notifyHurt
EntitySilverfish$PathfinderGoalSilverfishWakeOthers e ()V tick
EntitySlime a (IZ)V setSize
EntitySlime ey ()LSoundEffect; getSoundSquish
EntitySlime ez ()LSoundEffect; getSoundJump
EntitySlime eA ()I getSize
EntitySlime bv ID_SIZE
EntitySlime b targetSquish
EntitySlime c squish
EntitySlime d oSquish
EntitySlime bw wasOnGround
EntitySlime o ()V registerGoals
EntitySlime w_ ()V defineSynchedData
EntitySlime cF ()V registerAttributes
EntitySlime b (LNBTTagCompound;)V addAdditionalSaveData
EntitySlime eB ()Z isTiny
EntitySlime k ()LParticleParam; getParticleType
EntitySlime K ()Z shouldDespawnInPeaceful
EntitySlime h ()V tick
EntitySlime ev ()V decreaseSquish
EntitySlime m ()I getJumpDelay
EntitySlime z_ ()V refreshDimensions
EntitySlime U ()LEntityTypes; getType
EntitySlime aa ()V remove
EntitySlime i (LEntity;)V push
EntitySlime b (LEntityHuman;)V playerTouch
EntitySlime j (LEntityLiving;)V dealDamage
EntitySlime b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntitySlime ew ()Z isDealsDamage
EntitySlime ex ()F getAttackDamage
EntitySlime e (LDamageSource;)LSoundEffect; getHurtSound
EntitySlime dd ()LSoundEffect; getDeathSound
EntitySlime I ()LMinecraftKey; getDefaultLootTable
EntitySlime c (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkSlimeSpawnRules
EntitySlime dt ()F getSoundVolume
EntitySlime N ()I getMaxHeadXRot
EntitySlime eC ()Z doPlayJumpSound
EntitySlime dx ()V jumpFromGround
EntitySlime eD ()F getSoundPitch
EntitySlime k (LEntityLiving;)Z lambda$registerGoals$0
EntitySlime b (LEntitySlime;)Z access$100
EntityIllagerWizard a (LEntityIllagerWizard$Spell;)V setSpell
EntityIllagerWizard eH ()LEntityIllagerWizard$Spell; getSpell
EntityIllagerWizard ex ()LSoundEffect; getSoundCastSpell
EntityIllagerWizard bv DATA_SPELL_CASTING_ID
EntityIllagerWizard b spellCastingTickCount
EntityIllagerWizard bw currentSpell
EntityIllagerWizard w_ ()V defineSynchedData
EntityIllagerWizard b (LNBTTagCompound;)V addAdditionalSaveData
EntityIllagerWizard k ()LEntityIllagerAbstract$IllagerArmPose; getArmPose
EntityIllagerWizard eG ()Z isCastingSpell
EntityIllagerWizard M ()V customServerAiStep
EntityIllagerWizard h ()V tick
EntityIllagerWizard eI ()I getSpellCastingTime
EntityIllagerWizard$Spell a NONE
EntityIllagerWizard$Spell b SUMMON_VEX
EntityIllagerWizard$Spell c FANGS
EntityIllagerWizard$Spell d WOLOLO
EntityIllagerWizard$Spell e DISAPPEAR
EntityIllagerWizard$Spell f BLINDNESS
EntityIllagerWizard$Spell g id
EntityIllagerWizard$Spell h spellColor
EntityIllagerWizard$Spell i $VALUES
EntityIllagerWizard$Spell values ()[LEntityIllagerWizard$Spell; values
EntityIllagerWizard$Spell valueOf (Ljava/lang/String;)LEntityIllagerWizard$Spell; valueOf
EntityIllagerWizard$Spell b (LEntityIllagerWizard$Spell;)[D access$100
EntityVex ex ()Z isCharging
EntityVex t (Z)V setCharging
EntityVex b DATA_FLAGS_ID
EntityVex c owner
EntityVex d boundOrigin
EntityVex bv hasLimitedLife
EntityVex bw limitedLifeTicks
EntityVex h ()V tick
EntityVex o ()V registerGoals
EntityVex cF ()V registerAttributes
EntityVex w_ ()V defineSynchedData
EntityVex b (LNBTTagCompound;)V addAdditionalSaveData
EntityVex k ()LEntityInsentient; getOwner
EntityVex m ()LBlockPosition; getBoundOrigin
EntityVex g (LBlockPosition;)V setBoundOrigin
EntityVex b (I)Z getVexFlag
EntityVex H ()LSoundEffect; getAmbientSound
EntityVex dd ()LSoundEffect; getDeathSound
EntityVex e (LDamageSource;)LSoundEffect; getHurtSound
EntityVex aO ()F getBrightness
EntityVex b (LEntityVex;)LControllerMove; access$100
EntityVex c (LEntityVex;)LControllerMove; access$200
EntityVex d (LEntityVex;)Ljava/util/Random; access$300
EntityVex e (LEntityVex;)Ljava/util/Random; access$400
EntityVex f (LEntityVex;)Ljava/util/Random; access$500
EntityVex g (LEntityVex;)Ljava/util/Random; access$600
EntityVex h (LEntityVex;)LControllerMove; access$700
EntityVex i (LEntityVex;)LEntityInsentient; access$800
EntityZombie bC drownedConversionTime
EntityZombie bx DROWN_CONVERTING
EntityZombie a (I)V startDrownedConversion
EntityZombie a (LDamageSource;F)Z damageEntity
EntityZombie ex ()LSoundEffect; getSoundStep
EntityZombie eD ()Z isDrownConverting
EntityZombie a (Z)V setBaby
EntityZombie d SPAWN_REINFORCEMENTS_CHANCE
EntityZombie b SPEED_MODIFIER_BABY_UUID
EntityZombie c SPEED_MODIFIER_BABY
EntityZombie bv DATA_BABY_ID
EntityZombie bw DATA_SPECIAL_TYPE_ID
EntityZombie by DOOR_BREAKING_PREDICATE
EntityZombie bz breakDoorGoal
EntityZombie bA canBreakDoors
EntityZombie bB inWaterTime
EntityZombie o ()V registerGoals
EntityZombie k ()V addBehaviourGoals
EntityZombie cF ()V registerAttributes
EntityZombie w_ ()V defineSynchedData
EntityZombie eE ()Z canBreakDoors
EntityZombie u (Z)V setCanBreakDoors
EntityZombie m ()Z supportsBreakDoorGoal
EntityZombie x_ ()Z isBaby
EntityZombie d (LEntityHuman;)I getExperienceReward
EntityZombie ez ()Z convertsInWater
EntityZombie h ()V tick
EntityZombie l ()V aiStep
EntityZombie eB ()V doUnderWaterConversion
EntityZombie b (LEntityTypes;)V convertTo
EntityZombie K_ ()Z isSunSensitive
EntityZombie B (LEntity;)Z doHurtTarget
EntityZombie H ()LSoundEffect; getAmbientSound
EntityZombie e (LDamageSource;)LSoundEffect; getHurtSound
EntityZombie dd ()LSoundEffect; getDeathSound
EntityZombie dp ()LEnumMonsterType; getMobType
EntityZombie b (LNBTTagCompound;)V addAdditionalSaveData
EntityZombie b (LEntityLiving;)V killed
EntityZombie b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityZombie h (LItemStack;)Z canHoldItem
EntityZombie u (F)V handleAttributes
EntityZombie aX ()D getRidingHeight
EntityZombie ey ()LItemStack; getSkull
EntityZombieVillager b CONVERTING
EntityZombieVillager bv conversionTime
EntityZombieVillager bw conversionPlayer
EntityZombieVillager a (LVillagerData;)V setVillagerData
EntityZombieVillager a (Ljava/util/UUID;I)V startConversion
EntityZombieVillager eG ()LVillagerData; getVillagerData
EntityZombieVillager eI ()I getConversionProgress
EntityZombieVillager eF ()Z isConverting
EntityZombieVillager g (LNBTTagCompound;)V setOffers
EntityZombieVillager c DATA_VILLAGER_DATA
EntityZombieVillager bx gossips
EntityZombieVillager by tradeOffers
EntityZombieVillager bz villagerXp
EntityZombieVillager w_ ()V defineSynchedData
EntityZombieVillager b (LNBTTagCompound;)V addAdditionalSaveData
EntityZombieVillager h ()V tick
EntityZombieVillager b (LEntityHuman;LEnumHand;)Z mobInteract
EntityZombieVillager ez ()Z convertsInWater
EntityZombieVillager h (D)Z removeWhenFarAway
EntityZombieVillager du ()F getVoicePitch
EntityZombieVillager H ()LSoundEffect; getAmbientSound
EntityZombieVillager e (LDamageSource;)LSoundEffect; getHurtSound
EntityZombieVillager dd ()LSoundEffect; getDeathSound
EntityZombieVillager ex ()LSoundEffect; getStepSound
EntityZombieVillager ey ()LItemStack; getSkull
EntityZombieVillager eH ()I getVillagerXp
EntityVillagerAbstract bv trades
EntityVillagerAbstract bx tradingPlayer
EntityVillagerAbstract by inventory
EntityVillagerAbstract eH ()LInventorySubcontainer; getInventory
EntityVillagerAbstract bw DATA_UNHAPPY_COUNTER
EntityVillagerAbstract ex ()I getUnhappyCounter
EntityVillagerAbstract s (I)V setUnhappyCounter
EntityVillagerAbstract ey ()I getVillagerXp
EntityVillagerAbstract b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityVillagerAbstract w_ ()V defineSynchedData
EntityVillagerAbstract e (LEntityHuman;)V setTradingPlayer
EntityVillagerAbstract ez ()LEntityHuman; getTradingPlayer
EntityVillagerAbstract eA ()Z isTrading
EntityVillagerAbstract eB ()LMerchantRecipeList; getOffers
EntityVillagerAbstract t (I)V overrideXp
EntityVillagerAbstract b (LMerchantRecipe;)V rewardTradeXp
EntityVillagerAbstract eC ()Z showProgressBar
EntityVillagerAbstract k (LItemStack;)V notifyTradeUpdated
EntityVillagerAbstract eD ()LSoundEffect; getNotifyTradeSound
EntityVillagerAbstract t (Z)LSoundEffect; getTradeUpdatedSound
EntityVillagerAbstract eE ()V playCelebrateSound
EntityVillagerAbstract b (LNBTTagCompound;)V addAdditionalSaveData
EntityVillagerAbstract eF ()V stopTrading
EntityVillagerAbstract a_ (ILItemStack;)Z setSlot
EntityVillagerAbstract eI ()LWorld; getLevel
EntityVillagerAbstract eJ ()V updateTrades
EntityVillagerAbstract M_ ()LIInventory; getInventory
EntityVillager a (LVillagerData;)V setVillagerData
EntityVillager i ()Z canBreed
EntityVillager fd ()V populateTrades
EntityVillager u (I)V setExperience
EntityVillager by DATA_VILLAGER_DATA
EntityVillager bw FOOD_POINTS
EntityVillager bz WANTED_ITEMS
EntityVillager bA updateMerchantTimer
EntityVillager bB increaseProfessionLevelOnUpdate
EntityVillager bC lastTradedPlayer
EntityVillager bD chasing
EntityVillager bE foodLevel
EntityVillager bF gossips
EntityVillager bG lastGossipTime
EntityVillager bH lastGossipDecayTime
EntityVillager bI villagerXp
EntityVillager bJ lastRestockGameTime
EntityVillager bK numberOfRestocksToday
EntityVillager bL lastRestockCheckDayTime
EntityVillager bM MEMORY_TYPES
EntityVillager bN SENSOR_TYPES
EntityVillager bx POI_MEMORIES
EntityVillager cE ()LBehaviorController; getBrain
EntityVillager m ()V ageBoundaryReached
EntityVillager cF ()V registerAttributes
EntityVillager M ()V customServerAiStep
EntityVillager h ()V tick
EntityVillager b (LEntityHuman;LEnumHand;)Z mobInteract
EntityVillager eU ()V setUnhappy
EntityVillager g (LEntityHuman;)V startTrading
EntityVillager e (LEntityHuman;)V setTradingPlayer
EntityVillager eF ()V stopTrading
EntityVillager eV ()V resetSpecialPrices
EntityVillager eK ()Z canRestock
EntityVillager eL ()V restock
EntityVillager eW ()Z needsToRestock
EntityVillager eX ()Z allowedToRestock
EntityVillager eM ()Z shouldRestock
EntityVillager eY ()V catchUpDemand
EntityVillager eZ ()V updateDemand
EntityVillager h (LEntityHuman;)V updateSpecialPrices
EntityVillager w_ ()V defineSynchedData
EntityVillager b (LNBTTagCompound;)V addAdditionalSaveData
EntityVillager h (D)Z removeWhenFarAway
EntityVillager H ()LSoundEffect; getAmbientSound
EntityVillager e (LDamageSource;)LSoundEffect; getHurtSound
EntityVillager dd ()LSoundEffect; getDeathSound
EntityVillager eN ()V playWorkSound
EntityVillager eG ()LVillagerData; getVillagerData
EntityVillager b (LMerchantRecipe;)V rewardTradeXp
EntityVillager u (Z)V setChasing
EntityVillager eO ()Z isChasing
EntityVillager fa ()Z hungry
EntityVillager fb ()V eatUntilFull
EntityVillager f (LEntityHuman;)I getPlayerReputation
EntityVillager v (I)V digestFood
EntityVillager eP ()V eatAndDigestFood
EntityVillager b (LMerchantRecipeList;)V setOffers
EntityVillager fc ()Z shouldIncreaseLevel
EntityVillager bE ()LIChatBaseComponent; getTypeName
EntityVillager b (LEntityAgeable;)LEntityVillager; getBreedOffspring
EntityVillager i (LItemStack;)Z wantsToPickUp
EntityVillager eQ ()Z hasExcessFood
EntityVillager eR ()Z wantsMoreFood
EntityVillager fe ()I countFoodPointsInInventory
EntityVillager ff ()V makeBread
EntityVillager eS ()Z hasFarmSeeds
EntityVillager eJ ()V updateTrades
EntityVillager fg ()V maybeDecayGossip
EntityVillager b (J)V sawGolem
EntityVillager c (J)Z hasSeenGolemRecently
EntityVillager fh ()LEntityIronGolem; trySpawnGolem
EntityVillager ey ()I getVillagerXp
EntityVillager fi ()V resetNumberOfRestocks
EntityVillager eT ()LReputation; getGossips
EntityVillager L ()V sendDebugPackets
EntityVillager b (LBlockPosition;)V startSleeping
EntityVillager ea ()V stopSleeping
EntityVillager d (J)Z golemSpawnConditionsMet
EntityVillager b (JLEntityVillager;)Z lambda$spawnGolemIfNeeded$8
EntityVillager j (LEntityLiving;)Z lambda$tellWitnessesThatIWasMurdered$3
EntityVillager b (LEntityVillager;LPointOfInterestType;)Z lambda$static$1
EntityVillager c (LEntityVillager;LPointOfInterestType;)Z lambda$static$0
VillagerData a ()LVillagerType; getType
VillagerData a (I)LVillagerData; withLevel
VillagerData a (LVillagerProfession;)LVillagerData; withProfession
VillagerData a (LVillagerType;)LVillagerData; withType
VillagerData b ()LVillagerProfession; getProfession
VillagerData c ()I getLevel
VillagerData a NEXT_LEVEL_XP_THRESHOLDS
VillagerData b type
VillagerData c profession
VillagerData d level
VillagerData b (I)I getMinXpPerLevel
VillagerData c (I)I getMaxXpPerLevel
VillagerData d (I)Z canLevelUp
VillagerDataHolder eG ()LVillagerData; getVillagerData
VillagerProfession a NONE
VillagerProfession b ARMORER
VillagerProfession c BUTCHER
VillagerProfession d CARTOGRAPHER
VillagerProfession e CLERIC
VillagerProfession f FARMER
VillagerProfession g FISHERMAN
VillagerProfession h FLETCHER
VillagerProfession i LEATHERWORKER
VillagerProfession j LIBRARIAN
VillagerProfession k MASON
VillagerProfession l NITWIT
VillagerProfession m SHEPHERD
VillagerProfession n TOOLSMITH
VillagerProfession o WEAPONSMITH
VillagerProfession p name
VillagerProfession q jobPoiType
VillagerProfession r requestedItems
VillagerProfession s secondaryPoi
VillagerProfession t workSound
VillagerProfession b ()LPointOfInterestType; getJobPoiType
VillagerProfession c ()Lcom/google/common/collect/ImmutableSet; getRequestedItems
VillagerProfession d ()Lcom/google/common/collect/ImmutableSet; getSecondaryPoi
VillagerProfession e ()LSoundEffect; getWorkSound
VillagerProfession toString ()Ljava/lang/String; toString
VillagerType a DESERT
VillagerType b JUNGLE
VillagerType c PLAINS
VillagerType d SAVANNA
VillagerType e SNOW
VillagerType f SWAMP
VillagerType g TAIGA
VillagerType h BY_BIOME
PlayerAbilities a isInvulnerable
PlayerAbilities b isFlying
PlayerAbilities c canFly
PlayerAbilities d canInstantlyBuild
PlayerAbilities e mayBuild
PlayerAbilities f flySpeed
PlayerAbilities g walkSpeed
PlayerAbilities b (LNBTTagCompound;)V loadSaveData
PlayerAbilities b ()F getWalkingSpeed
PlayerAbilities b (F)V setWalkingSpeed
EnumChatVisibility a FULL
EnumChatVisibility b SYSTEM
EnumChatVisibility c HIDDEN
EnumChatVisibility d BY_ID
EnumChatVisibility e id
EnumChatVisibility f key
EnumChatVisibility g $VALUES
EnumChatVisibility values ()[LEnumChatVisibility; values
EnumChatVisibility valueOf (Ljava/lang/String;)LEnumChatVisibility; valueOf
EnumChatVisibility b ()Ljava/lang/String; getKey
EnumChatVisibility b (I)[LEnumChatVisibility; lambda$static$0
PlayerInventory a items
PlayerInventory b armor
PlayerInventory c extraSlots
PlayerInventory d itemInHandIndex
PlayerInventory e player
PlayerInventory g carried
PlayerInventory a (LItemStack;LItemStack;)Z isSimilarAndNotFull
PlayerInventory d (LItemStack;)I firstPartial
PlayerInventory e (LItemStack;)Z pickup
PlayerInventory f ()LItemStack; getItemInHand
PlayerInventory g ()I getHotbarSize
PlayerInventory g (LItemStack;)V setCarried
PlayerInventory h ()I getFirstEmptySlotIndex
PlayerInventory k ()V dropContents
PlayerInventory m ()LItemStack; getCarried
PlayerInventory f compartments
PlayerInventory h timesChanged
PlayerInventory b (LItemStack;LItemStack;)Z isSameItem
PlayerInventory c (I)V pickSlot
PlayerInventory d (I)Z isHotbarSlot
PlayerInventory b (LItemStack;)I findSlotMatchingItem
PlayerInventory c (LItemStack;)I findSlotMatchingUnusedItem
PlayerInventory i ()I getSuitableHotbarSlot
PlayerInventory i (LItemStack;)I addResource
PlayerInventory d (ILItemStack;)I addResource
PlayerInventory j ()V tick
PlayerInventory c (ILItemStack;)Z add
PlayerInventory f (LItemStack;)V removeItem
PlayerInventory b (I)LItemStack; removeItemNoUpdate
PlayerInventory b (LNBTTagList;)V load
PlayerInventory Q_ ()I getContainerSize
PlayerInventory c ()Z isEmpty
PlayerInventory P ()LIChatBaseComponent; getName
PlayerInventory b (LIBlockData;)Z canDestroy
PlayerInventory e (I)LItemStack; getArmor
PlayerInventory e ()V setChanged
PlayerInventory l ()I getTimesChanged
PlayerInventory h (LItemStack;)Z contains
PlayerInventory P_ ()V clearContent
PlayerInventory j (LItemStack;)Ljava/lang/String; lambda$add$0
EntityHuman bJ abilities
EntityHuman bK expLevel
EntityHuman bL expTotal
EntityHuman bM exp
EntityHuman bP hookedFish
EntityHuman bt inventory
EntityHuman bu enderChest
EntityHuman bv defaultContainer
EntityHuman bw activeContainer
EntityHuman bx foodData
EntityHuman f sleepTicks
EntityHuman a (ILMerchantRecipeList;IIZZ)V openTrade
EntityHuman a (LBlockPosition;)Lcom/mojang/datafixers/util/Either; sleep
EntityHuman a (LEntityHorseAbstract;LIInventory;)V openHorseInventory
EntityHuman a (LITileInventory;)Ljava/util/OptionalInt; openContainer
EntityHuman a (LItemStack;I)V enchantDone
EntityHuman a (LItemStack;LEnumHand;)V openBook
EntityHuman a (LItemStack;Z)LEntityItem; drop
EntityHuman a (LTileEntitySign;)V openSign
EntityHuman a (Ljava/util/Collection;)I discoverRecipes
EntityHuman a (ZZ)V wakeup
EntityHuman b (Ljava/util/Collection;)I undiscoverRecipes
EntityHuman c (I)V levelDown
EntityHuman c (LIBlockData;)Z hasBlock
EntityHuman c (Ljava/lang/String;)Ljava/util/UUID; getOfflineUUID
EntityHuman d (I)V giveExp
EntityHuman eh ()I getScore
EntityHuman ei ()V removeCursedItems
EntityHuman eI ()Z isCreativeAndOp
EntityHuman em ()Lcom/mojang/authlib/GameProfile; getProfile
EntityHuman en ()Z isDeeplySleeping
EntityHuman eq ()V startGliding
EntityHuman er ()V stopGliding
EntityHuman et ()I getExpToLevel
EntityHuman eu ()LFoodMetaData; getFoodData
EntityHuman ex ()LInventoryEnderChest; getEnderChest
EntityHuman ey ()V releaseShoulderEntities
EntityHuman ez ()LScoreboard; getScoreboard
EntityHuman eC ()LNBTTagCompound; getShoulderEntityLeft
EntityHuman eD ()LNBTTagCompound; getShoulderEntityRight
EntityHuman eG ()LItemCooldown; getCooldownTracker
EntityHuman f (LEntity;)V attack
EntityHuman h (LNBTTagCompound;)V setShoulderEntityLeft
EntityHuman i (LNBTTagCompound;)V setShoulderEntityRight
EntityHuman k (LNBTTagCompound;)V spawnEntityFromShoulder
EntityHuman o (DDD)V checkMovement
EntityHuman r ()V updateAbilities
EntityHuman q (F)V applyExhaustion
EntityHuman s (I)V setScore
EntityHuman t (I)V addScore
EntityHuman u ()Z isCreative
EntityHuman k ()V closeInventory
EntityHuman bo STANDING_DIMENSIONS
EntityHuman b POSES
EntityHuman c DATA_PLAYER_ABSORPTION_ID
EntityHuman d DATA_SCORE_ID
EntityHuman bp DATA_PLAYER_MODE_CUSTOMISATION
EntityHuman bq DATA_PLAYER_MAIN_HAND
EntityHuman br DATA_SHOULDER_LEFT
EntityHuman bs DATA_SHOULDER_RIGHT
EntityHuman e timeEntitySatOnShoulder
EntityHuman by jumpTriggerTime
EntityHuman bz oBob
EntityHuman bA bob
EntityHuman bB takeXpDelay
EntityHuman bC xCloakO
EntityHuman bD yCloakO
EntityHuman bE zCloakO
EntityHuman bF xCloak
EntityHuman bG yCloak
EntityHuman bH zCloak
EntityHuman bI wasUnderwater
EntityHuman bN enchantmentSeed
EntityHuman bO defaultFlySpeed
EntityHuman g lastLevelUpTime
EntityHuman bQ gameProfile
EntityHuman bR reducedDebugInfo
EntityHuman bS lastItemInMainHand
EntityHuman bT cooldowns
EntityHuman cF ()V registerAttributes
EntityHuman w_ ()V defineSynchedData
EntityHuman h ()V tick
EntityHuman ec ()Z isSecondaryUseActive
EntityHuman ed ()Z wantsToStopRiding
EntityHuman ee ()Z isStayingOnGroundSurface
EntityHuman ef ()Z updateIsUnderwater
EntityHuman m ()V turtleHelmetTick
EntityHuman g ()LItemCooldown; createItemCooldowns
EntityHuman o ()V moveCloak
EntityHuman eg ()V updatePlayerPose
EntityHuman ae ()I getPortalWaitTime
EntityHuman aq ()LSoundEffect; getSwimSound
EntityHuman ar ()LSoundEffect; getSwimSplashSound
EntityHuman as ()LSoundEffect; getSwimHighSpeedSplashSound
EntityHuman bg ()I getDimensionChangingDelay
EntityHuman cp ()LSoundCategory; getSoundSource
EntityHuman cq ()I getFireImmuneTicks
EntityHuman aW ()V rideTick
EntityHuman Z ()V resetPos
EntityHuman dB ()V serverAiStep
EntityHuman l ()V aiStep
EntityHuman j (LNBTTagCompound;)V playShoulderEntityAmbientSound
EntityHuman c (LEntity;)V touch
EntityHuman da ()V dropEquipment
EntityHuman e (LDamageSource;)LSoundEffect; getHurtSound
EntityHuman dd ()LSoundEffect; getDeathSound
EntityHuman b (LIBlockData;)F getDestroySpeed
EntityHuman b (LNBTTagCompound;)V addAdditionalSaveData
EntityHuman b (LDamageSource;)Z isInvulnerableTo
EntityHuman e (LEntityLiving;)V blockUsingShield
EntityHuman b (LDamageSource;F)V hurtArmor
EntityHuman m (F)V hurtCurrentlyUsedShield
EntityHuman e (LDamageSource;F)V actuallyHurt
EntityHuman aX ()D getRidingHeight
EntityHuman j ()V stopRiding
EntityHuman dv ()Z isImmobile
EntityHuman h (LEntityLiving;)V doAutoAttackOnTouch
EntityHuman p (Z)V disableShield
EntityHuman b (LEntity;)V magicCrit
EntityHuman ej ()V sweepAttack
EntityHuman ek ()V respawn
EntityHuman aa ()V remove
EntityHuman el ()Z isLocalPlayer
EntityHuman ea ()V stopSleeping
EntityHuman eo ()I getSleepTimer
EntityHuman b (LStatistic;)V awardStat
EntityHuman dx ()V jumpFromGround
EntityHuman e (LVec3D;)V travel
EntityHuman aF ()V updateSwimming
EntityHuman f (LBlockPosition;)Z freeAt
EntityHuman dA ()F getSpeed
EntityHuman p (DDD)V checkRidingStatistiscs
EntityHuman b (FF)Z causeFallDamage
EntityHuman ep ()Z tryToStartFallFlying
EntityHuman aI ()V doWaterSplashEffect
EntityHuman o (I)LSoundEffect; getFallDamageSound
EntityHuman b (LEntityLiving;)V killed
EntityHuman es ()I getEnchantmentSeed
EntityHuman q (Z)Z canEat
EntityHuman ev ()Z isHurt
EntityHuman ew ()Z mayBuild
EntityHuman d (LEntityHuman;)I getExperienceReward
EntityHuman cL ()Z isAlwaysExperienceDropper
EntityHuman bV ()Z shouldShowName
EntityHuman ax ()Z isMovementNoisy
EntityHuman P ()LIChatBaseComponent; getName
EntityHuman b (LEnumItemSlot;)LItemStack; getItemBySlot
EntityHuman g (LItemStack;)Z addItem
EntityHuman bi ()Ljava/lang/Iterable; getHandSlots
EntityHuman bj ()Ljava/lang/Iterable; getArmorSlots
EntityHuman g (LNBTTagCompound;)Z setEntityOnShoulder
EntityHuman t ()Z isSpectator
EntityHuman bw ()Z isSwimming
EntityHuman bS ()Z isPushedByFluid
EntityHuman d ()LIChatBaseComponent; getDisplayName
EntityHuman eA ()LIChatBaseComponent; getDisplayNameWithUuid
EntityHuman c (LIChatBaseComponent;)LIChatBaseComponent; decorateDisplayNameComponent
EntityHuman bR ()Ljava/lang/String; getScoreboardName
EntityHuman b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityHuman p (F)V setAbsorptionAmount
EntityHuman dF ()F getAbsorptionAmount
EntityHuman a_ (ILItemStack;)Z setSlot
EntityHuman eB ()Z isReducedDebugInfo
EntityHuman r (Z)V setReducedDebugInfo
EntityHuman dH ()LEnumMainHand; getMainArm
EntityHuman eE ()F getCurrentItemAttackStrengthDelay
EntityHuman r (F)F getAttackStrengthScale
EntityHuman eF ()V resetAttackStrengthTicker
EntityHuman am ()F getBlockSpeedFactor
EntityHuman eH ()F getLuck
EntityHuman e (LItemStack;)Z canTakeItem
EntityHuman dV ()Lcom/google/common/collect/ImmutableList; getDismountPoses
EntityHuman f (LItemStack;)LItemStack; getProjectile
EntityHuman d (LEntity;)V lambda$respawnEntityOnShoulder$3
EntityHuman b (LEntityTypes;)V lambda$playShoulderEntityAmbientSound$1
EntityHuman c (LEntityTypes;)Z lambda$playShoulderEntityAmbientSound$0
EntityHuman$EnumBedResult a NOT_POSSIBLE_HERE
EntityHuman$EnumBedResult b NOT_POSSIBLE_NOW
EntityHuman$EnumBedResult c TOO_FAR_AWAY
EntityHuman$EnumBedResult d OBSTRUCTED
EntityHuman$EnumBedResult e OTHER_PROBLEM
EntityHuman$EnumBedResult f NOT_SAFE
EntityHuman$EnumBedResult g message
EntityHuman$EnumBedResult h $VALUES
EntityHuman$EnumBedResult values ()[LEntityHuman$EnumBedResult; values
EntityHuman$EnumBedResult valueOf (Ljava/lang/String;)LEntityHuman$EnumBedResult; valueOf
EntityArrow ao despawnCounter
EntityArrow aq damage
EntityArrow ar knockbackStrength
EntityArrow b inGround
EntityArrow d fromPlayer
EntityArrow e shake
EntityArrow a (I)V setKnockbackStrength
EntityArrow a (LEntity;)V setShooter
EntityArrow a (Z)V setCritical
EntityArrow b (B)V setPierceLevel
EntityArrow h (D)V setDamage
EntityArrow l ()LSoundEffect; getSoundHit
EntityArrow m ()LItemStack; getItemStack
EntityArrow n ()D getDamage
EntityArrow p ()Z isCritical
EntityArrow r ()B getPierceLevel
EntityArrow f ID_FLAGS
EntityArrow g PIERCE_LEVEL
EntityArrow an lastState
EntityArrow c inGroundTime
EntityArrow ap flightTime
EntityArrow as soundEvent
EntityArrow at piercingIgnoreEntityIds
EntityArrow au piercedAndKilledEntities
EntityArrow f ()Z isInGround
EntityArrow w_ ()V defineSynchedData
EntityArrow c (DDDFF)V shoot
EntityArrow j (DDD)V lerpMotion
EntityArrow h ()V tick
EntityArrow i ()V tickDespawn
EntityArrow v ()V resetPiercedEntities
EntityArrow k ()LSoundEffect; getDefaultHitGroundSoundEvent
EntityArrow b (LNBTTagCompound;)V addAdditionalSaveData
EntityArrow b (LEntityHuman;)V playerTouch
EntityArrow ax ()Z isMovementNoisy
EntityArrow o ()I getKnockback
EntityArrow bG ()Z isAttackable
EntityArrow q ()Z shotFromCrossbow
EntityArrow s ()F getWaterInertia
EntityArrow o (Z)V setNoPhysics
EntityArrow u ()Z isNoPhysics
EntityArrow p (Z)V setShotFromCrossbow
EntityArrow O ()LPacket; getAddEntityPacket
EntityArrow b (LEntity;)Z lambda$findHitEntity$0
EntityArrow$PickupStatus a DISALLOWED
EntityArrow$PickupStatus b ALLOWED
EntityArrow$PickupStatus c CREATIVE_ONLY
EntityArrow$PickupStatus d $VALUES
EntityArrow$PickupStatus values ()[LEntityArrow$PickupStatus; values
EntityArrow$PickupStatus valueOf (Ljava/lang/String;)LEntityArrow$PickupStatus; valueOf
EntityFireball b dirX
EntityFireball c dirY
EntityFireball d dirZ
EntityFireball e flightTime
EntityFireball w_ ()V defineSynchedData
EntityFireball h ()V tick
EntityFireball O_ ()Z shouldBurn
EntityFireball i ()LParticleParam; getTrailParticle
EntityFireball k ()F getInertia
EntityFireball b (LNBTTagCompound;)V addAdditionalSaveData
EntityFireball aQ ()Z isPickable
EntityFireball bb ()F getPickRadius
EntityFireball aO ()F getBrightness
EntityFireball O ()LPacket; getAddEntityPacket
EntityTippedArrow f COLOR
EntityTippedArrow g potionRegistry
EntityTippedArrow an effects
EntityTippedArrow ao hasColor
EntityTippedArrow a (LMobEffect;)V addEffect
EntityTippedArrow c (I)V setColor
EntityTippedArrow v ()I getColor
EntityTippedArrow b (LItemStack;)V setEffectsFromItem
EntityTippedArrow c (LItemStack;)I getCustomColor
EntityTippedArrow z ()V updateColor
EntityTippedArrow w_ ()V defineSynchedData
EntityTippedArrow h ()V tick
EntityTippedArrow b (I)V makeParticle
EntityTippedArrow b (LNBTTagCompound;)V addAdditionalSaveData
EntityTippedArrow m ()LItemStack; getPickupItem
EntityEvokerFangs f ()LEntityLiving; getOwner
EntityEvokerFangs b warmupDelayTicks
EntityEvokerFangs c sentSpikeEvent
EntityEvokerFangs d lifeTicks
EntityEvokerFangs e clientSideAttackStarted
EntityEvokerFangs f owner
EntityEvokerFangs g ownerUUID
EntityEvokerFangs w_ ()V defineSynchedData
EntityEvokerFangs b (LNBTTagCompound;)V addAdditionalSaveData
EntityEvokerFangs h ()V tick
EntityEvokerFangs d (LEntityLiving;)V dealDamageTo
EntityEvokerFangs O ()LPacket; getAddEntityPacket
EntityEnderSignal c targetX
EntityEnderSignal d targetY
EntityEnderSignal e targetZ
EntityEnderSignal f despawnTimer
EntityEnderSignal g shouldDropItem
EntityEnderSignal b DATA_ITEM_STACK
EntityEnderSignal b (LItemStack;)V setItem
EntityEnderSignal i ()LItemStack; getItemRaw
EntityEnderSignal f ()LItemStack; getItem
EntityEnderSignal w_ ()V defineSynchedData
EntityEnderSignal j (DDD)V lerpMotion
EntityEnderSignal h ()V tick
EntityEnderSignal b (LNBTTagCompound;)V addAdditionalSaveData
EntityEnderSignal aO ()F getBrightness
EntityEnderSignal bG ()Z isAttackable
EntityEnderSignal O ()LPacket; getAddEntityPacket
EntityEnderSignal c (LItemStack;)V lambda$setItem$0
EntityFireworks b FIREWORK_ITEM
EntityFireworks d SHOT_AT_ANGLE
EntityFireworks e ticksFlown
EntityFireworks f expectedLifespan
EntityFireworks g ridingEntity
EntityFireworks i ()Z isShotAtAngle
EntityFireworks k ()V explode
EntityFireworks l ()Z hasExplosions
EntityFireworks c DATA_ATTACHED_TO_TARGET
EntityFireworks w_ ()V defineSynchedData
EntityFireworks i (DDD)Z shouldRender
EntityFireworks h ()V tick
EntityFireworks m ()V dealExplosionDamage
EntityFireworks n ()Z isAttachedToEntity
EntityFireworks b (LNBTTagCompound;)V addAdditionalSaveData
EntityFireworks f ()LItemStack; getItem
EntityFireworks bG ()Z isAttackable
EntityFireworks O ()LPacket; getAddEntityPacket
EntityFireworks b (LEntity;)Z lambda$tick$1
EntityLargeFireball e yield
EntityLargeFireball b (LNBTTagCompound;)V addAdditionalSaveData
EntityLlamaSpit h ()V tick
EntityLlamaSpit w_ ()V defineSynchedData
EntityLlamaSpit O ()LPacket; getAddEntityPacket
EntityLlamaSpit b (LEntity;)Z lambda$tick$0
IProjectile c (DDDFF)V shoot
IProjectile b ownerUUID
IProjectile w ()LEntity; getOwner
IProjectile b (LNBTTagCompound;)V addAdditionalSaveData
IProjectile j (DDD)V lerpMotion
EntityShulkerBullet b shooter
EntityShulkerBullet c target
EntityShulkerBullet d dir
EntityShulkerBullet e flightSteps
EntityShulkerBullet f targetDeltaX
EntityShulkerBullet g targetDeltaY
EntityShulkerBullet an targetDeltaZ
EntityShulkerBullet ao ownerId
EntityShulkerBullet ap targetId
EntityShulkerBullet cp ()LSoundCategory; getSoundSource
EntityShulkerBullet b (LNBTTagCompound;)V addAdditionalSaveData
EntityShulkerBullet w_ ()V defineSynchedData
EntityShulkerBullet f ()LEnumDirection; getMoveDirection
EntityShulkerBullet cD ()V checkDespawn
EntityShulkerBullet h ()V tick
EntityShulkerBullet bl ()Z isOnFire
EntityShulkerBullet aO ()F getBrightness
EntityShulkerBullet aQ ()Z isPickable
EntityShulkerBullet O ()LPacket; getAddEntityPacket
EntitySpectralArrow f duration
EntitySpectralArrow h ()V tick
EntitySpectralArrow m ()LItemStack; getPickupItem
EntitySpectralArrow b (LNBTTagCompound;)V addAdditionalSaveData
EntityProjectileThrowable b (LItemStack;)V setItem
EntityProjectileThrowable f ()LItemStack; getItem
EntityProjectileThrowable c DATA_ITEM_STACK
EntityProjectileThrowable i ()LItem; getDefaultItem
EntityProjectileThrowable w_ ()V defineSynchedData
EntityProjectileThrowable b (LNBTTagCompound;)V addAdditionalSaveData
EntityProjectileThrowable c (LItemStack;)V lambda$setItem$0
EntityProjectile b inGround
EntityProjectile f shake
EntityProjectile c blockX
EntityProjectile d blockY
EntityProjectile e blockZ
EntityProjectile g leftOwner
EntityProjectile h ()V tick
EntityProjectile l ()F getGravity
EntityProjectile b (LNBTTagCompound;)V addAdditionalSaveData
EntityProjectile O ()LPacket; getAddEntityPacket
EntityProjectile b (LEntity;LEntity;)Z lambda$tick$1
EntityProjectile b (LEntity;)Z lambda$tick$0
EntityPotion m ()V splash
EntityPotion n ()Z isLingering
EntityPotion c WATER_SENSITIVE
EntityPotion i ()LItem; getDefaultItem
EntityPotion l ()F getGravity
EntityThrownTrident ao trident
EntityThrownTrident g ID_LOYALTY
EntityThrownTrident an ID_FOIL
EntityThrownTrident ap dealtDamage
EntityThrownTrident f clientSideReturnTridentTickCount
EntityThrownTrident w_ ()V defineSynchedData
EntityThrownTrident h ()V tick
EntityThrownTrident z ()Z isAcceptibleReturnOwner
EntityThrownTrident m ()LItemStack; getPickupItem
EntityThrownTrident v ()Z isFoil
EntityThrownTrident k ()LSoundEffect; getDefaultHitGroundSoundEvent
EntityThrownTrident b (LEntityHuman;)V playerTouch
EntityThrownTrident b (LNBTTagCompound;)V addAdditionalSaveData
EntityThrownTrident i ()V tickDespawn
EntityThrownTrident s ()F getWaterInertia
EntityThrownTrident i (DDD)Z shouldRender
EntityWitherSkull a (Z)V setCharged
EntityWitherSkull l ()Z isCharged
EntityWitherSkull e DATA_DANGEROUS
EntityWitherSkull k ()F getInertia
EntityWitherSkull bl ()Z isOnFire
EntityWitherSkull aQ ()Z isPickable
EntityWitherSkull w_ ()V defineSynchedData
EntityWitherSkull O_ ()Z shouldBurn
Raid g raiders
Raid h heroes
Raid i ticksActive
Raid j center
Raid k world
Raid l started
Raid m id
Raid n totalHealth
Raid o badOmenLevel
Raid p active
Raid q groupsSpawned
Raid r bossBattle
Raid s postRaidTicks
Raid t preRaidTicks
Raid u random
Raid v numGroups
Raid w status
Raid d ()Z isStopped
Raid e ()Z isVictory
Raid f ()Z isLoss
Raid i ()LWorld; getWorld
Raid j ()Z isStarted
Raid k ()I getGroupsSpawned
Raid l ()I getMaxBadOmenLevel
Raid m ()I getBadOmenLevel
Raid n ()V stop
Raid p ()V updateProgress
Raid q ()F sumMobHealth
Raid t ()LBlockPosition; getCenter
Raid u ()I getId
Raid a RAID_NAME_COMPONENT
Raid b VICTORY
Raid c DEFEAT
Raid d RAID_BAR_VICTORY_COMPONENT
Raid e RAID_BAR_DEFEAT_COMPONENT
Raid f groupToLeaderMap
Raid x celebrationTicks
Raid y waveSpawnPos
Raid b ()Z isBetweenWaves
Raid c ()Z hasFirstWaveSpawned
Raid g ()F getTotalHealth
Raid h ()Ljava/util/Set; getAllRaiders
Raid x ()Ljava/util/function/Predicate; validPlayer
Raid y ()V updatePlayers
Raid o ()V tick
Raid z ()V moveRaidCenterToNearbyVillageSection
Raid d (I)Ljava/util/Optional; getValidSpawnPos
Raid A ()Z hasMoreWaves
Raid B ()Z isFinalWave
Raid C ()Z hasBonusWave
Raid D ()Z hasSpawnedBonusWave
Raid E ()Z shouldSpawnBonusGroup
Raid F ()V updateRaiders
Raid b (LBlockPosition;)V spawnGroup
Raid G ()Z shouldSpawnGroup
Raid r ()I getTotalRaidersAlive
Raid H ()V setDirty
Raid s ()LItemStack; getLeaderBannerInstance
Raid b (I)LEntityRaider; getLeader
Raid b (ILEntityRaider;)Z addWaveMob
Raid c (I)V removeLeader
Raid c (LBlockPosition;)V setCenter
Raid v ()Z isActive
Raid w ()F getEnchantOdds
Raid d (LBlockPosition;)D lambda$moveRaidCenterToNearbyVillageSection$1
Raid$Status a ONGOING
Raid$Status b VICTORY
Raid$Status c LOSS
Raid$Status d STOPPED
Raid$Status e VALUES
Raid$Status f $VALUES
Raid$Status values ()[LRaid$Status; values
Raid$Status valueOf (Ljava/lang/String;)LRaid$Status; valueOf
Raid$Status b (Ljava/lang/String;)LRaid$Status; getByName
Raid$Wave a VINDICATOR
Raid$Wave b EVOKER
Raid$Wave c PILLAGER
Raid$Wave d WITCH
Raid$Wave e RAVAGER
Raid$Wave f VALUES
Raid$Wave g entityType
Raid$Wave h spawnsPerWaveBeforeBonus
Raid$Wave i $VALUES
Raid$Wave values ()[LRaid$Wave; values
Raid$Wave valueOf (Ljava/lang/String;)LRaid$Wave; valueOf
Raid$Wave b (LRaid$Wave;)[I access$300
EntityRaider bw canJoinRaid
EntityRaider eJ ()Z isCanJoinRaid
EntityRaider w (Z)V setCanJoinRaid
EntityRaider c IS_CELEBRATING
EntityRaider b ALLOWED_ITEMS
EntityRaider d raid
EntityRaider bv wave
EntityRaider bx ticksOutsideRaid
EntityRaider o ()V registerGoals
EntityRaider w_ ()V defineSynchedData
EntityRaider l ()V aiStep
EntityRaider eC ()V updateNoActionTime
EntityRaider eD ()Z canJoinPatrol
EntityRaider eK ()LRaid; getCurrentRaid
EntityRaider eL ()Z hasActiveRaid
EntityRaider eM ()I getWave
EntityRaider eN ()Z isCelebrating
EntityRaider x (Z)V setCelebrating
EntityRaider b (LNBTTagCompound;)V addAdditionalSaveData
EntityRaider h (D)Z removeWhenFarAway
EntityRaider J ()Z requiresCustomPersistence
EntityRaider eO ()I getTicksOutsideRaid
EntityRaider b (I)V setTicksOutsideRaid
EntityRaider m ()LSoundEffect; getCelebrateSound
EntityRaider b (LEntityItem;)Z lambda$static$0
EntityRaider eP ()Ljava/util/function/Predicate; access$000
EntityRaider b (LEntityRaider;)F access$200
EntityRaider c (LEntityRaider;)F access$300
EntityRaider d (LEntityRaider;)Ljava/util/Random; access$400
EntityRaider e (LEntityRaider;)Z access$500
EntityRaider f (LEntityRaider;)Ljava/util/Random; access$600
EntityRaider g (LEntityRaider;)Ljava/util/Random; access$700
PersistentRaid a raids
PersistentRaid a (LBlockPosition;I)LRaid; getNearbyRaid
PersistentRaid b level
PersistentRaid c nextAvailableID
PersistentRaid d tick
PersistentRaid b (LNBTTagCompound;)LNBTTagCompound; save
PersistentRaid e ()I getUniqueId
Activity a CORE
Activity b IDLE
Activity c WORK
Activity d PLAY
Activity e REST
Activity f MEET
Activity g PANIC
Activity h RAID
Activity i PRE_RAID
Activity j HIDE
Activity k FIGHT
Activity l CELEBRATE
Activity m ADMIRE_ITEM
Activity n AVOID
Activity o RIDE
Activity p name
Activity toString ()Ljava/lang/String; toString
Schedule a EMPTY
Schedule b SIMPLE
Schedule c VILLAGER_BABY
Schedule d VILLAGER_DEFAULT
Schedule e timelines
Schedule b (LActivity;)LScheduleActivity; getTimelineFor
Schedule c (LActivity;)Ljava/util/List; getAllTimelinesExceptFor
EntityMinecartAbstract a (F)V setDamage
EntityMinecartAbstract b (LIBlockData;)V setDisplayBlock
EntityMinecartAbstract f ()D getMaxSpeed
EntityMinecartAbstract k ()V decelerate
EntityMinecartAbstract l ()F getDamage
EntityMinecartAbstract l (I)V setDisplayBlockOffset
EntityMinecartAbstract m ()I getType
EntityMinecartAbstract o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartAbstract p ()LIBlockData; getDisplayBlock
EntityMinecartAbstract r ()I getDisplayBlockOffset
EntityMinecartAbstract b DATA_ID_HURT
EntityMinecartAbstract c DATA_ID_HURTDIR
EntityMinecartAbstract d DATA_ID_DAMAGE
EntityMinecartAbstract e DATA_ID_DISPLAY_BLOCK
EntityMinecartAbstract f DATA_ID_DISPLAY_OFFSET
EntityMinecartAbstract g DATA_ID_CUSTOM_DISPLAY
EntityMinecartAbstract an flipped
EntityMinecartAbstract ao EXITS
EntityMinecartAbstract ap lSteps
EntityMinecartAbstract aq lx
EntityMinecartAbstract ar ly
EntityMinecartAbstract as lz
EntityMinecartAbstract at lyr
EntityMinecartAbstract au lxr
EntityMinecartAbstract av lxd
EntityMinecartAbstract aw lyd
EntityMinecartAbstract ax lzd
EntityMinecartAbstract ax ()Z isMovementNoisy
EntityMinecartAbstract w_ ()V defineSynchedData
EntityMinecartAbstract j (LEntity;)LAxisAlignedBB; getCollideAgainstBox
EntityMinecartAbstract aR ()Z isPushable
EntityMinecartAbstract aY ()D getRideHeight
EntityMinecartAbstract am ()F getBlockSpeedFactor
EntityMinecartAbstract bh ()V animateHurt
EntityMinecartAbstract aQ ()Z isPickable
EntityMinecartAbstract bX ()LEnumDirection; getMotionDirection
EntityMinecartAbstract h ()V tick
EntityMinecartAbstract i ()V comeOffTrack
EntityMinecartAbstract b (LBlockPosition;LIBlockData;)V moveAlongTrack
EntityMinecartAbstract o (DDD)LVec3D; getPos
EntityMinecartAbstract ca ()LAxisAlignedBB; getBoundingBoxForCulling
EntityMinecartAbstract b (LNBTTagCompound;)V addAdditionalSaveData
EntityMinecartAbstract i (LEntity;)V push
EntityMinecartAbstract j (DDD)V lerpMotion
EntityMinecartAbstract c (I)V setHurtTime
EntityMinecartAbstract d (I)V setHurtDir
EntityMinecartAbstract n ()I getHurtDir
EntityMinecartAbstract q ()LIBlockData; getDefaultDisplayBlockState
EntityMinecartAbstract s ()I getDefaultDisplayOffset
EntityMinecartAbstract u ()Z hasCustomDisplay
EntityMinecartAbstract O ()LPacket; getAddEntityPacket
EntityMinecartAbstract$EnumMinecartType a RIDEABLE
EntityMinecartAbstract$EnumMinecartType b CHEST
EntityMinecartAbstract$EnumMinecartType c FURNACE
EntityMinecartAbstract$EnumMinecartType d TNT
EntityMinecartAbstract$EnumMinecartType e SPAWNER
EntityMinecartAbstract$EnumMinecartType f HOPPER
EntityMinecartAbstract$EnumMinecartType g COMMAND_BLOCK
EntityMinecartAbstract$EnumMinecartType h $VALUES
EntityMinecartAbstract$EnumMinecartType values ()[LEntityMinecartAbstract$EnumMinecartType; values
EntityMinecartAbstract$EnumMinecartType valueOf (Ljava/lang/String;)LEntityMinecartAbstract$EnumMinecartType; valueOf
EntityMinecartContainer b items
EntityMinecartContainer d lootTable
EntityMinecartContainer e lootTableSeed
EntityMinecartContainer a (LMinecraftKey;J)V setLootTable
EntityMinecartContainer c dropEquipment
EntityMinecartContainer c ()Z isEmpty
EntityMinecartContainer b (I)LItemStack; removeItemNoUpdate
EntityMinecartContainer a_ (ILItemStack;)Z setSlot
EntityMinecartContainer e ()V setChanged
EntityMinecartContainer aa ()V remove
EntityMinecartContainer a_ (Z)V setDropContainerContent
EntityMinecartContainer b (LNBTTagCompound;)V addAdditionalSaveData
EntityMinecartContainer k ()V applyNaturalSlowdown
EntityMinecartContainer d (LEntityHuman;)V unpackLootTable
EntityMinecartContainer P_ ()V clearContent
EntityMinecartContainer createMenu (ILPlayerInventory;LEntityHuman;)LContainer; createMenu
EntityBoat a (F)V setDamage
EntityBoat a (LEntityBoat$EnumBoatType;)V setType
EntityBoat m ()F getDamage
EntityBoat p ()LEntityBoat$EnumBoatType; getType
EntityBoat b DATA_ID_HURT
EntityBoat c DATA_ID_HURTDIR
EntityBoat d DATA_ID_DAMAGE
EntityBoat e DATA_ID_TYPE
EntityBoat f DATA_ID_PADDLE_LEFT
EntityBoat g DATA_ID_PADDLE_RIGHT
EntityBoat an DATA_ID_BUBBLE_TIME
EntityBoat ao paddlePositions
EntityBoat ap invFriction
EntityBoat aq outOfControlTicks
EntityBoat ar deltaRotation
EntityBoat as lerpSteps
EntityBoat at lerpX
EntityBoat au lerpY
EntityBoat av lerpZ
EntityBoat aw lerpYRot
EntityBoat ax lerpXRot
EntityBoat ay inputLeft
EntityBoat az inputRight
EntityBoat aA inputUp
EntityBoat aB inputDown
EntityBoat aC waterLevel
EntityBoat aD landFriction
EntityBoat aE status
EntityBoat aF oldStatus
EntityBoat aG lastYd
EntityBoat aH isAboveBubbleColumn
EntityBoat aI bubbleColumnDirectionIsDown
EntityBoat aJ bubbleMultiplier
EntityBoat aK bubbleAngle
EntityBoat aL bubbleAngleO
EntityBoat ax ()Z isMovementNoisy
EntityBoat w_ ()V defineSynchedData
EntityBoat j (LEntity;)LAxisAlignedBB; getCollideAgainstBox
EntityBoat ay ()LAxisAlignedBB; getCollideBox
EntityBoat aR ()Z isPushable
EntityBoat aY ()D getRideHeight
EntityBoat k (Z)V onAboveBubbleCol
EntityBoat i (LEntity;)V push
EntityBoat f ()LItem; getDropItem
EntityBoat bh ()V animateHurt
EntityBoat aQ ()Z isPickable
EntityBoat bX ()LEnumDirection; getMotionDirection
EntityBoat h ()V tick
EntityBoat q ()V tickBubbleColumn
EntityBoat i ()LSoundEffect; getPaddleSound
EntityBoat r ()V tickLerp
EntityBoat s ()LEntityBoat$EnumStatus; getStatus
EntityBoat k ()F getWaterLevelAbove
EntityBoat l ()F getGroundFriction
EntityBoat u ()Z checkInWater
EntityBoat v ()LEntityBoat$EnumStatus; isUnderwater
EntityBoat w ()V floatBoat
EntityBoat z ()V controlBoat
EntityBoat k (LEntity;)V positionRider
EntityBoat c (LEntityLiving;)LVec3D; getDismountLocationForPassenger
EntityBoat l (LEntity;)V onPassengerTurned
EntityBoat b (LNBTTagCompound;)V addAdditionalSaveData
EntityBoat b (I)V setHurtTime
EntityBoat n ()I getHurtTime
EntityBoat d (I)V setBubbleTime
EntityBoat A ()I getBubbleTime
EntityBoat b (F)F getBubbleAngle
EntityBoat c (I)V setHurtDir
EntityBoat o ()I getHurtDir
EntityBoat q (LEntity;)Z canAddPassenger
EntityBoat ch ()LEntity; getControllingPassenger
EntityBoat O ()LPacket; getAddEntityPacket
EntityBoat$EnumStatus a IN_WATER
EntityBoat$EnumStatus b UNDER_WATER
EntityBoat$EnumStatus c UNDER_FLOWING_WATER
EntityBoat$EnumStatus d ON_LAND
EntityBoat$EnumStatus e IN_AIR
EntityBoat$EnumStatus f $VALUES
EntityBoat$EnumStatus values ()[LEntityBoat$EnumStatus; values
EntityBoat$EnumStatus valueOf (Ljava/lang/String;)LEntityBoat$EnumStatus; valueOf
EntityBoat$EnumBoatType a OAK
EntityBoat$EnumBoatType b SPRUCE
EntityBoat$EnumBoatType c BIRCH
EntityBoat$EnumBoatType d JUNGLE
EntityBoat$EnumBoatType e ACACIA
EntityBoat$EnumBoatType f DARK_OAK
EntityBoat$EnumBoatType g name
EntityBoat$EnumBoatType h planks
EntityBoat$EnumBoatType i $VALUES
EntityBoat$EnumBoatType values ()[LEntityBoat$EnumBoatType; values
EntityBoat$EnumBoatType valueOf (Ljava/lang/String;)LEntityBoat$EnumBoatType; valueOf
EntityBoat$EnumBoatType b ()LBlock; getPlanks
EntityBoat$EnumBoatType toString ()Ljava/lang/String; toString
EntityMinecartCommandBlock b COMMAND
EntityMinecartCommandBlock v ()LCommandBlockListenerAbstract; getCommandBlock
EntityMinecartCommandBlock c DATA_ID_LAST_OUTPUT
EntityMinecartCommandBlock d commandBlock
EntityMinecartCommandBlock e lastActivated
EntityMinecartCommandBlock w_ ()V defineSynchedData
EntityMinecartCommandBlock b (LNBTTagCompound;)V addAdditionalSaveData
EntityMinecartCommandBlock o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartCommandBlock q ()LIBlockData; getDefaultDisplayBlockState
EntityMinecartCommandBlock cf ()Z onlyOpCanSetNbt
EntityMinecartCommandBlock w ()LDataWatcherObject; access$000
EntityMinecartCommandBlock z ()LDataWatcherObject; access$100
EntityMinecartHopper m (I)V setCooldown
EntityMinecartHopper o (Z)V setEnabled
EntityMinecartHopper v ()Z isEnabled
EntityMinecartHopper d enabled
EntityMinecartHopper e cooldownTime
EntityMinecartHopper f lastPosition
EntityMinecartHopper o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartHopper q ()LIBlockData; getDefaultDisplayBlockState
EntityMinecartHopper s ()I getDefaultDisplayOffset
EntityMinecartHopper Q_ ()I getContainerSize
EntityMinecartHopper w ()LWorld; getLevel
EntityMinecartHopper z ()D getLevelX
EntityMinecartHopper A ()D getLevelY
EntityMinecartHopper B ()D getLevelZ
EntityMinecartHopper h ()V tick
EntityMinecartHopper C ()Z suckInItems
EntityMinecartHopper b (LNBTTagCompound;)V addAdditionalSaveData
EntityMinecartHopper D ()Z isOnCooldown
FoodMetaData a foodLevel
FoodMetaData b saturationLevel
FoodMetaData c exhaustionLevel
FoodMetaData d foodTickTimer
FoodMetaData a ()I getFoodLevel
FoodMetaData a (IF)V eat
FoodMetaData e ()F getSaturationLevel
FoodMetaData e lastFoodLevel
FoodMetaData b (LNBTTagCompound;)V addAdditionalSaveData
FoodMetaData b ()I getLastFoodLevel
FoodMetaData c ()Z needsFood
FoodMetaData d ()F getExhaustionLevel
FoodMetaData b (F)V setSaturation
FoodMetaData c (F)V setExhaustion
FoodInfo a ()I getNutrition
FoodInfo b ()F getSaturationModifier
FoodInfo a nutrition
FoodInfo b saturationModifier
FoodInfo c isMeat
FoodInfo d canAlwaysEat
FoodInfo e fastFood
FoodInfo f effects
FoodInfo c ()Z isMeat
FoodInfo d ()Z canAlwaysEat
FoodInfo e ()Z isFastFood
FoodInfo f ()Ljava/util/List; getEffects
Container a slots
Container b windowId
Container c items
Container g dragType
Container j listeners
Container a ()LContainers; getType
Container a (I)LSlot; getSlot
Container a (ILItemStack;)V setItem
Container a (LEntityHuman;)Z canUse
Container a (LICrafting;)V addSlotListener
Container b (LEntityHuman;I)LItemStack; shiftClick
Container b (LIInventory;I)LSlot; getSlot
Container d dataSlots
Container e menuType
Container f changeUid
Container h quickcraftStatus
Container i quickcraftSlots
Container k unSynchedPlayers
Container b (LICrafting;)V removeSlotListener
Container b ()LNonNullList; getItems
Container c ()V broadcastChanges
Container b (LEntityHuman;)V removed
Container b (ILItemStack;)V addItem
Container c (LEntityHuman;)Z isSynched
Container b (I)I getQuickcraftType
Container c (I)I getQuickcraftHeader
Container b (II)I getQuickcraftMask
Container d ()V resetQuickCraft
Container b (LSlot;)Z canDragTo
Container b (LIInventory;)I getRedstoneSignalFromContainer
ContainerFurnace d furnace
ContainerFurnace e data
ContainerFurnace c level
ContainerFurnace f recipeType
ContainerFurnace e ()V clearCraftingContent
ContainerFurnace f ()I getResultSlotIndex
ContainerFurnace g ()I getGridWidth
ContainerFurnace h ()I getGridHeight
ContainerFurnace i ()I getSize
ContainerFurnace b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerFurnace b (LItemStack;)Z isFuel
ContainerFurnace j ()I getBurnProgress
ContainerFurnace k ()I getLitProgress
ContainerFurnace l ()Z isLit
ContainerAnvil j levelCost
ContainerAnvil i renameText
ContainerAnvil g LOGGER
ContainerAnvil h repairItemCountCost
ContainerAnvil b (LEntityHuman;Z)Z mayPickup
ContainerAnvil e ()V createResult
ContainerAnvil d (I)I calculateIncreasedRepairCost
ContainerAnvil f ()I getCost
ContainerBeacon c beacon
ContainerBeacon e containerAccess
ContainerBeacon f containerProperties
ContainerBeacon d paymentSlot
ContainerBeacon b (LEntityHuman;)V removed
ContainerBeacon b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerBeacon e ()I getLevels
ContainerBeacon f ()LMobEffectList; getPrimaryEffect
ContainerBeacon g ()LMobEffectList; getSecondaryEffect
ContainerBeacon c (II)V updateEffects
ContainerBeacon h ()Z hasPayment
ContainerBrewingStand c brewingStand
ContainerBrewingStand d brewingStandData
ContainerBrewingStand e ingredientSlot
ContainerBrewingStand b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerBrewingStand e ()I getFuel
ContainerBrewingStand f ()I getBrewingTicks
ContainerCartography c inventory
ContainerCartography d containerAccess
ContainerCartography g resultInventory
ContainerCartography e quickMoved
ContainerCartography f lastSoundTime
ContainerCartography b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerCartography b (LEntityHuman;)V removed
ContainerCartography b (LContainerCartography;)Z access$100
ContainerChest c container
ContainerChest d containerRows
ContainerChest b (ILPlayerInventory;)LContainerChest; twoRows
ContainerChest c (ILPlayerInventory;)LContainerChest; threeRows
ContainerChest d (ILPlayerInventory;)LContainerChest; fourRows
ContainerChest e (ILPlayerInventory;)LContainerChest; fiveRows
ContainerChest f (ILPlayerInventory;)LContainerChest; sixRows
ContainerChest b (ILPlayerInventory;LIInventory;)LContainerChest; sixRows
ContainerChest b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerChest b (LEntityHuman;)V removed
ContainerChest e ()LIInventory; getContainer
ContainerChest f ()I getRowCount
InventoryClickType a PICKUP
InventoryClickType b QUICK_MOVE
InventoryClickType c SWAP
InventoryClickType d CLONE
InventoryClickType e THROW
InventoryClickType f QUICK_CRAFT
InventoryClickType g PICKUP_ALL
InventoryClickType h $VALUES
InventoryClickType values ()[LInventoryClickType; values
InventoryClickType valueOf (Ljava/lang/String;)LInventoryClickType; valueOf
IContainerProperties a (I)I getProperty
IContainerProperties a (II)V setProperty
ContainerAccess a (LWorld;LBlockPosition;)LContainerAccess; at
ContainerAccess a NULL
ICrafting a (LContainer;II)V setContainerData
InventoryCrafting a items
InventoryCrafting d container
InventoryCrafting b width
InventoryCrafting c height
InventoryCrafting Q_ ()I getContainerSize
InventoryCrafting c ()Z isEmpty
InventoryCrafting b (II)LItemStack; getItem
InventoryCrafting b (I)LItemStack; removeItemNoUpdate
InventoryCrafting e ()V setChanged
InventoryCrafting P_ ()V clearContent
InventoryCrafting f ()I getHeight
InventoryCrafting g ()I getWidth
ContainerWorkbench c craftInventory
ContainerWorkbench d resultInventory
ContainerWorkbench e containerAccess
ContainerWorkbench f player
ContainerWorkbench e ()V clearCraftingContent
ContainerWorkbench b (LEntityHuman;)V removed
ContainerWorkbench b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerWorkbench f ()I getResultSlotIndex
ContainerWorkbench g ()I getGridWidth
ContainerWorkbench h ()I getGridHeight
ContainerWorkbench i ()I getSize
ContainerProperty a (I)V set
ContainerProperty b ()I get
ContainerProperty a prevValue
ContainerProperty c ()Z checkAndClearUpdateFlag
ContainerDispenser c items
ContainerDispenser b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerDispenser b (LEntityHuman;)V removed
ContainerEnchantTable c costs
ContainerEnchantTable d enchantments
ContainerEnchantTable e levels
ContainerEnchantTable f enchantSlots
ContainerEnchantTable g containerAccess
ContainerEnchantTable h random
ContainerEnchantTable i enchantmentSeed
ContainerEnchantTable e ()I getGoldCount
ContainerEnchantTable f ()I getEnchantmentSeed
ContainerEnchantTable b (LEntityHuman;)V removed
ContainerEnchantTable b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerGrindstone c resultInventory
ContainerGrindstone d craftInventory
ContainerGrindstone e containerAccess
ContainerGrindstone e ()V createResult
ContainerGrindstone b (LItemStack;LItemStack;)LItemStack; mergeEnchants
ContainerGrindstone b (LEntityHuman;)V removed
ContainerGrindstone b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerHopper c hopper
ContainerHopper b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerHopper b (LEntityHuman;)V removed
ContainerHopper e ()LIInventory; getContainer
ContainerPlayer l craftInventory
ContainerPlayer m resultInventory
ContainerPlayer n owner
ContainerPlayer c BLOCK_ATLAS
ContainerPlayer d EMPTY_ARMOR_SLOT_HELMET
ContainerPlayer e EMPTY_ARMOR_SLOT_CHESTPLATE
ContainerPlayer f EMPTY_ARMOR_SLOT_LEGGINGS
ContainerPlayer g EMPTY_ARMOR_SLOT_BOOTS
ContainerPlayer h EMPTY_ARMOR_SLOT_SHIELD
ContainerPlayer j TEXTURE_EMPTY_SLOTS
ContainerPlayer k SLOT_IDS
ContainerPlayer i active
ContainerPlayer e ()V clearCraftingContent
ContainerPlayer b (LEntityHuman;)V removed
ContainerPlayer b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerPlayer f ()I getResultSlotIndex
ContainerPlayer g ()I getGridWidth
ContainerPlayer h ()I getGridHeight
ContainerPlayer i ()I getSize
ContainerPlayer j ()[LMinecraftKey; access$000
ContainerLectern c inventory
ContainerLectern d containerProperties
ContainerLectern e ()LItemStack; getBook
ContainerLectern f ()I getPage
ContainerLoom c containerAccess
ContainerLoom k craftInventory
ContainerLoom l resultInventory
ContainerLoom d selectedBannerPatternIndex
ContainerLoom e slotUpdateListener
ContainerLoom f bannerSlot
ContainerLoom g dyeSlot
ContainerLoom h patternSlot
ContainerLoom i resultSlot
ContainerLoom j lastSoundTime
ContainerLoom e ()I getSelectedBannerPatternIndex
ContainerLoom b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerLoom b (LEntityHuman;)V removed
ContainerLoom j ()V setupResultSlot
ContainerLoom f ()LSlot; getBannerSlot
ContainerLoom g ()LSlot; getDyeSlot
ContainerLoom h ()LSlot; getPatternSlot
ContainerLoom i ()LSlot; getResultSlot
ContainerLoom k ()V lambda$new$0
ContainerLoom b (LContainerLoom;)LSlot; access$100
ContainerLoom c (LContainerLoom;)LSlot; access$200
ContainerLoom d (LContainerLoom;)LContainerProperty; access$300
ContainerLoom e (LContainerLoom;)J access$400
Containers a GENERIC_9X1
Containers b GENERIC_9X2
Containers c GENERIC_9X3
Containers d GENERIC_9X4
Containers e GENERIC_9X5
Containers f GENERIC_9X6
Containers g GENERIC_3X3
Containers h ANVIL
Containers i BEACON
Containers j BLAST_FURNACE
Containers k BREWING_STAND
Containers l CRAFTING
Containers m ENCHANTMENT
Containers n FURNACE
Containers o GRINDSTONE
Containers p HOPPER
Containers q LECTERN
Containers r LOOM
Containers s MERCHANT
Containers t SHULKER_BOX
Containers v SMOKER
Containers w CARTOGRAPHY_TABLE
Containers x STONECUTTER
Containers u SMITHING
Containers y constructor
Containers b (ILPlayerInventory;)LContainerLectern; lambda$static$0
InventoryMerchant a merchant
InventoryMerchant b itemsInSlots
InventoryMerchant c recipe
InventoryMerchant d selectedIndex
InventoryMerchant g ()LMerchantRecipe; getRecipe
InventoryMerchant e futureXp
InventoryMerchant Q_ ()I getContainerSize
InventoryMerchant c ()Z isEmpty
InventoryMerchant d (I)Z isPaymentSlot
InventoryMerchant b (I)LItemStack; removeItemNoUpdate
InventoryMerchant e ()V setChanged
InventoryMerchant f ()V updateSellItem
InventoryMerchant c (I)V setSelectionHint
InventoryMerchant P_ ()V clearContent
InventoryMerchant h ()I getFutureXp
ContainerMerchant c merchant
ContainerMerchant d inventoryMerchant
ContainerMerchant e merchantLevel
ContainerMerchant f showProgressBar
ContainerMerchant g canRestock
ContainerMerchant d (I)V setSelectionHint
ContainerMerchant e ()I getTraderXp
ContainerMerchant f ()I getFutureTraderXp
ContainerMerchant e (I)V setXp
ContainerMerchant g ()I getTraderLevel
ContainerMerchant f (I)V setMerchantLevel
ContainerMerchant b (Z)V setCanRestock
ContainerMerchant h ()Z canRestock
ContainerMerchant b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerMerchant k ()V playTradeSound
ContainerMerchant b (LEntityHuman;)V removed
ContainerMerchant g (I)V tryMoveItems
ContainerMerchant c (ILItemStack;)V moveFromInventoryToPaymentSlot
ContainerMerchant b (LItemStack;LItemStack;)Z isSameItem
ContainerMerchant i ()LMerchantRecipeList; getOffers
ContainerMerchant j ()Z showProgressBar
InventoryCraftResult a items
InventoryCraftResult b recipeUsed
InventoryCraftResult Q_ ()I getContainerSize
InventoryCraftResult c ()Z isEmpty
InventoryCraftResult b (I)LItemStack; removeItemNoUpdate
InventoryCraftResult e ()V setChanged
InventoryCraftResult P_ ()V clearContent
InventoryCraftResult ac_ ()LIRecipe; getRecipeUsed
Slot a index
Slot c inventory
Slot d rawSlotIndex
Slot a ()I getMaxStackSize
Slot a (LEntityHuman;)Z isAllowed
Slot a (LItemStack;)Z isAllowed
Slot b (LItemStack;)I getMaxStackSize
Slot d (LItemStack;)V set
Slot e ()LItemStack; getItem
Slot f ()Z hasItem
Slot e x
Slot f y
Slot b (I)V onSwapCraft
Slot c (LItemStack;)V checkTakeAchievements
Slot d ()V setChanged
Slot c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
Slot b ()Z isActive
ContainerStonecutter e inventory
ContainerStonecutter f containerAccess
ContainerStonecutter g containerProperty
ContainerStonecutter h world
ContainerStonecutter m resultInventory
ContainerStonecutter i recipes
ContainerStonecutter j input
ContainerStonecutter k lastSoundTime
ContainerStonecutter c inputSlot
ContainerStonecutter d resultSlot
ContainerStonecutter l slotUpdateListener
ContainerStonecutter e ()I getSelectedRecipeIndex
ContainerStonecutter f ()Ljava/util/List; getRecipes
ContainerStonecutter g ()I getNumRecipes
ContainerStonecutter h ()Z hasInputItem
ContainerStonecutter i ()V setupResultSlot
ContainerStonecutter b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerStonecutter b (LEntityHuman;)V removed
ContainerStonecutter j ()V lambda$new$0
ContainerStonecutter b (LContainerStonecutter;)V access$100
ContainerStonecutter c (LContainerStonecutter;)J access$200
EnumArmorMaterial a LEATHER
EnumArmorMaterial b CHAIN
EnumArmorMaterial c IRON
EnumArmorMaterial d GOLD
EnumArmorMaterial e DIAMOND
EnumArmorMaterial f TURTLE
EnumArmorMaterial g NETHERITE
EnumArmorMaterial h HEALTH_PER_SLOT
EnumArmorMaterial i name
EnumArmorMaterial j durabilityMultiplier
EnumArmorMaterial k slotProtections
EnumArmorMaterial l enchantmentValue
EnumArmorMaterial m sound
EnumArmorMaterial n toughness
EnumArmorMaterial o knockbackResistance
EnumArmorMaterial p repairIngredient
EnumArmorMaterial q $VALUES
EnumArmorMaterial values ()[LEnumArmorMaterial; values
EnumArmorMaterial valueOf (Ljava/lang/String;)LEnumArmorMaterial; valueOf
EnumArmorMaterial b (LEnumItemSlot;)I getDefenseForSlot
EnumArmorMaterial b ()LSoundEffect; getEquipSound
EnumArmorMaterial c ()LRecipeItemStack; getRepairIngredient
EnumArmorMaterial d ()Ljava/lang/String; getName
EnumArmorMaterial e ()F getToughness
EnumArmorMaterial f ()F getKnockbackResistance
EnumArmorMaterial g ()LRecipeItemStack; lambda$static$6
EnumArmorMaterial h ()LRecipeItemStack; lambda$static$5
EnumArmorMaterial i ()LRecipeItemStack; lambda$static$4
EnumArmorMaterial j ()LRecipeItemStack; lambda$static$3
EnumArmorMaterial k ()LRecipeItemStack; lambda$static$2
EnumArmorMaterial l ()LRecipeItemStack; lambda$static$1
EnumArmorMaterial m ()LRecipeItemStack; lambda$static$0
ItemBlock e ()LBlock; getBlock
ItemBlock a block
ItemBlock b (LBlockActionContext;)LBlockActionContext; updatePlacementContext
ItemBlock c (LBlockActionContext;)LIBlockData; getPlacementState
ItemBlock b (LBlockActionContext;LIBlockData;)Z canPlace
ItemBlock V_ ()Z mustSurvive
ItemBucket a fluidType
EnumColor a WHITE
EnumColor b ORANGE
EnumColor c MAGENTA
EnumColor d LIGHT_BLUE
EnumColor e YELLOW
EnumColor f LIME
EnumColor g PINK
EnumColor h GRAY
EnumColor i LIGHT_GRAY
EnumColor j CYAN
EnumColor k PURPLE
EnumColor l BLUE
EnumColor m BROWN
EnumColor n GREEN
EnumColor o RED
EnumColor p BLACK
EnumColor a ()I getColorIndex
EnumColor a (I)LEnumColor; fromColorIndex
EnumColor q BY_ID
EnumColor r BY_FIREWORK_COLOR
EnumColor s id
EnumColor t name
EnumColor u color
EnumColor v textureDiffuseColor
EnumColor w textureDiffuseColorBGR
EnumColor x textureDiffuseColors
EnumColor y fireworkColor
EnumColor z textColor
EnumColor A $VALUES
EnumColor values ()[LEnumColor; values
EnumColor valueOf (Ljava/lang/String;)LEnumColor; valueOf
EnumColor b ()Ljava/lang/String; getName
EnumColor c ()I getTextureDiffuseColorBGR
EnumColor d ()[F getTextureDiffuseColors
EnumColor e ()LMaterialMapColor; getMaterialColor
EnumColor f ()I getFireworkColor
EnumColor g ()I getTextColor
EnumColor b (I)LEnumColor; byFireworkColor
EnumColor toString ()Ljava/lang/String; toString
EnumColor o ()Ljava/lang/String; getSerializedName
EnumColor b (LEnumColor;)Ljava/lang/Integer; lambda$static$1
EnumColor c (I)[LEnumColor; lambda$static$0
ItemFireworks$EffectType a SMALL_BALL
ItemFireworks$EffectType b LARGE_BALL
ItemFireworks$EffectType c STAR
ItemFireworks$EffectType d CREEPER
ItemFireworks$EffectType e BURST
ItemFireworks$EffectType f BY_ID
ItemFireworks$EffectType g id
ItemFireworks$EffectType h name
ItemFireworks$EffectType i $VALUES
ItemFireworks$EffectType values ()[LItemFireworks$EffectType; values
ItemFireworks$EffectType valueOf (Ljava/lang/String;)LItemFireworks$EffectType; valueOf
ItemFireworks$EffectType b ()Ljava/lang/String; getName
ItemFireworks$EffectType b (I)[LItemFireworks$EffectType; lambda$static$1
Item m maxStackSize
Item n durability
Item p craftingResult
Item q name
Item r foodInfo
Item a ()Ljava/lang/String; getName
Item a (LBlock;)LItem; getItemOf
Item a (LItem;)I getId
Item a (LItemStack;LIBlockData;)F getDestroySpeed
Item b (I)LItem; getById
Item b (LIBlockData;)Z canDestroySpecialBlock
Item j ()I getMaxStackSize
Item k ()I getMaxDurability
Item l ()Z usesDurability
Item t ()Z isFood
Item u ()LFoodInfo; getFoodInfo
Item g BY_BLOCK
Item a PROPERTY_DAMAGED
Item b PROPERTY_DAMAGE
Item c PROPERTY_LEFTHANDED
Item d PROPERTY_COOLDOWN
Item e PROPERTY_CUSTOM_MODEL_DATA
Item h BASE_ATTACK_DAMAGE_UUID
Item i BASE_ATTACK_SPEED_UUID
Item j random
Item f properties
Item k category
Item l rarity
Item o isFireResistant
Item h ()Z hasProperties
Item i ()LItem; asItem
Item m ()LIChatBaseComponent; getDescription
Item toString ()Ljava/lang/String; toString
Item n ()Ljava/lang/String; getOrCreateDescriptionId
Item f (LItemStack;)Ljava/lang/String; getDescriptionId
Item o ()Z shouldOverrideMultiplayerNbt
Item p ()LItem; getCraftingRemainingItem
Item q ()Z hasCraftingRemainingItem
Item b (LItemStack;LWorld;LEntityHuman;)V onCraftedBy
Item T_ ()Z isComplex
Item e_ (LItemStack;)LEnumAnimation; getUseAnimation
Item f_ (LItemStack;)I getUseDuration
Item g (LItemStack;)LIChatBaseComponent; getName
Item d_ (LItemStack;)Z isFoil
Item h (LItemStack;)LEnumItemRarity; getRarity
Item g_ (LItemStack;)Z isEnchantable
Item c ()I getEnchantmentValue
Item r ()LCreativeModeTab; getItemCategory
Item i (LItemStack;)Z useOnRelease
Item s ()LItemStack; getDefaultInstance
Item W_ ()LSoundEffect; getDrinkingSound
Item U_ ()LSoundEffect; getEatingSound
Item v ()Z isFireResistant
Item b (LItemStack;LWorld;LEntityLiving;)F lambda$static$4
Item c (LItemStack;LWorld;LEntityLiving;)F lambda$static$3
Item d (LItemStack;LWorld;LEntityLiving;)F lambda$static$2
Item e (LItemStack;LWorld;LEntityLiving;)F lambda$static$1
Item f (LItemStack;LWorld;LEntityLiving;)F lambda$static$0
ItemCooldown a cooldowns
ItemCooldown b currentTick
ItemCooldown a (LItem;)Z hasCooldown
ItemCooldown a (LItem;I)V setCooldown
ItemCooldown b (LItem;)V removeCooldown
ItemCooldown b (LItem;I)V onCooldownStarted
ItemCooldown c (LItem;)V onCooldownEnded
ItemCooldown$Info c endTick
ItemCooldown$Info b startTime
ItemCooldown$Info a this$0
ItemCooldown$Info b (LItemCooldown$Info;)I access$100
ItemStack d count
ItemStack f item
ItemStack g tag
ItemStack A ()I getRepairCost
ItemStack D ()I getCount
ItemStack I ()V checkEmpty
ItemStack a ()Z isEmpty
ItemStack a (I)LItemStack; cloneAndSubtract
ItemStack a (ILEntityLiving;Ljava/util/function/Consumer;)V damage
ItemStack a (ILjava/util/Random;LEntityPlayer;)Z isDamaged
ItemStack a (LEnchantment;I)V addEnchantment
ItemStack a (LItemActionContext;)LEnumInteractionResult; placeItem
ItemStack a (LItemStack;)Z doMaterialsMatch
ItemStack a (LItemStack;LItemStack;)Z equals
ItemStack b ()LItem; getItem
ItemStack b (I)V setDamage
ItemStack b (LIBlockData;)Z canDestroySpecialBlock
ItemStack b (LItemStack;LItemStack;)Z matches
ItemStack b (LNBTTagCompound;)LNBTTagCompound; save
ItemStack c ()I getMaxStackSize
ItemStack c (I)V setRepairCost
ItemStack c (LNBTTagCompound;)V setTag
ItemStack c (Ljava/lang/String;)V removeTag
ItemStack d ()Z isStackable
ItemStack e (I)V setCount
ItemStack f (I)V add
ItemStack g ()I getDamage
ItemStack g (I)V subtract
ItemStack i ()LItemStack; cloneItemStack
ItemStack n ()Z hasTag
ItemStack o ()LNBTTagCompound; getTag
ItemStack p ()LNBTTagCompound; getOrCreateTag
ItemStack q ()LNBTTagList; getEnchantments
ItemStack r ()LIChatBaseComponent; getName
ItemStack t ()Z hasName
ItemStack w ()Z canEnchant
ItemStack x ()Z hasEnchantments
ItemStack c LOGGER
ItemStack a EMPTY
ItemStack b ATTRIBUTE_MODIFIER_FORMAT
ItemStack e popTime
ItemStack h emptyCacheFlag
ItemStack i frame
ItemStack j cachedBreakBlock
ItemStack k cachedBreakBlockResult
ItemStack l cachedPlaceBlock
ItemStack m cachedPlaceBlockResult
ItemStack H ()Ljava/text/DecimalFormat; getAttributeDecimalFormat
ItemStack e ()Z isDamageableItem
ItemStack f ()Z isDamaged
ItemStack h ()I getMaxDamage
ItemStack c (LItemStack;)Z matches
ItemStack c (LItemStack;LItemStack;)Z isSame
ItemStack d (LItemStack;LItemStack;)Z isSameIgnoreDurability
ItemStack b (LItemStack;)Z sameItemStackIgnoreDurability
ItemStack j ()Ljava/lang/String; getDescriptionId
ItemStack toString ()Ljava/lang/String; toString
ItemStack k ()I getUseDuration
ItemStack l ()LEnumAnimation; getUseAnimation
ItemStack m ()Z useOnRelease
ItemStack b (Ljava/lang/String;)LNBTTagCompound; getTagElement
ItemStack s ()V resetHoverName
ItemStack d (Ljava/lang/String;)Ljava/util/Collection; expandBlockState
ItemStack u ()Z hasFoil
ItemStack v ()LEnumItemRarity; getRarity
ItemStack y ()Z isFramed
ItemStack z ()LEntityItemFrame; getFrame
ItemStack B ()LIChatBaseComponent; getDisplayName
ItemStack b (LTagRegistry;LShapeDetectorBlock;)Z hasAdventureModePlaceTagForBlock
ItemStack C ()I getPopTime
ItemStack d (I)V setPopTime
ItemStack b (LWorld;LEntityLiving;I)V onUseTick
ItemStack E ()Z isEdible
ItemStack F ()LSoundEffect; getDrinkingSound
ItemStack G ()LSoundEffect; getEatingSound
ItemStack b (LIChatBaseComponent;)LIChatBaseComponent; lambda$expandBlockState$1
Items a AIR
Items jM TURTLE_HELMET
Items jN SCUTE
Items ko BOWL
Items kp MUSHROOM_STEW
Items kq GOLDEN_SWORD
Items kr GOLDEN_SHOVEL
Items ks GOLDEN_PICKAXE
Items kt GOLDEN_AXE
Items ky STRING
Items kz FEATHER
Items kA GUNPOWDER
Items kB WOODEN_HOE
Items kC STONE_HOE
Items kD IRON_HOE
Items kE DIAMOND_HOE
Items kF GOLDEN_HOE
Items kH WHEAT_SEEDS
Items kI WHEAT
Items kJ BREAD
Items kK LEATHER_HELMET
Items kL LEATHER_CHESTPLATE
Items kM LEATHER_LEGGINGS
Items kN LEATHER_BOOTS
Items kO CHAINMAIL_HELMET
Items kP CHAINMAIL_CHESTPLATE
Items kQ CHAINMAIL_LEGGINGS
Items kR CHAINMAIL_BOOTS
Items kS IRON_HELMET
Items jO IRON_SHOVEL
Items jP IRON_PICKAXE
Items jQ IRON_AXE
Items jR FLINT_AND_STEEL
Items jS APPLE
Items jT BOW
Items jU ARROW
Items jV COAL
Items jW CHARCOAL
Items jX DIAMOND
Items jY IRON_INGOT
Items jZ GOLD_INGOT
Items ka IRON_SWORD
Items kb WOODEN_SWORD
Items kc WOODEN_SHOVEL
Items kd WOODEN_PICKAXE
Items ke WOODEN_AXE
Items kf STONE_SWORD
Items kg STONE_SHOVEL
Items kh STONE_PICKAXE
Items ki STONE_AXE
Items kj DIAMOND_SWORD
Items kk DIAMOND_SHOVEL
Items kl DIAMOND_PICKAXE
Items km DIAMOND_AXE
Items kn STICK
Items lz MINECART
Items lA SADDLE
Items lB REDSTONE
Items lC SNOWBALL
Items lD OAK_BOAT
Items lE LEATHER
Items lF MILK_BUCKET
Items lG PUFFERFISH_BUCKET
Items lH SALMON_BUCKET
Items lI COD_BUCKET
Items lJ TROPICAL_FISH_BUCKET
Items lK BRICK
Items lL CLAY_BALL
Items lQ PAPER
Items lR BOOK
Items lS SLIME_BALL
Items lT CHEST_MINECART
Items lU FURNACE_MINECART
Items lV EGG
Items lW COMPASS
Items lX FISHING_ROD
Items lY CLOCK
Items kT IRON_CHESTPLATE
Items kU IRON_LEGGINGS
Items kV IRON_BOOTS
Items kW DIAMOND_HELMET
Items kX DIAMOND_CHESTPLATE
Items kY DIAMOND_LEGGINGS
Items kZ DIAMOND_BOOTS
Items la GOLDEN_HELMET
Items lb GOLDEN_CHESTPLATE
Items lc GOLDEN_LEGGINGS
Items ld GOLDEN_BOOTS
Items li FLINT
Items lj PORKCHOP
Items lk COOKED_PORKCHOP
Items ll PAINTING
Items lm GOLDEN_APPLE
Items ln ENCHANTED_GOLDEN_APPLE
Items lo OAK_SIGN
Items lp SPRUCE_SIGN
Items lq BIRCH_SIGN
Items lr JUNGLE_SIGN
Items ls ACACIA_SIGN
Items lt DARK_OAK_SIGN
Items lw BUCKET
Items lx WATER_BUCKET
Items ly LAVA_BUCKET
Items mz WHITE_DYE
Items mA BONE
Items mB SUGAR
Items mD WHITE_BED
Items mE ORANGE_BED
Items mF MAGENTA_BED
Items mG LIGHT_BLUE_BED
Items mH YELLOW_BED
Items mI LIME_BED
Items mJ PINK_BED
Items mK GRAY_BED
Items mL LIGHT_GRAY_BED
Items mM CYAN_BED
Items mN PURPLE_BED
Items mO BLUE_BED
Items mP BROWN_BED
Items mQ GREEN_BED
Items mR RED_BED
Items mS BLACK_BED
Items mT COOKIE
Items mU FILLED_MAP
Items mV SHEARS
Items mW MELON_SLICE
Items mX DRIED_KELP
Items mY PUMPKIN_SEEDS
Items lZ GLOWSTONE_DUST
Items ma COD
Items mb SALMON
Items mc TROPICAL_FISH
Items md PUFFERFISH
Items me COOKED_COD
Items mf COOKED_SALMON
Items mg INK_SAC
Items mh RED_DYE
Items mi GREEN_DYE
Items mj COCOA_BEANS
Items mk LAPIS_LAZULI
Items ml PURPLE_DYE
Items mm CYAN_DYE
Items mn LIGHT_GRAY_DYE
Items mo GRAY_DYE
Items mp PINK_DYE
Items mq LIME_DYE
Items mr YELLOW_DYE
Items ms LIGHT_BLUE_DYE
Items mt MAGENTA_DYE
Items mu ORANGE_DYE
Items mv BONE_MEAL
Items mw BLUE_DYE
Items mx BROWN_DYE
Items my BLACK_DYE
Items nz CHICKEN_SPAWN_EGG
Items nA COD_SPAWN_EGG
Items nB COW_SPAWN_EGG
Items nC CREEPER_SPAWN_EGG
Items nD DOLPHIN_SPAWN_EGG
Items nE DONKEY_SPAWN_EGG
Items nF DROWNED_SPAWN_EGG
Items nG ELDER_GUARDIAN_SPAWN_EGG
Items nH ENDERMAN_SPAWN_EGG
Items nI ENDERMITE_SPAWN_EGG
Items nJ EVOKER_SPAWN_EGG
Items nK FOX_SPAWN_EGG
Items nL GHAST_SPAWN_EGG
Items nM GUARDIAN_SPAWN_EGG
Items nO HORSE_SPAWN_EGG
Items nP HUSK_SPAWN_EGG
Items nQ LLAMA_SPAWN_EGG
Items nR MAGMA_CUBE_SPAWN_EGG
Items nS MOOSHROOM_SPAWN_EGG
Items nT MULE_SPAWN_EGG
Items nU OCELOT_SPAWN_EGG
Items nV PANDA_SPAWN_EGG
Items nW PARROT_SPAWN_EGG
Items nX PHANTOM_SPAWN_EGG
Items nY PIG_SPAWN_EGG
Items oa PILLAGER_SPAWN_EGG
Items mZ MELON_SEEDS
Items na BEEF
Items nb COOKED_BEEF
Items nc CHICKEN
Items nd COOKED_CHICKEN
Items ne ROTTEN_FLESH
Items nf ENDER_PEARL
Items ng BLAZE_ROD
Items nh GHAST_TEAR
Items ni GOLD_NUGGET
Items nj NETHER_WART
Items nk POTION
Items nl GLASS_BOTTLE
Items nm SPIDER_EYE
Items nn FERMENTED_SPIDER_EYE
Items no BLAZE_POWDER
Items np MAGMA_CREAM
Items ns ENDER_EYE
Items nt GLISTERING_MELON_SLICE
Items nu BAT_SPAWN_EGG
Items nw BLAZE_SPAWN_EGG
Items nx CAT_SPAWN_EGG
Items ny CAVE_SPIDER_SPAWN_EGG
Items oB ZOMBIE_PIGMAN_SPAWN_EGG
Items oC ZOMBIE_VILLAGER_SPAWN_EGG
Items oD EXPERIENCE_BOTTLE
Items oE FIRE_CHARGE
Items oF WRITABLE_BOOK
Items oG WRITTEN_BOOK
Items oH EMERALD
Items oI ITEM_FRAME
Items oK CARROT
Items oL POTATO
Items oM BAKED_POTATO
Items oN POISONOUS_POTATO
Items oO MAP
Items oP GOLDEN_CARROT
Items oQ SKELETON_SKULL
Items oR WITHER_SKELETON_SKULL
Items oS PLAYER_HEAD
Items oT ZOMBIE_HEAD
Items oU CREEPER_HEAD
Items oV DRAGON_HEAD
Items oW CARROT_ON_A_STICK
Items oX NETHER_STAR
Items oY PUMPKIN_PIE
Items oZ FIREWORK_ROCKET
Items pa FIREWORK_STAR
Items ob POLAR_BEAR_SPAWN_EGG
Items oc PUFFERFISH_SPAWN_EGG
Items od RABBIT_SPAWN_EGG
Items oe RAVAGER_SPAWN_EGG
Items of SALMON_SPAWN_EGG
Items og SHEEP_SPAWN_EGG
Items oh SHULKER_SPAWN_EGG
Items oi SILVERFISH_SPAWN_EGG
Items oj SKELETON_SPAWN_EGG
Items ok SKELETON_HORSE_SPAWN_EGG
Items ol SLIME_SPAWN_EGG
Items om SPIDER_SPAWN_EGG
Items on SQUID_SPAWN_EGG
Items oo STRAY_SPAWN_EGG
Items op TRADER_LLAMA_SPAWN_EGG
Items oq TROPICAL_FISH_SPAWN_EGG
Items or TURTLE_SPAWN_EGG
Items os VEX_SPAWN_EGG
Items ot VILLAGER_SPAWN_EGG
Items ou VINDICATOR_SPAWN_EGG
Items ov WANDERING_TRADER_SPAWN_EGG
Items ow WITCH_SPAWN_EGG
Items ox WITHER_SKELETON_SPAWN_EGG
Items oy WOLF_SPAWN_EGG
Items oz ZOMBIE_SPAWN_EGG
Items oA ZOMBIE_HORSE_SPAWN_EGG
Items pB YELLOW_BANNER
Items pC LIME_BANNER
Items pD PINK_BANNER
Items pE GRAY_BANNER
Items pF LIGHT_GRAY_BANNER
Items pG CYAN_BANNER
Items pH PURPLE_BANNER
Items pI BLUE_BANNER
Items pJ BROWN_BANNER
Items pK GREEN_BANNER
Items pL RED_BANNER
Items pM BLACK_BANNER
Items pN END_CRYSTAL
Items pO CHORUS_FRUIT
Items pP POPPED_CHORUS_FRUIT
Items pQ BEETROOT
Items pR BEETROOT_SEEDS
Items pS BEETROOT_SOUP
Items pT DRAGON_BREATH
Items pU SPLASH_POTION
Items pV SPECTRAL_ARROW
Items pW TIPPED_ARROW
Items pX LINGERING_POTION
Items pY SHIELD
Items pZ ELYTRA
Items qa SPRUCE_BOAT
Items pb ENCHANTED_BOOK
Items pc NETHER_BRICK
Items pd QUARTZ
Items pe TNT_MINECART
Items pf HOPPER_MINECART
Items pg PRISMARINE_SHARD
Items ph PRISMARINE_CRYSTALS
Items pi RABBIT
Items pj COOKED_RABBIT
Items pk RABBIT_STEW
Items pl RABBIT_FOOT
Items pm RABBIT_HIDE
Items pn ARMOR_STAND
Items po IRON_HORSE_ARMOR
Items pp GOLDEN_HORSE_ARMOR
Items pq DIAMOND_HORSE_ARMOR
Items pr LEATHER_HORSE_ARMOR
Items ps LEAD
Items pt NAME_TAG
Items pu COMMAND_BLOCK_MINECART
Items pv MUTTON
Items pw COOKED_MUTTON
Items px WHITE_BANNER
Items py ORANGE_BANNER
Items pz MAGENTA_BANNER
Items pA LIGHT_BLUE_BANNER
Items qB SUSPICIOUS_STEW
Items qD FLOWER_BANNER_PATTERN
Items qE CREEPER_BANNER_PATTERN
Items qF SKULL_BANNER_PATTERN
Items qG MOJANG_BANNER_PATTERN
Items qH GLOBE_BANNER_PATTERN
Items qV SWEET_BERRIES
Items qb BIRCH_BOAT
Items qc JUNGLE_BOAT
Items qd ACACIA_BOAT
Items qe DARK_OAK_BOAT
Items qf TOTEM_OF_UNDYING
Items qg SHULKER_SHELL
Items qh IRON_NUGGET
Items qi KNOWLEDGE_BOOK
Items qj DEBUG_STICK
Items qk MUSIC_DISC_13
Items ql MUSIC_DISC_CAT
Items qm MUSIC_DISC_BLOCKS
Items qn MUSIC_DISC_CHIRP
Items qo MUSIC_DISC_FAR
Items qp MUSIC_DISC_MALL
Items qq MUSIC_DISC_MELLOHI
Items qr MUSIC_DISC_STAL
Items qs MUSIC_DISC_STRAD
Items qt MUSIC_DISC_WARD
Items qu MUSIC_DISC_11
Items qv MUSIC_DISC_WAIT
Items qw TRIDENT
Items qx PHANTOM_MEMBRANE
Items qy NAUTILUS_SHELL
Items qz HEART_OF_THE_SEA
Items qA CROSSBOW
Items b STONE
Items c GRANITE
Items d POLISHED_GRANITE
Items e DIORITE
Items f POLISHED_DIORITE
Items g ANDESITE
Items h POLISHED_ANDESITE
Items i GRASS_BLOCK
Items j DIRT
Items k COARSE_DIRT
Items l PODZOL
Items m CRIMSON_NYLIUM
Items n WARPED_NYLIUM
Items o COBBLESTONE
Items p OAK_PLANKS
Items q SPRUCE_PLANKS
Items r BIRCH_PLANKS
Items s JUNGLE_PLANKS
Items t ACACIA_PLANKS
Items u DARK_OAK_PLANKS
Items v CRIMSON_PLANKS
Items w WARPED_PLANKS
Items x OAK_SAPLING
Items y SPRUCE_SAPLING
Items z BIRCH_SAPLING
Items A JUNGLE_SAPLING
Items B ACACIA_SAPLING
Items C DARK_OAK_SAPLING
Items D BEDROCK
Items E SAND
Items F RED_SAND
Items G GRAVEL
Items H GOLD_ORE
Items I IRON_ORE
Items J COAL_ORE
Items K NETHER_GOLD_ORE
Items L OAK_LOG
Items M SPRUCE_LOG
Items N BIRCH_LOG
Items O JUNGLE_LOG
Items P ACACIA_LOG
Items Q DARK_OAK_LOG
Items R CRIMSON_STEM
Items S WARPED_STEM
Items T STRIPPED_OAK_LOG
Items U STRIPPED_SPRUCE_LOG
Items V STRIPPED_BIRCH_LOG
Items W STRIPPED_JUNGLE_LOG
Items X STRIPPED_ACACIA_LOG
Items Y STRIPPED_DARK_OAK_LOG
Items Z STRIPPED_CRIMSON_STEM
Items aa STRIPPED_WARPED_STEM
Items ab STRIPPED_OAK_WOOD
Items ac STRIPPED_SPRUCE_WOOD
Items ad STRIPPED_BIRCH_WOOD
Items ae STRIPPED_JUNGLE_WOOD
Items af STRIPPED_ACACIA_WOOD
Items ag STRIPPED_DARK_OAK_WOOD
Items ah STRIPPED_CRIMSON_HYPHAE
Items ai STRIPPED_WARPED_HYPHAE
Items aj OAK_WOOD
Items ak SPRUCE_WOOD
Items al BIRCH_WOOD
Items am JUNGLE_WOOD
Items an ACACIA_WOOD
Items ao DARK_OAK_WOOD
Items ap CRIMSON_HYPHAE
Items aq WARPED_HYPHAE
Items ar OAK_LEAVES
Items as SPRUCE_LEAVES
Items at BIRCH_LEAVES
Items au JUNGLE_LEAVES
Items av ACACIA_LEAVES
Items aw DARK_OAK_LEAVES
Items ax SPONGE
Items ay WET_SPONGE
Items az GLASS
Items aA LAPIS_ORE
Items aB LAPIS_BLOCK
Items aC DISPENSER
Items aD SANDSTONE
Items aE CHISELED_SANDSTONE
Items aF CUT_SANDSTONE
Items aG NOTE_BLOCK
Items aH POWERED_RAIL
Items aI DETECTOR_RAIL
Items aJ STICKY_PISTON
Items aK COBWEB
Items aL GRASS
Items aM FERN
Items aN DEAD_BUSH
Items aO SEAGRASS
Items aP SEA_PICKLE
Items aQ PISTON
Items aR WHITE_WOOL
Items aS ORANGE_WOOL
Items aT MAGENTA_WOOL
Items aU LIGHT_BLUE_WOOL
Items aV YELLOW_WOOL
Items aW LIME_WOOL
Items aX PINK_WOOL
Items aY GRAY_WOOL
Items aZ LIGHT_GRAY_WOOL
Items ba CYAN_WOOL
Items bb PURPLE_WOOL
Items bc BLUE_WOOL
Items bd BROWN_WOOL
Items be GREEN_WOOL
Items bf RED_WOOL
Items bg BLACK_WOOL
Items bh DANDELION
Items bi POPPY
Items bj BLUE_ORCHID
Items bk ALLIUM
Items bl AZURE_BLUET
Items bm RED_TULIP
Items bn ORANGE_TULIP
Items bo WHITE_TULIP
Items bp PINK_TULIP
Items bq OXEYE_DAISY
Items br CORNFLOWER
Items bs LILY_OF_THE_VALLEY
Items bt WITHER_ROSE
Items bu BROWN_MUSHROOM
Items bv RED_MUSHROOM
Items bw CRIMSON_FUNGUS
Items bx WARPED_FUNGUS
Items by CRIMSON_ROOTS
Items bz WARPED_ROOTS
Items bA NETHER_SPROUTS
Items bB WEEPING_VINES
Items bC TWISTING_VINES
Items bD GOLD_BLOCK
Items bE IRON_BLOCK
Items bF OAK_SLAB
Items bG SPRUCE_SLAB
Items bH BIRCH_SLAB
Items bI JUNGLE_SLAB
Items bJ ACACIA_SLAB
Items bK DARK_OAK_SLAB
Items bL CRIMSON_SLAB
Items bM WARPED_SLAB
Items bN STONE_SLAB
Items bO SMOOTH_STONE_SLAB
Items bP SANDSTONE_SLAB
Items bQ CUT_STANDSTONE_SLAB
Items bR PETRIFIED_OAK_SLAB
Items bS COBBLESTONE_SLAB
Items bT BRICK_SLAB
Items bU STONE_BRICK_SLAB
Items bV NETHER_BRICK_SLAB
Items bW QUARTZ_SLAB
Items bX RED_SANDSTONE_SLAB
Items bY CUT_RED_SANDSTONE_SLAB
Items bZ PURPUR_SLAB
Items ca PRISMARINE_SLAB
Items cb PRISMARINE_BRICK_SLAB
Items cc DARK_PRISMARINE_SLAB
Items cd SMOOTH_QUARTZ
Items ce SMOOTH_RED_SANDSTONE
Items cf SMOOTH_SANDSTONE
Items cg SMOOTH_STONE
Items ch BRICKS
Items ci TNT
Items cj BOOKSHELF
Items ck MOSSY_COBBLESTONE
Items cl OBSIDIAN
Items cm TORCH
Items cn END_ROD
Items co CHORUS_PLANT
Items cp CHORUS_FLOWER
Items cq PURPUR_BLOCK
Items cr PURPUR_PILLAR
Items cs PURPUR_STAIRS
Items ct SPAWNER
Items cu OAK_STAIRS
Items cv CHEST
Items cw DIAMOND_ORE
Items cx DIAMOND_BLOCK
Items cy CRAFTING_TABLE
Items cz FARMLAND
Items cA FURNACE
Items cB LADDER
Items cC RAIL
Items cD COBBLESTONE_STAIRS
Items cE LEVER
Items cF STONE_PRESSURE_PLATE
Items cG OAK_PRESSURE_PLATE
Items cH SPRUCE_PRESSURE_PLATE
Items cI BIRCH_PRESSURE_PLATE
Items cJ JUNGLE_PRESSURE_PLATE
Items cK ACACIA_PRESSURE_PLATE
Items cL DARK_OAK_PRESSURE_PLATE
Items cM CRIMSON_PRESSURE_PLATE
Items cN WARPED_PRESSURE_PLATE
Items cO REDSTONE_ORE
Items cP REDSTONE_TORCH
Items cQ STONE_BUTTON
Items cR SNOW
Items cS ICE
Items cT SNOW_BLOCK
Items cU CACTUS
Items cV CLAY
Items cW JUKEBOX
Items cX OAK_FENCE
Items cY SPRUCE_FENCE
Items cZ BIRCH_FENCE
Items da JUNGLE_FENCE
Items db ACACIA_FENCE
Items dc DARK_OAK_FENCE
Items dd CRIMSON_FENCE
Items de WARPED_FENCE
Items df PUMPKIN
Items dg CARVED_PUMPKIN
Items dh NETHERRACK
Items di SOUL_SAND
Items dj SOUL_SOIL
Items dk BASALT
Items dl POLISHED_BASALT
Items dm SOUL_FIRE_TORCH
Items dn GLOWSTONE
Items do JACK_O_LANTERN
Items dp OAK_TRAPDOOR
Items dq SPRUCE_TRAPDOOR
Items dr BIRCH_TRAPDOOR
Items ds JUNGLE_TRAPDOOR
Items dt ACACIA_TRAPDOOR
Items du DARK_OAK_TRAPDOOR
Items dv CRIMSON_TRAPDOOR
Items dw WARPED_TRAPDOOR
Items dx INFESTED_STONE
Items dy INFESTED_COBBLESTONE
Items dz INFESTED_STONE_BRICKS
Items dA INFESTED_MOSSY_STONE_BRICKS
Items dB INFESTED_CRACKED_STONE_BRICKS
Items dC INFESTED_CHISELED_STONE_BRICKS
Items dD STONE_BRICKS
Items dE MOSSY_STONE_BRICKS
Items dF CRACKED_STONE_BRICKS
Items dG CHISELED_STONE_BRICKS
Items dH BROWN_MUSHROOM_BLOCK
Items dI RED_MUSHROOM_BLOCK
Items dJ MUSHROOM_STEM
Items dK IRON_BARS
Items dL GLASS_PANE
Items dM MELON
Items dN VINE
Items dO OAK_FENCE_GATE
Items dP SPRUCE_FENCE_GATE
Items dQ BIRCH_FENCE_GATE
Items dR JUNGLE_FENCE_GATE
Items dS ACACIA_FENCE_GATE
Items dT DARK_OAK_FENCE_GATE
Items dU CRIMSON_FENCE_GATE
Items dV WARPED_FENCE_GATE
Items dW BRICK_STAIRS
Items dX STONE_BRICK_STAIRS
Items dY MYCELIUM
Items dZ LILY_PAD
Items ea NETHER_BRICKS
Items eb NETHER_BRICK_FENCE
Items ec NETHER_BRICK_STAIRS
Items ed ENCHANTING_TABLE
Items ee END_PORTAL_FRAME
Items ef END_STONE
Items eg END_STONE_BRICKS
Items eh DRAGON_EGG
Items ei REDSTONE_LAMP
Items ej SANDSTONE_STAIRS
Items ek EMERALD_ORE
Items el ENDER_CHEST
Items em TRIPWIRE_HOOK
Items en EMERALD_BLOCK
Items eo SPRUCE_STAIRS
Items ep BIRCH_STAIRS
Items eq JUNGLE_STAIRS
Items er CRIMSON_STAIRS
Items es WARPED_STAIRS
Items et COMMAND_BLOCK
Items eu BEACON
Items ev COBBLESTONE_WALL
Items ew MOSSY_COBBLESTONE_WALL
Items ex BRICK_WALL
Items ey PRISMARINE_WALL
Items ez RED_SANDSTONE_WALL
Items eA MOSSY_STONE_BRICK_WALL
Items eB GRANITE_WALL
Items eC STONE_BRICK_WALL
Items eD NETHER_BRICK_WALL
Items eE ANDESITE_WALL
Items eF RED_NETHER_BRICK_WALL
Items eG SANDSTONE_WALL
Items eH END_STONE_BRICK_WALL
Items eI DIORITE_WALL
Items eJ OAK_BUTTON
Items eK SPRUCE_BUTTON
Items eL BIRCH_BUTTON
Items eM JUNGLE_BUTTON
Items eN ACACIA_BUTTON
Items eO DARK_OAK_BUTTON
Items eP CRIMSON_BUTTON
Items eQ WARPED_BUTTON
Items eR ANVIL
Items eS CHIPPED_ANVIL
Items eT DAMAGED_ANVIL
Items eU TRAPPED_CHEST
Items eV LIGHT_WEIGHTED_PRESSURE_PLATE
Items eW HEAVY_WEIGHTED_PRESSURE_PLATE
Items eX DAYLIGHT_DETECTOR
Items eY REDSTONE_BLOCK
Items eZ NETHER_QUARTZ_ORE
Items fa HOPPER
Items fb CHISELED_QUARTZ_BLOCK
Items fc QUARTZ_BLOCK
Items fd QUARTZ_PILLAR
Items fe QUARTZ_STAIRS
Items ff ACTIVATOR_RAIL
Items fg DROPPER
Items fh WHITE_TERRACOTTA
Items fi ORANGE_TERRACOTTA
Items fj MAGENTA_TERRACOTTA
Items fk LIGHT_BLUE_TERRACOTTA
Items fl YELLOW_TERRACOTTA
Items fm LIME_TERRACOTTA
Items fn PINK_TERRACOTTA
Items fo GRAY_TERRACOTTA
Items fp LIGHT_GRAY_TERRACOTTA
Items fq CYAN_TERRACOTTA
Items fr PURPLE_TERRACOTTA
Items fs BLUE_TERRACOTTA
Items ft BROWN_TERRACOTTA
Items fu GREEN_TERRACOTTA
Items fv RED_TERRACOTTA
Items fw BLACK_TERRACOTTA
Items fx BARRIER
Items fy IRON_TRAPDOOR
Items fz HAY_BLOCK
Items fA WHITE_CARPET
Items fB ORANGE_CARPET
Items fC MAGENTA_CARPET
Items fD LIGHT_BLUE_CARPET
Items fE YELLOW_CARPET
Items fF LIME_CARPET
Items fG PINK_CARPET
Items fH GRAY_CARPET
Items fI LIGHT_GRAY_CARPET
Items fJ CYAN_CARPET
Items fK PURPLE_CARPET
Items fL BLUE_CARPET
Items fM BROWN_CARPET
Items fN GREEN_CARPET
Items fO RED_CARPET
Items fP BLACK_CARPET
Items fQ TERRACOTTA
Items fR COAL_BLOCK
Items fS PACKED_ICE
Items fT ACACIA_STAIRS
Items fU DARK_OAK_STAIRS
Items fV SLIME_BLOCK
Items fW GRASS_PATH
Items fX SUNFLOWER
Items fY LILAC
Items fZ ROSE_BUSH
Items ga PEONY
Items gb TALL_GRASS
Items gc LARGE_FERN
Items gd WHITE_STAINED_GLASS
Items ge ORANGE_STAINED_GLASS
Items gf MAGENTA_STAINED_GLASS
Items gg LIGHT_BLUE_STAINED_GLASS
Items gh YELLOW_STAINED_GLASS
Items gi LIME_STAINED_GLASS
Items gj PINK_STAINED_GLASS
Items gk GRAY_STAINED_GLASS
Items gl LIGHT_GRAY_STAINED_GLASS
Items gm CYAN_STAINED_GLASS
Items gn PURPLE_STAINED_GLASS
Items go BLUE_STAINED_GLASS
Items gp BROWN_STAINED_GLASS
Items gq GREEN_STAINED_GLASS
Items gr RED_STAINED_GLASS
Items gs BLACK_STAINED_GLASS
Items gt WHITE_STAINED_GLASS_PANE
Items gu ORANGE_STAINED_GLASS_PANE
Items gv MAGENTA_STAINED_GLASS_PANE
Items gw LIGHT_BLUE_STAINED_GLASS_PANE
Items gx YELLOW_STAINED_GLASS_PANE
Items gy LIME_STAINED_GLASS_PANE
Items gz PINK_STAINED_GLASS_PANE
Items gA GRAY_STAINED_GLASS_PANE
Items gB LIGHT_GRAY_STAINED_GLASS_PANE
Items gC CYAN_STAINED_GLASS_PANE
Items gD PURPLE_STAINED_GLASS_PANE
Items gE BLUE_STAINED_GLASS_PANE
Items gF BROWN_STAINED_GLASS_PANE
Items gG GREEN_STAINED_GLASS_PANE
Items gH RED_STAINED_GLASS_PANE
Items gI BLACK_STAINED_GLASS_PANE
Items gJ PRISMARINE
Items gK PRISMARINE_BRICKS
Items gL DARK_PRISMARINE
Items gM PRISMARINE_STAIRS
Items gN PRISMARINE_BRICK_STAIRS
Items gO DARK_PRISMARINE_STAIRS
Items gP SEA_LANTERN
Items gQ RED_SANDSTONE
Items gR CHISELED_RED_SANDSTONE
Items gS CUT_RED_SANDSTONE
Items gT RED_SANDSTONE_STAIRS
Items gU REPEATING_COMMAND_BLOCK
Items gV CHAIN_COMMAND_BLOCK
Items gW MAGMA_BLOCK
Items gX NETHER_WART_BLOCK
Items gY WARPED_WART_BLOCK
Items gZ RED_NETHER_BRICKS
Items ha BONE_BLOCK
Items hb STRUCTURE_VOID
Items hc OBSERVER
Items hd SHULKER_BOX
Items he WHITE_SHULKER_BOX
Items hf ORANGE_SHULKER_BOX
Items hg MAGENTA_SHULKER_BOX
Items hh LIGHT_BLUE_SHULKER_BOX
Items hi YELLOW_SHULKER_BOX
Items hj LIME_SHULKER_BOX
Items hk PINK_SHULKER_BOX
Items hl GRAY_SHULKER_BOX
Items hm LIGHT_GRAY_SHULKER_BOX
Items hn CYAN_SHULKER_BOX
Items ho PURPLE_SHULKER_BOX
Items hp BLUE_SHULKER_BOX
Items hq BROWN_SHULKER_BOX
Items hr GREEN_SHULKER_BOX
Items hs RED_SHULKER_BOX
Items ht BLACK_SHULKER_BOX
Items hu WHITE_GLAZED_TERRACOTTA
Items hv ORANGE_GLAZED_TERRACOTTA
Items hw MAGENTA_GLAZED_TERRACOTTA
Items hx LIGHT_BLUE_GLAZED_TERRACOTTA
Items hy YELLOW_GLAZED_TERRACOTTA
Items hz LIME_GLAZED_TERRACOTTA
Items hA PINK_GLAZED_TERRACOTTA
Items hB GRAY_GLAZED_TERRACOTTA
Items hC LIGHT_GRAY_GLAZED_TERRACOTTA
Items hD CYAN_GLAZED_TERRACOTTA
Items hE PURPLE_GLAZED_TERRACOTTA
Items hF BLUE_GLAZED_TERRACOTTA
Items hG BROWN_GLAZED_TERRACOTTA
Items hH GREEN_GLAZED_TERRACOTTA
Items hI RED_GLAZED_TERRACOTTA
Items hJ BLACK_GLAZED_TERRACOTTA
Items hK WHITE_CONCRETE
Items hL ORANGE_CONCRETE
Items hM MAGENTA_CONCRETE
Items hN LIGHT_BLUE_CONCRETE
Items hO YELLOW_CONCRETE
Items hP LIME_CONCRETE
Items hQ PINK_CONCRETE
Items hR GRAY_CONCRETE
Items hS LIGHT_GRAY_CONCRETE
Items hT CYAN_CONCRETE
Items hU PURPLE_CONCRETE
Items hV BLUE_CONCRETE
Items hW BROWN_CONCRETE
Items hX GREEN_CONCRETE
Items hY RED_CONCRETE
Items hZ BLACK_CONCRETE
Items ia WHITE_CONCRETE_POWDER
Items ib ORANGE_CONCRETE_POWDER
Items ic MAGENTA_CONCRETE_POWDER
Items id LIGHT_BLUE_CONCRETE_POWDER
Items ie YELLOW_CONCRETE_POWDER
Items if LIME_CONCRETE_POWDER
Items ig PINK_CONCRETE_POWDER
Items ih GRAY_CONCRETE_POWDER
Items ii LIGHT_GRAY_CONCRETE_POWDER
Items ij CYAN_CONCRETE_POWDER
Items ik PURPLE_CONCRETE_POWDER
Items il BLUE_CONCRETE_POWDER
Items im BROWN_CONCRETE_POWDER
Items in GREEN_CONCRETE_POWDER
Items io RED_CONCRETE_POWDER
Items ip BLACK_CONCRETE_POWDER
Items iq TURTLE_EGG
Items ir DEAD_TUBE_CORAL_BLOCK
Items is DEAD_BRAIN_CORAL_BLOCK
Items it DEAD_BUBBLE_CORAL_BLOCK
Items iu DEAD_FIRE_CORAL_BLOCK
Items iv DEAD_HORN_CORAL_BLOCK
Items iw TUBE_CORAL_BLOCK
Items ix BRAIN_CORAL_BLOCK
Items iy BUBBLE_CORAL_BLOCK
Items iz FIRE_CORAL_BLOCK
Items iA HORN_CORAL_BLOCK
Items iB TUBE_CORAL
Items iC BRAIN_CORAL
Items iD BUBBLE_CORAL
Items iE FIRE_CORAL
Items iF HORN_CORAL
Items iG DEAD_BRAIN_CORAL
Items iH DEAD_BUBBLE_CORAL
Items iI DEAD_FIRE_CORAL
Items iJ DEAD_HORN_CORAL
Items iK DEAD_TUBE_CORAL
Items iL TUBE_CORAL_FAN
Items iM BRAIN_CORAL_FAN
Items iN BUBBLE_CORAL_FAN
Items iO FIRE_CORAL_FAN
Items iP HORN_CORAL_FAN
Items iQ DEAD_TUBE_CORAL_FAN
Items iR DEAD_BRAIN_CORAL_FAN
Items iS DEAD_BUBBLE_CORAL_FAN
Items iT DEAD_FIRE_CORAL_FAN
Items iU DEAD_HORN_CORAL_FAN
Items iV BLUE_ICE
Items iW CONDUIT
Items iX POLISHED_GRANITE_STAIRS
Items iY SMOOTH_RED_SANDSTONE_STAIRS
Items iZ MOSSY_STONE_BRICK_STAIRS
Items ja POLISHED_DIORITE_STAIRS
Items jb MOSSY_COBBLESTONE_STAIRS
Items jc END_STONE_BRICK_STAIRS
Items jd STONE_STAIRS
Items je SMOOTH_SANDSTONE_STAIRS
Items jf SMOOTH_QUARTZ_STAIRS
Items jg GRANITE_STAIRS
Items jh ANDESITE_STAIRS
Items ji RED_NETHER_BRICK_STAIRS
Items jj POLISHED_ANDESITE_STAIRS
Items jk DIORITE_STAIRS
Items jl POLISHED_GRANITE_SLAB
Items jm SMOOTH_RED_SANDSTONE_SLAB
Items jn MOSSY_STONE_BRICK_SLAB
Items jo POLISHED_DIORITE_SLAB
Items jp MOSSY_COBBLESTONE_SLAB
Items jq END_STONE_BRICK_SLAB
Items jr SMOOTH_SANDSTONE_SLAB
Items js SMOOTH_QUARTZ_SLAB
Items jt GRANITE_SLAB
Items ju ANDESITE_SLAB
Items jv RED_NETHER_BRICK_SLAB
Items jw POLISHED_ANDESITE_SLAB
Items jx DIORITE_SLAB
Items jy SCAFFOLDING
Items jz IRON_DOOR
Items jA OAK_DOOR
Items jB SPRUCE_DOOR
Items jC BIRCH_DOOR
Items jD JUNGLE_DOOR
Items jE ACACIA_DOOR
Items jF DARK_OAK_DOOR
Items jG CRIMSON_DOOR
Items jH WARPED_DOOR
Items jI REPEATER
Items jJ COMPARATOR
Items jK STRUCTURE_BLOCK
Items jL JIGSAW
Items ku NETHERITE_SWORD
Items kv NETHERITE_SHOVEL
Items kw NETHERITE_PICKAXE
Items kx NETHERITE_AXE
Items kG NETHERITE_HOE
Items le NETHERITE_HELMET
Items lf NETHERITE_CHESTPLATE
Items lg NETHERITE_LEGGINGS
Items lh NETHERITE_BOOTS
Items lu CRIMSON_SIGN
Items lv WARPED_SIGN
Items lM SUGAR_CANE
Items lN KELP
Items lO DRIED_KELP_BLOCK
Items lP BAMBOO
Items mC CAKE
Items nq BREWING_STAND
Items nr CAULDRON
Items nv BEE_SPAWN_EGG
Items nN HOGLIN_SPAWN_EGG
Items nZ PIGLIN_SPAWN_EGG
Items oJ FLOWER_POT
Items qC LOOM
Items qI COMPOSTER
Items qJ BARREL
Items qK SMOKER
Items qL BLAST_FURNACE
Items qM CARTOGRAPHY_TABLE
Items qN FLETCHING_TABLE
Items qO GRINDSTONE
Items qP LECTERN
Items qQ SMITHING_TABLE
Items qR STONECUTTER
Items qS BELL
Items qT LANTERN
Items qU SOUL_FIRE_LANTERN
Items qW CAMPFIRE
Items qX SHROOMLIGHT
Items qY HONEYCOMB
Items qZ BEE_NEST
Items ra BEEHIVE
Items rb HONEY_BOTTLE
Items rc HONEY_BLOCK
Items rd HONEYCOMB_BLOCK
Items re NETHERITE_BLOCK
Items rf ANCIENT_DEBRIS
Items rg NETHERITE_INGOT
Items rh NETHERITE_SCRAP
Items ri TARGET
Items rj CRYING_OBSIDIAN
Items rk RESPAWN_ANCHOR
ItemWorldMap a (LWorld;IIBZZ)LItemStack; createFilledMapView
ItemWorldMap a (LWorldServer;LItemStack;)V applySepiaFilter
ItemWorldMap b (LItemStack;LWorld;)LWorldMap; getSavedMap
ItemWorldMap e (LItemStack;)I getMapId
ItemWorldMap b (LItemStack;LWorld;LEntityHuman;)V onCraftedBy
ItemWorldMap j (LItemStack;)I getColor
EnumItemRarity a COMMON
EnumItemRarity b UNCOMMON
EnumItemRarity c RARE
EnumItemRarity d EPIC
EnumItemRarity e color
EnumItemRarity f $VALUES
EnumItemRarity values ()[LEnumItemRarity; values
EnumItemRarity valueOf (Ljava/lang/String;)LEnumItemRarity; valueOf
ItemBlockWallable a wallBlock
ItemBlockWallable c (LBlockActionContext;)LIBlockData; getPlacementState
EnumToolMaterial a WOOD
EnumToolMaterial b STONE
EnumToolMaterial c IRON
EnumToolMaterial d DIAMOND
EnumToolMaterial e GOLD
EnumToolMaterial f NETHERITE
EnumToolMaterial g level
EnumToolMaterial h uses
EnumToolMaterial i speed
EnumToolMaterial j damage
EnumToolMaterial k enchantmentValue
EnumToolMaterial l repairIngredient
EnumToolMaterial m $VALUES
EnumToolMaterial values ()[LEnumToolMaterial; values
EnumToolMaterial valueOf (Ljava/lang/String;)LEnumToolMaterial; valueOf
EnumToolMaterial b ()F getSpeed
EnumToolMaterial c ()F getAttackDamageBonus
EnumToolMaterial d ()I getLevel
EnumToolMaterial e ()I getEnchantmentValue
EnumToolMaterial f ()LRecipeItemStack; getRepairIngredient
EnumToolMaterial g ()LRecipeItemStack; lambda$static$5
EnumToolMaterial h ()LRecipeItemStack; lambda$static$4
EnumToolMaterial i ()LRecipeItemStack; lambda$static$3
EnumToolMaterial j ()LRecipeItemStack; lambda$static$2
EnumToolMaterial k ()LRecipeItemStack; lambda$static$1
EnumToolMaterial l ()LRecipeItemStack; lambda$static$0
EnumAnimation a NONE
EnumAnimation b EAT
EnumAnimation c DRINK
EnumAnimation d BLOCK
EnumAnimation e BOW
EnumAnimation f SPEAR
EnumAnimation g CROSSBOW
EnumAnimation h $VALUES
EnumAnimation values ()[LEnumAnimation; values
EnumAnimation valueOf (Ljava/lang/String;)LEnumAnimation; valueOf
ItemActionContext a ()LBlockPosition; getClickPosition
ItemActionContext g ()Z isSneaking
ItemActionContext i ()LEnumDirection; getClickedFace
ItemActionContext j ()LVec3D; getPos
ItemActionContext l ()LItemStack; getItemStack
ItemActionContext m ()LEntityHuman; getEntity
ItemActionContext n ()LEnumHand; getHand
ItemActionContext o ()LWorld; getWorld
ItemActionContext b player
ItemActionContext c hand
ItemActionContext d hitResult
ItemActionContext e level
ItemActionContext f itemStack
ItemActionContext k ()Z isInside
ItemActionContext f ()LEnumDirection; getHorizontalDirection
ItemActionContext h ()F getRotation
PotionUtil a (LItemStack;)Ljava/util/List; getEffects
PotionUtil b (LItemStack;)Ljava/util/List; getCustomEffects
PotionUtil b (LNBTTagCompound;)Ljava/util/List; getCustomEffects
PotionUtil c (LItemStack;)I getColor
PotionUtil d (LItemStack;)LPotionRegistry; getPotion
PotionUtil c (LNBTTagCompound;)LPotionRegistry; getPotion
Potions A STRONG_HEALING
Potions B HARMING
Potions C STRONG_HARMING
Potions D POISON
Potions E LONG_POISON
Potions F STRONG_POISON
Potions G REGENERATION
Potions H LONG_REGENERATION
Potions I STRONG_REGENERATION
Potions J STRENGTH
Potions K LONG_STRENGTH
Potions L STRONG_STRENGTH
Potions M WEAKNESS
Potions N LONG_WEAKNESS
Potions O LUCK
Potions P SLOW_FALLING
Potions Q LONG_SLOW_FALLING
Potions a EMPTY
Potions b WATER
Potions c MUNDANE
Potions d THICK
Potions e AWKWARD
Potions f NIGHT_VISION
Potions g LONG_NIGHT_VISION
Potions h INVISIBILITY
Potions i LONG_INVISIBILITY
Potions j LEAPING
Potions k LONG_LEAPING
Potions l STRONG_LEAPING
Potions m FIRE_RESISTANCE
Potions n LONG_FIRE_RESISTANCE
Potions o SWIFTNESS
Potions p LONG_SWIFTNESS
Potions q STRONG_SWIFTNESS
Potions r SLOWNESS
Potions s LONG_SLOWNESS
Potions t STRONG_SLOWNESS
Potions u TURTLE_MASTER
Potions v LONG_TURTLE_MASTER
Potions w STRONG_TURTLE_MASTER
Potions x WATER_BREATHING
Potions y LONG_WATER_BREATHING
Potions z HEALING
RecipeCooking b key
RecipeCooking c group
RecipeCooking d ingredient
RecipeCooking e result
RecipeCooking f experience
RecipeCooking g cookingTime
RecipeCooking a type
RecipeCooking b ()F getExperience
RecipeCooking c ()LItemStack; getResultItem
RecipeCooking d ()Ljava/lang/String; getGroup
RecipeCooking e ()I getCookingTime
RecipeCooking f ()LMinecraftKey; getId
RecipeCooking g ()LRecipes; getType
RecipeItemStack d choices
RecipeItemStack f ()V buildChoices
RecipeItemStack b NON_ALL_EMPTY
RecipeItemStack a EMPTY
RecipeItemStack c values
RecipeItemStack e stackingIds
RecipeItemStack b ()Lit/unimi/dsi/fastutil/ints/IntList; getStackingIds
RecipeItemStack c ()Lcom/google/gson/JsonElement; toJson
RecipeItemStack d ()Z isEmpty
RecipeItemStack e ()LRecipeItemStack; of
RecipeItemStack b (LPacketDataSerializer;)LRecipeItemStack; fromNetwork
RecipeItemStack test (Ljava/lang/Object;)Z test
RecipeItemStack b (Lcom/google/gson/JsonElement;)LRecipeItemStack$Provider; lambda$fromJson$7
RecipeItemStack c (LPacketDataSerializer;)LRecipeItemStack$StackProvider; lambda$fromNetwork$6
RecipeItemStack b (LItemStack;)LRecipeItemStack$StackProvider; lambda$of$5
RecipeItemStack b (I)[LRecipeItemStack$Provider; lambda$new$1
RecipeItemStack b (LRecipeItemStack$Provider;)Z lambda$static$0
IRecipe X_ ()Z isComplex
IRecipe Y_ ()LRecipeSerializer; getRecipeSerializer
IRecipe c ()LItemStack; getResult
IRecipe f ()LMinecraftKey; getKey
IRecipe b (LIInventory;)LNonNullList; getRemainingItems
IRecipe d ()Ljava/lang/String; getGroup
IRecipe h ()LItemStack; getToastSymbol
IRecipe g ()LRecipes; getType
CraftingManager c recipes
CraftingManager a (LRecipes;LIInventory;LWorld;)Ljava/util/Optional; craft
CraftingManager a GSON
CraftingManager b LOGGER
CraftingManager d hasErrors
CraftingManager b (LRecipes;LIInventory;LWorld;)Ljava/util/List; getRecipesFor
CraftingManager c (LRecipes;LIInventory;LWorld;)LNonNullList; getRemainingItemsFor
CraftingManager b ()Ljava/util/Collection; getRecipes
CraftingManager c ()Ljava/util/stream/Stream; getRecipeIds
CraftingManager b (LRecipes;)Ljava/util/Map; lambda$null$9
CraftingManager b (Ljava/util/Map;)Ljava/util/stream/Stream; lambda$getRecipes$6
CraftingManager b (LRecipes;LWorld;LIInventory;LIRecipe;)Ljava/util/stream/Stream; lambda$getRecipeFor$2
CraftingManager c (LRecipes;)Lcom/google/common/collect/ImmutableMap$Builder; lambda$apply$0
Recipes a CRAFTING
Recipes b SMELTING
Recipes c BLASTING
Recipes d SMOKING
Recipes e CAMPFIRE_COOKING
Recipes f STONECUTTING
ShapedRecipes a width
ShapedRecipes b height
ShapedRecipes c items
ShapedRecipes d result
ShapedRecipes e key
ShapedRecipes f group
ShapedRecipes f ()LMinecraftKey; getId
ShapedRecipes Y_ ()LRecipeSerializer; getSerializer
ShapedRecipes d ()Ljava/lang/String; getGroup
ShapedRecipes c ()LItemStack; getResultItem
ShapedRecipes i ()I getWidth
ShapedRecipes j ()I getHeight
ShapedRecipes b ([Ljava/lang/String;Ljava/util/Map;II)LNonNullList; dissolvePattern
ShapedRecipes b (Ljava/lang/String;)I lastNonSpace
ShapedRecipes b (Lcom/google/gson/JsonArray;)[Ljava/lang/String; patternFromJson
ShapedRecipes c (Lcom/google/gson/JsonObject;)Ljava/util/Map; keyFromJson
ShapedRecipes c (Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException; lambda$itemFromJson$0
ShapedRecipes b (Lcom/google/gson/JsonObject;)Ljava/util/Map; access$000
ShapedRecipes b (LShapedRecipes;)I access$400
ShapedRecipes c (LShapedRecipes;)Ljava/lang/String; access$500
ShapedRecipes d (LShapedRecipes;)LNonNullList; access$600
ShapedRecipes e (LShapedRecipes;)LItemStack; access$700
ShapelessRecipes a key
ShapelessRecipes b group
ShapelessRecipes c result
ShapelessRecipes d ingredients
ShapelessRecipes f ()LMinecraftKey; getId
ShapelessRecipes Y_ ()LRecipeSerializer; getSerializer
ShapelessRecipes d ()Ljava/lang/String; getGroup
ShapelessRecipes c ()LItemStack; getResultItem
ShapelessRecipes b (LShapelessRecipes;)LNonNullList; access$100
ShapelessRecipes c (LShapelessRecipes;)LItemStack; access$200
RecipeSingleItem a ingredient
RecipeSingleItem b result
RecipeSingleItem c key
RecipeSingleItem d group
RecipeSingleItem e type
RecipeSingleItem f serializer
RecipeSingleItem g ()LRecipes; getType
RecipeSingleItem Y_ ()LRecipeSerializer; getSerializer
RecipeSingleItem f ()LMinecraftKey; getId
RecipeSingleItem d ()Ljava/lang/String; getGroup
RecipeSingleItem c ()LItemStack; getResultItem
Enchantment b itemTarget
Enchantment a ()I getMaxLevel
Enchantment a (LItemStack;)Z canEnchant
Enchantment b ()Z isTreasure
Enchantment b (LEnchantment;)Z isCompatible
Enchantment e ()I getStartLevel
Enchantment a slots
Enchantment d rarity
Enchantment c descriptionId
Enchantment c (I)LEnchantment; byId
Enchantment d ()LEnchantment$Rarity; getRarity
Enchantment b (I)I getMaxCost
Enchantment f ()Ljava/lang/String; getOrCreateDescriptionId
Enchantment g ()Ljava/lang/String; getDescriptionId
Enchantment d (I)LIChatBaseComponent; getFullname
Enchantment b (LEntityLiving;LEntity;I)V doPostHurt
Enchantment c ()Z isCurse
Enchantment h ()Z isTradeable
Enchantment i ()Z isDiscoverable
Enchantment$Rarity a COMMON
Enchantment$Rarity b UNCOMMON
Enchantment$Rarity c RARE
Enchantment$Rarity d VERY_RARE
Enchantment$Rarity e weight
Enchantment$Rarity f $VALUES
Enchantment$Rarity values ()[LEnchantment$Rarity; values
Enchantment$Rarity valueOf (Ljava/lang/String;)LEnchantment$Rarity; valueOf
EnchantmentSlotType a ALL
EnchantmentSlotType b ARMOR
EnchantmentSlotType c ARMOR_FEET
EnchantmentSlotType d ARMOR_LEGS
EnchantmentSlotType e ARMOR_CHEST
EnchantmentSlotType f ARMOR_HEAD
EnchantmentSlotType g WEAPON
EnchantmentSlotType h DIGGER
EnchantmentSlotType i FISHING_ROD
EnchantmentSlotType j TRIDENT
EnchantmentSlotType k BREAKABLE
EnchantmentSlotType l BOW
EnchantmentSlotType m WEARABLE
EnchantmentSlotType n CROSSBOW
EnchantmentSlotType a (LItem;)Z canEnchant
EnchantmentSlotType o $VALUES
EnchantmentSlotType values ()[LEnchantmentSlotType; values
EnchantmentSlotType valueOf (Ljava/lang/String;)LEnchantmentSlotType; valueOf
EnchantmentManager a (LEnchantment;LItemStack;)I getEnchantmentLevel
EnchantmentManager c (LEntityLiving;)I getFireAspectEnchantmentLevel
EnchantmentManager d (LEntityLiving;)I getOxygenEnchantmentLevel
EnchantmentManager e (LItemStack;)Z shouldNotDrop
EnchantmentManager f (LEntityLiving;)I getDigSpeedEnchantmentLevel
EnchantmentManager b (LEntityLiving;LEntity;)V doPostDamageEffects
EnchantmentManager b (LEntityLiving;)I getKnockbackBonus
EnchantmentManager e (LEntityLiving;)I getDepthStrider
EnchantmentManager b (LItemStack;)I getFishingLuckBonus
EnchantmentManager c (LItemStack;)I getFishingSpeedBonus
EnchantmentManager g (LEntityLiving;)I getMobLooting
EnchantmentManager h (LEntityLiving;)Z hasAquaAffinity
EnchantmentManager i (LEntityLiving;)Z hasFrostWalker
EnchantmentManager j (LEntityLiving;)Z hasSoulSpeed
EnchantmentManager d (LItemStack;)Z hasBindingCurse
EnchantmentManager f (LItemStack;)I getLoyalty
EnchantmentManager g (LItemStack;)I getRiptide
EnchantmentManager h (LItemStack;)Z hasChanneling
EnchantmentManager b (LEnchantment;LEntityLiving;)Ljava/util/Map$Entry; getRandomItemWith
EnchantmentManager b (Ljava/util/Random;LItemStack;IZ)Ljava/util/List; selectEnchantment
EnchantmentManager i (LItemStack;)Z lambda$getRandomItemWith$6
EnchantmentManager b (LEntityLiving;LEntity;LEnchantment;I)V lambda$doPostHurtEffects$4
WeightedRandomEnchant b enchantment
WeightedRandomEnchant c level
Enchantments B LUCK
Enchantments C LURE
Enchantments D LOYALTY
Enchantments E IMPALING
Enchantments F RIPTIDE
Enchantments G CHANNELING
Enchantments H MULTISHOT
Enchantments I QUICK_CHARGE
Enchantments J PIERCING
Enchantments K MENDING
Enchantments L VANISHING_CURSE
Enchantments a PROTECTION_ENVIRONMENTAL
Enchantments b PROTECTION_FIRE
Enchantments c PROTECTION_FALL
Enchantments d PROTECTION_EXPLOSIONS
Enchantments e PROTECTION_PROJECTILE
Enchantments f OXYGEN
Enchantments g WATER_WORKER
Enchantments h THORNS
Enchantments i DEPTH_STRIDER
Enchantments j FROST_WALKER
Enchantments k BINDING_CURSE
Enchantments m DAMAGE_ALL
Enchantments n DAMAGE_UNDEAD
Enchantments o DAMAGE_ARTHROPODS
Enchantments p KNOCKBACK
Enchantments q FIRE_ASPECT
Enchantments r LOOT_BONUS_MOBS
Enchantments s SWEEPING
Enchantments t DIG_SPEED
Enchantments u SILK_TOUCH
Enchantments v DURABILITY
Enchantments w LOOT_BONUS_BLOCKS
Enchantments x ARROW_DAMAGE
Enchantments y ARROW_KNOCKBACK
Enchantments z ARROW_FIRE
Enchantments A ARROW_INFINITE
Enchantments M ARMOR_SLOTS
Enchantments l SOUL_SPEED
EnchantmentProtection$DamageType a ALL
EnchantmentProtection$DamageType b FIRE
EnchantmentProtection$DamageType c FALL
EnchantmentProtection$DamageType d EXPLOSION
EnchantmentProtection$DamageType e PROJECTILE
EnchantmentProtection$DamageType f name
EnchantmentProtection$DamageType g minCost
EnchantmentProtection$DamageType h levelCost
EnchantmentProtection$DamageType i $VALUES
EnchantmentProtection$DamageType values ()[LEnchantmentProtection$DamageType; values
EnchantmentProtection$DamageType valueOf (Ljava/lang/String;)LEnchantmentProtection$DamageType; valueOf
EnchantmentProtection$DamageType b ()I getMinCost
EnchantmentProtection$DamageType c ()I getLevelCost
IMerchant a (LEntityHuman;LIChatBaseComponent;I)V openTrade
IMerchant e (LEntityHuman;)V setTradingPlayer
IMerchant eI ()LWorld; getWorld
IMerchant ey ()I getExperience
IMerchant ez ()LEntityHuman; getTrader
IMerchant eB ()LMerchantRecipeList; getOffers
IMerchant eC ()Z isRegularVillager
IMerchant eD ()LSoundEffect; getTradeSound
IMerchant t (I)V setExperience
IMerchant k (LItemStack;)V notifyTradeUpdated
IMerchant eK ()Z canRestock
MerchantRecipe a buyingItem1
MerchantRecipe b buyingItem2
MerchantRecipe c sellingItem
MerchantRecipe d uses
MerchantRecipe e maxUses
MerchantRecipe f rewardExp
MerchantRecipe g specialPrice
MerchantRecipe h demand
MerchantRecipe i priceMultiplier
MerchantRecipe j xp
MerchantRecipe a (I)V increaseSpecialPrice
MerchantRecipe b ()LItemStack; getBuyItem1
MerchantRecipe b (I)V setSpecialPrice
MerchantRecipe c ()LItemStack; getBuyItem2
MerchantRecipe d ()LItemStack; getSellingItem
MerchantRecipe g ()I getUses
MerchantRecipe h ()V resetUses
MerchantRecipe i ()I getMaxUses
MerchantRecipe j ()V increaseUses
MerchantRecipe k ()I getDemand
MerchantRecipe l ()V setSpecialPrice
MerchantRecipe m ()I getSpecialPrice
MerchantRecipe n ()F getPriceMultiplier
MerchantRecipe o ()I getXp
MerchantRecipe p ()Z isFullyUsed
MerchantRecipe s ()Z isRewardExp
MerchantRecipe e ()V updateDemand
MerchantRecipe f ()LItemStack; assemble
MerchantRecipe q ()V setToOutOfStock
MerchantRecipe r ()Z needsRestock
MerchantRecipe t ()LNBTTagCompound; createTag
MerchantRecipe c (LItemStack;LItemStack;)Z isRequiredItem
MerchantRecipe b (LItemStack;LItemStack;)Z take
CommandBlockListenerAbstract d lastExecution
CommandBlockListenerAbstract e updateLastExecution
CommandBlockListenerAbstract f successCount
CommandBlockListenerAbstract g trackOutput
CommandBlockListenerAbstract h lastOutput
CommandBlockListenerAbstract i command
CommandBlockListenerAbstract j customName
CommandBlockListenerAbstract a (Ljava/lang/String;)V setCommand
CommandBlockListenerAbstract b (LIChatBaseComponent;)V setName
CommandBlockListenerAbstract h ()LCommandListenerWrapper; getWrapper
CommandBlockListenerAbstract k ()Ljava/lang/String; getCommand
CommandBlockListenerAbstract l ()LIChatBaseComponent; getName
CommandBlockListenerAbstract b TIME_FORMAT
CommandBlockListenerAbstract c DEFAULT_NAME
CommandBlockListenerAbstract i ()I getSuccessCount
CommandBlockListenerAbstract j ()LIChatBaseComponent; getLastOutput
CommandBlockListenerAbstract b (LNBTTagCompound;)V load
CommandBlockListenerAbstract d ()LWorldServer; getLevel
CommandBlockListenerAbstract e ()V onUpdated
CommandBlockListenerAbstract c (LIChatBaseComponent;)V setLastOutput
CommandBlockListenerAbstract m ()Z isTrackOutput
CommandBlockListenerAbstract f ()LVec3D; getPosition
CommandBlockListenerAbstract b ()Z acceptsFailure
CommandBlockListenerAbstract I_ ()Z shouldInformAdmins
CommandBlockListenerAbstract g ()Ljava/lang/String; lambda$performCommand$1
MobSpawnerAbstract b spawnDelay
MobSpawnerAbstract c mobs
MobSpawnerAbstract d spawnData
MobSpawnerAbstract g minSpawnDelay
MobSpawnerAbstract h maxSpawnDelay
MobSpawnerAbstract i spawnCount
MobSpawnerAbstract k maxNearbyEntities
MobSpawnerAbstract l requiredPlayerRange
MobSpawnerAbstract m spawnRange
MobSpawnerAbstract a (LEntityTypes;)V setMobName
MobSpawnerAbstract a (LMobSpawnerData;)V setSpawnData
MobSpawnerAbstract g ()LMinecraftKey; getMobName
MobSpawnerAbstract a LOGGER
MobSpawnerAbstract e spin
MobSpawnerAbstract f oSpin
MobSpawnerAbstract j displayEntity
MobSpawnerAbstract h ()Z isNearPlayer
MobSpawnerAbstract c ()V tick
MobSpawnerAbstract i ()V delay
MobSpawnerAbstract b (LNBTTagCompound;)LNBTTagCompound; save
MobSpawnerAbstract d ()LEntity; getOrCreateDisplayEntity
MobSpawnerAbstract b (I)Z onEventTriggered
MobSpawnerAbstract b ()LBlockPosition; getPos
MobSpawnerAbstract e ()D getSpin
MobSpawnerAbstract f ()D getoSpin
IBlockLightAccess a (LEnumSkyBlock;LBlockPosition;)I getBrightness
IBlockLightAccess b (LBlockPosition;I)I getLightLevel
IBlockLightAccess e ()LLightEngine; getLightEngine
IBlockLightAccess f (LBlockPosition;)Z canSeeSky
IBlockAccess H ()I getBuildHeight
IBlockAccess a (LRayTrace;)LMovingObjectPositionBlock; rayTrace
IBlockAccess a (LVec3D;LVec3D;LBlockPosition;LVoxelShape;LIBlockData;)LMovingObjectPositionBlock; rayTrace
IBlockAccess b (LBlockPosition;)LFluid; getFluid
IBlockAccess c (LBlockPosition;)LTileEntity; getTileEntity
IBlockAccess d_ (LBlockPosition;)LIBlockData; getType
IBlockAccess g (LBlockPosition;)I getLightBlock
IBlockAccess h (LBlockPosition;)I getLightEmission
IBlockAccess G ()I getMaxLightLevel
IBlockAccess b (LRayTrace;)LMovingObjectPositionBlock; lambda$clip$1
ChunkCoordIntPair b x
ChunkCoordIntPair c z
ChunkCoordIntPair a ()J pair
ChunkCoordIntPair a (II)J pair
ChunkCoordIntPair a (J)I getX
ChunkCoordIntPair b (J)I getZ
ChunkCoordIntPair h ()I getRegionX
ChunkCoordIntPair i ()I getRegionZ
ChunkCoordIntPair a INVALID_CHUNK_POS
ChunkCoordIntPair hashCode ()I hashCode
ChunkCoordIntPair equals (Ljava/lang/Object;)Z equals
ChunkCoordIntPair b ()I getMiddleBlockX
ChunkCoordIntPair c ()I getMiddleBlockZ
ChunkCoordIntPair d ()I getMinBlockX
ChunkCoordIntPair e ()I getMinBlockZ
ChunkCoordIntPair f ()I getMaxBlockX
ChunkCoordIntPair g ()I getMaxBlockZ
ChunkCoordIntPair j ()I getRegionLocalX
ChunkCoordIntPair k ()I getRegionLocalZ
ChunkCoordIntPair toString ()Ljava/lang/String; toString
ChunkCoordIntPair l ()LBlockPosition; getWorldPosition
RayTrace$BlockCollisionOption a COLLIDER
RayTrace$BlockCollisionOption b OUTLINE
RayTrace$BlockCollisionOption c VISUAL
RayTrace$BlockCollisionOption d shapeGetter
RayTrace$BlockCollisionOption e $VALUES
RayTrace$BlockCollisionOption values ()[LRayTrace$BlockCollisionOption; values
RayTrace$BlockCollisionOption valueOf (Ljava/lang/String;)LRayTrace$BlockCollisionOption; valueOf
RayTrace$BlockCollisionOption get (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; get
RayTrace$FluidCollisionOption a NONE
RayTrace$FluidCollisionOption b SOURCE_ONLY
RayTrace$FluidCollisionOption c ANY
RayTrace$FluidCollisionOption d predicate
RayTrace$FluidCollisionOption e $VALUES
RayTrace$FluidCollisionOption values ()[LRayTrace$FluidCollisionOption; values
RayTrace$FluidCollisionOption valueOf (Ljava/lang/String;)LRayTrace$FluidCollisionOption; valueOf
RayTrace$FluidCollisionOption b (LFluid;)Z lambda$static$1
RayTrace$FluidCollisionOption c (LFluid;)Z lambda$static$0
ICollisionAccess a_ (LEntity;LAxisAlignedBB;)Z getCubes
ICollisionAccess s_ ()LWorldBorder; getWorldBorder
ICollisionAccess j (LEntity;)Z getCubes
ICollisionAccess c (II)LIBlockAccess; getChunkForCollisions
ICollisionAccess i (LEntity;)Z isUnobstructed
ICollisionAccess b (LEntity;LAxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
ICollisionAccess c (LEntity;LAxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getCollisions
ICollisionAccess b (LEntity;LAxisAlignedBB;)Ljava/util/stream/Stream; getBlockCollisions
BlockAccessAir a INSTANCE
BlockAccessAir b $VALUES
BlockAccessAir values ()[LBlockAccessAir; values
BlockAccessAir valueOf (Ljava/lang/String;)LBlockAccessAir; valueOf
BlockAccessAir c (LBlockPosition;)LTileEntity; getBlockEntity
BlockAccessAir d_ (LBlockPosition;)LIBlockData; getBlockState
BlockAccessAir b (LBlockPosition;)LFluid; getFluidState
IEntityAccess z ()Ljava/util/List; getPlayers
IEntityAccess a (DDDD)Z isPlayerNearby
IEntityAccess a (LEntity;D)LEntityHuman; findNearbyPlayer
IEntityAccess a (LEntity;LAxisAlignedBB;)Ljava/util/List; getEntities
IEntityAccess a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
IEntityAccess b (Ljava/lang/Class;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
IEntityAccess b (Ljava/lang/Class;LAxisAlignedBB;)Ljava/util/List; getLoadedEntitiesOfClass
IEntityAccess b (LEntity;LAxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
IEntityAccess b (Ljava/lang/Class;LPathfinderTargetCondition;LEntityLiving;DDDLAxisAlignedBB;)LEntityLiving; getNearestLoadedEntity
IEntityAccess b (Ljava/lang/String;)LEntityHuman; getPlayerByName
IEntityAccess b (Ljava/util/UUID;)LEntityHuman; getPlayerByUUID
IEntityAccess b (LEntity;LEntity;)Z lambda$getEntityCollisions$3
IEntityAccess c (LEntity;LEntity;)Z lambda$isUnobstructed$0
Explosion d world
Explosion e posX
Explosion f posY
Explosion g posZ
Explosion h source
Explosion i size
Explosion k blocks
Explosion d ()LEntityLiving; getSource
Explosion e ()V clearBlocks
Explosion f ()Ljava/util/List; getBlocks
Explosion a fire
Explosion b blockInteraction
Explosion c random
Explosion j damageSource
Explosion l hitPlayers
Explosion b ()LDamageSource; getDamageSource
Explosion c ()Ljava/util/Map; getHitPlayers
Explosion$Effect a NONE
Explosion$Effect b BREAK
Explosion$Effect c DESTROY
Explosion$Effect d $VALUES
Explosion$Effect values ()[LExplosion$Effect; values
Explosion$Effect valueOf (Ljava/lang/String;)LExplosion$Effect; valueOf
GameRules A DROWNING_DAMAGE
GameRules B FALL_DAMAGE
GameRules C FIRE_DAMAGE
GameRules D DO_PATROL_SPAWNING
GameRules E DO_TRADER_SPAWNING
GameRules a DO_FIRE_TICK
GameRules b MOB_GRIEFING
GameRules c KEEP_INVENTORY
GameRules d DO_MOB_SPAWNING
GameRules e DO_MOB_LOOT
GameRules f DO_TILE_DROPS
GameRules g DO_ENTITY_DROPS
GameRules h COMMAND_BLOCK_OUTPUT
GameRules i NATURAL_REGENERATION
GameRules j DO_DAYLIGHT_CYCLE
GameRules k LOG_ADMIN_COMMANDS
GameRules l SHOW_DEATH_MESSAGES
GameRules m RANDOM_TICK_SPEED
GameRules n SEND_COMMAND_FEEDBACK
GameRules o REDUCED_DEBUG_INFO
GameRules p SPECTATORS_GENERATE_CHUNKS
GameRules q SPAWN_RADIUS
GameRules r DISABLE_ELYTRA_MOVEMENT_CHECK
GameRules s MAX_ENTITY_CRAMMING
GameRules t DO_WEATHER_CYCLE
GameRules u DO_LIMITED_CRAFTING
GameRules v MAX_COMMAND_CHAIN_LENGTH
GameRules w ANNOUNCE_ADVANCEMENTS
GameRules x DISABLE_RAIDS
GameRules y DO_INSOMNIA
GameRules z DO_IMMEDIATE_RESPAWN
GameRules a (LGameRules$GameRuleKey;)LGameRules$GameRuleValue; get
GameRules b (LGameRules$GameRuleKey;)Z getBoolean
GameRules c (LGameRules$GameRuleKey;)I getInt
GameRules F LOGGER
GameRules G GAME_RULE_TYPES
GameRules H rules
GameRules b (LGameRules$GameRuleVisitor;LGameRules$GameRuleKey;LGameRules$GameRuleDefinition;)V lambda$visitGameRuleTypes$6
GameRules b (LNBTTagCompound;LGameRules$GameRuleKey;LGameRules$GameRuleValue;)V lambda$createTag$4
GameRules b (Lnet/minecraft/server/MinecraftServer;LGameRules$GameRuleBoolean;)V lambda$static$1
GameRules d (LGameRules$GameRuleKey;)Ljava/lang/String; lambda$static$0
GameRules b ()Lorg/apache/logging/log4j/Logger; access$500
GameRules$GameRuleDefinition a ()LGameRules$GameRuleValue; getValue
GameRules$GameRuleDefinition a argument
GameRules$GameRuleDefinition b constructor
GameRules$GameRuleDefinition c callback
GameRules$GameRuleValue a (Ljava/lang/String;)V setValue
GameRules$GameRuleValue a (Lnet/minecraft/server/MinecraftServer;)V onChange
GameRules$GameRuleValue b ()Ljava/lang/String; getValue
GameRules$GameRuleValue c ()I getIntValue
GameRules$GameRuleValue a type
GameRules$GameRuleValue b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V setFromArgument
GameRules$GameRuleValue toString ()Ljava/lang/String; toString
GameRules$GameRuleValue e ()LGameRules$GameRuleValue; getSelf
EnumGamemode a NOT_SET
EnumGamemode b SURVIVAL
EnumGamemode c CREATIVE
EnumGamemode d ADVENTURE
EnumGamemode e SPECTATOR
EnumGamemode a ()I getId
EnumGamemode a (I)LEnumGamemode; getById
EnumGamemode e ()Z isCreative
EnumGamemode f id
EnumGamemode g name
EnumGamemode h $VALUES
EnumGamemode values ()[LEnumGamemode; values
EnumGamemode valueOf (Ljava/lang/String;)LEnumGamemode; valueOf
EnumGamemode b ()Ljava/lang/String; getName
EnumGamemode c ()LIChatBaseComponent; getDisplayName
EnumGamemode d ()Z isBlockPlacingRestricted
EnumGamemode f ()Z isSurvival
IMaterial i ()LItem; getItem
World b serverThread
World e tileEntityList
World f tileEntityListTick
World g tileEntityListPending
World h tileEntityListUnload
World k lastRainLevel
World l rainLevel
World m lastThunderLevel
World n thunderLevel
World o random
World p worldProvider
World q chunkProvider
World r worldData
World s isClientSide
World t tickingTileEntities
World u methodProfiler
World v worldBorder
World w biomeManager
World C ()LScoreboard; getScoreboard
World I ()Z isDay
World J ()Z isNight
World K ()V tickBlockEntities
World Q ()J getTime
World R ()J getDayTime
World S ()LGameRules; getGameRules
World U ()Z isRaining
World V ()LGameProfilerFiller; getMethodProfiler
World a (I)LEntity; getEntity
World a (LBlockPosition;LBlock;II)V playBlockAction
World a (LBlockPosition;LEnumDirection;)Z isBlockFacePowered
World a (LBlockPosition;LIBlockData;)Z setTypeUpdate
World a (LBlockPosition;LIBlockData;LIBlockData;I)V notify
World a (LBlockPosition;LTileEntity;)V setTileEntity
World a (LEntity;B)V broadcastEntityEffect
World a (LEntity;DDDFLExplosion$Effect;)LExplosion; explode
World a (LEntity;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
World a (LEntity;LDamageSource;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntityHuman;DDDLSoundEffect;LSoundCategory;FF)V playSound
World a (LEntityHuman;LEntity;LSoundEffect;LSoundCategory;FF)V playSound
World a (ZZ)V setSpawnFlags
World b (J)V setDayTime
World b (LBlockPosition;LBlock;)V applyPhysics
World b (LBlockPosition;LEnumDirection;)I getBlockFacePower
World c (LBlockPosition;LBlock;)V updateAdjacentComparators
World j (LBlockPosition;)Z isValidLocation
World l (LBlockPosition;)Z isOutsideWorld
World n (LBlockPosition;)LChunk; getChunkAtWorldCoords
World o (LBlockPosition;)V removeTileEntity
World q (LBlockPosition;)I getBlockPower
World o ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
World r (LBlockPosition;)Z isBlockIndirectlyPowered
World t (LBlockPosition;)Z isRainingAt
World r ()LCraftingManager; getCraftingManager
World q_ ()LBlockPosition; getSpawn
World t ()Z isSavingDisabled
World x ()I getWorldMapCount
World d LOGGER
World a DIRECTIONS
World c skyDarken
World i randValue
World j addend
World n_ ()Z isClientSide
World i (LBlockPosition;)LIBlockData; getTopBlockState
World k (LBlockPosition;)Z isInSpawnableBounds
World e (LBlockPosition;)Z isInWorldBoundsHorizontal
World d (I)Z isOutsideSpawnableHeight
World b (I)Z isOutsideBuildHeight
World m (LBlockPosition;)D getRelativeFloorHeight
World d (II)LChunk; getChunk
World b (LBlockPosition;LIBlockData;LIBlockData;)V setBlocksDirty
World e ()LLightEngine; getLightEngine
World d_ (LBlockPosition;)LIBlockData; getBlockState
World b (LBlockPosition;)LFluid; getFluidState
World b (LParticleParam;DDDDDD)V addAlwaysVisibleParticle
World b (LParticleParam;ZDDDDDD)V addAlwaysVisibleParticle
World b (LAxisAlignedBB;)Z containsAnyBlocks
World c (LAxisAlignedBB;)Z containsFireBlock
World L ()Ljava/lang/String; gatherChunkSourceStats
World c (LBlockPosition;)LTileEntity; getBlockEntity
World D (LBlockPosition;)LTileEntity; getPendingBlockEntityAt
World p (LBlockPosition;)Z isLoaded
World M ()V updateSkyBrightness
World N ()V prepareWeather
World close ()V close
World c (II)LIBlockAccess; getChunkForCollisions
World b (Ljava/lang/Class;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getLoadedEntitiesOfClass
World b (LBlockPosition;LTileEntity;)V blockEntityChanged
World o_ ()I getSeaLevel
World q ()LWorld; getLevel
World O ()LWorldType; getGeneratorType
World s (LBlockPosition;)I getBestNeighborSignal
World P ()V disconnect
World u ()V checkSession
World p_ ()J getSeed
World a_ (LBlockPosition;)V setDefaultSpawnPos
World D ()LIChunkProvider; getChunkSource
World r_ ()LWorldData; getLevelData
World b (F)F getThunderLevel
World c (F)V setThunderLevel
World d (F)F getRainLevel
World e (F)V setRainLevel
World T ()Z isThundering
World u (LBlockPosition;)Z isHumidAt
World b (ILBlockPosition;I)V globalLevelEvent
World d (LBlockPosition;)LDifficultyDamageScaler; getCurrentDifficultyAt
World c ()I getSkyDarken
World c (I)V setSkyFlashTime
World s_ ()LWorldBorder; getWorldBorder
World p ()LWorldProvider; getDimension
World t_ ()Ljava/util/Random; getRandom
World b (LBlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
World s ()LTagRegistry; getTagManager
World W ()Ljava/util/function/Supplier; getProfilerSupplier
World d ()LBiomeManager; getBiomeManager
World b ()Ljava/lang/String; lambda$fillReportDetails$5
World h ()Ljava/lang/String; lambda$fillReportDetails$4
World b (LTileEntity;)Ljava/lang/String; lambda$tickBlockEntities$2
World c (LTileEntity;)Ljava/lang/Object; lambda$addBlockEntity$1
GeneratorAccess D ()LIChunkProvider; getChunkProvider
GeneratorAccess E ()LTickList; getFluidTickList
GeneratorAccess F ()LTickList; getBlockTickList
GeneratorAccess a (LBlockPosition;LBlock;)V update
GeneratorAccess a (LEntityHuman;LBlockPosition;LSoundEffect;LSoundCategory;FF)V playSound
GeneratorAccess a (LParticleParam;DDDDDD)V addParticle
GeneratorAccess Z ()LEnumDifficulty; getDifficulty
GeneratorAccess c (ILBlockPosition;I)V triggerEffect
GeneratorAccess d (LBlockPosition;)LDifficultyDamageScaler; getDamageScaler
GeneratorAccess r_ ()LWorldData; getWorldData
GeneratorAccess q ()LWorld; getMinecraftWorld
GeneratorAccess p_ ()J getSeed
GeneratorAccess t_ ()Ljava/util/Random; getRandom
GeneratorAccess X ()F getMoonBrightness
GeneratorAccess f (F)F getTimeOfDay
GeneratorAccess Y ()I getMoonPhase
GeneratorAccess o ()Lnet/minecraft/server/MinecraftServer; getServer
GeneratorAccess b (II)Z hasChunk
GeneratorAccess q_ ()LBlockPosition; getSharedSpawnPos
GeneratorAccess aa ()I getHeight
GeneratorAccess b (LEntity;LAxisAlignedBB;Ljava/util/Set;)Ljava/util/stream/Stream; getEntityCollisions
IWorldReader C (LBlockPosition;)Z isLoaded
IWorldReader a (II)LIChunkAccess; getChunkAt
IWorldReader a (IIIIII)Z isAreaLoaded
IWorldReader a (IILChunkStatus;)LIChunkAccess; getChunkAt
IWorldReader a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IWorldReader a (LBlockPosition;LBlockPosition;)Z areChunksLoadedBetween
IWorldReader a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
IWorldReader b (II)Z isChunkLoaded
IWorldReader d (LAxisAlignedBB;)Z containsLiquid
IWorldReader p ()LWorldProvider; getWorldProvider
IWorldReader o_ ()I getSeaLevel
IWorldReader v (LBlockPosition;)LBiomeBase; getBiome
IWorldReader w (LBlockPosition;)Z isEmpty
IWorldReader B (LBlockPosition;)I getLightLevel
IWorldReader c ()I getSkyDarken
IWorldReader d ()LBiomeManager; getBiomeManager
IWorldReader b (III)LBiomeBase; getNoiseBiome
IWorldReader n_ ()Z isClientSide
IWorldReader x (LBlockPosition;)Z canSeeSkyFromBelowWater
IWorldReader y (LBlockPosition;)F getBrightness
IWorldReader c (LBlockPosition;LEnumDirection;)I getDirectSignal
IWorldReader z (LBlockPosition;)LIChunkAccess; getChunk
IWorldReader c (II)LIBlockAccess; getChunkForCollisions
IWorldReader A (LBlockPosition;)Z isWaterAt
IWorldReader c (LBlockPosition;I)I getMaxLocalRawBrightness
WorldSettings a seed
WorldSettings b gameType
WorldSettings c generateMapFeatures
WorldSettings d hardcore
WorldSettings e generatorProvider
WorldSettings f allowCommands
WorldSettings g startingBonusItems
WorldSettings b ()LWorldSettings; enableSinglePlayerCommands
WorldSettings c ()Z hasStartingBonusItems
WorldSettings d ()J getSeed
WorldSettings e ()LEnumGamemode; getGameType
WorldSettings f ()Z isHardcore
WorldSettings g ()Z isGenerateMapFeatures
WorldSettings h ()LChunkGeneratorProvider; getGeneratorProvider
WorldSettings i ()Z getAllowCommands
VirtualLevelReadable a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
VirtualLevelReadable b (LBlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
WorldType a types
WorldType b NORMAL
WorldType c FLAT
WorldType d LARGE_BIOMES
WorldType e AMPLIFIED
WorldType f CUSTOMIZED
WorldType h DEBUG_ALL_BLOCK_STATES
WorldType i NORMAL_1_1
WorldType l name
WorldType n version
WorldType a ()Ljava/lang/String; name
WorldType a (Ljava/lang/String;)LWorldType; getType
WorldType e ()I getVersion
WorldType j EMPTY_SETTINGS
WorldType g BUFFET
WorldType k id
WorldType m generatorSerialization
WorldType o provider
WorldType p defaultProvider
WorldType q selectable
WorldType r replacement
WorldType s hasHelpText
WorldType t hasCustomOptions
WorldType b ()Ljava/lang/String; getSerialization
WorldType c ()Ljava/lang/String; getDescriptionId
WorldType d ()Ljava/lang/String; getHelpTextId
WorldType f ()Z hasCustomOptions
WorldType b (Z)LWorldType; setSelectableByUser
WorldType g ()Z isSelectable
WorldType l ()LWorldType; setHasReplacement
WorldType h ()Z hasReplacement
WorldType i ()I getId
WorldType j ()Z hasHelpText
WorldType m ()LWorldType; setHasHelpText
WorldType k ()LChunkGeneratorProvider; getDefaultProvider
IWorldWriter a (LBlockPosition;LIBlockData;I)Z setTypeAndData
IWorldWriter c (LEntity;)Z addEntity
IWorldWriter b (LBlockPosition;Z)Z destroyBlock
EnumSkyBlock a SKY
EnumSkyBlock b BLOCK
EnumSkyBlock c surrounding
EnumSkyBlock d $VALUES
EnumSkyBlock values ()[LEnumSkyBlock; values
EnumSkyBlock valueOf (Ljava/lang/String;)LEnumSkyBlock; valueOf
SpawnerCreature a (LWorld;LChunk;)LBlockPosition; getRandomPosition
SpawnerCreature a LOGGER
PortalTravelAgent a world
PortalTravelAgent a (LEntity;)Z createPortal
PortalTravelAgent a (LEntity;F)Z findAndTeleport
PortalTravelAgent b random
TickListServer d nextTickListHash
TickListServer e nextTickList
TickListServer a ignore
TickListServer b toId
TickListServer c fromId
TickListServer f level
TickListServer g currentlyTicking
TickListServer h alreadyTicked
TickListServer i ticker
TickListServer b ()V tick
TickListServer b (LBlockPosition;Ljava/lang/Object;)Z willTickThisTick
MobSpawnerData b entity
MobSpawnerData b ()LNBTTagCompound; getEntity
TickListPriority a EXTREMELY_HIGH
TickListPriority b VERY_HIGH
TickListPriority c HIGH
TickListPriority d NORMAL
TickListPriority e LOW
TickListPriority f VERY_LOW
TickListPriority g EXTREMELY_LOW
TickListPriority h value
TickListPriority i $VALUES
TickListPriority values ()[LTickListPriority; values
TickListPriority valueOf (Ljava/lang/String;)LTickListPriority; valueOf
BiomeBase a (LEnumCreatureType;)Ljava/util/List; getMobs
BiomeBase b (LBlockPosition;)F getAdjustedTemperature
BiomeBase k ()F getHumidity
BiomeBase o ()F getTemperature
BiomeBase a LOGGER
BiomeBase b EXPLORABLE_BIOMES
BiomeBase c MUTATED_BIOMES
BiomeBase d TEMPERATURE_NOISE
BiomeBase e BIOME_INFO_NOISE
BiomeBase f descriptionId
BiomeBase g depth
BiomeBase h scale
BiomeBase i temperature
BiomeBase j downfall
BiomeBase t skyColor
BiomeBase k parent
BiomeBase l surfaceBuilder
BiomeBase m biomeCategory
BiomeBase n precipitation
BiomeBase o specialEffects
BiomeBase p carvers
BiomeBase q features
BiomeBase r flowerFeatures
BiomeBase s validFeatureStarts
BiomeBase u spawners
BiomeBase v temperatureCache
BiomeBase w optimalParameters
BiomeBase b ()Z isMutated
BiomeBase A ()I calculateSkyColor
BiomeBase c ()I getSkyColor
BiomeBase d ()LBiomeBase$Precipitation; getPrecipitation
BiomeBase e ()Z isHumid
BiomeBase f ()F getCreatureProbability
BiomeBase b (LIWorldReader;LBlockPosition;)Z shouldSnow
BiomeBase b (LStructureGenerator;)LWorldGenFeatureConfiguration; getStructureConfiguration
BiomeBase g ()Ljava/util/List; getFlowerFeatures
BiomeBase h ()I getFogColor
BiomeBase i ()LBiomeBase$EnumTemperature; getTemperatureCategory
BiomeBase j ()F getDepth
BiomeBase l ()LIChatBaseComponent; getName
BiomeBase m ()Ljava/lang/String; getDescriptionId
BiomeBase n ()F getScale
BiomeBase p ()LBiomeSpecialEffects; getSpecialEffects
BiomeBase q ()I getWaterColor
BiomeBase r ()I getWaterFogColor
BiomeBase s ()Ljava/util/Optional; getAmbientParticle
BiomeBase t ()Ljava/util/Optional; getAmbientLoop
BiomeBase u ()Ljava/util/Optional; getAmbientMood
BiomeBase v ()Ljava/util/Optional; getAmbientAdditions
BiomeBase w ()LBiomeBase$Geography; getBiomeCategory
BiomeBase x ()LWorldGenSurfaceComposite; getSurfaceBuilder
BiomeBase y ()LWorldGenSurfaceConfiguration; getSurfaceBuilderConfig
BiomeBase z ()Ljava/lang/String; getParent
BiomeBase b (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$10
BiomeBase c (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$9
BiomeBase d (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$serialize$7
BiomeBase b (LWorldGenFeatureConfigured;)Ljava/lang/String; lambda$generate$4
BiomeBase b (LWorldGenStage$Features;)Ljava/util/List; lambda$getCarvers$3
BiomeBase c (LWorldGenStage$Features;)Ljava/util/List; lambda$addCarver$2
BiomeBase B ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$new$1
BiomeBase C ()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap; lambda$null$0
BiomeBase$Geography a NONE
BiomeBase$Geography b TAIGA
BiomeBase$Geography c EXTREME_HILLS
BiomeBase$Geography d JUNGLE
BiomeBase$Geography e MESA
BiomeBase$Geography f PLAINS
BiomeBase$Geography g SAVANNA
BiomeBase$Geography h ICY
BiomeBase$Geography i THEEND
BiomeBase$Geography j BEACH
BiomeBase$Geography k FOREST
BiomeBase$Geography l OCEAN
BiomeBase$Geography m DESERT
BiomeBase$Geography n RIVER
BiomeBase$Geography o SWAMP
BiomeBase$Geography p MUSHROOM
BiomeBase$Geography q NETHER
BiomeBase$Geography r BY_NAME
BiomeBase$Geography s name
BiomeBase$Geography t $VALUES
BiomeBase$Geography values ()[LBiomeBase$Geography; values
BiomeBase$Geography valueOf (Ljava/lang/String;)LBiomeBase$Geography; valueOf
BiomeBase$EnumTemperature a OCEAN
BiomeBase$EnumTemperature b COLD
BiomeBase$EnumTemperature c MEDIUM
BiomeBase$EnumTemperature d WARM
BiomeBase$EnumTemperature e BY_NAME
BiomeBase$EnumTemperature f name
BiomeBase$EnumTemperature g $VALUES
BiomeBase$EnumTemperature values ()[LBiomeBase$EnumTemperature; values
BiomeBase$EnumTemperature valueOf (Ljava/lang/String;)LBiomeBase$EnumTemperature; valueOf
BiomeBase$Precipitation a NONE
BiomeBase$Precipitation b RAIN
BiomeBase$Precipitation c SNOW
BiomeBase$Precipitation d BY_NAME
BiomeBase$Precipitation e name
BiomeBase$Precipitation f $VALUES
BiomeBase$Precipitation values ()[LBiomeBase$Precipitation; values
BiomeBase$Precipitation valueOf (Ljava/lang/String;)LBiomeBase$Precipitation; valueOf
BiomeDecoratorGroups a NORMAL_TREE
BiomeDecoratorGroups aH GRANITE
BiomeDecoratorGroups aI DIORITE
BiomeDecoratorGroups aJ ANDESITE
BiomeDecoratorGroups aK COAL_ORE
BiomeDecoratorGroups aL IRON_ORE
BiomeDecoratorGroups aM GOLD_ORE
BiomeDecoratorGroups aN REDSTONE_ORE
BiomeDecoratorGroups aO DIAMOND_ORE
BiomeDecoratorGroups aP LAPIS_ORE
BiomeDecoratorGroups aQ STONE
BiomeDecoratorGroups aR EMERALD_ORE
BiomeDecoratorGroups aS INFESTED_STONE
BiomeDecoratorGroups aT SAND
BiomeDecoratorGroups aU CLAY
BiomeDecoratorGroups aV GRASS_BLOCK
BiomeDecoratorGroups aW MOSSY_COBBLESTONE
BiomeDecoratorGroups aX LARGE_FERN
BiomeDecoratorGroups aY TALL_GRASS
BiomeDecoratorGroups aZ LILAC
BiomeDecoratorGroups ba ROSE_BUSH
BiomeDecoratorGroups bb PEONY
BiomeDecoratorGroups bc BROWN_MUSHROOM
BiomeDecoratorGroups bd RED_MUSHROOM
BiomeDecoratorGroups be SEAGRASS
BiomeDecoratorGroups bf PACKED_ICE
BiomeDecoratorGroups bg BLUE_ICE
BiomeDecoratorGroups aj HUGE_RED_MUSHROOM
BiomeDecoratorGroups ak HUGE_BROWN_MUSHROOM
BiomeDecoratorGroups ao GRASS
BiomeDecoratorGroups ap FERN
BiomeDecoratorGroups aq PODZOL
BiomeDecoratorGroups ar OAK_LOG
BiomeDecoratorGroups as OAK_LEAVES
BiomeDecoratorGroups at JUNGLE_LOG
BiomeDecoratorGroups au JUNGLE_LEAVES
BiomeDecoratorGroups av SPRUCE_LOG
BiomeDecoratorGroups aw SPRUCE_LEAVES
BiomeDecoratorGroups ax ACACIA_LOG
BiomeDecoratorGroups ay ACACIA_LEAVES
BiomeDecoratorGroups az BIRCH_LOG
BiomeDecoratorGroups aA BIRCH_LEAVES
BiomeDecoratorGroups aB DARK_OAK_LOG
BiomeDecoratorGroups aC DARK_OAK_LEAVES
BiomeDecoratorGroups aD WATER
BiomeDecoratorGroups aE LAVA
BiomeDecoratorGroups aF DIRT
BiomeDecoratorGroups aG GRAVEL
BiomeDecoratorGroups b JUNGLE_TREE
BiomeDecoratorGroups bh LILY_OF_THE_VALLEY
BiomeDecoratorGroups bi BLUE_ORCHID
BiomeDecoratorGroups bj POPPY
BiomeDecoratorGroups bk DANDELION
BiomeDecoratorGroups bl DEAD_BUSH
BiomeDecoratorGroups bm MELON
BiomeDecoratorGroups bn PUMPKIN
BiomeDecoratorGroups bo SWEET_BERRY_BUSH
BiomeDecoratorGroups bp FIRE
BiomeDecoratorGroups br NETHERRACK
BiomeDecoratorGroups bu LILY_PAD
BiomeDecoratorGroups bv SNOW
BiomeDecoratorGroups bw JACK_O_LANTERN
BiomeDecoratorGroups bx SUNFLOWER
BiomeDecoratorGroups by CACTUS
BiomeDecoratorGroups bz SUGAR_CANE
BiomeDecoratorGroups bA RED_MUSHROOM_BLOCK
BiomeDecoratorGroups bB BROWN_MUSHROOM_BLOCK
BiomeDecoratorGroups bC MUSHROOM_STEM
BiomeDecoratorGroups c JUNGLE_TREE_NOVINE
BiomeDecoratorGroups d PINE_TREE
BiomeDecoratorGroups e SPRUCE_TREE
BiomeDecoratorGroups f ACACIA_TREE
BiomeDecoratorGroups g BIRCH_TREE
BiomeDecoratorGroups h BIRCH_TREE_BEES_0002
BiomeDecoratorGroups i TALL_BIRCH_TREE_BEES_0002
BiomeDecoratorGroups j SWAMP_TREE
BiomeDecoratorGroups k FANCY_TREE
BiomeDecoratorGroups l NORMAL_TREE_BEES_005
BiomeDecoratorGroups m FANCY_TREE_BEES_0002
BiomeDecoratorGroups n FANCY_TREE_BEES_005
BiomeDecoratorGroups o NORMAL_TREE_BEES_0002
BiomeDecoratorGroups p NORMAL_TREE_BEES_002
BiomeDecoratorGroups q FANCY_TREE_BEES_002
BiomeDecoratorGroups r BIRCH_TREE_BEES_002
BiomeDecoratorGroups s BIRCH_TREE_BEES_005
BiomeDecoratorGroups t JUNGLE_BUSH
BiomeDecoratorGroups u DARK_OAK_TREE
BiomeDecoratorGroups v MEGA_SPRUCE_TREE
BiomeDecoratorGroups w MEGA_PINE_TREE
BiomeDecoratorGroups x MEGA_JUNGLE_TREE
BiomeDecoratorGroups bq SOUL_FIRE
BiomeDecoratorGroups bs SOUL_SOIL
BiomeDecoratorGroups bt CRIMSON_ROOTS
BiomeDecoratorGroups bD NETHER_GOLD_ORE
BiomeDecoratorGroups bE NETHER_QUARTZ_ORE
BiomeDecoratorGroups bF WARPED_STEM
BiomeDecoratorGroups bG WARPED_WART_BLOCK
BiomeDecoratorGroups bH NETHER_WART_BLOCK
BiomeDecoratorGroups bI CRIMSON_STEM
BiomeDecoratorGroups bJ SHROOMLIGHT
BiomeDecoratorGroups y DEFAULT_GRASS_CONFIG
BiomeDecoratorGroups z TAIGA_GRASS_CONFIG
BiomeDecoratorGroups A JUNGLE_GRASS_CONFIG
BiomeDecoratorGroups B GENERAL_FOREST_FLOWER_CONFIG
BiomeDecoratorGroups C SwAMP_FLOWER_CONFIG
BiomeDecoratorGroups D DEFAULT_FLOWER_CONFIG
BiomeDecoratorGroups E PLAIN_FLOWER_CONFIG
BiomeDecoratorGroups F FOREST_FLOWER_CONFIG
BiomeDecoratorGroups G DEAD_BUSH_CONFIG
BiomeDecoratorGroups H MELON_CONFIG
BiomeDecoratorGroups I PUMPKIN_CONFIG
BiomeDecoratorGroups J SWEET_BERRY_BUSH_CONFIG
BiomeDecoratorGroups K FIRE_CONFIG
BiomeDecoratorGroups L SOUL_FIRE_CONFIG
BiomeDecoratorGroups M WATERLILLY_CONFIG
BiomeDecoratorGroups N RED_MUSHROOM_CONFIG
BiomeDecoratorGroups O BROWN_MUSHROOM_CONFIG
BiomeDecoratorGroups P CRIMSON_ROOTS_CONFIG
BiomeDecoratorGroups Q DOUBLE_LILAC_CONFIG
BiomeDecoratorGroups R DOUBLE_ROSE_BUSH_CONFIG
BiomeDecoratorGroups S DOUBLE_PEONY_CONFIG
BiomeDecoratorGroups T SUNFLOWER_CONFIG
BiomeDecoratorGroups U TALL_GRASS_CONFIG
BiomeDecoratorGroups V LARGE_FERN_CONFIG
BiomeDecoratorGroups W CACTUS_CONFIG
BiomeDecoratorGroups X SUGAR_CANE_CONFIG
BiomeDecoratorGroups Y HAY_PILE_CONFIG
BiomeDecoratorGroups Z SNOW_PILE_CONFIG
BiomeDecoratorGroups aa MELON_PILE_CONFIG
BiomeDecoratorGroups ab PUMPKIN_PILE_CONFIG
BiomeDecoratorGroups ac ICE_PILE_CONFIG
BiomeDecoratorGroups ad WATER_STATE
BiomeDecoratorGroups ae LAVA_STATE
BiomeDecoratorGroups af WATER_SPRING_CONFIG
BiomeDecoratorGroups ag LAVA_SPRING_CONFIG
BiomeDecoratorGroups ah OPEN_NETHER_SPRING_CONFIG
BiomeDecoratorGroups ai CLOSED_NETHER_SPRING_CONFIG
BiomeDecoratorGroups al CRIMSON_FOREST_CONFIG
BiomeDecoratorGroups am WARPED_FOREST_CONFIG
BiomeDecoratorGroups an NETHER_SPROUTS_CONFIG
BiomeDecoratorGroups b (LBiomeBase;)V addOceanCarvers
BiomeDecoratorGroups c (LBiomeBase;)V addStructureFeaturePlacement
BiomeDecoratorGroups d (LBiomeBase;)V addDefaultLakes
BiomeDecoratorGroups e (LBiomeBase;)V addDesertLakes
BiomeDecoratorGroups f (LBiomeBase;)V addDefaultMonsterRoom
BiomeDecoratorGroups g (LBiomeBase;)V addDefaultUndergroundVariety
BiomeDecoratorGroups h (LBiomeBase;)V addDefaultOres
BiomeDecoratorGroups i (LBiomeBase;)V addExtraGold
BiomeDecoratorGroups j (LBiomeBase;)V addExtraEmeralds
BiomeDecoratorGroups k (LBiomeBase;)V addInfestedStone
BiomeDecoratorGroups l (LBiomeBase;)V addDefaultSoftDisks
BiomeDecoratorGroups m (LBiomeBase;)V addSwampClayDisk
BiomeDecoratorGroups n (LBiomeBase;)V addMossyStoneBlock
BiomeDecoratorGroups o (LBiomeBase;)V addFerns
BiomeDecoratorGroups p (LBiomeBase;)V addBerryBushes
BiomeDecoratorGroups q (LBiomeBase;)V addSparseBerryBushes
BiomeDecoratorGroups r (LBiomeBase;)V addLightBambooVegetation
BiomeDecoratorGroups s (LBiomeBase;)V addBambooVegetation
BiomeDecoratorGroups t (LBiomeBase;)V addTaigaTrees
BiomeDecoratorGroups u (LBiomeBase;)V addWaterTrees
BiomeDecoratorGroups v (LBiomeBase;)V addBirchTrees
BiomeDecoratorGroups w (LBiomeBase;)V addOtherBirchTrees
BiomeDecoratorGroups x (LBiomeBase;)V addTallBirchTrees
BiomeDecoratorGroups y (LBiomeBase;)V addSavannaTrees
BiomeDecoratorGroups z (LBiomeBase;)V addShatteredSavannaTrees
BiomeDecoratorGroups A (LBiomeBase;)V addMountainTrees
BiomeDecoratorGroups B (LBiomeBase;)V addMountainEdgeTrees
BiomeDecoratorGroups C (LBiomeBase;)V addJungleTrees
BiomeDecoratorGroups D (LBiomeBase;)V addJungleEdgeTrees
BiomeDecoratorGroups E (LBiomeBase;)V addBadlandsTrees
BiomeDecoratorGroups F (LBiomeBase;)V addSnowyTrees
BiomeDecoratorGroups G (LBiomeBase;)V addGiantSpruceTrees
BiomeDecoratorGroups H (LBiomeBase;)V addGiantTrees
BiomeDecoratorGroups I (LBiomeBase;)V addJungleGrass
BiomeDecoratorGroups J (LBiomeBase;)V addSavannaGrass
BiomeDecoratorGroups K (LBiomeBase;)V addShatteredSavannaGrass
BiomeDecoratorGroups L (LBiomeBase;)V addSavannaExtraGrass
BiomeDecoratorGroups M (LBiomeBase;)V addBadlandGrass
BiomeDecoratorGroups N (LBiomeBase;)V addForestFlowers
BiomeDecoratorGroups O (LBiomeBase;)V addForestGrass
BiomeDecoratorGroups P (LBiomeBase;)V addSwampVegetation
BiomeDecoratorGroups Q (LBiomeBase;)V addMushroomFieldVegetation
BiomeDecoratorGroups R (LBiomeBase;)V addPlainVegetation
BiomeDecoratorGroups S (LBiomeBase;)V addDesertVegetation
BiomeDecoratorGroups T (LBiomeBase;)V addGiantTaigaVegetation
BiomeDecoratorGroups U (LBiomeBase;)V addDefaultFlowers
BiomeDecoratorGroups V (LBiomeBase;)V addWarmFlowers
BiomeDecoratorGroups W (LBiomeBase;)V addDefaultGrass
BiomeDecoratorGroups X (LBiomeBase;)V addTaigaGrass
BiomeDecoratorGroups Y (LBiomeBase;)V addPlainGrass
BiomeDecoratorGroups Z (LBiomeBase;)V addDefaultMushrooms
BiomeDecoratorGroups aa (LBiomeBase;)V addDefaultExtraVegetation
BiomeDecoratorGroups ab (LBiomeBase;)V addBadlandExtraVegetation
BiomeDecoratorGroups ac (LBiomeBase;)V addJungleExtraVegetation
BiomeDecoratorGroups ad (LBiomeBase;)V addDesertExtraVegetation
BiomeDecoratorGroups ae (LBiomeBase;)V addSwampExtraVegetation
BiomeDecoratorGroups af (LBiomeBase;)V addDesertExtraDecoration
BiomeDecoratorGroups ag (LBiomeBase;)V addSwampExtraDecoration
BiomeDecoratorGroups ah (LBiomeBase;)V addColdOceanExtraVegetation
BiomeDecoratorGroups ai (LBiomeBase;)V addDefaultSeagrass
BiomeDecoratorGroups aj (LBiomeBase;)V addWarmSeagrass
BiomeDecoratorGroups ak (LBiomeBase;)V addDeepWarmSeagrass
BiomeDecoratorGroups al (LBiomeBase;)V addLukeWarmKelp
BiomeDecoratorGroups am (LBiomeBase;)V addDefaultSprings
BiomeDecoratorGroups an (LBiomeBase;)V addIcebergs
BiomeDecoratorGroups ao (LBiomeBase;)V addBlueIce
BiomeDecoratorGroups ap (LBiomeBase;)V addSurfaceFreezing
BiomeDecoratorGroups aq (LBiomeBase;)V addEndCity
BiomeDecoratorGroups ar (LBiomeBase;)V addNetherDefaultOres
BiomeDecoratorGroups as (LBiomeBase;)V addCrimsonForestVegetation
BiomeDecoratorGroups at (LBiomeBase;)V addWarpedForestVegetation
BiomeManager$Provider b (III)LBiomeBase; getBiome
Biomes A STONE_SHORE
Biomes B SNOWY_BEACH
Biomes C BIRCH_FOREST
Biomes D BIRCH_FOREST_HILLS
Biomes E DARK_FOREST
Biomes F SNOWY_TAIGA
Biomes G SNOWY_TAIGA_HILLS
Biomes H GIANT_TREE_TAIGA
Biomes I GIANT_TREE_TAIGA_HILLS
Biomes J WOODED_MOUNTAINS
Biomes K SAVANNA
Biomes L SAVANNA_PLATEAU
Biomes M BADLANDS
Biomes N WOODED_BADLANDS_PLATEAU
Biomes O BADLANDS_PLATEAU
Biomes P SMALL_END_ISLANDS
Biomes Q END_MIDLANDS
Biomes R END_HIGHLANDS
Biomes S END_BARRENS
Biomes T WARM_OCEAN
Biomes U LUKEWARM_OCEAN
Biomes V COLD_OCEAN
Biomes W DEEP_WARM_OCEAN
Biomes X DEEP_LUKEWARM_OCEAN
Biomes Y DEEP_COLD_OCEAN
Biomes Z DEEP_FROZEN_OCEAN
Biomes a OCEAN
Biomes aa THE_VOID
Biomes ab SUNFLOWER_PLAINS
Biomes ac DESERT_LAKES
Biomes ad GRAVELLY_MOUNTAINS
Biomes ae FLOWER_FOREST
Biomes af TAIGA_MOUNTAINS
Biomes ag SWAMP_HILLS
Biomes ah ICE_SPIKES
Biomes ai MODIFIED_JUNGLE
Biomes aj MODIFIED_JUNGLE_EDGE
Biomes ak TALL_BIRCH_FOREST
Biomes al TALL_BIRCH_HILLS
Biomes am DARK_FOREST_HILLS
Biomes an SNOWY_TAIGA_MOUNTAINS
Biomes ao GIANT_SPRUCE_TAIGA
Biomes ap GIANT_SPRUCE_TAIGA_HILLS
Biomes aq MODIFIED_GRAVELLY_MOUNTAINS
Biomes ar SHATTERED_SAVANNA
Biomes as SHATTERED_SAVANNA_PLATEAU
Biomes at ERODED_BADLANDS
Biomes au MODIFIED_WOODED_BADLANDS_PLATEAU
Biomes av MODIFIED_BADLANDS_PLATEAU
Biomes aw BAMBOO_JUNGLE
Biomes ax BAMBOO_JUNGLE_HILLS
Biomes c PLAINS
Biomes d DESERT
Biomes e MOUNTAINS
Biomes f FOREST
Biomes g TAIGA
Biomes h SWAMP
Biomes i RIVER
Biomes j NETHER
Biomes k THE_END
Biomes l FROZEN_OCEAN
Biomes m FROZEN_RIVER
Biomes n SNOWY_TUNDRA
Biomes o SNOWY_MOUNTAINS
Biomes p MUSHROOM_FIELDS
Biomes q MUSHROOM_FIELD_SHORE
Biomes r BEACH
Biomes s DESERT_HILLS
Biomes t WOODED_HILLS
Biomes u TAIGA_HILLS
Biomes v MOUNTAIN_EDGE
Biomes w JUNGLE
Biomes x JUNGLE_HILLS
Biomes y JUNGLE_EDGE
Biomes z DEEP_OCEAN
Biomes b DEFAULT
Biomes ay SOUL_SAND_VALLEY
Biomes az CRIMSON_FOREST
Biomes aA WARPED_FOREST
GenLayerZoomVoronoi a INSTANCE
GenLayerZoomVoronoi b $VALUES
GenLayerZoomVoronoi values ()[LGenLayerZoomVoronoi; values
GenLayerZoomVoronoi valueOf (Ljava/lang/String;)LGenLayerZoomVoronoi; valueOf
GenLayerZoomVoronoiFixed a INSTANCE
GenLayerZoomVoronoiFixed b $VALUES
GenLayerZoomVoronoiFixed values ()[LGenLayerZoomVoronoiFixed; values
GenLayerZoomVoronoiFixed valueOf (Ljava/lang/String;)LGenLayerZoomVoronoiFixed; valueOf
BlockBannerAbstract b ()LEnumColor; getColor
BlockBannerAbstract a color
BlockBannerAbstract aa_ ()Z isPossibleToRespawnInThis
BlockFurnace a FACING
BlockFurnace b LIT
BlockFurnace b (LIBlockData;)LEnumRenderType; getRenderShape
BlockAnvil a FACING
BlockAnvil b BASE
BlockAnvil c X_LEG1
BlockAnvil d X_LEG2
BlockAnvil e X_TOP
BlockAnvil f Z_LEG1
BlockAnvil g Z_LEG2
BlockAnvil h Z_TOP
BlockAnvil i X_AXIS_AABB
BlockAnvil j Z_AXIS_AABB
BlockAnvil k CONTAINER_TITLE
BlockAnvil b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockAnvil b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockAnvil c (LIBlockData;)LIBlockData; damage
BlockAnvil c (LIBlockData;LIBlockAccess;LBlockPosition;)I getDustColor
BlockBanner a ROTATION
BlockBanner b BY_COLOR
BlockBanner c SHAPE
BlockBanner b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockPressurePlateAbstract g (LIBlockData;)I getPower
BlockPressurePlateAbstract a PRESSED_AABB
BlockPressurePlateAbstract b AABB
BlockPressurePlateAbstract c TOUCH_AABB
BlockPressurePlateAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockPressurePlateAbstract c ()I getPressedTime
BlockPressurePlateAbstract aa_ ()Z isPossibleToRespawnInThis
BlockPressurePlateAbstract b (LGeneratorAccess;LBlockPosition;)V playOffSound
BlockPressurePlateAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockPressurePlateAbstract b_ (LIBlockData;)Z isSignalSource
BlockPressurePlateAbstract f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockPressurePlateAbstract b (LWorld;LBlockPosition;)I getSignalStrength
BlockBed a PART
BlockBed b OCCUPIED
BlockBed o color
BlockBed c BASE
BlockBed d LEG_NORTH_WEST
BlockBed e LEG_SOUTH_WEST
BlockBed f LEG_NORTH_EAST
BlockBed g LEG_SOUTH_EAST
BlockBed h NORTH_SHAPE
BlockBed i SOUTH_SHAPE
BlockBed j WEST_SHAPE
BlockBed k EAST_SHAPE
BlockBed b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockBed g (LIBlockData;)LEnumDirection; getConnectedDirection
BlockBed h (LIBlockData;)LDoubleBlockFinder$BlockType; getBlockType
BlockBed f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockBed b (LIBlockData;)LEnumRenderType; getRenderShape
BlockBed c ()LEnumColor; getColor
Block d blockData
Block m REGISTRY_ID
Block n blockStateList
Block e name
Block a (I)LIBlockData; getByCombinedId
Block a (LBlockActionContext;)LIBlockData; getPlacedState
Block a (LGeneratorAccess;LBlockPosition;LIBlockData;)V postBreak
Block a (LIBlockData;LWorld;LBlockPosition;LTileEntity;LEntity;LItemStack;)V dropItems
Block a (LIBlockData;LWorldServer;LBlockPosition;LTileEntity;LEntity;LItemStack;)Ljava/util/List; getDrops
Block a (LItem;)LBlock; asBlock
Block a (LWorld;LBlockPosition;I)V dropExperience
Block a (LWorld;LBlockPosition;LEntity;)V stepOn
Block a (LWorld;LBlockPosition;LEntity;F)V fallOn
Block a (LWorld;LBlockPosition;LExplosion;)V wasExploded
Block a (LWorld;LBlockPosition;LIBlockData;LEntityLiving;LItemStack;)V postPlace
Block f ()F getDurability
Block i (LIBlockData;)I getCombinedId
Block a_ (LIBlockData;)Z isTicking
Block m ()LBlockStateList; getStates
Block n ()LIBlockData; getBlockData
Block k (LIBlockData;)LSoundEffectType; getStepSound
Block l LOGGER
Block a SHAPE_FULL_BLOCK_CACHE
Block b RIGID_SUPPORT_SHAPE
Block c CENTER_SUPPORT_SHAPE
Block f item
Block g OCCLUSION_CACHE
Block b (LIBlockData;LGeneratorAccess;LBlockPosition;)LIBlockData; updateFromNeighbourShapes
Block c (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)Z shouldRenderFace
Block c (LIBlockAccess;LBlockPosition;)Z canSupportRigidBlock
Block d (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)Z isFaceSturdy
Block b (LIBlockData;LIBlockAccess;LBlockPosition;)Z propagatesSkylightDown
Block b (LIBlockData;LLootTableInfo$Builder;)V dropResources
Block c (LIBlockData;LWorld;LBlockPosition;)V dropResources
Block d (LIBlockAccess;LBlockPosition;)V prepareRender
Block aa_ ()Z isPossibleToRespawnInThis
Block g ()LIChatBaseComponent; getName
Block h ()Ljava/lang/String; getDescriptionId
Block j ()F getFriction
Block k ()F getSpeedFactor
Block l ()F getJumpFactor
Block c (LWorld;LBlockPosition;)V handleRain
Block j (LIBlockData;)V registerDefaultState
Block i ()LItem; asItem
Block o ()Z hasDynamicShape
Block toString ()Ljava/lang/String; toString
Block p ()LBlock; asBlock
Block b (LWorld;LBlockPosition;LItemStack;)V lambda$dropResources$4
Block c (LWorld;LBlockPosition;LItemStack;)V lambda$dropResources$3
Block d (LWorld;LBlockPosition;LItemStack;)V lambda$dropResources$2
Block c ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
Blocks A WATER
Blocks B LAVA
Blocks C SAND
Blocks D RED_SAND
Blocks E GRAVEL
Blocks F GOLD_ORE
Blocks G IRON_ORE
Blocks H COAL_ORE
Blocks J OAK_LOG
Blocks K SPRUCE_LOG
Blocks L BIRCH_LOG
Blocks M JUNGLE_LOG
Blocks N ACACIA_LOG
Blocks O DARK_OAK_LOG
Blocks P STRIPPED_SPRUCE_LOG
Blocks Q STRIPPED_BIRCH_LOG
Blocks R STRIPPED_JUNGLE_LOG
Blocks S STRIPPED_ACACIA_LOG
Blocks T STRIPPED_DARK_OAK_LOG
Blocks U STRIPPED_OAK_LOG
Blocks V OAK_WOOD
Blocks W SPRUCE_WOOD
Blocks X BIRCH_WOOD
Blocks Y JUNGLE_WOOD
Blocks Z ACACIA_WOOD
Blocks aa DARK_OAK_WOOD
Blocks a AIR
Blocks aB YELLOW_BED
Blocks aC LIME_BED
Blocks aD PINK_BED
Blocks aE GRAY_BED
Blocks aF LIGHT_GRAY_BED
Blocks aG CYAN_BED
Blocks aH PURPLE_BED
Blocks aI BLUE_BED
Blocks aJ BROWN_BED
Blocks aK GREEN_BED
Blocks aL RED_BED
Blocks aM BLACK_BED
Blocks aN POWERED_RAIL
Blocks aO DETECTOR_RAIL
Blocks aP STICKY_PISTON
Blocks aQ COBWEB
Blocks aR GRASS
Blocks aS FERN
Blocks aT DEAD_BUSH
Blocks aU SEAGRASS
Blocks aV TALL_SEAGRASS
Blocks aW PISTON
Blocks aX PISTON_HEAD
Blocks aY WHITE_WOOL
Blocks aZ ORANGE_WOOL
Blocks ba MAGENTA_WOOL
Blocks ab STRIPPED_OAK_WOOD
Blocks ac STRIPPED_SPRUCE_WOOD
Blocks ad STRIPPED_BIRCH_WOOD
Blocks ae STRIPPED_JUNGLE_WOOD
Blocks af STRIPPED_ACACIA_WOOD
Blocks ag STRIPPED_DARK_OAK_WOOD
Blocks ah OAK_LEAVES
Blocks ai SPRUCE_LEAVES
Blocks aj BIRCH_LEAVES
Blocks ak JUNGLE_LEAVES
Blocks al ACACIA_LEAVES
Blocks am DARK_OAK_LEAVES
Blocks an SPONGE
Blocks ao WET_SPONGE
Blocks ap GLASS
Blocks aq LAPIS_ORE
Blocks ar LAPIS_BLOCK
Blocks as DISPENSER
Blocks at SANDSTONE
Blocks au CHISELED_SANDSTONE
Blocks av CUT_SANDSTONE
Blocks aw NOTE_BLOCK
Blocks ax WHITE_BED
Blocks ay ORANGE_BED
Blocks az MAGENTA_BED
Blocks aA LIGHT_BLUE_BED
Blocks b STONE
Blocks bB LILY_OF_THE_VALLEY
Blocks bC BROWN_MUSHROOM
Blocks bD RED_MUSHROOM
Blocks bE GOLD_BLOCK
Blocks bF IRON_BLOCK
Blocks bG BRICKS
Blocks bH TNT
Blocks bI BOOKSHELF
Blocks bJ MOSSY_COBBLESTONE
Blocks bK OBSIDIAN
Blocks bL TORCH
Blocks bM WALL_TORCH
Blocks bN FIRE
Blocks bP SPAWNER
Blocks bQ OAK_STAIRS
Blocks bR CHEST
Blocks bS REDSTONE_WIRE
Blocks bT DIAMOND_ORE
Blocks bU DIAMOND_BLOCK
Blocks bV CRAFTING_TABLE
Blocks bW WHEAT
Blocks bX FARMLAND
Blocks bY FURNACE
Blocks bZ OAK_SIGN
Blocks ca SPRUCE_SIGN
Blocks cb BIRCH_SIGN
Blocks bb LIGHT_BLUE_WOOL
Blocks bc YELLOW_WOOL
Blocks bd LIME_WOOL
Blocks be PINK_WOOL
Blocks bf GRAY_WOOL
Blocks bg LIGHT_GRAY_WOOL
Blocks bh CYAN_WOOL
Blocks bi PURPLE_WOOL
Blocks bj BLUE_WOOL
Blocks bk BROWN_WOOL
Blocks bl GREEN_WOOL
Blocks bm RED_WOOL
Blocks bn BLACK_WOOL
Blocks bo MOVING_PISTON
Blocks bp DANDELION
Blocks bq POPPY
Blocks br BLUE_ORCHID
Blocks bs ALLIUM
Blocks bt AZURE_BLUET
Blocks bu RED_TULIP
Blocks bv ORANGE_TULIP
Blocks bw WHITE_TULIP
Blocks bx PINK_TULIP
Blocks by OXEYE_DAISY
Blocks bz CORNFLOWER
Blocks bA WITHER_ROSE
Blocks c GRANITE
Blocks cC SNOW
Blocks cD ICE
Blocks cE SNOW_BLOCK
Blocks cF CACTUS
Blocks cG CLAY
Blocks cH SUGAR_CANE
Blocks cI JUKEBOX
Blocks cJ OAK_FENCE
Blocks cK PUMPKIN
Blocks cL NETHERRACK
Blocks cM SOUL_SAND
Blocks cS GLOWSTONE
Blocks cT NETHER_PORTAL
Blocks cU CARVED_PUMPKIN
Blocks cV JACK_O_LANTERN
Blocks cW CAKE
Blocks cX REPEATER
Blocks cY WHITE_STAINED_GLASS
Blocks cZ ORANGE_STAINED_GLASS
Blocks da MAGENTA_STAINED_GLASS
Blocks db LIGHT_BLUE_STAINED_GLASS
Blocks dc YELLOW_STAINED_GLASS
Blocks dd LIME_STAINED_GLASS
Blocks de PINK_STAINED_GLASS
Blocks df GRAY_STAINED_GLASS
Blocks dg LIGHT_GRAY_STAINED_GLASS
Blocks cc ACACIA_SIGN
Blocks cd JUNGLE_SIGN
Blocks ce DARK_OAK_SIGN
Blocks cf OAK_DOOR
Blocks cg LADDER
Blocks ch RAIL
Blocks ci COBBLESTONE_STAIRS
Blocks cj OAK_WALL_SIGN
Blocks ck SPRUCE_WALL_SIGN
Blocks cl BIRCH_WALL_SIGN
Blocks cm ACACIA_WALL_SIGN
Blocks cn JUNGLE_WALL_SIGN
Blocks co DARK_OAK_WALL_SIGN
Blocks cp LEVER
Blocks cq STONE_PRESSURE_PLATE
Blocks cr IRON_DOOR
Blocks cs OAK_PRESSURE_PLATE
Blocks ct SPRUCE_PRESSURE_PLATE
Blocks cu BIRCH_PRESSURE_PLATE
Blocks cv JUNGLE_PRESSURE_PLATE
Blocks cw ACACIA_PRESSURE_PLATE
Blocks cx DARK_OAK_PRESSURE_PLATE
Blocks cy REDSTONE_ORE
Blocks cz REDSTONE_TORCH
Blocks cA REDSTONE_WALL_TORCH
Blocks cB STONE_BUTTON
Blocks d POLISHED_GRANITE
Blocks dH IRON_BARS
Blocks dI GLASS_PANE
Blocks dJ MELON
Blocks dK ATTACHED_PUMPKIN_STEM
Blocks dL ATTACHED_MELON_STEM
Blocks dM PUMPKIN_STEM
Blocks dN MELON_STEM
Blocks dO VINE
Blocks dP OAK_FENCE_GATE
Blocks dQ BRICK_STAIRS
Blocks dR STONE_BRICK_STAIRS
Blocks dS MYCELIUM
Blocks dT LILY_PAD
Blocks dU NETHER_BRICKS
Blocks dV NETHER_BRICK_FENCE
Blocks dW NETHER_BRICK_STAIRS
Blocks dX NETHER_WART
Blocks dY ENCHANTING_TABLE
Blocks dZ BREWING_STAND
Blocks ea CAULDRON
Blocks eb END_PORTAL
Blocks ec END_PORTAL_FRAME
Blocks ed END_STONE
Blocks ee DRAGON_EGG
Blocks ef REDSTONE_LAMP
Blocks eg COCOA
Blocks dh CYAN_STAINED_GLASS
Blocks di PURPLE_STAINED_GLASS
Blocks dj BLUE_STAINED_GLASS
Blocks dk BROWN_STAINED_GLASS
Blocks dl GREEN_STAINED_GLASS
Blocks dm RED_STAINED_GLASS
Blocks dn BLACK_STAINED_GLASS
Blocks do OAK_TRAPDOOR
Blocks dp SPRUCE_TRAPDOOR
Blocks dq BIRCH_TRAPDOOR
Blocks dr JUNGLE_TRAPDOOR
Blocks ds ACACIA_TRAPDOOR
Blocks dt DARK_OAK_TRAPDOOR
Blocks du STONE_BRICKS
Blocks dv MOSSY_STONE_BRICKS
Blocks dw CRACKED_STONE_BRICKS
Blocks dx CHISELED_STONE_BRICKS
Blocks dy INFESTED_STONE
Blocks dz INFESTED_COBBLESTONE
Blocks dA INFESTED_STONE_BRICKS
Blocks dB INFESTED_MOSSY_STONE_BRICKS
Blocks dC INFESTED_CRACKED_STONE_BRICKS
Blocks dD INFESTED_CHISELED_STONE_BRICKS
Blocks dE BROWN_MUSHROOM_BLOCK
Blocks dF RED_MUSHROOM_BLOCK
Blocks dG MUSHROOM_STEM
Blocks e DIORITE
Blocks eH POTTED_RED_TULIP
Blocks eI POTTED_ORANGE_TULIP
Blocks eJ POTTED_WHITE_TULIP
Blocks eK POTTED_PINK_TULIP
Blocks eL POTTED_OXEYE_DAISY
Blocks eM POTTED_CORNFLOWER
Blocks eN POTTED_LILY_OF_THE_VALLEY
Blocks eO POTTED_WITHER_ROSE
Blocks eP POTTED_RED_MUSHROOM
Blocks eQ POTTED_BROWN_MUSHROOM
Blocks eR POTTED_DEAD_BUSH
Blocks eS POTTED_CACTUS
Blocks eT CARROTS
Blocks eU POTATOES
Blocks eV OAK_BUTTON
Blocks eW SPRUCE_BUTTON
Blocks eX BIRCH_BUTTON
Blocks eY JUNGLE_BUTTON
Blocks eZ ACACIA_BUTTON
Blocks fa DARK_OAK_BUTTON
Blocks fb SKELETON_SKULL
Blocks fc SKELETON_WALL_SKULL
Blocks fd WITHER_SKELETON_SKULL
Blocks fe WITHER_SKELETON_WALL_SKULL
Blocks ff ZOMBIE_HEAD
Blocks fg ZOMBIE_WALL_HEAD
Blocks eh SANDSTONE_STAIRS
Blocks ei EMERALD_ORE
Blocks ej ENDER_CHEST
Blocks ek TRIPWIRE_HOOK
Blocks el TRIPWIRE
Blocks em EMERALD_BLOCK
Blocks en SPRUCE_STAIRS
Blocks eo BIRCH_STAIRS
Blocks ep JUNGLE_STAIRS
Blocks eq COMMAND_BLOCK
Blocks er BEACON
Blocks es COBBLESTONE_WALL
Blocks et MOSSY_COBBLESTONE_WALL
Blocks eu FLOWER_POT
Blocks ev POTTED_OAK_SAPLING
Blocks ew POTTED_SPRUCE_SAPLING
Blocks ex POTTED_BIRCH_SAPLING
Blocks ey POTTED_JUNGLE_SAPLING
Blocks ez POTTED_ACACIA_SAPLING
Blocks eA POTTED_DARK_OAK_SAPLING
Blocks eB POTTED_FERN
Blocks eC POTTED_DANDELION
Blocks eD POTTED_POPPY
Blocks eE POTTED_BLUE_ORCHID
Blocks eF POTTED_ALLIUM
Blocks eG POTTED_AZURE_BLUET
Blocks f POLISHED_DIORITE
Blocks fH LIGHT_BLUE_TERRACOTTA
Blocks fI YELLOW_TERRACOTTA
Blocks fJ LIME_TERRACOTTA
Blocks fK PINK_TERRACOTTA
Blocks fL GRAY_TERRACOTTA
Blocks fM LIGHT_GRAY_TERRACOTTA
Blocks fN CYAN_TERRACOTTA
Blocks fO PURPLE_TERRACOTTA
Blocks fP BLUE_TERRACOTTA
Blocks fQ BROWN_TERRACOTTA
Blocks fR GREEN_TERRACOTTA
Blocks fS RED_TERRACOTTA
Blocks fT BLACK_TERRACOTTA
Blocks fU WHITE_STAINED_GLASS_PANE
Blocks fV ORANGE_STAINED_GLASS_PANE
Blocks fW MAGENTA_STAINED_GLASS_PANE
Blocks fX LIGHT_BLUE_STAINED_GLASS_PANE
Blocks fY YELLOW_STAINED_GLASS_PANE
Blocks fZ LIME_STAINED_GLASS_PANE
Blocks ga PINK_STAINED_GLASS_PANE
Blocks gb GRAY_STAINED_GLASS_PANE
Blocks gc LIGHT_GRAY_STAINED_GLASS_PANE
Blocks gd CYAN_STAINED_GLASS_PANE
Blocks ge PURPLE_STAINED_GLASS_PANE
Blocks gf BLUE_STAINED_GLASS_PANE
Blocks gg BROWN_STAINED_GLASS_PANE
Blocks fh PLAYER_HEAD
Blocks fi PLAYER_WALL_HEAD
Blocks fj CREEPER_HEAD
Blocks fk CREEPER_WALL_HEAD
Blocks fl DRAGON_HEAD
Blocks fm DRAGON_WALL_HEAD
Blocks fn ANVIL
Blocks fo CHIPPED_ANVIL
Blocks fp DAMAGED_ANVIL
Blocks fq TRAPPED_CHEST
Blocks fr LIGHT_WEIGHTED_PRESSURE_PLATE
Blocks fs HEAVY_WEIGHTED_PRESSURE_PLATE
Blocks ft COMPARATOR
Blocks fu DAYLIGHT_DETECTOR
Blocks fv REDSTONE_BLOCK
Blocks fw NETHER_QUARTZ_ORE
Blocks fx HOPPER
Blocks fy QUARTZ_BLOCK
Blocks fz CHISELED_QUARTZ_BLOCK
Blocks fA QUARTZ_PILLAR
Blocks fB QUARTZ_STAIRS
Blocks fC ACTIVATOR_RAIL
Blocks fD DROPPER
Blocks fE WHITE_TERRACOTTA
Blocks fF ORANGE_TERRACOTTA
Blocks fG MAGENTA_TERRACOTTA
Blocks g ANDESITE
Blocks gH GRAY_CARPET
Blocks gI LIGHT_GRAY_CARPET
Blocks gJ CYAN_CARPET
Blocks gK PURPLE_CARPET
Blocks gL BLUE_CARPET
Blocks gM BROWN_CARPET
Blocks gN GREEN_CARPET
Blocks gO RED_CARPET
Blocks gP BLACK_CARPET
Blocks gQ TERRACOTTA
Blocks gR COAL_BLOCK
Blocks gS PACKED_ICE
Blocks gT SUNFLOWER
Blocks gU LILAC
Blocks gV ROSE_BUSH
Blocks gW PEONY
Blocks gX TALL_GRASS
Blocks gY LARGE_FERN
Blocks gZ WHITE_BANNER
Blocks ha ORANGE_BANNER
Blocks hb MAGENTA_BANNER
Blocks hc LIGHT_BLUE_BANNER
Blocks hd YELLOW_BANNER
Blocks he LIME_BANNER
Blocks hf PINK_BANNER
Blocks hg GRAY_BANNER
Blocks gh GREEN_STAINED_GLASS_PANE
Blocks gi RED_STAINED_GLASS_PANE
Blocks gj BLACK_STAINED_GLASS_PANE
Blocks gk ACACIA_STAIRS
Blocks gl DARK_OAK_STAIRS
Blocks gm SLIME_BLOCK
Blocks gn BARRIER
Blocks go IRON_TRAPDOOR
Blocks gp PRISMARINE
Blocks gq PRISMARINE_BRICKS
Blocks gr DARK_PRISMARINE
Blocks gs PRISMARINE_STAIRS
Blocks gt PRISMARINE_BRICK_STAIRS
Blocks gu DARK_PRISMARINE_STAIRS
Blocks gv PRISMARINE_SLAB
Blocks gw PRISMARINE_BRICK_SLAB
Blocks gx DARK_PRISMARINE_SLAB
Blocks gy SEA_LANTERN
Blocks gz HAY_BLOCK
Blocks gA WHITE_CARPET
Blocks gB ORANGE_CARPET
Blocks gC MAGENTA_CARPET
Blocks gD LIGHT_BLUE_CARPET
Blocks gE YELLOW_CARPET
Blocks gF LIME_CARPET
Blocks gG PINK_CARPET
Blocks h POLISHED_ANDESITE
Blocks hH CUT_RED_SANDSTONE
Blocks hI RED_SANDSTONE_STAIRS
Blocks hJ OAK_SLAB
Blocks hK SPRUCE_SLAB
Blocks hL BIRCH_SLAB
Blocks hM JUNGLE_SLAB
Blocks hN ACACIA_SLAB
Blocks hO DARK_OAK_SLAB
Blocks hP STONE_SLAB
Blocks hQ SMOOTH_STONE_SLAB
Blocks hR SANDSTONE_SLAB
Blocks hS CUT_SANDSTONE_SLAB
Blocks hT PETRIFIED_OAK_SLAB
Blocks hU COBBLESTONE_SLAB
Blocks hV BRICK_SLAB
Blocks hW STONE_BRICK_SLAB
Blocks hX NETHER_BRICK_SLAB
Blocks hY QUARTZ_SLAB
Blocks hZ RED_SANDSTONE_SLAB
Blocks ia CUT_RED_SANDSTONE_SLAB
Blocks ib PURPUR_SLAB
Blocks ic SMOOTH_STONE
Blocks id SMOOTH_SANDSTONE
Blocks ie SMOOTH_QUARTZ
Blocks if SMOOTH_RED_SANDSTONE
Blocks ig SPRUCE_FENCE_GATE
Blocks hh LIGHT_GRAY_BANNER
Blocks hi CYAN_BANNER
Blocks hj PURPLE_BANNER
Blocks hk BLUE_BANNER
Blocks hl BROWN_BANNER
Blocks hm GREEN_BANNER
Blocks hn RED_BANNER
Blocks ho BLACK_BANNER
Blocks hp WHITE_WALL_BANNER
Blocks hq ORANGE_WALL_BANNER
Blocks hr MAGENTA_WALL_BANNER
Blocks hs LIGHT_BLUE_WALL_BANNER
Blocks ht YELLOW_WALL_BANNER
Blocks hu LIME_WALL_BANNER
Blocks hv PINK_WALL_BANNER
Blocks hw GRAY_WALL_BANNER
Blocks hx LIGHT_GRAY_WALL_BANNER
Blocks hy CYAN_WALL_BANNER
Blocks hz PURPLE_WALL_BANNER
Blocks hA BLUE_WALL_BANNER
Blocks hB BROWN_WALL_BANNER
Blocks hC GREEN_WALL_BANNER
Blocks hD RED_WALL_BANNER
Blocks hE BLACK_WALL_BANNER
Blocks hF RED_SANDSTONE
Blocks hG CHISELED_RED_SANDSTONE
Blocks i GRASS_BLOCK
Blocks iH FROSTED_ICE
Blocks iI MAGMA_BLOCK
Blocks iJ NETHER_WART_BLOCK
Blocks iK RED_NETHER_BRICKS
Blocks iL BONE_BLOCK
Blocks iM STRUCTURE_VOID
Blocks iN OBSERVER
Blocks iO SHULKER_BOX
Blocks iP WHITE_SHULKER_BOX
Blocks iQ ORANGE_SHULKER_BOX
Blocks iR MAGENTA_SHULKER_BOX
Blocks iS LIGHT_BLUE_SHULKER_BOX
Blocks iT YELLOW_SHULKER_BOX
Blocks iU LIME_SHULKER_BOX
Blocks iV PINK_SHULKER_BOX
Blocks iW GRAY_SHULKER_BOX
Blocks iX LIGHT_GRAY_SHULKER_BOX
Blocks iY CYAN_SHULKER_BOX
Blocks iZ PURPLE_SHULKER_BOX
Blocks ja BLUE_SHULKER_BOX
Blocks jb BROWN_SHULKER_BOX
Blocks jc GREEN_SHULKER_BOX
Blocks jd RED_SHULKER_BOX
Blocks je BLACK_SHULKER_BOX
Blocks jf WHITE_GLAZED_TERRACOTTA
Blocks jg ORANGE_GLAZED_TERRACOTTA
Blocks ih BIRCH_FENCE_GATE
Blocks ii JUNGLE_FENCE_GATE
Blocks ij ACACIA_FENCE_GATE
Blocks ik DARK_OAK_FENCE_GATE
Blocks il SPRUCE_FENCE
Blocks im BIRCH_FENCE
Blocks in JUNGLE_FENCE
Blocks io ACACIA_FENCE
Blocks ip DARK_OAK_FENCE
Blocks iq SPRUCE_DOOR
Blocks ir BIRCH_DOOR
Blocks is JUNGLE_DOOR
Blocks it ACACIA_DOOR
Blocks iu DARK_OAK_DOOR
Blocks iv END_ROD
Blocks iw CHORUS_PLANT
Blocks ix CHORUS_FLOWER
Blocks iy PURPUR_BLOCK
Blocks iz PURPUR_PILLAR
Blocks iA PURPUR_STAIRS
Blocks iB END_STONE_BRICKS
Blocks iC BEETROOTS
Blocks iD GRASS_PATH
Blocks iE END_GATEWAY
Blocks iF REPEATING_COMMAND_BLOCK
Blocks iG CHAIN_COMMAND_BLOCK
Blocks j DIRT
Blocks jH BROWN_CONCRETE
Blocks jI GREEN_CONCRETE
Blocks jJ RED_CONCRETE
Blocks jK BLACK_CONCRETE
Blocks jL WHITE_CONCRETE_POWDER
Blocks jM ORANGE_CONCRETE_POWDER
Blocks jN MAGENTA_CONCRETE_POWDER
Blocks jO LIGHT_BLUE_CONCRETE_POWDER
Blocks jP YELLOW_CONCRETE_POWDER
Blocks jQ LIME_CONCRETE_POWDER
Blocks jR PINK_CONCRETE_POWDER
Blocks jS GRAY_CONCRETE_POWDER
Blocks jT LIGHT_GRAY_CONCRETE_POWDER
Blocks jU CYAN_CONCRETE_POWDER
Blocks jV PURPLE_CONCRETE_POWDER
Blocks jW BLUE_CONCRETE_POWDER
Blocks jX BROWN_CONCRETE_POWDER
Blocks jY GREEN_CONCRETE_POWDER
Blocks jZ RED_CONCRETE_POWDER
Blocks ka BLACK_CONCRETE_POWDER
Blocks kb KELP
Blocks kc KELP_PLANT
Blocks kd DRIED_KELP_BLOCK
Blocks ke TURTLE_EGG
Blocks kf DEAD_TUBE_CORAL_BLOCK
Blocks kg DEAD_BRAIN_CORAL_BLOCK
Blocks jh MAGENTA_GLAZED_TERRACOTTA
Blocks ji LIGHT_BLUE_GLAZED_TERRACOTTA
Blocks jj YELLOW_GLAZED_TERRACOTTA
Blocks jk LIME_GLAZED_TERRACOTTA
Blocks jl PINK_GLAZED_TERRACOTTA
Blocks jm GRAY_GLAZED_TERRACOTTA
Blocks jn LIGHT_GRAY_GLAZED_TERRACOTTA
Blocks jo CYAN_GLAZED_TERRACOTTA
Blocks jp PURPLE_GLAZED_TERRACOTTA
Blocks jq BLUE_GLAZED_TERRACOTTA
Blocks jr BROWN_GLAZED_TERRACOTTA
Blocks js GREEN_GLAZED_TERRACOTTA
Blocks jt RED_GLAZED_TERRACOTTA
Blocks ju BLACK_GLAZED_TERRACOTTA
Blocks jv WHITE_CONCRETE
Blocks jw ORANGE_CONCRETE
Blocks jx MAGENTA_CONCRETE
Blocks jy LIGHT_BLUE_CONCRETE
Blocks jz YELLOW_CONCRETE
Blocks jA LIME_CONCRETE
Blocks jB PINK_CONCRETE
Blocks jC GRAY_CONCRETE
Blocks jD LIGHT_GRAY_CONCRETE
Blocks jE CYAN_CONCRETE
Blocks jF PURPLE_CONCRETE
Blocks jG BLUE_CONCRETE
Blocks k COARSE_DIRT
Blocks kH FIRE_CORAL_FAN
Blocks kI HORN_CORAL_FAN
Blocks kJ DEAD_TUBE_CORAL_WALL_FAN
Blocks kK DEAD_BRAIN_CORAL_WALL_FAN
Blocks kL DEAD_BUBBLE_CORAL_WALL_FAN
Blocks kM DEAD_FIRE_CORAL_WALL_FAN
Blocks kN DEAD_HORN_CORAL_WALL_FAN
Blocks kO TUBE_CORAL_WALL_FAN
Blocks kP BRAIN_CORAL_WALL_FAN
Blocks kQ BUBBLE_CORAL_WALL_FAN
Blocks kR FIRE_CORAL_WALL_FAN
Blocks kS HORN_CORAL_WALL_FAN
Blocks kT SEA_PICKLE
Blocks kU BLUE_ICE
Blocks kV CONDUIT
Blocks kW BAMBOO_SAPLING
Blocks kX BAMBOO
Blocks kY POTTED_BAMBOO
Blocks kZ VOID_AIR
Blocks la CAVE_AIR
Blocks lb BUBBLE_COLUMN
Blocks lc POLISHED_GRANITE_STAIRS
Blocks ld SMOOTH_RED_SANDSTONE_STAIRS
Blocks le MOSSY_STONE_BRICK_STAIRS
Blocks lf POLISHED_DIORITE_STAIRS
Blocks lg MOSSY_COBBLESTONE_STAIRS
Blocks kh DEAD_BUBBLE_CORAL_BLOCK
Blocks ki DEAD_FIRE_CORAL_BLOCK
Blocks kj DEAD_HORN_CORAL_BLOCK
Blocks kk TUBE_CORAL_BLOCK
Blocks kl BRAIN_CORAL_BLOCK
Blocks km BUBBLE_CORAL_BLOCK
Blocks kn FIRE_CORAL_BLOCK
Blocks ko HORN_CORAL_BLOCK
Blocks kp DEAD_TUBE_CORAL
Blocks kq DEAD_BRAIN_CORAL
Blocks kr DEAD_BUBBLE_CORAL
Blocks ks DEAD_FIRE_CORAL
Blocks kt DEAD_HORN_CORAL
Blocks ku TUBE_CORAL
Blocks kv BRAIN_CORAL
Blocks kw BUBBLE_CORAL
Blocks kx FIRE_CORAL
Blocks ky HORN_CORAL
Blocks kz DEAD_TUBE_CORAL_FAN
Blocks kA DEAD_BRAIN_CORAL_FAN
Blocks kB DEAD_BUBBLE_CORAL_FAN
Blocks kC DEAD_FIRE_CORAL_FAN
Blocks kD DEAD_HORN_CORAL_FAN
Blocks kE TUBE_CORAL_FAN
Blocks kF BRAIN_CORAL_FAN
Blocks kG BUBBLE_CORAL_FAN
Blocks l PODZOL
Blocks lH GRANITE_WALL
Blocks lI STONE_BRICK_WALL
Blocks lJ NETHER_BRICK_WALL
Blocks lK ANDESITE_WALL
Blocks lL RED_NETHER_BRICK_WALL
Blocks lM SANDSTONE_WALL
Blocks lN END_STONE_BRICK_WALL
Blocks lO DIORITE_WALL
Blocks lP SCAFFOLDING
Blocks lQ LOOM
Blocks lR BARREL
Blocks lS SMOKER
Blocks lT BLAST_FURNACE
Blocks lU CARTOGRAPHY_TABLE
Blocks lV FLETCHING_TABLE
Blocks lW GRINDSTONE
Blocks lX LECTERN
Blocks lY SMITHING_TABLE
Blocks lZ STONECUTTER
Blocks ma BELL
Blocks mb LANTERN
Blocks md CAMPFIRE
Blocks me SWEET_BERRY_BUSH
Blocks mW STRUCTURE_BLOCK
Blocks mX JIGSAW
Blocks mY COMPOSTER
Blocks lh END_STONE_BRICK_STAIRS
Blocks li STONE_STAIRS
Blocks lj SMOOTH_SANDSTONE_STAIRS
Blocks lk SMOOTH_QUARTZ_STAIRS
Blocks ll GRANITE_STAIRS
Blocks lm ANDESITE_STAIRS
Blocks ln RED_NETHER_BRICK_STAIRS
Blocks lo POLISHED_ANDESITE_STAIRS
Blocks lp DIORITE_STAIRS
Blocks lq POLISHED_GRANITE_SLAB
Blocks lr SMOOTH_RED_SANDSTONE_SLAB
Blocks ls MOSSY_STONE_BRICK_SLAB
Blocks lt POLISHED_DIORITE_SLAB
Blocks lu MOSSY_COBBLESTONE_SLAB
Blocks lv END_STONE_BRICK_SLAB
Blocks lw SMOOTH_SANDSTONE_SLAB
Blocks lx SMOOTH_QUARTZ_SLAB
Blocks ly GRANITE_SLAB
Blocks lz ANDESITE_SLAB
Blocks lA RED_NETHER_BRICK_SLAB
Blocks lB POLISHED_ANDESITE_SLAB
Blocks lC DIORITE_SLAB
Blocks lD BRICK_WALL
Blocks lE PRISMARINE_WALL
Blocks lF RED_SANDSTONE_WALL
Blocks lG MOSSY_STONE_BRICK_WALL
Blocks m COBBLESTONE
Blocks na BEE_NEST
Blocks nb BEEHIVE
Blocks nc HONEY_BLOCK
Blocks nd HONEYCOMB_BLOCK
Blocks n OAK_PLANKS
Blocks o SPRUCE_PLANKS
Blocks p BIRCH_PLANKS
Blocks q JUNGLE_PLANKS
Blocks r ACACIA_PLANKS
Blocks s DARK_OAK_PLANKS
Blocks t OAK_SAPLING
Blocks u SPRUCE_SAPLING
Blocks v BIRCH_SAPLING
Blocks w JUNGLE_SAPLING
Blocks x ACACIA_SAPLING
Blocks y DARK_OAK_SAPLING
Blocks z BEDROCK
Blocks I NETHER_GOLD_ORE
Blocks bO SOUL_FIRE
Blocks cN SOUL_SOIL
Blocks cO BASALT
Blocks cP POLISHED_BASALT
Blocks cQ SOUL_FIRE_TORCH
Blocks cR SOUL_FIRE_WALL_TORCH
Blocks mc SOUL_FIRE_LANTERN
Blocks mf WARPED_STEM
Blocks mg STRIPPED_WARPED_STEM
Blocks mh WARPED_HYPHAE
Blocks mi STRIPPED_WARPED_HYPHAE
Blocks mj WARPED_NYLIUM
Blocks mk WARPED_FUNGUS
Blocks ml WARPED_WART_BLOCK
Blocks mm WARPED_ROOTS
Blocks mn NETHER_SPROUTS
Blocks mo CRIMSON_STEM
Blocks mp STRIPPED_CRIMSON_STEM
Blocks mq CRIMSON_HYPHAE
Blocks mr STRIPPED_CRIMSON_HYPHAE
Blocks ms CRIMSON_NYLIUM
Blocks mt CRIMSON_FUNGUS
Blocks mu SHROOMLIGHT
Blocks mv WEEPING_VINES
Blocks mw WEEPING_VINES_PLANT
Blocks mx TWISTING_VINES
Blocks my TWISTING_VINES_PLANT
Blocks mz CRIMSON_ROOTS
Blocks mA CRIMSON_PLANKS
Blocks mB WARPED_PLANKS
Blocks mC CRIMSON_SLAB
Blocks mD WARPED_SLAB
Blocks mE CRIMSON_PRESSURE_PLATE
Blocks mF WARPED_PRESSURE_PLATE
Blocks mG CRIMSON_FENCE
Blocks mH WARPED_FENCE
Blocks mI CRIMSON_TRAPDOOR
Blocks mJ WARPED_TRAPDOOR
Blocks mK CRIMSON_FENCE_GATE
Blocks mL WARPED_FENCE_GATE
Blocks mM CRIMSON_STAIRS
Blocks mN WARPED_STAIRS
Blocks mO CRIMSON_BUTTON
Blocks mP WARPED_BUTTON
Blocks mQ CRIMSON_DOOR
Blocks mR WARPED_DOOR
Blocks mS CRIMSON_SIGN
Blocks mT WARPED_SIGN
Blocks mU CRIMSON_WALL_SIGN
Blocks mV WARPED_WALL_SIGN
Blocks mZ TARGET
Blocks ne NETHERITE_BLOCK
Blocks nf ANCIENT_DEBRIS
Blocks ng CRYING_OBSIDIAN
Blocks nh RESPAWN_ANCHOR
Blocks ni POTTED_CRIMSON_FUNGUS
Blocks nj POTTED_WARPED_FUNGUS
Blocks nk POTTED_CRIMSON_ROOTS
Blocks nl POTTED_WARPED_ROOTS
Blocks b (LIBlockData;LIBlockAccess;LBlockPosition;LEntityTypes;)Ljava/lang/Boolean; always
Blocks c (LIBlockData;LIBlockAccess;LBlockPosition;LEntityTypes;)Ljava/lang/Boolean; ocelotOrParrot
Blocks b (LIBlockData;LIBlockAccess;LBlockPosition;)Z never
Blocks b (LEnumColor;)LBlockStainedGlass; stainedGlass
Blocks b (LIBlockData;)I lambda$static$37
Blocks c (LIBlockData;)I lambda$static$36
Blocks b ()LWorldGenFeatureConfigured; lambda$static$35
Blocks c ()LWorldGenFeatureConfigured; lambda$static$34
Blocks d (LIBlockData;)I lambda$static$33
Blocks e (LIBlockData;)I lambda$static$32
Blocks f (LIBlockData;)I lambda$static$31
Blocks g (LIBlockData;)I lambda$static$30
Blocks d (LIBlockData;LIBlockAccess;LBlockPosition;LEntityTypes;)Z lambda$static$29
Blocks h (LIBlockData;)I lambda$static$28
Blocks e (LIBlockData;LIBlockAccess;LBlockPosition;LEntityTypes;)Z lambda$static$27
Blocks i (LIBlockData;)I lambda$static$26
Blocks j (LIBlockData;)I lambda$static$25
Blocks k (LIBlockData;)I lambda$static$24
Blocks l (LIBlockData;)I lambda$static$23
Blocks m (LIBlockData;)I lambda$static$22
Blocks n (LIBlockData;)I lambda$static$21
Blocks o (LIBlockData;)I lambda$static$20
Blocks p (LIBlockData;)I lambda$static$19
Blocks q (LIBlockData;)I lambda$static$18
Blocks r (LIBlockData;)I lambda$static$17
Blocks s (LIBlockData;)I lambda$static$16
Blocks t (LIBlockData;)I lambda$static$15
Blocks u (LIBlockData;)I lambda$static$14
Blocks v (LIBlockData;)I lambda$static$13
Blocks f (LIBlockData;LIBlockAccess;LBlockPosition;LEntityTypes;)Z lambda$static$12
Blocks d ()LTileEntityTypes; lambda$static$11
Blocks w (LIBlockData;)I lambda$static$10
Blocks x (LIBlockData;)I lambda$static$9
Blocks y (LIBlockData;)I lambda$static$8
Blocks z (LIBlockData;)I lambda$static$7
Blocks A (LIBlockData;)I lambda$static$6
Blocks B (LIBlockData;)I lambda$static$5
Blocks c (LIBlockData;LIBlockAccess;LBlockPosition;)Z lambda$pistonBase$4
BlockBrewingStand a HAS_BOTTLE
BlockBrewingStand b SHAPE
BlockBrewingStand b (LIBlockData;)LEnumRenderType; getRenderShape
BlockBrewingStand b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
IFluidSource b (LGeneratorAccess;LBlockPosition;LIBlockData;)LFluidType; removeFluid
BlockButtonAbstract a POWERED
BlockButtonAbstract b CEILING_AABB_X
BlockButtonAbstract c CEILING_AABB_Z
BlockButtonAbstract d FLOOR_AABB_X
BlockButtonAbstract e FLOOR_AABB_Z
BlockButtonAbstract f NORTH_AABB
BlockButtonAbstract g SOUTH_AABB
BlockButtonAbstract h WEST_AABB
BlockButtonAbstract i EAST_AABB
BlockButtonAbstract j PRESSED_CEILING_AABB_X
BlockButtonAbstract k PRESSED_CEILING_AABB_Z
BlockButtonAbstract o PRESSED_FLOOR_AABB_X
BlockButtonAbstract p PRESSED_FLOOR_AABB_Z
BlockButtonAbstract q PRESSED_NORTH_AABB
BlockButtonAbstract r PRESSED_SOUTH_AABB
BlockButtonAbstract s PRESSED_WEST_AABB
BlockButtonAbstract t PRESSED_EAST_AABB
BlockButtonAbstract v sensitive
BlockButtonAbstract c ()I getPressDuration
BlockButtonAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockButtonAbstract d (LIBlockData;LWorld;LBlockPosition;)V press
BlockButtonAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockButtonAbstract b_ (LIBlockData;)Z isSignalSource
BlockButtonAbstract e (LIBlockData;LWorld;LBlockPosition;)V checkPressed
BlockButtonAbstract f (LIBlockData;LWorld;LBlockPosition;)V updateNeighbours
BlockCactus a AGE
BlockCactus b COLLISION_SHAPE
BlockCactus c OUTLINE_SHAPE
BlockCactus b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockCactus c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockCactus b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCake a BITES
BlockCake b SHAPE_BY_BITE
BlockCake b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockPumpkinCarved d ()LShapeDetector; getSnowmanShape
BlockPumpkinCarved t ()LShapeDetector; getIronGolemShape
BlockPumpkinCarved a FACING
BlockPumpkinCarved b snowGolemBase
BlockPumpkinCarved c snowGolemFull
BlockPumpkinCarved d ironGolemBase
BlockPumpkinCarved e ironGolemFull
BlockPumpkinCarved f PUMPKINS_PREDICATE
BlockPumpkinCarved b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockPumpkinCarved c ()LShapeDetector; getOrCreateSnowGolemBase
BlockPumpkinCarved e ()LShapeDetector; getOrCreateIronGolemBase
BlockPumpkinCarved h (LIBlockData;)Z lambda$static$0
BlockCauldron a LEVEL
BlockCauldron c INSIDE
BlockCauldron b SHAPE
BlockCauldron b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCauldron a_ (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getInteractionShape
BlockCauldron c (LWorld;LBlockPosition;)V handleRain
BlockChest b FACING
BlockChest a (LBlockChest;LIBlockData;LWorld;LBlockPosition;Z)LIInventory; getInventory
BlockChest c TYPE
BlockChest d WATERLOGGED
BlockChest e NORTH_AABB
BlockChest f SOUTH_AABB
BlockChest g WEST_AABB
BlockChest h EAST_AABB
BlockChest i AABB
BlockChest j CHEST_COMBINER
BlockChest k MENU_PROVIDER_COMBINER
BlockChest g (LIBlockData;)LDoubleBlockFinder$BlockType; getBlockType
BlockChest b (LIBlockData;)LEnumRenderType; getRenderShape
BlockChest b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockChest h (LIBlockData;)LEnumDirection; getConnectedDirection
BlockChest d (LIBlockData;)LFluid; getFluidState
BlockChest c ()LStatistic; getOpenChestStat
BlockChest d ()LTileEntityTypes; blockEntityType
BlockChest b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockChest b (LGeneratorAccess;LBlockPosition;)Z isCatSittingOnChest
BlockChest c (LGeneratorAccess;LBlockPosition;)Z lambda$combine$0
BlockChorusFlower a AGE
BlockChorusFlower b plant
BlockChorusFlower a_ (LIBlockData;)Z isRandomlyTicking
BlockChorusFlower b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockChorusFlower b (LWorld;LBlockPosition;I)V placeGrownFlower
BlockChorusFlower b (LIWorldReader;LBlockPosition;LEnumDirection;)Z allNeighborsEmpty
BlockCocoa a AGE
BlockCocoa b EAST_AABB
BlockCocoa c WEST_AABB
BlockCocoa d NORTH_AABB
BlockCocoa e SOUTH_AABB
BlockCocoa a_ (LIBlockData;)Z isRandomlyTicking
BlockCocoa b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockCocoa b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockRedstoneComparator a MODE
BlockRedstoneComparator g (LIBlockData;)I getDelay
BlockRedstoneComparator b (LIBlockAccess;LBlockPosition;LIBlockData;)I getOutputSignal
BlockRedstoneComparator e (LWorld;LBlockPosition;LIBlockData;)I calculateOutputSignal
BlockRedstoneComparator b (LWorld;LBlockPosition;LIBlockData;)I getInputSignal
BlockRedstoneComparator c (LWorld;LBlockPosition;LIBlockData;)V checkTickOnNeighbor
BlockRedstoneComparator f (LWorld;LBlockPosition;LIBlockData;)V refreshOutputState
BlockComposter$ContainerOutput a blockData
BlockComposter$ContainerOutput b generatorAccess
BlockComposter$ContainerOutput c blockPosition
BlockComposter$ContainerOutput d emptied
BlockComposter$ContainerOutput N_ ()I getMaxStackSize
BlockComposter$ContainerOutput b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
BlockComposter$ContainerOutput e ()V setChanged
BlockConcretePowder b (LIBlockAccess;LBlockPosition;LIBlockData;)Z canHarden
BlockConcretePowder a concrete
BlockConcretePowder l (LIBlockData;)Z canSolidify
BlockConcretePowder c (LIBlockData;LIBlockAccess;LBlockPosition;)I getDustColor
BlockCrops b AGE
BlockCrops b (I)LIBlockData; setAge
BlockCrops h (LIBlockData;)Z isRipe
BlockCrops a SHAPE_BY_AGE
BlockCrops b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCrops c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockCrops c ()LBlockStateInteger; getAgeProperty
BlockCrops d ()I getMaxAge
BlockCrops g (LIBlockData;)I getAge
BlockCrops a_ (LIBlockData;)Z isRandomlyTicking
BlockCrops b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockCrops e ()LIMaterial; getBaseSeedId
BlockTall a NORTH
BlockTall b EAST
BlockTall c SOUTH
BlockTall d WEST
BlockTall e WATERLOGGED
BlockTall f PROPERTY_BY_DIRECTION
BlockTall g collisionShapeByIndex
BlockTall h shapeByIndex
BlockTall i stateToIndex
BlockTall b (LIBlockData;LIBlockAccess;LBlockPosition;)Z propagatesSkylightDown
BlockTall b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockTall c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockTall g (LIBlockData;)I getAABBIndex
BlockTall d (LIBlockData;)LFluid; getFluidState
BlockTall h (LIBlockData;)I lambda$getAABBIndex$1
BlockDaylightDetector a POWER
BlockDaylightDetector b INVERTED
BlockDaylightDetector c SHAPE
BlockDaylightDetector b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockDaylightDetector c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockDaylightDetector d (LIBlockData;LWorld;LBlockPosition;)V updateSignalStrength
BlockDaylightDetector b (LIBlockData;)LEnumRenderType; getRenderShape
BlockDaylightDetector b_ (LIBlockData;)Z isSignalSource
BlockMinecartDetector c SHAPE
BlockMinecartDetector d POWERED
BlockMinecartDetector b_ (LIBlockData;)Z isSignalSource
BlockMinecartDetector b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockMinecartDetector b (LWorld;LBlockPosition;LIBlockData;Z)V updatePowerToConnected
BlockMinecartDetector b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockMinecartDetector d ()LIBlockState; getShapeProperty
BlockDiodeAbstract l (LIBlockData;)Z isDiode
BlockDiodeAbstract b SHAPE
BlockDiodeAbstract c POWERED
BlockDiodeAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockDiodeAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockDiodeAbstract c (LWorld;LBlockPosition;LIBlockData;)V checkTickOnNeighbor
BlockDiodeAbstract b (LWorld;LBlockPosition;LIBlockData;)I getInputSignal
BlockDiodeAbstract b (LIWorldReader;LBlockPosition;LIBlockData;)I getAlternateSignal
BlockDiodeAbstract b (LIWorldReader;LBlockPosition;LEnumDirection;)I getAlternateSignalAt
BlockDiodeAbstract b_ (LIBlockData;)Z isSignalSource
BlockDiodeAbstract b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockDiodeAbstract d (LWorld;LBlockPosition;LIBlockData;)V updateNeighborsInFront
BlockDiodeAbstract h (LIBlockData;)Z isAlternateInput
BlockDiodeAbstract b (LIBlockAccess;LBlockPosition;LIBlockData;)I getOutputSignal
BlockDiodeAbstract c (LIBlockAccess;LBlockPosition;LIBlockData;)Z shouldPrioritize
BlockDiodeAbstract g (LIBlockData;)I getDelay
BlockDirectional a FACING
BlockDispenser a FACING
BlockDispenser b TRIGGERED
BlockDispenser c REGISTRY
BlockDispenser a (LWorld;LBlockPosition;)V dispense
BlockDispenser b (LIBlockData;)LEnumRenderType; getRenderShape
BlockDoor a FACING
BlockDoor b OPEN
BlockDoor c HINGE
BlockDoor d POWERED
BlockDoor e HALF
BlockDoor a (LWorld;LBlockPosition;Z)V setDoor
BlockDoor f SOUTH_AABB
BlockDoor g NORTH_AABB
BlockDoor h WEST_AABB
BlockDoor i EAST_AABB
BlockDoor b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockDoor c ()I getCloseSound
BlockDoor d ()I getOpenSound
BlockDoor b (LBlockActionContext;)LBlockPropertyDoorHinge; getHinge
BlockDoor b (LWorld;LBlockPosition;Z)V playSound
BlockDoor f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockDoor h (LIBlockData;)Z isWoodenDoor
DoubleBlockFinder$BlockType a SINGLE
DoubleBlockFinder$BlockType b FIRST
DoubleBlockFinder$BlockType c SECOND
DoubleBlockFinder$BlockType d $VALUES
DoubleBlockFinder$BlockType values ()[LDoubleBlockFinder$BlockType; values
DoubleBlockFinder$BlockType valueOf (Ljava/lang/String;)LDoubleBlockFinder$BlockType; valueOf
BlockTallPlant a HALF
BlockTallPlant Z_ ()LBlockBehaviour$OffsetType; getOffsetType
BlockEnderPortalFrame a FACING
BlockEnderPortalFrame b EYE
BlockEnderPortalFrame c BASE_SHAPE
BlockEnderPortalFrame d EYE_SHAPE
BlockEnderPortalFrame e FULL_SHAPE
BlockEnderPortalFrame f portalShape
BlockEnderPortalFrame c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockEnderPortalFrame b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockEnderPortalFrame c ()LShapeDetector; getOrCreatePortalShape
BlockEnderChest b FACING
BlockEnderChest c WATERLOGGED
BlockEnderChest d SHAPE
BlockEnderChest e CONTAINER_TITLE
BlockEnderChest b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockEnderChest b (LIBlockData;)LEnumRenderType; getRenderShape
BlockEnderChest d (LIBlockData;)LFluid; getFluidState
BlockEnderChest c ()LTileEntityTypes; lambda$new$0
ITileEntity a (LIBlockAccess;)LTileEntity; createTile
BlockAttachable u FACE
BlockAttachable b (LIWorldReader;LBlockPosition;LEnumDirection;)Z canAttach
BlockAttachable h (LIBlockData;)LEnumDirection; getConnectedDirection
BlockFalling h (LIBlockData;)Z canFallThrough
BlockFalling b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockFalling c ()I getDelayAfterPlace
BlockFalling c (LIBlockData;LIBlockAccess;LBlockPosition;)I getDustColor
BlockSoil a MOISTURE
BlockSoil d (LIBlockData;LWorld;LBlockPosition;)V fade
BlockSoil b SHAPE
BlockSoil c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockSoil b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockSoil b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockFenceGate a OPEN
BlockFenceGate b POWERED
BlockFenceGate c IN_WALL
BlockFenceGate d Z_SHAPE
BlockFenceGate e X_SHAPE
BlockFenceGate f Z_SHAPE_LOW
BlockFenceGate g X_SHAPE_LOW
BlockFenceGate h Z_COLLISION_SHAPE
BlockFenceGate i X_COLLISION_SHAPE
BlockFenceGate j Z_OCCLUSION_SHAPE
BlockFenceGate k X_OCCLUSION_SHAPE
BlockFenceGate o Z_OCCLUSION_SHAPE_LOW
BlockFenceGate p X_OCCLUSION_SHAPE_LOW
BlockFenceGate b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockFenceGate c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockFenceGate d (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getOcclusionShape
BlockFenceGate h (LIBlockData;)Z isWall
BlockFire g AGE
BlockFire h NORTH
BlockFire i EAST
BlockFire j SOUTH
BlockFire k WEST
BlockFire o UPPER
BlockFire q flameChances
BlockFire e (LIBlockAccess;LBlockPosition;)Z canBurn
BlockFire p PROPERTY_BY_DIRECTION
BlockFire r burnOdds
BlockFire b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockFire b (LIBlockAccess;LBlockPosition;)LIBlockData; getStateForPlacement
BlockFire h (LIBlockData;)I getBurnOdd
BlockFire l (LIBlockData;)I getFlameOdds
BlockFire e (LIBlockData;)Z canBurn
BlockFire b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockFire c ()V bootStrap
BlockHopper a FACING
BlockHopper b ENABLED
BlockHopper c TOP
BlockHopper d FUNNEL
BlockHopper e CONVEX_BASE
BlockHopper f BASE
BlockHopper g DOWN_SHAPE
BlockHopper h EAST_SHAPE
BlockHopper i NORTH_SHAPE
BlockHopper j SOUTH_SHAPE
BlockHopper k WEST_SHAPE
BlockHopper o DOWN_INTERACTION_SHAPE
BlockHopper p EAST_INTERACTION_SHAPE
BlockHopper q NORTH_INTERACTION_SHAPE
BlockHopper r SOUTH_INTERACTION_SHAPE
BlockHopper s WEST_INTERACTION_SHAPE
BlockHopper b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockHopper a_ (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getInteractionShape
BlockHopper b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockHopper b (LIBlockData;)LEnumRenderType; getRenderShape
BlockFacingHorizontal aq FACING
BlockIce d (LIBlockData;LWorld;LBlockPosition;)V melt
BlockIce b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockIce f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockJukeBox a HAS_RECORD
BlockJukeBox a (LWorld;LBlockPosition;)V dropRecord
BlockJukeBox b (LIBlockData;)LEnumRenderType; getRenderShape
BlockLadder a FACING
BlockLadder b WATERLOGGED
BlockLadder c EAST_AABB
BlockLadder d WEST_AABB
BlockLadder e SOUTH_AABB
BlockLadder f NORTH_AABB
BlockLadder b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockLadder d (LIBlockData;)LFluid; getFluidState
BlockLeaves a DISTANCE
BlockLeaves b PERSISTENT
BlockLeaves e (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getBlockSupportShape
BlockLeaves a_ (LIBlockData;)Z isRandomlyTicking
BlockLeaves b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockLeaves f (LIBlockData;LIBlockAccess;LBlockPosition;)I getLightBlock
BlockLeaves h (LIBlockData;)I getDistanceAt
BlockLectern a (LWorld;LBlockPosition;LIBlockData;Z)V setHasBook
BlockLectern a FACING
BlockLectern b POWERED
BlockLectern c HAS_BOOK
BlockLectern d SHAPE_BASE
BlockLectern e SHAPE_POST
BlockLectern f SHAPE_COMMON
BlockLectern g SHAPE_TOP_PLATE
BlockLectern h SHAPE_COLLISION
BlockLectern i SHAPE_WEST
BlockLectern j SHAPE_NORTH
BlockLectern k SHAPE_EAST
BlockLectern o SHAPE_SOUTH
BlockLectern b (LIBlockData;)LEnumRenderType; getRenderShape
BlockLectern d (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getOcclusionShape
BlockLectern c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockLectern c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockLectern b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockLectern b (LWorld;LBlockPosition;LIBlockData;LItemStack;)V placeBook
BlockLectern b (LWorld;LBlockPosition;LIBlockData;Z)V changePowered
BlockLectern b (LWorld;LBlockPosition;LIBlockData;)V updateBelow
BlockLectern d (LIBlockData;LWorld;LBlockPosition;)V popBook
BlockLectern b_ (LIBlockData;)Z isSignalSource
BlockLectern b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockLectern b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockLever a POWERED
BlockLever b NORTH_AABB
BlockLever c SOUTH_AABB
BlockLever d WEST_AABB
BlockLever e EAST_AABB
BlockLever f UP_AABB_Z
BlockLever g UP_AABB_X
BlockLever h DOWN_AABB_Z
BlockLever i DOWN_AABB_X
BlockLever b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockLever d (LIBlockData;LWorld;LBlockPosition;)LIBlockData; pull
BlockLever b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockLever b_ (LIBlockData;)Z isSignalSource
BlockLever e (LIBlockData;LWorld;LBlockPosition;)V updateNeighbours
BlockFluids a LEVEL
BlockFluids a (LGeneratorAccess;LBlockPosition;)V fizz
BlockFluids b fluid
BlockFluids c stateCache
BlockFluids a_ (LIBlockData;)Z isRandomlyTicking
BlockFluids b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockFluids b (LIBlockData;LIBlockAccess;LBlockPosition;)Z propagatesSkylightDown
BlockFluids d (LIBlockData;)LFluid; getFluidState
BlockFluids b (LIBlockData;)LEnumRenderType; getRenderShape
BlockFluids b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockFluids b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockFluids b (LGeneratorAccess;LBlockPosition;LIBlockData;)LFluidType; takeLiquid
IFluidContainer a (LGeneratorAccess;LBlockPosition;LIBlockData;LFluid;)Z place
IFluidContainer a (LIBlockAccess;LBlockPosition;LIBlockData;LFluidType;)Z canPlace
EnumBlockMirror a NONE
EnumBlockMirror b LEFT_RIGHT
EnumBlockMirror c FRONT_BACK
EnumBlockMirror d $VALUES
EnumBlockMirror values ()[LEnumBlockMirror; values
EnumBlockMirror valueOf (Ljava/lang/String;)LEnumBlockMirror; valueOf
EnumBlockMirror b (LEnumDirection;)LEnumDirection; mirror
BlockPortal a AXIS
BlockPortal b X_AXIS_AABB
BlockPortal c Z_AXIS_AABB
BlockPortal b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockPortal b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockPortal b (LGeneratorAccess;LBlockPosition;)LBlockPortal$Shape; isPortal
BlockPortal c (LGeneratorAccess;LBlockPosition;)LShapeDetector$ShapeDetectorCollection; getPortalShape
BlockPortal$Shape f position
BlockPortal$Shape g height
BlockPortal$Shape h width
BlockPortal$Shape e ()V createPortal
BlockPortal$Shape a level
BlockPortal$Shape b axis
BlockPortal$Shape c rightDir
BlockPortal$Shape d leftDir
BlockPortal$Shape e numPortalBlocks
BlockPortal$Shape b ()I getWidth
BlockPortal$Shape c ()I calculatePortalHeight
BlockPortal$Shape d ()Z isValid
BlockPortal$Shape g ()Z hasAllPortalBlocks
BlockPortal$Shape f ()Z isComplete
BlockPortal$Shape b (LBlockPortal$Shape;)LEnumDirection; access$100
BlockPortal$Shape c (LBlockPortal$Shape;)LBlockPosition; access$200
BlockNetherWart a AGE
BlockNetherWart b SHAPE_BY_AGE
BlockNetherWart b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockNetherWart c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockNetherWart a_ (LIBlockData;)Z isRandomlyTicking
BlockNetherWart b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockNote a INSTRUMENT
BlockNote b POWERED
BlockNote c NOTE
BlockNote a (LWorld;LBlockPosition;)V play
BlockPoweredRail c SHAPE
BlockPoweredRail d POWERED
BlockPoweredRail d ()LIBlockState; getShapeProperty
BlockPressurePlateBinary d POWERED
BlockPressurePlateBinary e sensitivity
BlockPressurePlateBinary g (LIBlockData;)I getSignalForState
BlockPressurePlateBinary b (LGeneratorAccess;LBlockPosition;)V playOffSound
BlockPressurePlateBinary b (LWorld;LBlockPosition;)I getSignalStrength
BlockPressurePlateBinary$EnumMobType a EVERYTHING
BlockPressurePlateBinary$EnumMobType b MOBS
BlockPressurePlateBinary$EnumMobType c $VALUES
BlockPressurePlateBinary$EnumMobType values ()[LBlockPressurePlateBinary$EnumMobType; values
BlockPressurePlateBinary$EnumMobType valueOf (Ljava/lang/String;)LBlockPressurePlateBinary$EnumMobType; valueOf
BlockMinecartTrack c SHAPE
BlockMinecartTrack d ()LIBlockState; getShapeProperty
BlockRedstoneOre a (LWorld;LBlockPosition;)V playEffect
BlockRedstoneOre d (LIBlockData;LWorld;LBlockPosition;)V interact
BlockRedstoneOre a LIT
BlockRedstoneOre a_ (LIBlockData;)Z isRandomlyTicking
BlockRedstoneOre b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockRedstoneWire a NORTH
BlockRedstoneWire b EAST
BlockRedstoneWire c SOUTH
BlockRedstoneWire d WEST
BlockRedstoneWire e POWER
BlockRedstoneWire a (ILIBlockData;)I getPower
BlockRedstoneWire f PROPERTY_BY_DIRECTION
BlockRedstoneWire g SHAPE_BY_INDEX
BlockRedstoneWire h shouldSignal
BlockRedstoneWire i toUpdate
BlockRedstoneWire b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockRedstoneWire l (LIBlockData;)I getAABBIndex
BlockRedstoneWire b (LWorld;LBlockPosition;LIBlockData;)LIBlockData; updatePowerStrengthImpl
BlockRedstoneWire b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockRedstoneWire b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockRedstoneWire b (LIBlockAccess;LBlockPosition;LEnumDirection;)Z isPowerSourceAt
BlockRedstoneWire h (LIBlockData;)Z shouldConnectTo
BlockRedstoneWire b_ (LIBlockData;)Z isSignalSource
BlockRedstoneWire b (I)I getColorForData
BlockRedstoneTorch a LIT
BlockRedstoneTorch b RECENT_TOGGLES
BlockRedstoneTorch b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockRedstoneTorch b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockRedstoneTorch b_ (LIBlockData;)Z isSignalSource
EnumRenderType a INVISIBLE
EnumRenderType b ENTITYBLOCK_ANIMATED
EnumRenderType c MODEL
EnumRenderType d $VALUES
EnumRenderType values ()[LEnumRenderType; values
EnumRenderType valueOf (Ljava/lang/String;)LEnumRenderType; valueOf
BlockRepeater a LOCKED
BlockRepeater d DELAY
BlockRepeater g (LIBlockData;)I getDelay
BlockRepeater h (LIBlockData;)Z isAlternateInput
BlockRotatable a AXIS
EnumBlockRotation a NONE
EnumBlockRotation b CLOCKWISE_90
EnumBlockRotation c CLOCKWISE_180
EnumBlockRotation d COUNTERCLOCKWISE_90
EnumBlockRotation e $VALUES
EnumBlockRotation values ()[LEnumBlockRotation; values
EnumBlockRotation valueOf (Ljava/lang/String;)LEnumBlockRotation; valueOf
EnumBlockRotation b (Ljava/util/Random;)Ljava/util/List; getShuffled
BlockSapling a STAGE
BlockSapling a (LWorldServer;LBlockPosition;LIBlockData;Ljava/util/Random;)V grow
BlockSapling b SHAPE
BlockSapling c treeGrower
BlockSapling b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockSapling b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockShulkerBox c color
BlockShulkerBox a FACING
BlockShulkerBox b CONTENTS
BlockShulkerBox b (LIBlockData;)LEnumRenderType; getRenderShape
BlockShulkerBox f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockShulkerBox b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockShulkerBox b (LItem;)LEnumColor; getColorFromItem
BlockShulkerBox b (LBlock;)LEnumColor; getColorFromBlock
BlockShulkerBox c ()LEnumColor; getColor
BlockShulkerBox b (LEnumColor;)LItemStack; getColoredItemStack
BlockSkull$Type a SKELETON
BlockSkull$Type b WITHER_SKELETON
BlockSkull$Type c PLAYER
BlockSkull$Type d ZOMBIE
BlockSkull$Type e CREEPER
BlockSkull$Type f DRAGON
BlockSkull$Type g $VALUES
BlockSkull$Type values ()[LBlockSkull$Type; values
BlockSkull$Type valueOf (Ljava/lang/String;)LBlockSkull$Type; valueOf
BlockSnow a LAYERS
BlockSnow b SHAPE_BY_LAYER
BlockSnow b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockSnow c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockSnow e (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getBlockSupportShape
BlockSnow c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockSnow b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockStainedGlass a color
BlockStainedGlassPane i color
BlockStairs a FACING
BlockStairs b HALF
BlockStairs c SHAPE
BlockStairs d WATERLOGGED
BlockStairs e TOP_AABB
BlockStairs f BOTTOM_AABB
BlockStairs g OCTET_NNN
BlockStairs h OCTET_NNP
BlockStairs i OCTET_NPN
BlockStairs j OCTET_NPP
BlockStairs k OCTET_PNN
BlockStairs o OCTET_PNP
BlockStairs p OCTET_PPN
BlockStairs q OCTET_PPP
BlockStairs r TOP_SHAPES
BlockStairs s BOTTOM_SHAPES
BlockStairs t SHAPE_BY_STATE
BlockStairs u base
BlockStairs v baseState
BlockStairs c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockStairs b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockStairs l (LIBlockData;)I getShapeIndex
BlockStairs f ()F getExplosionResistance
BlockStairs b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockStairs d (LIBlockAccess;LBlockPosition;)V prepareRender
BlockStairs a_ (LIBlockData;)Z isRandomlyTicking
BlockStairs b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockStairs g (LIBlockData;LIBlockAccess;LBlockPosition;)LBlockPropertyStairsShape; getStairsShape
BlockStairs e (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)Z canTakeShape
BlockStairs h (LIBlockData;)Z isStairs
BlockStairs d (LIBlockData;)LFluid; getFluidState
BlockStairs b (I)[LVoxelShape; lambda$makeShapes$1
BlockFloorSign c ROTATION
BlockStem a AGE
BlockStem c blockFruit
BlockStem b SHAPE_BY_AGE
BlockStem b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockStem c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockStem b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockStem c ()LItem; getSeedItem
BlockStem d ()LBlockStemmed; getFruit
BlockReed a AGE
BlockReed b SHAPE
BlockReed b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockReed b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockTrapdoor a OPEN
BlockTrapdoor b HALF
BlockTrapdoor c POWERED
BlockTrapdoor d WATERLOGGED
BlockTrapdoor e EAST_OPEN_AABB
BlockTrapdoor f WEST_OPEN_AABB
BlockTrapdoor g SOUTH_OPEN_AABB
BlockTrapdoor h NORTH_OPEN_AABB
BlockTrapdoor i BOTTOM_AABB
BlockTrapdoor j TOP_AABB
BlockTrapdoor b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockTrapdoor d (LIBlockData;)LFluid; getFluidState
BlockTripwire a POWERED
BlockTripwire b ATTACHED
BlockTripwire c DISARMED
BlockTripwire d NORTH
BlockTripwire e EAST
BlockTripwire f SOUTH
BlockTripwire g WEST
BlockTripwire j PROPERTY_BY_DIRECTION
BlockTripwire h AABB
BlockTripwire i NOT_ATTACHED_AABB
BlockTripwire k hook
BlockTripwire b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockTripwire b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockTripwireHook a FACING
BlockTripwireHook b POWERED
BlockTripwireHook c ATTACHED
BlockTripwireHook d NORTH_AABB
BlockTripwireHook e SOUTH_AABB
BlockTripwireHook f WEST_AABB
BlockTripwireHook g EAST_AABB
BlockTripwireHook b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockTripwireHook b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockTripwireHook b_ (LIBlockData;)Z isSignalSource
BlockVine a UP
BlockVine b NORTH
BlockVine c EAST
BlockVine d SOUTH
BlockVine e WEST
BlockVine a (LEnumDirection;)LBlockStateBoolean; getDirection
BlockVine m (LIBlockData;)Z canSpread
BlockVine f PROPERTY_BY_DIRECTION
BlockVine g UP_AABB
BlockVine h EAST_AABB
BlockVine i WEST_AABB
BlockVine j SOUTH_AABB
BlockVine k NORTH_AABB
BlockVine b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockVine h (LIBlockData;)Z hasFaces
BlockVine l (LIBlockData;)I countFaces
BlockVine b (LIBlockAccess;LBlockPosition;LEnumDirection;)Z canSupportAtFace
BlockVine g (LIBlockData;LIBlockAccess;LBlockPosition;)LIBlockData; getUpdatedState
BlockVine b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockCobbleWall a UP
BlockCobbleWall b EAST_WALL
BlockCobbleWall c NORTH_WALL
BlockCobbleWall d SOUTH_WALL
BlockCobbleWall e WEST_WALL
BlockCobbleWall f WATERLOGGED
BlockCobbleWall g shapeByIndex
BlockCobbleWall h collisionShapeByIndex
BlockCobbleWall i POST_TEST
BlockCobbleWall j NORTH_TEST
BlockCobbleWall k SOUTH_TEST
BlockCobbleWall o WEST_TEST
BlockCobbleWall p EAST_TEST
BlockCobbleWall b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCobbleWall c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockCobbleWall d (LIBlockData;)LFluid; getFluidState
BlockCobbleWall b (LIBlockData;LIBlockAccess;LBlockPosition;)Z propagatesSkylightDown
BlockWallSign c FACING
BlockWallSign d AABBS
BlockWallSign h ()Ljava/lang/String; getDescriptionId
BlockWallSign b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockPressurePlateWeighted d POWER
BlockPressurePlateWeighted e weight
BlockPressurePlateWeighted b (LWorld;LBlockPosition;)I getSignalStrength
BlockPressurePlateWeighted b (LGeneratorAccess;LBlockPosition;)V playOffSound
BlockPressurePlateWeighted g (LIBlockData;)I getSignalForState
BlockPressurePlateWeighted c ()I getPressedTime
BlockCarpet b color
BlockCarpet a SHAPE
BlockCarpet c ()LEnumColor; getColor
BlockCarpet b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
TileEntityFurnace a items
TileEntityFurnace j burnTime
TileEntityFurnace k ticksForCurrentFuel
TileEntityFurnace l cookTime
TileEntityFurnace m cookTimeTotal
TileEntityFurnace a (LItemStack;)I fuelTime
TileEntityFurnace b (LIRecipe;)Z canBurn
TileEntityFurnace b (LItemStack;)Z isFuel
TileEntityFurnace c (LIRecipe;)V burn
TileEntityFurnace h ()I getRecipeCookingTime
TileEntityFurnace j ()Z isBurning
TileEntityFurnace g SLOTS_FOR_UP
TileEntityFurnace h SLOTS_FOR_DOWN
TileEntityFurnace i SLOTS_FOR_SIDES
TileEntityFurnace b dataAccess
TileEntityFurnace n recipesUsed
TileEntityFurnace c recipeType
TileEntityFurnace f ()Ljava/util/Map; getFuel
TileEntityFurnace b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityFurnace ab_ ()V tick
TileEntityFurnace b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
TileEntityFurnace Q_ ()I getContainerSize
TileEntityFurnace c ()Z isEmpty
TileEntityFurnace b (I)LItemStack; removeItemNoUpdate
TileEntityFurnace b (ILItemStack;)Z canPlaceItem
TileEntityFurnace P_ ()V clearContent
TileEntityFurnace ac_ ()LIRecipe; getRecipeUsed
TileEntityFurnace b (LEntityHuman;)V awardAndReset
TileEntityFurnace d (LEntityHuman;)V awardResetAndExperience
TileEntityFurnace b (LTileEntityFurnace;)I access$100
TileEntityFurnace c (LTileEntityFurnace;)I access$200
TileEntityFurnace d (LTileEntityFurnace;)I access$300
TileEntityFurnace b (LTileEntityFurnace;I)I access$102
TileEntityFurnace c (LTileEntityFurnace;I)I access$202
TileEntityFurnace d (LTileEntityFurnace;I)I access$302
TileEntityBanner b color
TileEntityBanner h patterns
TileEntityBanner a name
TileEntityBanner g receivedData
TileEntityBanner P ()LIChatBaseComponent; getName
TileEntityBanner R ()LIChatBaseComponent; getCustomName
TileEntityBanner b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityBanner b ()LNBTTagCompound; getUpdateTag
TileEntityBanner b (LItemStack;)I getPatternCount
TileEntityBanner c ()Ljava/util/List; getPatterns
TileEntityBanner c (LItemStack;)V removeLastPattern
TileEntityBanner b (LIBlockData;)LIBlockData; lambda$getItem$0
EnumBannerPatternType A HALF_VERTICAL
EnumBannerPatternType B HALF_HORIZONTAL
EnumBannerPatternType C HALF_VERTICAL_MIRROR
EnumBannerPatternType D HALF_HORIZONTAL_MIRROR
EnumBannerPatternType E BORDER
EnumBannerPatternType F CURLY_BORDER
EnumBannerPatternType G GRADIENT
EnumBannerPatternType H GRADIENT_UP
EnumBannerPatternType I BRICKS
EnumBannerPatternType J GLOBE
EnumBannerPatternType K CREEPER
EnumBannerPatternType L SKULL
EnumBannerPatternType M FLOWER
EnumBannerPatternType N MOJANG
EnumBannerPatternType a BASE
EnumBannerPatternType b SQUARE_BOTTOM_LEFT
EnumBannerPatternType c SQUARE_BOTTOM_RIGHT
EnumBannerPatternType d SQUARE_TOP_LEFT
EnumBannerPatternType e SQUARE_TOP_RIGHT
EnumBannerPatternType f STRIPE_BOTTOM
EnumBannerPatternType g STRIPE_TOP
EnumBannerPatternType h STRIPE_LEFT
EnumBannerPatternType i STRIPE_RIGHT
EnumBannerPatternType j STRIPE_CENTER
EnumBannerPatternType k STRIPE_MIDDLE
EnumBannerPatternType l STRIPE_DOWNRIGHT
EnumBannerPatternType m STRIPE_DOWNLEFT
EnumBannerPatternType n STRIPE_SMALL
EnumBannerPatternType o CROSS
EnumBannerPatternType p STRAIGHT_CROSS
EnumBannerPatternType q TRIANGLE_BOTTOM
EnumBannerPatternType r TRIANGLE_TOP
EnumBannerPatternType s TRIANGLES_BOTTOM
EnumBannerPatternType t TRIANGLES_TOP
EnumBannerPatternType u DIAGONAL_LEFT
EnumBannerPatternType v DIAGONAL_RIGHT
EnumBannerPatternType w DIAGONAL_LEFT_MIRROR
EnumBannerPatternType x DIAGONAL_RIGHT_MIRROR
EnumBannerPatternType y CIRCLE_MIDDLE
EnumBannerPatternType z RHOMBUS_MIDDLE
EnumBannerPatternType O COUNT
EnumBannerPatternType P AVAILABLE_PATTERNS
EnumBannerPatternType Q filename
EnumBannerPatternType R hashname
EnumBannerPatternType S patterns
EnumBannerPatternType T patternItem
EnumBannerPatternType U $VALUES
EnumBannerPatternType values ()[LEnumBannerPatternType; values
EnumBannerPatternType valueOf (Ljava/lang/String;)LEnumBannerPatternType; valueOf
EnumBannerPatternType b ()Ljava/lang/String; getHashname
EnumBannerPatternType c ()[Ljava/lang/String; getPatterns
EnumBannerPatternType d ()Z hasPattern
EnumBannerPatternType e ()Z hasPatternItem
EnumBannerPatternType f ()LItemStack; getPatternItem
TileEntityBarrel a items
TileEntityBarrel b openCount
TileEntityBarrel b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityBarrel Q_ ()I getContainerSize
TileEntityBarrel f ()LNonNullList; getItems
TileEntityBarrel g ()LIChatBaseComponent; getDefaultName
TileEntityBarrel a_ (LEntityHuman;)V startOpen
TileEntityBarrel j ()V scheduleRecheck
TileEntityBarrel h ()V recheckOpen
TileEntityBarrel b_ (LEntityHuman;)V stopOpen
TileEntityContainer a chestLock
TileEntityContainer b customName
TileEntityContainer a (ILPlayerInventory;)LContainer; createContainer
TileEntityContainer a (LIChatBaseComponent;)V setCustomName
TileEntityContainer g ()LIChatBaseComponent; getContainerName
TileEntityContainer b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityContainer P ()LIChatBaseComponent; getName
TileEntityContainer d ()LIChatBaseComponent; getDisplayName
TileEntityContainer R ()LIChatBaseComponent; getCustomName
TileEntityContainer e (LEntityHuman;)Z canOpen
TileEntityContainer createMenu (ILPlayerInventory;LEntityHuman;)LContainer; createMenu
TileEntityBeacon h levels
TileEntityBeacon j primaryEffect
TileEntityBeacon k secondaryEffect
TileEntityBeacon l customName
TileEntityBeacon m chestLock
TileEntityBeacon n containerProperties
TileEntityBeacon a (LIChatBaseComponent;)V setCustomName
TileEntityBeacon j ()V applyEffects
TileEntityBeacon a BEACON_EFFECTS
TileEntityBeacon b VALID_EFFECTS
TileEntityBeacon c beamSections
TileEntityBeacon g checkingBeamSections
TileEntityBeacon i lastCheckY
TileEntityBeacon ab_ ()V tick
TileEntityBeacon ad_ ()V setRemoved
TileEntityBeacon f ()Ljava/util/List; getBeamSections
TileEntityBeacon h ()I getLevels
TileEntityBeacon b ()LNBTTagCompound; getUpdateTag
TileEntityBeacon i ()D getViewDistance
TileEntityBeacon b (I)LMobEffectList; getValidEffectById
TileEntityBeacon b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityBeacon createMenu (ILPlayerInventory;LEntityHuman;)LContainer; createMenu
TileEntityBeacon d ()LIChatBaseComponent; getDisplayName
TileEntityBeacon b (LTileEntityBeacon;)LMobEffectList; access$100
TileEntityBeacon c (LTileEntityBeacon;)LMobEffectList; access$200
TileEntityBeacon d (LTileEntityBeacon;)Ljava/util/List; access$300
TileEntityBeacon b (LTileEntityBeacon;LMobEffectList;)LMobEffectList; access$202
TileEntityBed a color
TileEntityBed d ()LEnumColor; getColor
TileEntityBeehive a bees
TileEntityBeehive b flowerPos
TileEntityBeehive f ()Z isEmpty
TileEntityBeehive h ()Z isFull
TileEntityBeehive e ()V setChanged
TileEntityBeehive d ()Z isFireNearby
TileEntityBeehive j ()I getOccupantCount
TileEntityBeehive k ()Z isSedated
TileEntityBeehive l ()V sendDebugPackets
TileEntityBeehive x ()Z hasSavedFlowerPos
TileEntityBeehive y ()V tickOccupants
TileEntityBeehive ab_ ()V tick
TileEntityBeehive b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityBeehive m ()LNBTTagList; writeBees
TileEntityBeehive$HiveBee a entityData
TileEntityBeehive$HiveBee b ticksInHive
TileEntityBeehive$HiveBee c minOccupationTicks
TileEntityBeehive$HiveBee b (LTileEntityBeehive$HiveBee;)I access$200
TileEntityBeehive$HiveBee c (LTileEntityBeehive$HiveBee;)LNBTTagCompound; access$300
TileEntityBeehive$HiveBee d (LTileEntityBeehive$HiveBee;)I access$108
TileEntityBeehive$ReleaseStatus a HONEY_DELIVERED
TileEntityBeehive$ReleaseStatus b BEE_RELEASED
TileEntityBeehive$ReleaseStatus c EMERGENCY
TileEntityBeehive$ReleaseStatus d $VALUES
TileEntityBeehive$ReleaseStatus values ()[LTileEntityBeehive$ReleaseStatus; values
TileEntityBeehive$ReleaseStatus valueOf (Ljava/lang/String;)LTileEntityBeehive$ReleaseStatus; valueOf
TileEntity b tileType
TileEntity d world
TileEntity e position
TileEntity a ()LPacketPlayOutTileEntityData; getUpdatePacket
TileEntity a (LBlockPosition;)V setPosition
TileEntity a (LNBTTagCompound;)V load
TileEntity a (LWorld;LBlockPosition;)V setLocation
TileEntity a_ (II)Z setProperty
TileEntity b (LNBTTagCompound;)LNBTTagCompound; save
TileEntity c (LNBTTagCompound;)LTileEntity; create
TileEntity e ()V update
TileEntity n ()Z hasWorld
TileEntity o ()LBlockPosition; getPosition
TileEntity p ()LIBlockData; getBlock
TileEntity q ()Z isRemoved
TileEntity s ()V invalidateBlockCache
TileEntity t ()Z isFilteredNBT
TileEntity u ()LTileEntityTypes; getTileType
TileEntity w ()LWorld; getWorld
TileEntity a LOGGER
TileEntity f remove
TileEntity c blockState
TileEntity g hasLoggedInvalidStateBefore
TileEntity d (LNBTTagCompound;)LNBTTagCompound; saveMetadata
TileEntity i ()D getViewDistance
TileEntity b ()LNBTTagCompound; getUpdateTag
TileEntity ad_ ()V setRemoved
TileEntity r ()V clearRemoved
TileEntity v ()V logInvalidState
TileEntity f ()Ljava/lang/Object; lambda$logInvalidState$4
TileEntity h ()Ljava/lang/String; lambda$fillCrashReportCategory$3
TileEntityTypes A SMOKER
TileEntityTypes B BLAST_FURNACE
TileEntityTypes C LECTERN
TileEntityTypes D BELL
TileEntityTypes E JIGSAW
TileEntityTypes F CAMPFIRE
TileEntityTypes G BEEHIVE
TileEntityTypes a FURNACE
TileEntityTypes b CHEST
TileEntityTypes c TRAPPED_CHEST
TileEntityTypes d ENDER_CHEST
TileEntityTypes e JUKEBOX
TileEntityTypes f DISPENSER
TileEntityTypes g DROPPER
TileEntityTypes h SIGN
TileEntityTypes i MOB_SPAWNER
TileEntityTypes j PISTON
TileEntityTypes k BREWING_STAND
TileEntityTypes l ENCHANTING_TABLE
TileEntityTypes m END_PORTAL
TileEntityTypes n BEACON
TileEntityTypes o SKULL
TileEntityTypes p DAYLIGHT_DETECTOR
TileEntityTypes q HOPPER
TileEntityTypes r COMPARATOR
TileEntityTypes s BANNER
TileEntityTypes t STRUCTURE_BLOCK
TileEntityTypes u END_GATEWAY
TileEntityTypes v COMMAND_BLOCK
TileEntityTypes w SHULKER_BOX
TileEntityTypes x BED
TileEntityTypes y CONDUIT
TileEntityTypes z BARREL
TileEntityTypes a (LBlock;)Z isValidBlock
TileEntityTypes H LOGGER
TileEntityTypes I factory
TileEntityTypes J validBlocks
TileEntityTypes K dataType
TileEntityBrewingStand h items
TileEntityBrewingStand i brewTime
TileEntityBrewingStand l fuelLevel
TileEntityBrewingStand b SLOTS_FOR_UP
TileEntityBrewingStand c SLOTS_FOR_DOWN
TileEntityBrewingStand g SLOTS_FOR_SIDES
TileEntityBrewingStand j lastPotionCount
TileEntityBrewingStand k ingredient
TileEntityBrewingStand a dataAccess
TileEntityBrewingStand g ()LIChatBaseComponent; getDefaultName
TileEntityBrewingStand Q_ ()I getContainerSize
TileEntityBrewingStand c ()Z isEmpty
TileEntityBrewingStand ab_ ()V tick
TileEntityBrewingStand f ()[Z getPotionBits
TileEntityBrewingStand h ()Z isBrewable
TileEntityBrewingStand j ()V doBrew
TileEntityBrewingStand b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityBrewingStand b (I)LItemStack; removeItemNoUpdate
TileEntityBrewingStand b (ILItemStack;)Z canPlaceItem
TileEntityBrewingStand b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
TileEntityBrewingStand P_ ()V clearContent
TileEntityBrewingStand b (LTileEntityBrewingStand;)I access$100
TileEntityBrewingStand b (LTileEntityBrewingStand;I)I access$102
TileEntityCampfire a items
TileEntityCampfire b cookingTimes
TileEntityCampfire c cookingTotalTimes
TileEntityCampfire d ()LNonNullList; getItems
TileEntityCampfire ab_ ()V tick
TileEntityCampfire h ()V cook
TileEntityCampfire j ()V makeParticles
TileEntityCampfire b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityCampfire d (LNBTTagCompound;)LNBTTagCompound; saveMetadataAndItems
TileEntityCampfire b ()LNBTTagCompound; getUpdateTag
TileEntityCampfire k ()V markUpdated
TileEntityCampfire P_ ()V clearContent
TileEntityCampfire f ()V dowse
TileEntityChest c viewingCount
TileEntityChest i items
TileEntityChest h ()V onOpen
TileEntityChest a openness
TileEntityChest b oOpenness
TileEntityChest j tickInterval
TileEntityChest Q_ ()I getContainerSize
TileEntityChest g ()LIChatBaseComponent; getDefaultName
TileEntityChest b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityChest ab_ ()V tick
TileEntityChest a_ (II)Z triggerEvent
TileEntityChest a_ (LEntityHuman;)V startOpen
TileEntityChest b_ (LEntityHuman;)V stopOpen
TileEntityChest f ()LNonNullList; getItems
TileEntityCommand d ()LCommandBlockListenerAbstract; getCommandBlock
TileEntityCommand a powered
TileEntityCommand b auto
TileEntityCommand c conditionMet
TileEntityCommand g sendToClient
TileEntityCommand h commandBlock
TileEntityCommand b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityCommand t ()Z onlyOpCanSetNbt
TileEntityCommand f ()Z isPowered
TileEntityCommand g ()Z isAutomatic
TileEntityCommand b (Z)V setAutomatic
TileEntityCommand h ()V onModeSwitch
TileEntityCommand y ()V scheduleTick
TileEntityCommand j ()Z wasConditionMet
TileEntityCommand k ()Z markConditionMet
TileEntityCommand l ()Z isSendToClient
TileEntityCommand c (Z)V setSendToClient
TileEntityCommand m ()LTileEntityCommand$Type; getMode
TileEntityCommand x ()Z isConditional
TileEntityCommand r ()V clearRemoved
TileEntityCommand$Type a SEQUENCE
TileEntityCommand$Type b AUTO
TileEntityCommand$Type c REDSTONE
TileEntityCommand$Type d $VALUES
TileEntityCommand$Type values ()[LTileEntityCommand$Type; values
TileEntityCommand$Type valueOf (Ljava/lang/String;)LTileEntityCommand$Type; valueOf
TileEntityConduit j target
TileEntityConduit b VALID_BLOCKS
TileEntityConduit a tickCount
TileEntityConduit c activeRotation
TileEntityConduit g isActive
TileEntityConduit h isHunting
TileEntityConduit i effectBlocks
TileEntityConduit k destroyTargetUUID
TileEntityConduit l nextAmbientSoundActivation
TileEntityConduit b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityConduit b ()LNBTTagCompound; getUpdateTag
TileEntityConduit ab_ ()V tick
TileEntityConduit h ()Z updateShape
TileEntityConduit j ()V applyEffects
TileEntityConduit k ()V updateDestroyTarget
TileEntityConduit l ()V updateClientTarget
TileEntityConduit m ()LAxisAlignedBB; getDestroyRangeAABB
TileEntityConduit x ()LEntityLiving; findDestroyTarget
TileEntityConduit y ()V animationTick
TileEntityConduit d ()Z isActive
TileEntityConduit f ()Z isHunting
TileEntityConduit b (Z)V setHunting
TileEntityConduit b (LEntityLiving;)Z lambda$updateDestroyTarget$0
TileEntityDispenser b items
TileEntityDispenser a (LItemStack;)I addItem
TileEntityDispenser a RANDOM
TileEntityDispenser Q_ ()I getContainerSize
TileEntityDispenser h ()I getRandomSlot
TileEntityDispenser g ()LIChatBaseComponent; getDefaultName
TileEntityDispenser b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityDispenser f ()LNonNullList; getItems
TileEntityEnchantTable a (LIChatBaseComponent;)V setCustomName
TileEntityEnchantTable a time
TileEntityEnchantTable b flip
TileEntityEnchantTable c oFlip
TileEntityEnchantTable g flipT
TileEntityEnchantTable h flipA
TileEntityEnchantTable i open
TileEntityEnchantTable j oOpen
TileEntityEnchantTable k rot
TileEntityEnchantTable l oRot
TileEntityEnchantTable m tRot
TileEntityEnchantTable n RANDOM
TileEntityEnchantTable o name
TileEntityEnchantTable b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityEnchantTable ab_ ()V tick
TileEntityEnchantTable P ()LIChatBaseComponent; getName
TileEntityEnchantTable R ()LIChatBaseComponent; getCustomName
IHopper w ()LWorld; getWorld
IHopper a INSIDE
IHopper b ABOVE
IHopper c SUCK
IHopper R_ ()LVoxelShape; getSuckShape
IHopper z ()D getLevelX
IHopper A ()D getLevelY
IHopper B ()D getLevelZ
TileEntityHopper i items
TileEntityHopper a (LIInventory;LIInventory;LItemStack;LEnumDirection;)LItemStack; addItem
TileEntityHopper c (I)V setCooldown
TileEntityHopper j cooldownTime
TileEntityHopper k tickedGameTime
TileEntityHopper b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityHopper Q_ ()I getContainerSize
TileEntityHopper g ()LIChatBaseComponent; getDefaultName
TileEntityHopper ab_ ()V tick
TileEntityHopper h ()Z inventoryFull
TileEntityHopper j ()Z ejectItems
TileEntityHopper b (LIInventory;LEnumDirection;)Z isFullContainer
TileEntityHopper c (LIInventory;LEnumDirection;)Z isEmptyContainer
TileEntityHopper b (LIInventory;LItemStack;ILEnumDirection;)Z canTakeItemFromContainer
TileEntityHopper k ()LIInventory; getAttachedContainer
TileEntityHopper b (LIHopper;)LIInventory; getSourceContainer
TileEntityHopper c (LIHopper;)Ljava/util/List; getItemsAtAndAbove
TileEntityHopper b (LWorld;LBlockPosition;)LIInventory; getContainerAt
TileEntityHopper z ()D getLevelX
TileEntityHopper A ()D getLevelY
TileEntityHopper B ()D getLevelZ
TileEntityHopper l ()Z isOnCooldown
TileEntityHopper m ()Z isOnCustomCooldown
TileEntityHopper f ()LNonNullList; getItems
TileEntityHopper b (LEntity;)Ljava/lang/Boolean; lambda$entityInside$5
TileEntityHopper b (LIInventory;I)Z lambda$isFullContainer$1
TileEntityHopper x ()Ljava/lang/Boolean; lambda$tick$0
TileEntityJukeBox a (LItemStack;)V setRecord
TileEntityJukeBox d ()LItemStack; getRecord
TileEntityJukeBox a record
TileEntityJukeBox b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityJukeBox P_ ()V clearContent
TileEntityLectern a inventory
TileEntityLectern b containerProperties
TileEntityLectern c book
TileEntityLectern g page
TileEntityLectern h maxPage
TileEntityLectern a (I)V setPage
TileEntityLectern a (LItemStack;)V setBook
TileEntityLectern f ()LItemStack; getBook
TileEntityLectern g ()Z hasBook
TileEntityLectern h ()I getPage
TileEntityLectern k ()V onBookItemRemove
TileEntityLectern j ()I getRedstoneSignal
TileEntityLectern b (LItemStack;LEntityHuman;)LItemStack; resolveBook
TileEntityLectern t ()Z onlyOpCanSetNbt
TileEntityLectern b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityLectern P_ ()V clearContent
TileEntityLectern createMenu (ILPlayerInventory;LEntityHuman;)LContainer; createMenu
TileEntityLectern d ()LIChatBaseComponent; getDisplayName
TileEntityLectern b (LTileEntityLectern;)V access$100
TileEntityLectern c (LTileEntityLectern;)I access$200
TileEntityLootable g lootTable
TileEntityLootable h lootTableSeed
TileEntityLootable a (LMinecraftKey;J)V setLootTable
TileEntityLootable d (LNBTTagCompound;)Z tryLoadLootTable
TileEntityLootable e (LNBTTagCompound;)Z trySaveLootTable
TileEntityLootable d (LEntityHuman;)V unpackLootTable
TileEntityLootable c ()Z isEmpty
TileEntityLootable b (I)LItemStack; removeItemNoUpdate
TileEntityLootable P_ ()V clearContent
TileEntityLootable f ()LNonNullList; getItems
TileEntityLootable e (LEntityHuman;)Z canOpen
TileEntityLootable createMenu (ILPlayerInventory;LEntityHuman;)LContainer; createMenu
TileEntityShulkerBox b contents
TileEntityShulkerBox a SLOTS
TileEntityShulkerBox c openCount
TileEntityShulkerBox i animationStatus
TileEntityShulkerBox j progress
TileEntityShulkerBox k progressOld
TileEntityShulkerBox l color
TileEntityShulkerBox m loadColorFromBlock
TileEntityShulkerBox ab_ ()V tick
TileEntityShulkerBox h ()V updateAnimation
TileEntityShulkerBox j ()LTileEntityShulkerBox$AnimationPhase; getAnimationStatus
TileEntityShulkerBox b (LEnumDirection;)LAxisAlignedBB; getBoundingBox
TileEntityShulkerBox c (LEnumDirection;)LAxisAlignedBB; getTopBoundingBox
TileEntityShulkerBox l ()V moveCollidedEntities
TileEntityShulkerBox Q_ ()I getContainerSize
TileEntityShulkerBox a_ (II)Z triggerEvent
TileEntityShulkerBox m ()V doNeighborUpdates
TileEntityShulkerBox a_ (LEntityHuman;)V startOpen
TileEntityShulkerBox b_ (LEntityHuman;)V stopOpen
TileEntityShulkerBox g ()LIChatBaseComponent; getDefaultName
TileEntityShulkerBox b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityShulkerBox f (LNBTTagCompound;)V loadFromTag
TileEntityShulkerBox g (LNBTTagCompound;)LNBTTagCompound; saveToTag
TileEntityShulkerBox f ()LNonNullList; getItems
TileEntityShulkerBox b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
TileEntityShulkerBox k ()LEnumColor; getColor
TileEntityShulkerBox$AnimationPhase a CLOSED
TileEntityShulkerBox$AnimationPhase b OPENING
TileEntityShulkerBox$AnimationPhase c OPENED
TileEntityShulkerBox$AnimationPhase d CLOSING
TileEntityShulkerBox$AnimationPhase e $VALUES
TileEntityShulkerBox$AnimationPhase values ()[LTileEntityShulkerBox$AnimationPhase; values
TileEntityShulkerBox$AnimationPhase valueOf (Ljava/lang/String;)LTileEntityShulkerBox$AnimationPhase; valueOf
TileEntitySign a lines
TileEntitySign b isEditable
TileEntitySign h color
TileEntitySign a (LEnumColor;)Z setColor
TileEntitySign g ()LEnumColor; getColor
TileEntitySign c playerWhoMayEdit
TileEntitySign g renderMessages
TileEntitySign b (LNBTTagCompound;)LNBTTagCompound; save
TileEntitySign b ()LNBTTagCompound; getUpdateTag
TileEntitySign t ()Z onlyOpCanSetNbt
TileEntitySign d ()Z isEditable
TileEntitySign f ()LEntityHuman; getPlayerWhoMayEdit
TileEntitySign b (LEntityHuman;)Z executeClickCommands
TileEntitySkull a gameProfile
TileEntitySkull g userCache
TileEntitySkull h sessionService
TileEntitySkull a (Lcom/mojang/authlib/GameProfile;)V setGameProfile
TileEntitySkull b mouthTickCount
TileEntitySkull c isMovingMouth
TileEntitySkull b (LNBTTagCompound;)LNBTTagCompound; save
TileEntitySkull ab_ ()V tick
TileEntitySkull d ()Lcom/mojang/authlib/GameProfile; getOwnerProfile
TileEntitySkull b ()LNBTTagCompound; getUpdateTag
TileEntitySkull f ()V updateOwnerProfile
TileEntitySkull b (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; updateGameprofile
TileEntityMobSpawner d ()LMobSpawnerAbstract; getSpawner
TileEntityMobSpawner a spawner
TileEntityMobSpawner b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityMobSpawner ab_ ()V tick
TileEntityMobSpawner b ()LNBTTagCompound; getUpdateTag
TileEntityMobSpawner a_ (II)Z triggerEvent
TileEntityMobSpawner t ()Z onlyOpCanSetNbt
TileEntityStructure a structureName
TileEntityStructure b author
TileEntityStructure c metadata
TileEntityStructure g relativePosition
TileEntityStructure h size
TileEntityStructure i mirror
TileEntityStructure j rotation
TileEntityStructure k usageMode
TileEntityStructure l ignoreEntities
TileEntityStructure m powered
TileEntityStructure n showAir
TileEntityStructure o showBoundingBox
TileEntityStructure p integrity
TileEntityStructure q seed
TileEntityStructure a (LBlockPropertyStructureMode;)V setUsageMode
TileEntityStructure a (LEntityLiving;)V setAuthor
TileEntityStructure a (Ljava/lang/String;)V setStructureName
TileEntityStructure d ()Ljava/lang/String; getStructureName
TileEntityStructure x ()LBlockPropertyStructureMode; getUsageMode
TileEntityStructure b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityStructure L ()V updateBlockState
TileEntityStructure b ()LNBTTagCompound; getUpdateTag
TileEntityStructure f ()Ljava/lang/String; getStructurePath
TileEntityStructure g ()Z hasStructureName
TileEntityStructure h ()LBlockPosition; getStructurePos
TileEntityStructure b (LBlockPosition;)V setStructurePos
TileEntityStructure j ()LBlockPosition; getStructureSize
TileEntityStructure c (LBlockPosition;)V setStructureSize
TileEntityStructure k ()LEnumBlockMirror; getMirror
TileEntityStructure b (LEnumBlockMirror;)V setMirror
TileEntityStructure l ()LEnumBlockRotation; getRotation
TileEntityStructure b (LEnumBlockRotation;)V setRotation
TileEntityStructure m ()Ljava/lang/String; getMetaData
TileEntityStructure b (Ljava/lang/String;)V setMetaData
TileEntityStructure y ()V nextMode
TileEntityStructure z ()Z isIgnoreEntities
TileEntityStructure A ()F getIntegrity
TileEntityStructure B ()J getSeed
TileEntityStructure C ()Z detectSize
TileEntityStructure D ()Z saveStructure
TileEntityStructure b (Z)Z saveStructure
TileEntityStructure E ()Z loadStructure
TileEntityStructure b (J)Ljava/util/Random; createRandom
TileEntityStructure c (Z)Z loadStructure
TileEntityStructure F ()V unloadStructure
TileEntityStructure G ()Z isStructureLoadable
TileEntityStructure H ()Z isPowered
TileEntityStructure d (Z)V setPowered
TileEntityStructure I ()Z getShowAir
TileEntityStructure e (Z)V setShowAir
TileEntityStructure J ()Z getShowBoundingBox
TileEntityStructure f (Z)V setShowBoundingBox
TileEntityStructure K ()LIChatBaseComponent; getDisplayName
TileEntityStructure$UpdateType a UPDATE_DATA
TileEntityStructure$UpdateType b SAVE_AREA
TileEntityStructure$UpdateType c LOAD_AREA
TileEntityStructure$UpdateType d SCAN_AREA
TileEntityStructure$UpdateType e $VALUES
TileEntityStructure$UpdateType values ()[LTileEntityStructure$UpdateType; values
TileEntityStructure$UpdateType valueOf (Ljava/lang/String;)LTileEntityStructure$UpdateType; valueOf
TileEntityEndGateway b age
TileEntityEndGateway g exitPortal
TileEntityEndGateway h exactTeleport
TileEntityEndGateway a LOGGER
TileEntityEndGateway c teleportCooldown
TileEntityEndGateway b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityEndGateway i ()D getViewDistance
TileEntityEndGateway ab_ ()V tick
TileEntityEndGateway d ()Z isSpawning
TileEntityEndGateway f ()Z isCoolingDown
TileEntityEndGateway b (F)F getCooldownPercent
TileEntityEndGateway b ()LNBTTagCompound; getUpdateTag
TileEntityEndGateway h ()V triggerCooldown
TileEntityEndGateway a_ (II)Z triggerEvent
TileEntityEndGateway k ()LBlockPosition; findExitPosition
TileEntityEndGateway j ()I getParticleAmount
ITickable ab_ ()V tick
BlockPiston b EXTENDED
BlockPiston i sticky
BlockPiston c EAST_AABB
BlockPiston d WEST_AABB
BlockPiston e SOUTH_AABB
BlockPiston f NORTH_AABB
BlockPiston g UP_AABB
BlockPiston h DOWN_AABB
BlockPiston b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockPiston b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockPiston c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockPistonExtension b TYPE
BlockPistonExtension c SHORT
BlockPistonExtension d EAST_AABB
BlockPistonExtension e WEST_AABB
BlockPistonExtension f SOUTH_AABB
BlockPistonExtension g NORTH_AABB
BlockPistonExtension h UP_AABB
BlockPistonExtension i DOWN_AABB
BlockPistonExtension j UP_ARM_AABB
BlockPistonExtension k DOWN_ARM_AABB
BlockPistonExtension o SOUTH_ARM_AABB
BlockPistonExtension p NORTH_ARM_AABB
BlockPistonExtension q EAST_ARM_AABB
BlockPistonExtension r WEST_ARM_AABB
BlockPistonExtension s SHORT_UP_ARM_AABB
BlockPistonExtension t SHORT_DOWN_ARM_AABB
BlockPistonExtension u SHORT_SOUTH_ARM_AABB
BlockPistonExtension v SHORT_NORTH_ARM_AABB
BlockPistonExtension w SHORT_EAST_ARM_AABB
BlockPistonExtension x SHORT_WEST_ARM_AABB
BlockPistonExtension h (LIBlockData;)LVoxelShape; getBaseShape
BlockPistonExtension c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockPistonExtension b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockPistonExtension l (LIBlockData;)LVoxelShape; getArmShape
PistonExtendsChecker c ()Ljava/util/List; getMovedBlocks
PistonExtendsChecker d ()Ljava/util/List; getBrokenBlocks
PistonExtendsChecker a level
PistonExtendsChecker b pistonPos
PistonExtendsChecker c extending
PistonExtendsChecker d startPos
PistonExtendsChecker e pushDirection
PistonExtendsChecker f toPush
PistonExtendsChecker g toDestroy
PistonExtendsChecker h pistonDirection
PistonExtendsChecker b ()LEnumDirection; getPushDirection
BlockDataAbstract b STATE_TO_VALUE
BlockDataAbstract a owner
BlockDataAbstract d values
BlockDataAbstract e neighbours
BlockDataAbstract toString ()Ljava/lang/String; toString
BlockDataAbstract b (LIBlockState;)Z hasProperty
BlockDataAbstract c (LIBlockState;)Ljava/lang/Comparable; getValue
BlockDataAbstract c (LIBlockState;Ljava/lang/Comparable;)Ljava/util/Map; makeNeighbourValues
BlockDataAbstract b ()Lcom/google/common/collect/ImmutableMap; getValues
IBlockData r ()LIBlockData; asState
IBlockData b (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; lambda$deserialize$2
IBlockData c (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; lambda$deserialize$1
BlockStateList b ()LIBlockDataHolder; getBlockData
BlockStateList c ()Ljava/lang/Object; getBlock
BlockStateList a NAME_PATTERN
BlockStateList b owner
BlockStateList c propertiesByName
BlockStateList d states
BlockStateList d ()Ljava/util/Collection; getProperties
BlockStateList toString ()Ljava/lang/String; toString
BlockStateList e ()Ljava/util/regex/Pattern; access$000
IBlockDataHolder a (LIBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; set
IBlockDataHolder b ()Lcom/google/common/collect/ImmutableMap; getStateMap
IBlockDataHolder c (LIBlockState;)Ljava/lang/Comparable; get
IBlockDataHolder c LOGGER
IBlockDataHolder b (LIBlockState;)Z hasProperty
IBlockDataHolder b (LIBlockState;Ljava/lang/Comparable;)Ljava/lang/String; getName
ShapeDetectorBlock d ()LBlockPosition; getPosition
ShapeDetectorBlock a level
ShapeDetectorBlock b pos
ShapeDetectorBlock c loadChunks
ShapeDetectorBlock d state
ShapeDetectorBlock e entity
ShapeDetectorBlock f cachedEntity
ShapeDetectorBlock b ()LTileEntity; getEntity
ShapeDetectorBlock c ()LIWorldReader; getLevel
ShapeDetector$ShapeDetectorCollection b ()LEnumDirection; getFacing
ShapeDetector$ShapeDetectorCollection a frontTopLeft
ShapeDetector$ShapeDetectorCollection b forwards
ShapeDetector$ShapeDetectorCollection c up
ShapeDetector$ShapeDetectorCollection d cache
ShapeDetector$ShapeDetectorCollection e width
ShapeDetector$ShapeDetectorCollection f height
ShapeDetector$ShapeDetectorCollection g depth
ShapeDetector$ShapeDetectorCollection c ()LEnumDirection; getUp
ShapeDetector$ShapeDetectorCollection d ()I getWidth
ShapeDetector$ShapeDetectorCollection e ()I getHeight
ShapeDetector$ShapeDetectorCollection f ()I getDepth
ShapeDetector$ShapeDetectorCollection toString ()Ljava/lang/String; toString
ShapeDetector$Shape a position
ShapeDetector$Shape b velocity
ShapeDetector$Shape c yaw
BlockPropertyAttachPosition a FLOOR
BlockPropertyAttachPosition b WALL
BlockPropertyAttachPosition c CEILING
BlockPropertyAttachPosition d name
BlockPropertyAttachPosition e $VALUES
BlockPropertyAttachPosition values ()[LBlockPropertyAttachPosition; values
BlockPropertyAttachPosition valueOf (Ljava/lang/String;)LBlockPropertyAttachPosition; valueOf
BlockPropertyAttachPosition o ()Ljava/lang/String; getSerializedName
BlockPropertyBambooSize a NONE
BlockPropertyBambooSize b SMALL
BlockPropertyBambooSize c LARGE
BlockPropertyBambooSize d name
BlockPropertyBambooSize e $VALUES
BlockPropertyBambooSize values ()[LBlockPropertyBambooSize; values
BlockPropertyBambooSize valueOf (Ljava/lang/String;)LBlockPropertyBambooSize; valueOf
BlockPropertyBambooSize toString ()Ljava/lang/String; toString
BlockPropertyBambooSize o ()Ljava/lang/String; getSerializedName
BlockPropertyBedPart a HEAD
BlockPropertyBedPart b FOOT
BlockPropertyBedPart c name
BlockPropertyBedPart d $VALUES
BlockPropertyBedPart values ()[LBlockPropertyBedPart; values
BlockPropertyBedPart valueOf (Ljava/lang/String;)LBlockPropertyBedPart; valueOf
BlockPropertyBedPart toString ()Ljava/lang/String; toString
BlockPropertyBedPart o ()Ljava/lang/String; getSerializedName
BlockPropertyBellAttach a FLOOR
BlockPropertyBellAttach b CEILING
BlockPropertyBellAttach c SINGLE_WALL
BlockPropertyBellAttach d DOUBLE_WALL
BlockPropertyBellAttach e name
BlockPropertyBellAttach f $VALUES
BlockPropertyBellAttach values ()[LBlockPropertyBellAttach; values
BlockPropertyBellAttach valueOf (Ljava/lang/String;)LBlockPropertyBellAttach; valueOf
BlockPropertyBellAttach o ()Ljava/lang/String; getSerializedName
BlockStateBoolean a (Ljava/lang/String;)LBlockStateBoolean; of
BlockStateBoolean a values
BlockStateBoolean d ()Ljava/util/Collection; getPossibleValues
BlockStateBoolean b (Ljava/lang/String;)Ljava/util/Optional; getValue
BlockStateBoolean equals (Ljava/lang/Object;)Z equals
BlockStateBoolean c ()I generateHashCode
BlockPropertyChestType a SINGLE
BlockPropertyChestType b LEFT
BlockPropertyChestType c RIGHT
BlockPropertyChestType d BY_ID
BlockPropertyChestType e name
BlockPropertyChestType f opposite
BlockPropertyChestType g $VALUES
BlockPropertyChestType values ()[LBlockPropertyChestType; values
BlockPropertyChestType valueOf (Ljava/lang/String;)LBlockPropertyChestType; valueOf
BlockPropertyChestType o ()Ljava/lang/String; getSerializedName
BlockPropertyComparatorMode a COMPARE
BlockPropertyComparatorMode b SUBTRACT
BlockPropertyComparatorMode c name
BlockPropertyComparatorMode d $VALUES
BlockPropertyComparatorMode values ()[LBlockPropertyComparatorMode; values
BlockPropertyComparatorMode valueOf (Ljava/lang/String;)LBlockPropertyComparatorMode; valueOf
BlockPropertyComparatorMode toString ()Ljava/lang/String; toString
BlockPropertyComparatorMode o ()Ljava/lang/String; getSerializedName
BlockStateDirection a (Ljava/lang/String;)LBlockStateDirection; of
BlockPropertyDoorHinge a LEFT
BlockPropertyDoorHinge b RIGHT
BlockPropertyDoorHinge c $VALUES
BlockPropertyDoorHinge values ()[LBlockPropertyDoorHinge; values
BlockPropertyDoorHinge valueOf (Ljava/lang/String;)LBlockPropertyDoorHinge; valueOf
BlockPropertyDoorHinge toString ()Ljava/lang/String; toString
BlockPropertyDoorHinge o ()Ljava/lang/String; getSerializedName
BlockPropertyDoubleBlockHalf a UPPER
BlockPropertyDoubleBlockHalf b LOWER
BlockPropertyDoubleBlockHalf c $VALUES
BlockPropertyDoubleBlockHalf values ()[LBlockPropertyDoubleBlockHalf; values
BlockPropertyDoubleBlockHalf valueOf (Ljava/lang/String;)LBlockPropertyDoubleBlockHalf; valueOf
BlockPropertyDoubleBlockHalf toString ()Ljava/lang/String; toString
BlockPropertyDoubleBlockHalf o ()Ljava/lang/String; getSerializedName
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;)LBlockStateEnum; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)LBlockStateEnum; of
BlockStateEnum a values
BlockStateEnum b names
BlockStateEnum d ()Ljava/util/Collection; getPossibleValues
BlockStateEnum b (Ljava/lang/String;)Ljava/util/Optional; getValue
BlockStateEnum equals (Ljava/lang/Object;)Z equals
BlockStateEnum c ()I generateHashCode
BlockPropertyHalf a TOP
BlockPropertyHalf b BOTTOM
BlockPropertyHalf c name
BlockPropertyHalf d $VALUES
BlockPropertyHalf values ()[LBlockPropertyHalf; values
BlockPropertyHalf valueOf (Ljava/lang/String;)LBlockPropertyHalf; valueOf
BlockPropertyHalf toString ()Ljava/lang/String; toString
BlockPropertyHalf o ()Ljava/lang/String; getSerializedName
BlockStateInteger a (Ljava/lang/String;II)LBlockStateInteger; of
BlockStateInteger a values
BlockStateInteger d ()Ljava/util/Collection; getPossibleValues
BlockStateInteger equals (Ljava/lang/Object;)Z equals
BlockStateInteger c ()I generateHashCode
BlockStateInteger b (Ljava/lang/String;)Ljava/util/Optional; getValue
BlockPropertyInstrument a HARP
BlockPropertyInstrument b BASEDRUM
BlockPropertyInstrument c SNARE
BlockPropertyInstrument d HAT
BlockPropertyInstrument e BASS
BlockPropertyInstrument f FLUTE
BlockPropertyInstrument g BELL
BlockPropertyInstrument h GUITAR
BlockPropertyInstrument i CHIME
BlockPropertyInstrument j XYLOPHONE
BlockPropertyInstrument k IRON_XYLOPHONE
BlockPropertyInstrument l COW_BELL
BlockPropertyInstrument m DIDGERIDOO
BlockPropertyInstrument n BIT
BlockPropertyInstrument o BANJO
BlockPropertyInstrument p PLING
BlockPropertyInstrument q name
BlockPropertyInstrument r soundEvent
BlockPropertyInstrument s $VALUES
BlockPropertyInstrument values ()[LBlockPropertyInstrument; values
BlockPropertyInstrument valueOf (Ljava/lang/String;)LBlockPropertyInstrument; valueOf
BlockPropertyInstrument o ()Ljava/lang/String; getSerializedName
BlockPropertyPistonType a DEFAULT
BlockPropertyPistonType b STICKY
BlockPropertyPistonType c name
BlockPropertyPistonType d $VALUES
BlockPropertyPistonType values ()[LBlockPropertyPistonType; values
BlockPropertyPistonType valueOf (Ljava/lang/String;)LBlockPropertyPistonType; valueOf
BlockPropertyPistonType toString ()Ljava/lang/String; toString
BlockPropertyPistonType o ()Ljava/lang/String; getSerializedName
IBlockState d ()Ljava/util/Collection; getValues
IBlockState b ()Ljava/lang/Class; getValueClass
IBlockState b (Ljava/lang/String;)Ljava/util/Optional; getValue
BlockPropertyTrackPosition a NORTH_SOUTH
BlockPropertyTrackPosition b EAST_WEST
BlockPropertyTrackPosition c ASCENDING_EAST
BlockPropertyTrackPosition d ASCENDING_WEST
BlockPropertyTrackPosition e ASCENDING_NORTH
BlockPropertyTrackPosition f ASCENDING_SOUTH
BlockPropertyTrackPosition g SOUTH_EAST
BlockPropertyTrackPosition h SOUTH_WEST
BlockPropertyTrackPosition i NORTH_WEST
BlockPropertyTrackPosition j NORTH_EAST
BlockPropertyTrackPosition k name
BlockPropertyTrackPosition l $VALUES
BlockPropertyTrackPosition values ()[LBlockPropertyTrackPosition; values
BlockPropertyTrackPosition valueOf (Ljava/lang/String;)LBlockPropertyTrackPosition; valueOf
BlockPropertyTrackPosition toString ()Ljava/lang/String; toString
BlockPropertyTrackPosition b ()Z isAscending
BlockPropertyTrackPosition o ()Ljava/lang/String; getSerializedName
BlockPropertyRedstoneSide a UP
BlockPropertyRedstoneSide b SIDE
BlockPropertyRedstoneSide c NONE
BlockPropertyRedstoneSide d name
BlockPropertyRedstoneSide e $VALUES
BlockPropertyRedstoneSide values ()[LBlockPropertyRedstoneSide; values
BlockPropertyRedstoneSide valueOf (Ljava/lang/String;)LBlockPropertyRedstoneSide; valueOf
BlockPropertyRedstoneSide toString ()Ljava/lang/String; toString
BlockPropertyRedstoneSide o ()Ljava/lang/String; getSerializedName
BlockPropertySlabType a TOP
BlockPropertySlabType b BOTTOM
BlockPropertySlabType c DOUBLE
BlockPropertySlabType d name
BlockPropertySlabType e $VALUES
BlockPropertySlabType values ()[LBlockPropertySlabType; values
BlockPropertySlabType valueOf (Ljava/lang/String;)LBlockPropertySlabType; valueOf
BlockPropertySlabType toString ()Ljava/lang/String; toString
BlockPropertySlabType o ()Ljava/lang/String; getSerializedName
BlockPropertyStairsShape a STRAIGHT
BlockPropertyStairsShape b INNER_LEFT
BlockPropertyStairsShape c INNER_RIGHT
BlockPropertyStairsShape d OUTER_LEFT
BlockPropertyStairsShape e OUTER_RIGHT
BlockPropertyStairsShape f name
BlockPropertyStairsShape g $VALUES
BlockPropertyStairsShape values ()[LBlockPropertyStairsShape; values
BlockPropertyStairsShape valueOf (Ljava/lang/String;)LBlockPropertyStairsShape; valueOf
BlockPropertyStairsShape toString ()Ljava/lang/String; toString
BlockPropertyStairsShape o ()Ljava/lang/String; getSerializedName
BlockPropertyStructureMode a SAVE
BlockPropertyStructureMode b LOAD
BlockPropertyStructureMode c CORNER
BlockPropertyStructureMode d DATA
BlockPropertyStructureMode e name
BlockPropertyStructureMode f $VALUES
BlockPropertyStructureMode values ()[LBlockPropertyStructureMode; values
BlockPropertyStructureMode valueOf (Ljava/lang/String;)LBlockPropertyStructureMode; valueOf
BlockPropertyStructureMode o ()Ljava/lang/String; getSerializedName
WorldBorder a (D)V setSize
WorldBorder a (DDJ)V transitionSizeBetween
WorldBorder a (LChunkCoordIntPair;)Z isInBounds
WorldBorder a (LWorldData;)V save
WorldBorder b (D)V setDamageBuffer
WorldBorder b (I)V setWarningTime
WorldBorder c (D)V setDamageAmount
WorldBorder c (DD)V setCenter
WorldBorder c (I)V setWarningDistance
WorldBorder g ()D getCenterX
WorldBorder h ()D getCenterZ
WorldBorder i ()D getSize
WorldBorder n ()D getDamageBuffer
WorldBorder o ()D getDamageAmount
WorldBorder q ()I getWarningTime
WorldBorder r ()I getWarningDistance
WorldBorder a listeners
WorldBorder b damagePerBlock
WorldBorder c damageSafeZone
WorldBorder d warningTime
WorldBorder e warningBlocks
WorldBorder f centerX
WorldBorder g centerZ
WorldBorder h absoluteMaxSize
WorldBorder i extent
WorldBorder b (DD)D getDistanceToBorder
WorldBorder b ()LBorderStatus; getStatus
WorldBorder c ()D getMinX
WorldBorder d ()D getMinZ
WorldBorder e ()D getMaxX
WorldBorder f ()D getMaxZ
WorldBorder j ()J getLerpRemainingTime
WorldBorder k ()D getLerpTarget
WorldBorder l ()Ljava/util/List; getListeners
WorldBorder b (LIWorldBorderListener;)V removeListener
WorldBorder m ()I getAbsoluteMaxSize
WorldBorder p ()D getLerpSpeed
WorldBorder s ()V tick
WorldBorder b (LWorldData;)V readBorderData
IChunkAccess a (J)V setLastSaved
IChunkAccess a (LBlockPosition;LIBlockData;Z)LIBlockData; setType
IChunkAccess a (LBlockPosition;LTileEntity;)V setTileEntity
IChunkAccess a (Z)V setNeedsSaving
IChunkAccess b (J)V setInhabitedTime
IChunkAccess d ()[LChunkSection; getSections
IChunkAccess d (LBlockPosition;)V removeTileEntity
IChunkAccess g ()LChunkCoordIntPair; getPos
IChunkAccess i ()LBiomeStorage; getBiomeIndex
IChunkAccess j ()Z isNeedsSaving
IChunkAccess k ()LChunkStatus; getChunkStatus
IChunkAccess q ()J getInhabitedTime
IChunkAccess b ()I getHighestSectionPosition
IChunkAccess c ()Ljava/util/Set; getBlockEntitiesPos
IChunkAccess e ()LLightEngine; getLightEngine
IChunkAccess f ()Ljava/util/Collection; getHeightmaps
IChunkAccess b (LHeightMap$Type;)LBlockPosition; getHeighestPosition
IChunkAccess h ()Ljava/util/Map; getAllStarts
IChunkAccess e (LBlockPosition;)V markPosForPostprocessing
IChunkAccess l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
IChunkAccess f (LBlockPosition;)LNBTTagCompound; getBlockEntityNbt
IChunkAccess i (LBlockPosition;)LNBTTagCompound; getBlockEntityNbtForSaving
IChunkAccess m ()Ljava/util/stream/Stream; getLights
IChunkAccess n ()LTickList; getBlockTicks
IChunkAccess o ()LTickList; getLiquidTicks
IChunkAccess p ()LChunkConverter; getUpgradeData
IChunkAccess r ()Z isLightCorrect
IChunkAccess b (Z)V setLightCorrect
ChunkGenerator b seed
ChunkGenerator d settings
ChunkGenerator a ()LGeneratorSettingsDefault; getSettings
ChunkGenerator a (IILHeightMap$Type;)I getBaseHeight
ChunkGenerator a (LBiomeBase;LStructureGenerator;)Z canSpawnStructure
ChunkGenerator a (LBiomeManager;LBlockPosition;)LBiomeBase; getBiome
ChunkGenerator a (LBiomeManager;LIChunkAccess;LChunkGenerator;LDefinedStructureManager;)V createStructures
ChunkGenerator a (LBiomeManager;LIChunkAccess;LWorldGenStage$Features;)V doCarving
ChunkGenerator a (LEnumCreatureType;LBlockPosition;)Ljava/util/List; getMobsFor
ChunkGenerator a (LGeneratorAccess;LIChunkAccess;)V storeStructures
ChunkGenerator a (LIChunkAccess;)V createBiomes
ChunkGenerator a (LRegionLimitedWorldAccess;)V addDecorations
ChunkGenerator a (LRegionLimitedWorldAccess;LIChunkAccess;)V buildBase
ChunkGenerator a (LWorld;Ljava/lang/String;LBlockPosition;IZ)LBlockPosition; findNearestMapFeature
ChunkGenerator a (LWorldServer;ZZ)V doMobSpawning
ChunkGenerator b ()I getSpawnHeight
ChunkGenerator b (LBiomeBase;LStructureGenerator;)LWorldGenFeatureConfiguration; getFeatureConfiguration
ChunkGenerator b (LGeneratorAccess;LIChunkAccess;)V buildNoise
ChunkGenerator b (LRegionLimitedWorldAccess;)V addMobs
ChunkGenerator c ()LWorldChunkManager; getWorldChunkManager
ChunkGenerator d ()J getSeed
ChunkGenerator e ()I getGenerationDepth
ChunkGenerator f ()I getSeaLevel
ChunkGenerator a level
ChunkGenerator c biomeSource
ChunkGenerator b (IILHeightMap$Type;)I getFirstFreeHeight
ChunkGenerator c (IILHeightMap$Type;)I getFirstOccupiedHeight
ChunkGenerator b (LBiomeManager;LBlockPosition;)LBiomeBase; lambda$applyCarvers$0
IChunkProvider a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IChunkProvider a (IIZ)LChunk; getChunkAt
IChunkProvider e ()Ljava/lang/String; getName
IChunkProvider k ()LLightEngine; getLightEngine
IChunkProvider c (II)LIBlockAccess; getChunkForLighting
IChunkProvider b (II)Z hasChunk
IChunkProvider h ()I getLoadedChunksCount
IChunkProvider close ()V close
ChunkStatus a EMPTY
ChunkStatus b STRUCTURE_STARTS
ChunkStatus c STRUCTURE_REFERENCES
ChunkStatus d BIOMES
ChunkStatus e NOISE
ChunkStatus f SURFACE
ChunkStatus g CARVERS
ChunkStatus h LIQUID_CARVERS
ChunkStatus i FEATURES
ChunkStatus j LIGHT
ChunkStatus k SPAWN
ChunkStatus l HEIGHTMAPS
ChunkStatus m FULL
ChunkStatus g ()LChunkStatus$Type; getType
ChunkStatus n PRE_FEATURES
ChunkStatus o POST_FEATURES
ChunkStatus p PASSTHROUGH_LOAD_TASK
ChunkStatus q STATUS_BY_RANGE
ChunkStatus r RANGE_BY_STATUS
ChunkStatus s name
ChunkStatus t index
ChunkStatus u parent
ChunkStatus v generationTask
ChunkStatus w loadingTask
ChunkStatus x range
ChunkStatus y chunkType
ChunkStatus z heightmapsAfter
ChunkStatus b ()I maxDistance
ChunkStatus c ()I getIndex
ChunkStatus d ()Ljava/lang/String; getName
ChunkStatus e ()LChunkStatus; getParent
ChunkStatus f ()I getRange
ChunkStatus h ()Ljava/util/EnumSet; heightmapsAfter
ChunkStatus b (LChunkStatus;)Z isOrAfter
ChunkStatus toString ()Ljava/lang/String; toString
ChunkStatus b (LWorldServer;LChunkGenerator;Ljava/util/List;LIChunkAccess;)V lambda$static$12
ChunkStatus b (LChunkStatus;LWorldServer;LDefinedStructureManager;LLightEngineThreaded;Ljava/util/function/Function;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$11
ChunkStatus b (LChunkStatus;LWorldServer;LChunkGenerator;LDefinedStructureManager;LLightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$10
ChunkStatus c (LChunkStatus;LWorldServer;LChunkGenerator;LDefinedStructureManager;LLightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$9
ChunkStatus c (LWorldServer;LChunkGenerator;Ljava/util/List;LIChunkAccess;)V lambda$static$8
ChunkStatus d (LWorldServer;LChunkGenerator;Ljava/util/List;LIChunkAccess;)V lambda$static$7
ChunkStatus e (LWorldServer;LChunkGenerator;Ljava/util/List;LIChunkAccess;)V lambda$static$6
ChunkStatus f (LWorldServer;LChunkGenerator;Ljava/util/List;LIChunkAccess;)V lambda$static$5
ChunkStatus g (LWorldServer;LChunkGenerator;Ljava/util/List;LIChunkAccess;)V lambda$static$4
ChunkStatus h (LWorldServer;LChunkGenerator;Ljava/util/List;LIChunkAccess;)V lambda$static$3
ChunkStatus d (LChunkStatus;LWorldServer;LChunkGenerator;LDefinedStructureManager;LLightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
ChunkStatus i (LWorldServer;LChunkGenerator;Ljava/util/List;LIChunkAccess;)V lambda$static$1
ChunkStatus c (LChunkStatus;LWorldServer;LDefinedStructureManager;LLightEngineThreaded;Ljava/util/function/Function;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
ChunkStatus$Type a PROTOCHUNK
ChunkStatus$Type b LEVELCHUNK
ChunkStatus$Type c $VALUES
ChunkStatus$Type values ()[LChunkStatus$Type; values
ChunkStatus$Type valueOf (Ljava/lang/String;)LChunkStatus$Type; valueOf
NibbleArray a ()[B asBytes
NibbleArray a data
NibbleArray b (III)I getIndex
NibbleArray b (I)I get
NibbleArray c (I)Z isFirst
NibbleArray d (I)I getPosition
NibbleArray b ()LNibbleArray; copy
NibbleArray toString ()Ljava/lang/String; toString
NibbleArray c ()Z isEmpty
Chunk c sections
Chunk f loaded
Chunk g world
Chunk h heightMap
Chunk j tileEntities
Chunk k entitySlices
Chunk r lastSaved
Chunk t inhabitedTime
Chunk w loc
Chunk c (Z)V setLoaded
Chunk s ()V markDirty
Chunk t ()Z isEmpty
Chunk u ()LPlayerChunk$State; getState
Chunk w ()V addEntities
Chunk x ()LWorld; getWorld
Chunk y ()Ljava/util/Map; getTileEntities
Chunk z ()[LEntitySlice; getEntitySlices
Chunk b LOGGER
Chunk a EMPTY_SECTION
Chunk d biomes
Chunk e pendingBlockEntities
Chunk i upgradeData
Chunk l structureStarts
Chunk m structuresRefences
Chunk n postProcessing
Chunk o blockTicks
Chunk p liquidTicks
Chunk q lastSaveHadEntities
Chunk s unsaved
Chunk u fullStatus
Chunk v postLoad
Chunk x isLightCorrect
Chunk c ()Ljava/util/Set; getBlockEntitiesPos
Chunk d ()[LChunkSection; getSections
Chunk d_ (LBlockPosition;)LIBlockData; getBlockState
Chunk b (LBlockPosition;)LFluid; getFluidState
Chunk e ()LLightEngine; getLightEngine
Chunk b (LEntity;)V removeEntity
Chunk b (LHeightMap$Type;)LBlockPosition; getHeighestPosition
Chunk j (LBlockPosition;)LTileEntity; createBlockEntity
Chunk c (LBlockPosition;)LTileEntity; getBlockEntity
Chunk i (LBlockPosition;)LNBTTagCompound; getBlockEntityNbtForSaving
Chunk d (LBlockPosition;)V removeBlockEntity
Chunk g ()LChunkCoordIntPair; getPos
Chunk i ()LBiomeStorage; getBiomes
Chunk f ()Ljava/util/Collection; getHeightmaps
Chunk f (LBlockPosition;)LNBTTagCompound; getBlockEntityNbt
Chunk m ()Ljava/util/stream/Stream; getLights
Chunk n ()LTickList; getBlockTicks
Chunk o ()LTickList; getLiquidTicks
Chunk j ()Z isUnsaved
Chunk d (Z)V setLastSaveHadEntities
Chunk h ()Ljava/util/Map; getAllStarts
Chunk b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
Chunk v ()Ljava/util/Map; getAllReferences
Chunk b (Ljava/util/Map;)V setAllReferences
Chunk q ()J getInhabitedTime
Chunk b (J)V setInhabitedTime
Chunk A ()V postProcessGeneration
Chunk p ()LChunkConverter; getUpgradeData
Chunk l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
Chunk B ()V unpackTicks
Chunk k ()LChunkStatus; getStatus
Chunk r ()Z isLightCorrect
Chunk b (Z)V setLightCorrect
Chunk k (LBlockPosition;)LFluidType; lambda$unpackTicks$10
Chunk l (LBlockPosition;)LBlock; lambda$unpackTicks$9
Chunk c (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$addReferenceForFeature$8
Chunk d (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$getReferencesForFeature$7
Chunk m (LBlockPosition;)Z lambda$getLights$6
Chunk n (LBlockPosition;)Z lambda$replaceWithPacketData$4
Chunk b (III)Ljava/lang/String; lambda$getFluidState$3
Chunk c (III)Ljava/lang/String; lambda$getBlockState$2
Chunk c (LHeightMap$Type;)LHeightMap; lambda$getOrCreateHeightmapUnprimed$1
Chunk c (LEntity;)LEntity; lambda$new$0
Chunk$EnumTileEntityState a IMMEDIATE
Chunk$EnumTileEntityState b QUEUED
Chunk$EnumTileEntityState c CHECK
Chunk$EnumTileEntityState d $VALUES
Chunk$EnumTileEntityState values ()[LChunk$EnumTileEntityState; values
Chunk$EnumTileEntityState valueOf (Ljava/lang/String;)LChunk$EnumTileEntityState; valueOf
ChunkSection a GLOBAL_PALETTE
ChunkSection b yPos
ChunkSection c nonEmptyBlockCount
ChunkSection d tickingBlockCount
ChunkSection f blockIds
ChunkSection a (III)LIBlockData; getType
ChunkSection a (IIILIBlockData;)LIBlockData; setType
ChunkSection a (IIILIBlockData;Z)LIBlockData; setType
ChunkSection e ()Z shouldTick
ChunkSection g ()I getYPosition
ChunkSection h ()V recalcBlockCounts
ChunkSection i ()LDataPaletteBlock; getBlocks
ChunkSection e tickingFluidCount
ChunkSection b (III)LFluid; getFluidState
ChunkSection b ()V release
ChunkSection c ()Z isEmpty
ChunkSection d ()Z isRandomlyTicking
ChunkSection f ()Z isRandomlyTickingFluids
ChunkSection b (LPacketDataSerializer;)V write
ChunkSection j ()I getSerializedSize
ILightAccess l ()LIBlockAccess; getWorld
ILightAccess c (II)LIBlockAccess; getChunkForLighting
DataPaletteBlock a (IIILjava/lang/Object;)Ljava/lang/Object; setBlock
DataPaletteBlock a (Ljava/lang/Object;)Z contains
DataPaletteBlock b (ILjava/lang/Object;)V setBlockIndex
DataPaletteBlock b globalPalette
DataPaletteBlock c dummyPaletteResize
DataPaletteBlock d registry
DataPaletteBlock e reader
DataPaletteBlock f writer
DataPaletteBlock g defaultValue
DataPaletteBlock a storage
DataPaletteBlock h palette
DataPaletteBlock i bits
DataPaletteBlock j lock
DataPaletteBlock b ()V release
DataPaletteBlock b (III)I getIndex
DataPaletteBlock b (I)V setBits
DataPaletteBlock onResize (ILjava/lang/Object;)I onResize
DataPaletteBlock b (IIILjava/lang/Object;)Ljava/lang/Object; getAndSetUnchecked
DataPaletteBlock c (IIILjava/lang/Object;)V set
DataPaletteBlock b (LPacketDataSerializer;)V write
DataPaletteBlock c ()I getSerializedSize
DataPaletteBlock c (ILjava/lang/Object;)I lambda$new$0
ChunkConverter$Type a BLACKLIST
ChunkConverter$Type b DEFAULT
ChunkConverter$Type c CHEST
ChunkConverter$Type d LEAVES
ChunkConverter$Type e STEM_BLOCK
ChunkConverter$Type f DIRECTIONS
ChunkConverter$Type g $VALUES
ChunkConverter$Type values ()[LChunkConverter$Type; values
ChunkConverter$Type valueOf (Ljava/lang/String;)LChunkConverter$Type; valueOf
ChunkRegionLoader a (LNBTTagCompound;LChunk;)V loadEntities
ChunkRegionLoader a (LWorldServer;LDefinedStructureManager;LVillagePlace;LChunkCoordIntPair;LNBTTagCompound;)LProtoChunk; loadChunk
ChunkRegionLoader a (LWorldServer;LIChunkAccess;)LNBTTagCompound; saveChunk
ChunkRegionLoader a LOGGER
ChunkRegionLoader b (LNBTTagCompound;LChunk;)V lambda$read$2
IChunkLoader a (LDimensionManager;Ljava/util/function/Supplier;LNBTTagCompound;)LNBTTagCompound; getChunkData
IChunkLoader e (LChunkCoordIntPair;)LNBTTagCompound; read
IChunkLoader a worker
IChunkLoader b fixerUpper
IChunkLoader c legacyStructureHandler
IChunkLoader i ()V flushWorker
IChunkLoader close ()V close
RegionFile c dataFile
RegionFile i freeSectors
RegionFile close ()V close
RegionFile d (LChunkCoordIntPair;)Z chunkExists
RegionFile f (LChunkCoordIntPair;)I getOffset
RegionFile a LOGGER
RegionFile b PADDING_BUFFER
RegionFile d externalFileDir
RegionFile e version
RegionFile f header
RegionFile g offsets
RegionFile h timestamps
RegionFile e (LChunkCoordIntPair;)Ljava/nio/file/Path; getExternalChunkPath
RegionFile b (B)B getExternalChunkVersion
RegionFile b (I)I getSectorNumber
RegionFile c (I)I sizeToSectors
RegionFile b (LChunkCoordIntPair;)Z doesChunkExist
RegionFile c (LChunkCoordIntPair;)Ljava/io/DataOutputStream; getChunkDataOutputStream
RegionFile b ()V writeHeader
RegionFile g (LChunkCoordIntPair;)I getOffsetIndex
RegionFile c ()V padToFullSector
RegionFile h (LChunkCoordIntPair;)V lambda$write$0
RegionFileCache a cache
RegionFileCache a (LChunkCoordIntPair;)LNBTTagCompound; read
RegionFileCache a (LChunkCoordIntPair;LNBTTagCompound;)V write
RegionFileCache b (LChunkCoordIntPair;)LRegionFile; getFile
RegionFileCache b folder
RegionFileCache close ()V close
WorldProvider e ()Z isNether
WorldProvider h ()LWorldBorder; getWorldBorder
WorldProvider k ()LChunkGenerator; getChunkGenerator
WorldProvider l ()Z isOverworld
WorldProvider m ()Z canRespawn
WorldProvider n ()LDimensionManager; getDimensionManager
WorldProvider a MOON_BRIGHTNESS_PER_PHASE
WorldProvider b level
WorldProvider f type
WorldProvider c ultraWarm
WorldProvider d hasCeiling
WorldProvider e brightnessRamp
WorldProvider g sunriseCol
WorldProvider b ()Z hasGround
WorldProvider c ()LBlockPosition; getDimensionSpecificSpawn
WorldProvider d ()D getClearColorScale
WorldProvider f ()Z isHasSkyLight
WorldProvider g ()Z isHasCeiling
WorldProvider i ()V saveData
WorldProvider j ()V tick
DimensionManager a OVERWORLD
DimensionManager b NETHER
DimensionManager c THE_END
DimensionManager d id
DimensionManager e suffix
DimensionManager f folder
DimensionManager g providerFactory
DimensionManager h hasSkyLight
DimensionManager i genLayerZoomer
DimensionManager a (LWorld;)LWorldProvider; getWorldProvider
DimensionManager a (Ljava/lang/String;LDimensionManager;)LDimensionManager; register
DimensionManager b ()I getDimensionID
DimensionManager c ()Ljava/lang/String; getSuffix
DimensionManager d ()Z hasSkyLight
DimensionManager e ()LGenLayerZoomer; getGenLayerZoomer
DimensionManager toString ()Ljava/lang/String; toString
EnumDragonRespawn a START
EnumDragonRespawn b PREPARING_TO_SUMMON_PILLARS
EnumDragonRespawn c SUMMONING_PILLARS
EnumDragonRespawn d SUMMONING_DRAGON
EnumDragonRespawn e END
EnumDragonRespawn f $VALUES
EnumDragonRespawn values ()[LEnumDragonRespawn; values
EnumDragonRespawn valueOf (Ljava/lang/String;)LEnumDragonRespawn; valueOf
EnderDragonBattle c bossBattle
EnderDragonBattle a LOGGER
EnderDragonBattle b VALID_PLAYER
EnderDragonBattle d level
EnderDragonBattle e gateways
EnderDragonBattle f exitPortalPattern
EnderDragonBattle g ticksSinceDragonSeen
EnderDragonBattle h crystalsAlive
EnderDragonBattle i ticksSinceCrystalsScanned
EnderDragonBattle j ticksSinceLastPlayerScan
EnderDragonBattle k dragonKilled
EnderDragonBattle l previouslyKilled
EnderDragonBattle m dragonUUID
EnderDragonBattle n needsStateScanning
EnderDragonBattle o portalLocation
EnderDragonBattle p respawnStage
EnderDragonBattle q respawnTime
EnderDragonBattle r respawnCrystals
EnderDragonBattle b ()V tick
EnderDragonBattle g ()V scanState
EnderDragonBattle h ()V findOrCreateDragon
EnderDragonBattle i ()Z hasActiveExitPortal
EnderDragonBattle j ()LShapeDetector$ShapeDetectorCollection; findExitPortal
EnderDragonBattle k ()Z isArenaLoaded
EnderDragonBattle l ()V updatePlayers
EnderDragonBattle m ()V updateCrystalCount
EnderDragonBattle n ()V spawnNewGateway
EnderDragonBattle o ()LEntityEnderDragon; createNewDragon
EnderDragonBattle b (LEntityEnderDragon;)V updateDragon
EnderDragonBattle c ()I getCrystalsAlive
EnderDragonBattle d ()Z hasPreviouslyKilledDragon
EnderDragonBattle e ()V tryRespawn
EnderDragonBattle f ()V resetSpikeCrystals
WorldGenStage$Features a AIR
WorldGenStage$Features b LIQUID
WorldGenStage$Features c BY_NAME
WorldGenStage$Features d name
WorldGenStage$Features e $VALUES
WorldGenStage$Features values ()[LWorldGenStage$Features; values
WorldGenStage$Features valueOf (Ljava/lang/String;)LWorldGenStage$Features; valueOf
WorldGenStage$Decoration a RAW_GENERATION
WorldGenStage$Decoration b LOCAL_MODIFICATIONS
WorldGenStage$Decoration c UNDERGROUND_STRUCTURES
WorldGenStage$Decoration d SURFACE_STRUCTURES
WorldGenStage$Decoration e UNDERGROUND_ORES
WorldGenStage$Decoration f UNDERGROUND_DECORATION
WorldGenStage$Decoration g VEGETAL_DECORATION
WorldGenStage$Decoration h TOP_LAYER_MODIFICATION
WorldGenStage$Decoration i BY_NAME
WorldGenStage$Decoration j name
WorldGenStage$Decoration k $VALUES
WorldGenStage$Decoration values ()[LWorldGenStage$Decoration; values
WorldGenStage$Decoration valueOf (Ljava/lang/String;)LWorldGenStage$Decoration; valueOf
HeightMap$Type a WORLD_SURFACE_WG
HeightMap$Type b WORLD_SURFACE
HeightMap$Type c OCEAN_FLOOR_WG
HeightMap$Type d OCEAN_FLOOR
HeightMap$Type e MOTION_BLOCKING
HeightMap$Type f MOTION_BLOCKING_NO_LEAVES
HeightMap$Type g serializationKey
HeightMap$Type h usage
HeightMap$Type i isOpaque
HeightMap$Type j REVERSE_LOOKUP
HeightMap$Type k $VALUES
HeightMap$Type values ()[LHeightMap$Type; values
HeightMap$Type valueOf (Ljava/lang/String;)LHeightMap$Type; valueOf
HeightMap$Type b ()Z sendToClient
HeightMap$Type c ()Z keepAfterWorldgen
HeightMap$Type d ()Ljava/util/function/Predicate; isOpaque
HeightMap$Type b (LIBlockData;)Z lambda$static$0
HeightMap$Use a WORLDGEN
HeightMap$Use b LIVE_WORLD
HeightMap$Use c CLIENT
HeightMap$Use d $VALUES
HeightMap$Use values ()[LHeightMap$Use; values
HeightMap$Use valueOf (Ljava/lang/String;)LHeightMap$Use; valueOf
WorldGenerator B BLOCK_PILE
WorldGenerator C SPRING_FEATURE
WorldGenerator D CHORUS_PLANT
WorldGenerator E EMERALD_ORE
WorldGenerator F VOID_START_PLATFORM
WorldGenerator G DESERT_WELL
WorldGenerator H FOSSIL
WorldGenerator I HUGE_RED_MUSHROOM
WorldGenerator J HUGE_BROWN_MUSHROOM
WorldGenerator K ICE_SPIKE
WorldGenerator L GLOWSTONE_BLOB
WorldGenerator M FREEZE_TOP_LAYER
WorldGenerator N VINES
WorldGenerator O MONSTER_ROOM
WorldGenerator P BLUE_ICE
WorldGenerator Q ICEBERG
WorldGenerator R FOREST_ROCK
WorldGenerator S DISK
WorldGenerator T ICE_PATCH
WorldGenerator U LAKE
WorldGenerator V ORE
WorldGenerator W END_SPIKE
WorldGenerator X END_ISLAND
WorldGenerator Y END_GATEWAY
WorldGenerator Z SEAGRASS
WorldGenerator aa KELP
WorldGenerator ab CORAL_TREE
WorldGenerator ac CORAL_MUSHROOM
WorldGenerator ad CORAL_CLAW
WorldGenerator ae SEA_PICKLE
WorldGenerator af SIMPLE_BLOCK
WorldGenerator ag BAMBOO
WorldGenerator al FILL_LAYER
WorldGenerator am BONUS_CHEST
WorldGenerator ap RANDOM_RANDOM_SELECTOR
WorldGenerator aq RANDOM_SELECTOR
WorldGenerator ar SIMPLE_RANDOM_SELECTOR
WorldGenerator as RANDOM_BOOLEAN_SELECTOR
WorldGenerator at DECORATED
WorldGenerator au DECORATED_FLOWER
WorldGenerator b PILLAGER_OUTPOST
WorldGenerator c MINESHAFT
WorldGenerator d WOODLAND_MANSION
WorldGenerator e JUNGLE_TEMPLE
WorldGenerator f DESERT_PYRAMID
WorldGenerator g IGLOO
WorldGenerator h SHIPWRECK
WorldGenerator i SWAMP_HUT
WorldGenerator j STRONGHOLD
WorldGenerator k OCEAN_MONUMENT
WorldGenerator l OCEAN_RUIN
WorldGenerator m NETHER_BRIDGE
WorldGenerator n END_CITY
WorldGenerator o BURIED_TREASURE
WorldGenerator p VILLAGE
WorldGenerator r NO_OP
WorldGenerator s NORMAL_TREE
WorldGenerator t ACACIA_TREE
WorldGenerator u FANCY_TREE
WorldGenerator v JUNGLE_GROUND_BUSH
WorldGenerator w DARK_OAK_TREE
WorldGenerator x MEGA_JUNGLE_TREE
WorldGenerator y MEGA_SPRUCE_TREE
WorldGenerator z FLOWER
WorldGenerator A RANDOM_PATCH
WorldGenerator a (LGeneratorAccess;LChunkGenerator;Ljava/util/Random;LBlockPosition;LWorldGenFeatureConfiguration;)Z generate
WorldGenerator q NETHER_FOSSIL
WorldGenerator ah HUGE_FUNGUS
WorldGenerator ai NETHER_FOREST_VEGETATION
WorldGenerator aj WEEPING_VINES
WorldGenerator ak TWISTING_VINES
WorldGenerator an BASALT_PILLAR
WorldGenerator ao NO_SURFACE_ORE
WorldGenerator av STRUCTURES_REGISTRY
WorldGenerator aw NOISE_AFFECTING_FEATURES
WorldGenerator a configurationFactory
WorldGenerator b (LWorldGenFeatureConfiguration;)LWorldGenFeatureConfigured; configured
WorldGenerator b (Lcom/mojang/datafixers/Dynamic;)LWorldGenFeatureConfiguration; createSettings
WorldGenerator e ()Ljava/util/List; getSpecialEnemies
WorldGenerator f ()Ljava/util/List; getSpecialAnimals
WorldGenerator b (LBlock;)Z isDirt
WorldGenMineshaft$Type a NORMAL
WorldGenMineshaft$Type b MESA
WorldGenMineshaft$Type c BY_NAME
WorldGenMineshaft$Type d name
WorldGenMineshaft$Type e $VALUES
WorldGenMineshaft$Type values ()[LWorldGenMineshaft$Type; values
WorldGenMineshaft$Type valueOf (Ljava/lang/String;)LWorldGenMineshaft$Type; valueOf
WorldGenFeatureRandomScattered d ()I getSeed
WorldGenFeatureRandomScattered b (LChunkGenerator;)I getSeparation
StructureGenerator a (LWorld;LChunkGenerator;LBlockPosition;IZ)LBlockPosition; getNearestGeneratedFeature
StructureGenerator a LOGGER
StructureGenerator b (LWorldGenFeatureConfiguration;)LWorldGenFeatureConfigured; configured
StructureGenerator b (LGeneratorAccess;LBlockPosition;)Z isInsideFeature
StructureGenerator g ()Z supportsProjection
StructureGenerator b ()Ljava/lang/String; getFeatureName
StructureGenerator c ()I getLookupRange
WorldGenFeatureOreConfiguration$Target a NATURAL_STONE
WorldGenFeatureOreConfiguration$Target b NETHERRACK
WorldGenFeatureOreConfiguration$Target c BY_NAME
WorldGenFeatureOreConfiguration$Target d name
WorldGenFeatureOreConfiguration$Target e predicate
WorldGenFeatureOreConfiguration$Target f $VALUES
WorldGenFeatureOreConfiguration$Target values ()[LWorldGenFeatureOreConfiguration$Target; values
WorldGenFeatureOreConfiguration$Target valueOf (Ljava/lang/String;)LWorldGenFeatureOreConfiguration$Target; valueOf
WorldGenFeatureOreConfiguration$Target b ()Ljava/util/function/Predicate; getPredicate
WorldGenFeatureDefinedStructurePoolTemplate$Matching a TERRAIN_MATCHING
WorldGenFeatureDefinedStructurePoolTemplate$Matching b RIGID
WorldGenFeatureDefinedStructurePoolTemplate$Matching c BY_NAME
WorldGenFeatureDefinedStructurePoolTemplate$Matching d name
WorldGenFeatureDefinedStructurePoolTemplate$Matching e processors
WorldGenFeatureDefinedStructurePoolTemplate$Matching f $VALUES
WorldGenFeatureDefinedStructurePoolTemplate$Matching values ()[LWorldGenFeatureDefinedStructurePoolTemplate$Matching; values
WorldGenFeatureDefinedStructurePoolTemplate$Matching valueOf (Ljava/lang/String;)LWorldGenFeatureDefinedStructurePoolTemplate$Matching; valueOf
WorldGenFeatureDefinedStructurePoolTemplate$Matching b ()Lcom/google/common/collect/ImmutableList; getProcessors
WorldGenFeatureOceanRuin$Temperature a WARM
WorldGenFeatureOceanRuin$Temperature b COLD
WorldGenFeatureOceanRuin$Temperature c BY_NAME
WorldGenFeatureOceanRuin$Temperature d name
WorldGenFeatureOceanRuin$Temperature e $VALUES
WorldGenFeatureOceanRuin$Temperature values ()[LWorldGenFeatureOceanRuin$Temperature; values
WorldGenFeatureOceanRuin$Temperature valueOf (Ljava/lang/String;)LWorldGenFeatureOceanRuin$Temperature; valueOf
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType a OPENING
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType b WOOD_DOOR
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType c GRATES
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType d IRON_DOOR
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType e $VALUES
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType values ()[LWorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType; values
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType valueOf (Ljava/lang/String;)LWorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType; valueOf
LightEngineLayerEventListener$Void a INSTANCE
LightEngineLayerEventListener$Void b $VALUES
LightEngineLayerEventListener$Void values ()[LLightEngineLayerEventListener$Void; values
LightEngineLayerEventListener$Void valueOf (Ljava/lang/String;)LLightEngineLayerEventListener$Void; valueOf
LightEngineLayerEventListener$Void b (LBlockPosition;)I getLightValue
FluidTypeFlowing a FALLING
FluidTypeFlowing b LEVEL
FluidTypeFlowing e OCCLUSION_CACHE
FluidTypeFlowing f shapes
FluidTypeFlowing g (LFluid;)Z affectsFlow
FluidTypeFlowing d ()LFluidType; getFlowing
FluidTypeFlowing e ()LFluidType; getSource
FluidTypeFlowing f ()Z canConvertToSource
FluidTypeFlowing h (LFluid;)Z isSourceBlockOfThisType
FluidTypeFlowing b (LIWorldReader;)I getSlopeFindDistance
FluidTypeFlowing b (LIWorldReader;LBlockPosition;LIBlockData;)Ljava/util/Map; getSpread
FluidTypeFlowing c (LIWorldReader;)I getDropOff
FluidTypeFlowing e (LFluid;)I getLegacyLevel
FluidTypeFlowing c (LFluid;LIBlockAccess;LBlockPosition;)Z hasSameAbove
FluidTypeFlowing d (LFluid;)I getAmount
FluidTypeFlowing b (LFluid;LIBlockAccess;LBlockPosition;)LVoxelShape; getShape
FluidTypeFlowing b (LIBlockAccess;LBlockPosition;LFluid;)LVoxelShape; lambda$getShape$5
FluidTypeFlowing b (LIWorldReader;LBlockPosition;I)Lcom/mojang/datafixers/util/Pair; lambda$getSlopeDistance$1
FluidTypeFlowing k ()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap; lambda$static$0
Fluid a (LIBlockAccess;LBlockPosition;)F getHeight
Fluid c ()LFluidType; getType
Fluid d ()Z isSource
Fluid e ()Z isEmpty
Fluid i ()LIBlockData; getBlockData
Fluid f ()F getOwnHeight
Fluid g ()I getAmount
Fluid b (LIBlockAccess;LBlockPosition;)Z shouldRenderBackwardUpFace
Fluid h ()Z isRandomlyTicking
Fluid b (LWorld;LBlockPosition;Ljava/util/Random;)V randomTick
Fluid c (LIBlockAccess;LBlockPosition;)LVec3D; getFlow
Fluid j ()LParticleParam; getDripParticle
Fluid k ()F getExplosionResistance
Fluid d (LIBlockAccess;LBlockPosition;)LVoxelShape; getShape
Fluid b (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; lambda$deserialize$2
Fluid c (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/String; lambda$deserialize$1
FluidTypes a EMPTY
FluidTypes b FLOWING_WATER
FluidTypes c WATER
FluidTypes d FLOWING_LAVA
FluidTypes e LAVA
Material B CLOTH
Material C TNT
Material D LEAVES
Material E SHATTERABLE
Material F ICE
Material G CACTUS
Material H STONE
Material I ORE
Material J SNOW_BLOCK
Material K HEAVY
Material L BANNER
Material M PISTON
Material N CORAL
Material O PUMPKIN
Material P DRAGON_EGG
Material Q CAKE
Material U canBurn
Material a AIR
Material b STRUCTURE_VOID
Material c PORTAL
Material d WOOL
Material e PLANT
Material f WATER_PLANT
Material g REPLACEABLE_PLANT
Material h REPLACEABLE_WATER_PLANT
Material i WATER
Material j BUBBLE_COLUMN
Material k LAVA
Material l PACKED_ICE
Material m FIRE
Material n ORIENTABLE
Material o WEB
Material p BUILDABLE_GLASS
Material q CLAY
Material r EARTH
Material s GRASS
Material t SNOW_LAYER
Material u SAND
Material v SPONGE
Material w SHULKER_SHELL
Material x WOOD
Material z BAMBOO_SAPLING
Material A BAMBOO
Material a ()Z isLiquid
Material b ()Z isBuildable
Material c ()Z isSolid
Material d ()Z isBurnable
Material e ()Z isReplaceable
Material g ()Z isAlwaysDestroyable
Material h ()LEnumPistonReaction; getPushReaction
Material y NETHER_WOOD
Material R color
Material S pushReaction
Material T blocksMotion
Material V alwaysDestroyable
Material W liquid
Material X solidBlocking
Material Y replaceable
Material Z solid
Material f ()Z isSolidBlocking
Material i ()LMaterialMapColor; getColor
MaterialMapColor ab rgb
MaterialMapColor a MATERIAL_COLORS
MaterialMapColor b NONE
MaterialMapColor c GRASS
MaterialMapColor d SAND
MaterialMapColor e WOOL
MaterialMapColor f FIRE
MaterialMapColor g ICE
MaterialMapColor h METAL
MaterialMapColor i PLANT
MaterialMapColor j SNOW
MaterialMapColor k CLAY
MaterialMapColor l DIRT
MaterialMapColor m STONE
MaterialMapColor n WATER
MaterialMapColor o WOOD
MaterialMapColor p QUARTZ
MaterialMapColor q COLOR_ORANGE
MaterialMapColor r COLOR_MAGENTA
MaterialMapColor s COLOR_LIGHT_BLUE
MaterialMapColor t COLOR_YELLOW
MaterialMapColor u COLOR_LIGHT_GREEN
MaterialMapColor v COLOR_PINK
MaterialMapColor w COLOR_GRAY
MaterialMapColor x COLOR_LIGHT_GRAY
MaterialMapColor y COLOR_CYAN
MaterialMapColor z COLOR_PURPLE
MaterialMapColor A COLOR_BLUE
MaterialMapColor B COLOR_BROWN
MaterialMapColor C COLOR_GREEN
MaterialMapColor D COLOR_RED
MaterialMapColor E COLOR_BLACK
MaterialMapColor F GOLD
MaterialMapColor G DIAMOND
MaterialMapColor H LAPIS
MaterialMapColor I EMERALD
MaterialMapColor J PODZOL
MaterialMapColor K NETHER
MaterialMapColor L TERRACOTTA_WHITE
MaterialMapColor M TERRACOTTA_ORANGE
MaterialMapColor N TERRACOTTA_MAGENTA
MaterialMapColor O TERRACOTTA_LIGHT_BLUE
MaterialMapColor P TERRACOTTA_YELLOW
MaterialMapColor Q TERRACOTTA_LIGHT_GREEN
MaterialMapColor R TERRACOTTA_PINK
MaterialMapColor S TERRACOTTA_GRAY
MaterialMapColor T TERRACOTTA_LIGHT_GRAY
MaterialMapColor U TERRACOTTA_CYAN
MaterialMapColor V TERRACOTTA_PURPLE
MaterialMapColor W TERRACOTTA_BLUE
MaterialMapColor X TERRACOTTA_BROWN
MaterialMapColor Y TERRACOTTA_GREEN
MaterialMapColor Z TERRACOTTA_RED
MaterialMapColor aa TERRACOTTA_BLACK
MaterialMapColor ac id
EnumPistonReaction a NORMAL
EnumPistonReaction b DESTROY
EnumPistonReaction c BLOCK
EnumPistonReaction d IGNORE
EnumPistonReaction e PUSH_ONLY
EnumPistonReaction f $VALUES
EnumPistonReaction values ()[LEnumPistonReaction; values
EnumPistonReaction valueOf (Ljava/lang/String;)LEnumPistonReaction; valueOf
ICommandListener a_ DUMMY
ICommandListener I_ ()Z shouldBroadcastCommands
ICommandListener a ()Z shouldSendSuccess
ICommandListener a (LIChatBaseComponent;)V sendMessage
ICommandListener b ()Z shouldSendFailure
GenLayerDeepOcean a INSTANCE
GenLayerDeepOcean b $VALUES
GenLayerDeepOcean values ()[LGenLayerDeepOcean; values
GenLayerDeepOcean valueOf (Ljava/lang/String;)LGenLayerDeepOcean; valueOf
GenLayerSpecial$Special1 a INSTANCE
GenLayerSpecial$Special1 b $VALUES
GenLayerSpecial$Special1 values ()[LGenLayerSpecial$Special1; values
GenLayerSpecial$Special1 valueOf (Ljava/lang/String;)LGenLayerSpecial$Special1; valueOf
GenLayerSpecial$Special2 a INSTANCE
GenLayerSpecial$Special2 b $VALUES
GenLayerSpecial$Special2 values ()[LGenLayerSpecial$Special2; values
GenLayerSpecial$Special2 valueOf (Ljava/lang/String;)LGenLayerSpecial$Special2; valueOf
GenLayerSpecial$Special3 a INSTANCE
GenLayerSpecial$Special3 b $VALUES
GenLayerSpecial$Special3 values ()[LGenLayerSpecial$Special3; values
GenLayerSpecial$Special3 valueOf (Ljava/lang/String;)LGenLayerSpecial$Special3; valueOf
GenLayerIsland a INSTANCE
GenLayerIsland b $VALUES
GenLayerIsland values ()[LGenLayerIsland; values
GenLayerIsland valueOf (Ljava/lang/String;)LGenLayerIsland; valueOf
GenLayerMushroomIsland a INSTANCE
GenLayerMushroomIsland b MUSHROOM_FIELDS
GenLayerMushroomIsland c $VALUES
GenLayerMushroomIsland values ()[LGenLayerMushroomIsland; values
GenLayerMushroomIsland valueOf (Ljava/lang/String;)LGenLayerMushroomIsland; valueOf
GenLayerTopSoil a INSTANCE
GenLayerTopSoil b $VALUES
GenLayerTopSoil values ()[LGenLayerTopSoil; values
GenLayerTopSoil valueOf (Ljava/lang/String;)LGenLayerTopSoil; valueOf
GenLayerDesert a INSTANCE
GenLayerDesert b DESERT
GenLayerDesert c MOUNTAINS
GenLayerDesert d WOODED_MOUNTAINS
GenLayerDesert e SNOWY_TUNDRA
GenLayerDesert f JUNGLE
GenLayerDesert g BAMBOO_JUNGLE
GenLayerDesert h JUNGLE_EDGE
GenLayerDesert i BADLANDS
GenLayerDesert j BADLANDS_PLATEAU
GenLayerDesert k WOODED_BADLANDS_PLATEAU
GenLayerDesert l PLAINS
GenLayerDesert m GIANT_TREE_TAIGA
GenLayerDesert n MOUNTAIN_EDGE
GenLayerDesert o SWAMP
GenLayerDesert p TAIGA
GenLayerDesert q SNOWY_TAIGA
GenLayerDesert r $VALUES
GenLayerDesert values ()[LGenLayerDesert; values
GenLayerDesert valueOf (Ljava/lang/String;)LGenLayerDesert; valueOf
GenLayerDesert b ([IIIIIIII)Z checkEdgeStrict
LayerIsland a INSTANCE
LayerIsland b $VALUES
LayerIsland values ()[LLayerIsland; values
LayerIsland valueOf (Ljava/lang/String;)LLayerIsland; valueOf
GenLayerOceanEdge a INSTANCE
GenLayerOceanEdge b $VALUES
GenLayerOceanEdge values ()[LGenLayerOceanEdge; values
GenLayerOceanEdge valueOf (Ljava/lang/String;)LGenLayerOceanEdge; valueOf
GenLayerOcean a INSTANCE
GenLayerOcean b $VALUES
GenLayerOcean values ()[LGenLayerOcean; values
GenLayerOcean valueOf (Ljava/lang/String;)LGenLayerOcean; valueOf
GenLayerJungle a INSTANCE
GenLayerJungle b JUNGLE
GenLayerJungle c BAMBOO_JUNGLE
GenLayerJungle d $VALUES
GenLayerJungle values ()[LGenLayerJungle; values
GenLayerJungle valueOf (Ljava/lang/String;)LGenLayerJungle; valueOf
GenLayerPlains a INSTANCE
GenLayerPlains b PLAINS
GenLayerPlains c SUNFLOWER_PLAINS
GenLayerPlains d $VALUES
GenLayerPlains values ()[LGenLayerPlains; values
GenLayerPlains valueOf (Ljava/lang/String;)LGenLayerPlains; valueOf
GenLayerRegionHills a INSTANCE
GenLayerRegionHills b LOGGER
GenLayerRegionHills c BIRCH_FOREST
GenLayerRegionHills d BIRCH_FOREST_HILLS
GenLayerRegionHills e DESERT
GenLayerRegionHills f DESERT_HILLS
GenLayerRegionHills g MOUNTAINS
GenLayerRegionHills h WOODED_MOUNTAINS
GenLayerRegionHills i FOREST
GenLayerRegionHills j WOODED_HILLS
GenLayerRegionHills k SNOWY_TUNDRA
GenLayerRegionHills l SNOWY_MOUNTAIN
GenLayerRegionHills m JUNGLE
GenLayerRegionHills n JUNGLE_HILLS
GenLayerRegionHills o BAMBOO_JUNGLE
GenLayerRegionHills p BAMBOO_JUNGLE_HILLS
GenLayerRegionHills q BADLANDS
GenLayerRegionHills r WOODED_BADLANDS_PLATEAU
GenLayerRegionHills s PLAINS
GenLayerRegionHills t GIANT_TREE_TAIGA
GenLayerRegionHills u GIANT_TREE_TAIGA_HILLS
GenLayerRegionHills v DARK_FOREST
GenLayerRegionHills w SAVANNA
GenLayerRegionHills x SAVANNA_PLATEAU
GenLayerRegionHills y TAIGA
GenLayerRegionHills z SNOWY_TAIGA
GenLayerRegionHills A SNOWY_TAIGA_HILLS
GenLayerRegionHills B TAIGA_HILLS
GenLayerRegionHills C $VALUES
GenLayerRegionHills values ()[LGenLayerRegionHills; values
GenLayerRegionHills valueOf (Ljava/lang/String;)LGenLayerRegionHills; valueOf
GenLayerIcePlains a INSTANCE
GenLayerIcePlains b $VALUES
GenLayerIcePlains values ()[LGenLayerIcePlains; values
GenLayerIcePlains valueOf (Ljava/lang/String;)LGenLayerIcePlains; valueOf
GenLayerCleaner a INSTANCE
GenLayerCleaner b $VALUES
GenLayerCleaner values ()[LGenLayerCleaner; values
GenLayerCleaner valueOf (Ljava/lang/String;)LGenLayerCleaner; valueOf
GenLayerRiver a INSTANCE
GenLayerRiver b RIVER
GenLayerRiver c $VALUES
GenLayerRiver values ()[LGenLayerRiver; values
GenLayerRiver valueOf (Ljava/lang/String;)LGenLayerRiver; valueOf
GenLayerRiver c (I)I riverFilter
GenLayerRiverMix a INSTANCE
GenLayerRiverMix b FROZEN_RIVER
GenLayerRiverMix c SNOWY_TUNDRA
GenLayerRiverMix d MUSHROOM_FIELDS
GenLayerRiverMix e MUSHROOM_FIELD_SHORE
GenLayerRiverMix f RIVER
GenLayerRiverMix g $VALUES
GenLayerRiverMix values ()[LGenLayerRiverMix; values
GenLayerRiverMix valueOf (Ljava/lang/String;)LGenLayerRiverMix; valueOf
GenLayerMushroomShore a INSTANCE
GenLayerMushroomShore b BEACH
GenLayerMushroomShore c SNOWY_BEACH
GenLayerMushroomShore d DESERT
GenLayerMushroomShore e MOUNTAINS
GenLayerMushroomShore f WOODED_MOUNTAINS
GenLayerMushroomShore g FOREST
GenLayerMushroomShore h JUNGLE
GenLayerMushroomShore i JUNGLE_EDGE
GenLayerMushroomShore j JUNGLE_HILLS
GenLayerMushroomShore k BADLANDS
GenLayerMushroomShore l WOODED_BADLANDS_PLATEAU
GenLayerMushroomShore m BADLANDS_PLATEAU
GenLayerMushroomShore n ERODED_BADLANDS
GenLayerMushroomShore o MODIFIED_WOODED_BADLANDS_PLATEAU
GenLayerMushroomShore p MODIFIED_BADLANDS_PLATEAU
GenLayerMushroomShore q MUSHROOM_FIELDS
GenLayerMushroomShore r MUSHROOM_FIELD_SHORE
GenLayerMushroomShore s RIVER
GenLayerMushroomShore t MOUNTAIN_EDGE
GenLayerMushroomShore u STONE_SHORE
GenLayerMushroomShore v SWAMP
GenLayerMushroomShore w TAIGA
GenLayerMushroomShore x $VALUES
GenLayerMushroomShore values ()[LGenLayerMushroomShore; values
GenLayerMushroomShore valueOf (Ljava/lang/String;)LGenLayerMushroomShore; valueOf
GenLayerMushroomShore c (I)Z isJungleCompatible
GenLayerMushroomShore d (I)Z isMesa
GenLayerSmooth a INSTANCE
GenLayerSmooth b $VALUES
GenLayerSmooth values ()[LGenLayerSmooth; values
GenLayerSmooth valueOf (Ljava/lang/String;)LGenLayerSmooth; valueOf
GenLayerZoom a NORMAL
GenLayerZoom b FUZZY
GenLayerZoom c $VALUES
GenLayerZoom values ()[LGenLayerZoom; values
GenLayerZoom valueOf (Ljava/lang/String;)LGenLayerZoom; valueOf
GenLayerZoom b (I)I getParentY
CommandListenerWrapper c base
CommandListenerWrapper a (LIChatBaseComponent;)V sendFailureMessage
CommandListenerWrapper a (LIChatBaseComponent;Z)V sendMessage
CommandListenerWrapper b ()LIChatBaseComponent; getScoreboardDisplayName
CommandListenerWrapper b (LIChatBaseComponent;)V sendAdminMessage
CommandListenerWrapper c ()Ljava/lang/String; getName
CommandListenerWrapper d ()LVec3D; getPosition
CommandListenerWrapper e ()LWorldServer; getWorld
CommandListenerWrapper f ()LEntity; getEntity
CommandListenerWrapper j ()Lnet/minecraft/server/MinecraftServer; getServer
CommandListenerWrapper a ERROR_NOT_PLAYER
CommandListenerWrapper b ERROR_NOT_ENTITY
CommandListenerWrapper d worldPosition
CommandListenerWrapper e level
CommandListenerWrapper f permissionLevel
CommandListenerWrapper g textName
CommandListenerWrapper h displayName
CommandListenerWrapper i server
CommandListenerWrapper j silent
CommandListenerWrapper k entity
CommandListenerWrapper l consumer
CommandListenerWrapper m anchor
CommandListenerWrapper n rotation
CommandListenerWrapper b (I)LCommandListenerWrapper; withMaximumPermission
CommandListenerWrapper b (LVec3D;)LCommandListenerWrapper; facing
CommandListenerWrapper c (I)Z hasPermission
CommandListenerWrapper g ()LEntity; getEntityOrException
CommandListenerWrapper h ()LEntityPlayer; getPlayerOrException
CommandListenerWrapper i ()LVec2F; getRotation
CommandListenerWrapper k ()LArgumentAnchor$Anchor; getAnchor
CommandListenerWrapper l ()Ljava/util/Collection; getOnlinePlayerNames
CommandListenerWrapper m ()Ljava/util/Collection; getAllTeams
CommandListenerWrapper n ()Ljava/util/Collection; getAvailableSoundEvents
CommandListenerWrapper o ()Ljava/util/stream/Stream; getRecipeNames
CommandListenerWrapper b (Lcom/mojang/brigadier/context/CommandContext;ZI)V lambda$new$0
PathType a BLOCKED
PathType b OPEN
PathType c WALKABLE
PathType d TRAPDOOR
PathType e FENCE
PathType f LAVA
PathType g WATER
PathType h WATER_BORDER
PathType i RAIL
PathType j DANGER_FIRE
PathType k DAMAGE_FIRE
PathType l DANGER_CACTUS
PathType m DAMAGE_CACTUS
PathType n DANGER_OTHER
PathType o DAMAGE_OTHER
PathType p DOOR_OPEN
PathType q DOOR_WOOD_CLOSED
PathType r DOOR_IRON_CLOSED
PathType s BREACH
PathType t LEAVES
PathType u STICKY_HONEY
PathType v COCOA
PathType w malus
PathType x $VALUES
PathType values ()[LPathType; values
PathType valueOf (Ljava/lang/String;)LPathType; valueOf
PathMode a LAND
PathMode b WATER
PathMode c AIR
PathMode d $VALUES
PathMode values ()[LPathMode; values
PathMode valueOf (Ljava/lang/String;)LPathMode; valueOf
PersistentBase b id
PersistentBase d ()Ljava/lang/String; getId
PersistentBase a LOGGER
PersistentBase c dirty
PersistentBase b (LNBTTagCompound;)LNBTTagCompound; save
PersistentBase b ()V setDirty
PersistentBase c ()Z isDirty
MapIcon a type
MapIcon b x
MapIcon c y
MapIcon d rotation
MapIcon e name
MapIcon a ()B getType
MapIcon b ()LMapIcon$Type; getType
MapIcon c ()B getX
MapIcon d ()B getY
MapIcon e ()B getRotation
MapIcon g ()LIChatBaseComponent; getName
MapIcon b (B)V setY
MapIcon c (B)V setRot
MapIcon f ()Z renderOnFrame
MapIcon equals (Ljava/lang/Object;)Z equals
MapIcon hashCode ()I hashCode
MapIcon$Type A RED_X
MapIcon$Type a PLAYER
MapIcon$Type b FRAME
MapIcon$Type c RED_MARKER
MapIcon$Type d BLUE_MARKER
MapIcon$Type e TARGET_X
MapIcon$Type f TARGET_POINT
MapIcon$Type g PLAYER_OFF_MAP
MapIcon$Type h PLAYER_OFF_LIMITS
MapIcon$Type i MANSION
MapIcon$Type j MONUMENT
MapIcon$Type k BANNER_WHITE
MapIcon$Type l BANNER_ORANGE
MapIcon$Type m BANNER_MAGENTA
MapIcon$Type n BANNER_LIGHT_BLUE
MapIcon$Type o BANNER_YELLOW
MapIcon$Type p BANNER_LIME
MapIcon$Type q BANNER_PINK
MapIcon$Type r BANNER_GRAY
MapIcon$Type s BANNER_LIGHT_GRAY
MapIcon$Type t BANNER_CYAN
MapIcon$Type u BANNER_PURPLE
MapIcon$Type v BANNER_BLUE
MapIcon$Type w BANNER_BROWN
MapIcon$Type x BANNER_GREEN
MapIcon$Type y BANNER_RED
MapIcon$Type z BANNER_BLACK
MapIcon$Type B icon
MapIcon$Type C renderedOnFrame
MapIcon$Type D mapColor
MapIcon$Type E $VALUES
MapIcon$Type values ()[LMapIcon$Type; values
MapIcon$Type valueOf (Ljava/lang/String;)LMapIcon$Type; valueOf
MapIcon$Type b ()Z isRenderedOnFrame
MapIcon$Type c ()Z hasMapColor
MapIcon$Type d ()I getMapColor
WorldMap a centerX
WorldMap b centerZ
WorldMap c map
WorldMap d track
WorldMap e unlimitedTracking
WorldMap f scale
WorldMap g colors
WorldMap h locked
WorldMap j decorations
WorldMap k humans
WorldMap a (II)V flagDirty
WorldMap a (LItemStack;LBlockPosition;Ljava/lang/String;LMapIcon$Type;)V decorateMap
WorldMap i carriedBy
WorldMap l bannerMarkers
WorldMap m frameMarkers
WorldMap b (LNBTTagCompound;)LNBTTagCompound; save
WorldMap$WorldMapHumanTracker a trackee
WorldMap$WorldMapHumanTracker c worldMap
WorldMap$WorldMapHumanTracker d dirtyData
WorldMap$WorldMapHumanTracker e minDirtyX
WorldMap$WorldMapHumanTracker f minDirtyY
WorldMap$WorldMapHumanTracker g maxDirtyX
WorldMap$WorldMapHumanTracker h maxDirtyY
WorldMap$WorldMapHumanTracker i tick
WorldMap$WorldMapHumanTracker b step
WorldPersistentData b data
WorldPersistentData a LOGGER
WorldPersistentData c fixerUpper
WorldPersistentData d dataFolder
WorldPersistentData b (Ljava/util/function/Supplier;Ljava/lang/String;)LPersistentBase; get
WorldPersistentData c (Ljava/util/function/Supplier;Ljava/lang/String;)LPersistentBase; readSavedData
WorldData S customBossEvents
WorldData s levelName
WorldData u clearWeatherTime
WorldData v raining
WorldData w rainTime
WorldData x thundering
WorldData y thunderTime
WorldData P ()LNBTTagCompound; getCustomBossEvents
WorldData a ()J getSeed
WorldData a (J)V setTime
WorldData a (LBlockPosition;)V setSpawn
WorldData a (LEnumDifficulty;)V setDifficulty
WorldData a (LEnumGamemode;)V setGameType
WorldData a (Ljava/lang/String;)V setName
WorldData a (Z)V setThundering
WorldData b (J)V setDayTime
WorldData b (Z)V setStorm
WorldData b (LNBTTagCompound;)V setCustomBossEvents
WorldData e ()J getTime
WorldData e (I)V setThunderDuration
WorldData f ()J getDayTime
WorldData f (I)V setWeatherDuration
WorldData g (Z)V setHardcore
WorldData i ()Ljava/lang/String; getName
WorldData l ()Z isThundering
WorldData m ()I getThunderDuration
WorldData n ()Z hasStorm
WorldData o ()I getWeatherDuration
WorldData p ()LEnumGamemode; getGameType
WorldData q ()Z shouldGenerateMapFeatures
WorldData r ()Z isHardcore
WorldData s ()LWorldType; getType
WorldData w ()LEnumDifficulty; getDifficulty
WorldData x ()Z isDifficultyLocked
WorldData b minecraftVersionName
WorldData c minecraftVersion
WorldData d snapshot
WorldData a DEFAULT_DIFFICULTY
WorldData e seed
WorldData f generatorProvider
WorldData g legacyCustomOptions
WorldData h xSpawn
WorldData i ySpawn
WorldData j zSpawn
WorldData k gameTime
WorldData l dayTime
WorldData m lastPlayed
WorldData n sizeOnDisk
WorldData o fixerUpper
WorldData p playerDataVersion
WorldData q upgradedPlayerTag
WorldData r loadedPlayerTag
WorldData t version
WorldData z gameType
WorldData A generateMapFeatures
WorldData B hardcore
WorldData C allowCommands
WorldData D initialized
WorldData E difficulty
WorldData F difficultyLocked
WorldData G borderX
WorldData H borderZ
WorldData I borderSize
WorldData J borderSizeLerpTime
WorldData K borderSizeLerpTarget
WorldData L borderSafeZone
WorldData M borderDamagePerBlock
WorldData N borderWarningBlocks
WorldData O borderWarningTime
WorldData P disabledDataPacks
WorldData Q enabledDataPacks
WorldData R dimensionData
WorldData T wanderingTraderSpawnDelay
WorldData U wanderingTraderSpawnChance
WorldData V wanderingTraderId
WorldData W knownServerBrands
WorldData X wasModded
WorldData Y gameRules
WorldData Z scheduledEvents
WorldData c (J)J obfuscateSeed
WorldData b ()I getXSpawn
WorldData c ()I getYSpawn
WorldData d ()I getZSpawn
WorldData g ()J getSizeOnDisk
WorldData T ()V updatePlayerTag
WorldData h ()LNBTTagCompound; getLoadedPlayerTag
WorldData b (I)V setYSpawn
WorldData c (I)V setZSpawn
WorldData j ()I getVersion
WorldData d (I)V setVersion
WorldData k ()J getLastPlayed
WorldData z ()I getClearWeatherTime
WorldData g (I)V setClearWeatherTime
WorldData f (Z)V setGenerateMapFeatures
WorldData A ()LChunkGeneratorProvider; getGeneratorProvider
WorldData t ()Z getAllowCommands
WorldData c (Z)V setAllowCommands
WorldData u ()Z isInitialized
WorldData d (Z)V setInitialized
WorldData v ()LGameRules; getGameRules
WorldData B ()D getBorderX
WorldData C ()D getBorderZ
WorldData D ()D getBorderSize
WorldData E ()J getBorderSizeLerpTime
WorldData d (J)V setBorderSizeLerpTime
WorldData F ()D getBorderSizeLerpTarget
WorldData b (D)V setBorderSizeLerpTarget
WorldData c (D)V setBorderZ
WorldData d (D)V setBorderX
WorldData G ()D getBorderSafeZone
WorldData e (D)V setBorderSafeZone
WorldData H ()D getBorderDamagePerBlock
WorldData f (D)V setBorderDamagePerBlock
WorldData I ()I getBorderWarningBlocks
WorldData J ()I getBorderWarningTime
WorldData h (I)V setBorderWarningBlocks
WorldData i (I)V setBorderWarningTime
WorldData e (Z)V setDifficultyLocked
WorldData y ()LCustomFunctionCallbackTimerQueue; getScheduledEvents
WorldData K ()I getMinecraftVersion
WorldData L ()Z isSnapshot
WorldData M ()Ljava/lang/String; getMinecraftVersionName
WorldData N ()Ljava/util/Set; getDisabledDataPacks
WorldData O ()Ljava/util/Set; getEnabledDataPacks
WorldData Q ()I getWanderingTraderSpawnDelay
WorldData j (I)V setWanderingTraderSpawnDelay
WorldData R ()I getWanderingTraderSpawnChance
WorldData k (I)V setWanderingTraderSpawnChance
WorldData S ()Ljava/util/UUID; getWanderingTraderId
WorldData U ()Ljava/lang/String; lambda$fillCrashReportCategory$10
WorldData V ()Ljava/lang/String; lambda$fillCrashReportCategory$9
WorldData W ()Ljava/lang/String; lambda$fillCrashReportCategory$8
WorldData X ()Ljava/lang/String; lambda$fillCrashReportCategory$7
WorldData Y ()Ljava/lang/String; lambda$fillCrashReportCategory$6
WorldData Z ()Ljava/lang/String; lambda$fillCrashReportCategory$5
WorldData aa ()Ljava/lang/String; lambda$fillCrashReportCategory$4
WorldData ab ()Ljava/lang/String; lambda$fillCrashReportCategory$3
WorldData ac ()Ljava/lang/String; lambda$fillCrashReportCategory$2
WorldData ad ()Ljava/lang/String; lambda$fillCrashReportCategory$1
WorldData ae ()Ljava/lang/String; lambda$fillCrashReportCategory$0
WorldNBTStorage c baseDir
WorldNBTStorage d playerDir
WorldNBTStorage e sessionId
WorldNBTStorage a ()Ljava/io/File; getDirectory
WorldNBTStorage a (LWorldData;)V saveWorldData
WorldNBTStorage a (LWorldData;LNBTTagCompound;)V saveWorldData
WorldNBTStorage b ()V checkSession
WorldNBTStorage c ()LWorldData; getWorldData
WorldNBTStorage d ()[Ljava/lang/String; getSeenPlayers
WorldNBTStorage g ()Lcom/mojang/datafixers/DataFixer; getDataFixer
WorldNBTStorage b LOGGER
WorldNBTStorage f levelId
WorldNBTStorage g structureManager
WorldNBTStorage a fixerUpper
WorldNBTStorage h ()V initiateSession
WorldNBTStorage b (LEntityHuman;)LNBTTagCompound; load
WorldNBTStorage e ()Ljava/lang/String; getLevelId
WorldNBTStorage f ()LDefinedStructureManager; getStructureManager
Convertable a (Ljava/lang/String;)Z isConvertable
Convertable a (Ljava/lang/String;LIProgressUpdate;)Z convert
Convertable a LOGGER
Convertable b FORMATTER
Convertable c baseDir
Convertable d backupDir
Convertable e fixerUpper
Convertable b ()Ljava/util/List; getLevelList
Convertable e ()I getStorageVersion
Convertable b (Ljava/lang/String;)LWorldData; getDataTagFor
Convertable c (Ljava/lang/String;)Z isNewLevelIdAcceptable
Convertable d (Ljava/lang/String;)Z deleteLevel
Convertable e (Ljava/lang/String;)Z levelExists
Convertable c ()Ljava/nio/file/Path; getBaseDir
Convertable b (Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; getFile
Convertable g (Ljava/lang/String;)Ljava/nio/file/Path; getLevelPath
Convertable d ()Ljava/nio/file/Path; getBackupPath
Convertable f (Ljava/lang/String;)J makeWorldBackup
IPlayerFileData a (LEntityHuman;)V save
IPlayerFileData b (LEntityHuman;)LNBTTagCompound; load
LootTableInfo a (LLootContextParameter;)Z hasContextParameter
LootTableInfo c (LLootContextParameter;)Ljava/lang/Object; getContextParameter
LootTableInfo a random
LootTableInfo b luck
LootTableInfo c level
LootTableInfo d lootTables
LootTableInfo e visitedTables
LootTableInfo f conditions
LootTableInfo g visitedConditions
LootTableInfo h params
LootTableInfo i dynamicDrops
LootTableInfo b (LLootContextParameter;)Ljava/lang/Object; getParam
LootTableInfo b (LLootTable;)V removeVisitedTable
LootTableInfo b (LLootItemCondition;)V removeVisitedCondition
LootTableInfo b (LMinecraftKey;)LLootItemCondition; getCondition
LootTableInfo b ()F getLuck
LootTableInfo c ()LWorldServer; getLevel
LootTableInfo$Builder a (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; set
LootTableInfo$Builder a (LLootContextParameterSet;)LLootTableInfo; build
LootTableInfo$Builder b (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; setOptional
LootTableInfo$Builder a level
LootTableInfo$Builder b params
LootTableInfo$Builder c dynamicDrops
LootTableInfo$Builder d random
LootTableInfo$Builder e luck
LootTableInfo$Builder b (LLootContextParameter;)Ljava/lang/Object; getOptionalParameter
LootTableInfo$EntityTarget a THIS
LootTableInfo$EntityTarget b KILLER
LootTableInfo$EntityTarget c DIRECT_KILLER
LootTableInfo$EntityTarget d KILLER_PLAYER
LootTableInfo$EntityTarget e name
LootTableInfo$EntityTarget f param
LootTableInfo$EntityTarget g $VALUES
LootTableInfo$EntityTarget values ()[LLootTableInfo$EntityTarget; values
LootTableInfo$EntityTarget valueOf (Ljava/lang/String;)LLootTableInfo$EntityTarget; valueOf
ICompletionProvider c (I)Z hasPermission
ICompletionProvider l ()Ljava/util/Collection; getOnlinePlayerNames
ICompletionProvider p ()Ljava/util/Collection; getSelectedEntities
ICompletionProvider m ()Ljava/util/Collection; getAllTeams
ICompletionProvider n ()Ljava/util/Collection; getAvailableSoundEvents
ICompletionProvider o ()Ljava/util/stream/Stream; getRecipeNames
ICompletionProvider q ()Ljava/util/Collection; getRelevantCoordinates
ICompletionProvider r ()Ljava/util/Collection; getAbsoluteCoordinates
ICompletionProvider b (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; suggest2DCoordinates
ICompletionProvider b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
ICompletionProvider b (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggest
ICompletionProvider b (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; suggest
ICompletionProvider b (LMinecraftKey;)LMinecraftKey; lambda$suggestResource$0
LootTable a EMPTY
LootTable a ()LLootContextParameterSet; getLootContextParameterSet
LootTable a (LIInventory;LLootTableInfo;)V fillInventory
LootTable a (LLootTableInfo;)Ljava/util/List; populateLoot
LootTable a (LLootTableInfo;Ljava/util/function/Consumer;)V populateLootDirect
LootTable b (LLootTableInfo;Ljava/util/function/Consumer;)V populateLoot
LootTable c LOGGER
LootTable b DEFAULT_PARAM_SET
LootTable d paramSet
LootTable e pools
LootTable f functions
LootTable g compositeFunction
LootTable b ()LLootTable$Builder; lootTable
LootTable c ()Lorg/apache/logging/log4j/Logger; access$200
LootTable b (LLootTable;)[LLootSelector; access$300
LootTable c (LLootTable;)[LLootItemFunction; access$400
LootTableRegistry a (LMinecraftKey;)LLootTable; getLootTable
LootTableRegistry a LOGGER
LootTableRegistry b GSON
LootTableRegistry c tables
LootTableRegistry d predicateManager
LootTableRegistry b (LLootCollector;LMinecraftKey;LLootTable;)V lambda$apply$1
LootItemFunctionCopyName$Source a THIS
LootItemFunctionCopyName$Source b KILLER
LootItemFunctionCopyName$Source c KILLER_PLAYER
LootItemFunctionCopyName$Source d BLOCK_ENTITY
LootItemFunctionCopyName$Source e name
LootItemFunctionCopyName$Source f param
LootItemFunctionCopyName$Source g $VALUES
LootItemFunctionCopyName$Source values ()[LLootItemFunctionCopyName$Source; values
LootItemFunctionCopyName$Source valueOf (Ljava/lang/String;)LLootItemFunctionCopyName$Source; valueOf
LootItemFunctionCopyNBT$Source a THIS
LootItemFunctionCopyNBT$Source b KILLER
LootItemFunctionCopyNBT$Source c KILLER_PLAYER
LootItemFunctionCopyNBT$Source d BLOCK_ENTITY
LootItemFunctionCopyNBT$Source e name
LootItemFunctionCopyNBT$Source f param
LootItemFunctionCopyNBT$Source g getter
LootItemFunctionCopyNBT$Source h $VALUES
LootItemFunctionCopyNBT$Source values ()[LLootItemFunctionCopyNBT$Source; values
LootItemFunctionCopyNBT$Source valueOf (Ljava/lang/String;)LLootItemFunctionCopyNBT$Source; valueOf
LootItemFunctionCopyNBT$Action a REPLACE
LootItemFunctionCopyNBT$Action b APPEND
LootItemFunctionCopyNBT$Action c MERGE
LootItemFunctionCopyNBT$Action d name
LootItemFunctionCopyNBT$Action e $VALUES
LootItemFunctionCopyNBT$Action values ()[LLootItemFunctionCopyNBT$Action; values
LootItemFunctionCopyNBT$Action valueOf (Ljava/lang/String;)LLootItemFunctionCopyNBT$Action; valueOf
LootContextParameterSets a EMPTY
LootContextParameterSets b CHEST
LootContextParameterSets c COMMAND
LootContextParameterSets d SELECTOR
LootContextParameterSets e FISHING
LootContextParameterSets f ENTITY
LootContextParameterSets g GIFT
LootContextParameterSets i ADVANCEMENT_REWARD
LootContextParameterSets j GENERIC
LootContextParameterSets k BLOCK
LootContextParameterSets l REGISTRY
LootContextParameterSets h PIGLIN_BARTER
LootContextParameterSets b (LLootContextParameterSet$Builder;)V lambda$static$9
LootContextParameterSets c (LLootContextParameterSet$Builder;)V lambda$static$8
LootContextParameterSets d (LLootContextParameterSet$Builder;)V lambda$static$7
LootContextParameterSets e (LLootContextParameterSet$Builder;)V lambda$static$6
LootContextParameterSets f (LLootContextParameterSet$Builder;)V lambda$static$5
LootContextParameterSets g (LLootContextParameterSet$Builder;)V lambda$static$4
LootContextParameterSets h (LLootContextParameterSet$Builder;)V lambda$static$3
LootContextParameterSets i (LLootContextParameterSet$Builder;)V lambda$static$2
LootContextParameterSets j (LLootContextParameterSet$Builder;)V lambda$static$1
LootContextParameterSets k (LLootContextParameterSet$Builder;)V lambda$static$0
LootContextParameters a THIS_ENTITY
LootContextParameters b LAST_DAMAGE_PLAYER
LootContextParameters c DAMAGE_SOURCE
LootContextParameters d KILLER_ENTITY
LootContextParameters e DIRECT_KILLER_ENTITY
LootContextParameters f POSITION
LootContextParameters g BLOCK_STATE
LootContextParameters h BLOCK_ENTITY
LootContextParameters i TOOL
LootContextParameters j EXPLOSION_RADIUS
AxisAlignedBB a minX
AxisAlignedBB b minY
AxisAlignedBB c minZ
AxisAlignedBB d maxX
AxisAlignedBB e maxY
AxisAlignedBB f maxZ
AxisAlignedBB c (DDD)LAxisAlignedBB; grow
AxisAlignedBB h (D)LAxisAlignedBB; shrink
AxisAlignedBB b (D)LAxisAlignedBB; setMinY
AxisAlignedBB c (D)LAxisAlignedBB; setMinZ
AxisAlignedBB d (D)LAxisAlignedBB; setMaxX
AxisAlignedBB e (D)LAxisAlignedBB; setMaxY
AxisAlignedBB f (D)LAxisAlignedBB; setMaxZ
AxisAlignedBB b (LEnumDirection$EnumAxis;)D max
AxisAlignedBB equals (Ljava/lang/Object;)Z equals
AxisAlignedBB hashCode ()I hashCode
AxisAlignedBB b (DDD)LAxisAlignedBB; expandTowards
AxisAlignedBB g (D)LAxisAlignedBB; inflate
AxisAlignedBB b (LAxisAlignedBB;)LAxisAlignedBB; minmax
AxisAlignedBB d (DDD)LAxisAlignedBB; move
AxisAlignedBB b (LVec3D;)LAxisAlignedBB; move
AxisAlignedBB b (LAxisAlignedBB;D)D clipYCollide
AxisAlignedBB c (LAxisAlignedBB;D)D clipZCollide
AxisAlignedBB c (LAxisAlignedBB;)Z intersects
AxisAlignedBB c (LVec3D;)Z contains
AxisAlignedBB e (DDD)Z contains
AxisAlignedBB b ()D getXsize
AxisAlignedBB c ()D getYsize
AxisAlignedBB d ()D getZsize
AxisAlignedBB f (DDD)LAxisAlignedBB; deflate
AxisAlignedBB b (LVec3D;LVec3D;)Ljava/util/Optional; clip
AxisAlignedBB toString ()Ljava/lang/String; toString
AxisAlignedBB e ()Z hasNaN
AxisAlignedBB f ()LVec3D; getCenter
MovingObjectPositionBlock a ()LBlockPosition; getBlockPosition
MovingObjectPositionBlock b ()LEnumDirection; getDirection
MovingObjectPositionBlock b direction
MovingObjectPositionBlock c blockPos
MovingObjectPositionBlock d miss
MovingObjectPositionBlock e inside
MovingObjectPositionBlock c ()LMovingObjectPosition$EnumMovingObjectType; getType
MovingObjectPositionBlock d ()Z isInside
MovingObjectPositionEntity a ()LEntity; getEntity
MovingObjectPositionEntity b entity
MovingObjectPositionEntity c ()LMovingObjectPosition$EnumMovingObjectType; getType
MovingObjectPosition a pos
MovingObjectPosition c ()LMovingObjectPosition$EnumMovingObjectType; getType
MovingObjectPosition e ()LVec3D; getPos
MovingObjectPosition$EnumMovingObjectType a MISS
MovingObjectPosition$EnumMovingObjectType b BLOCK
MovingObjectPosition$EnumMovingObjectType c ENTITY
MovingObjectPosition$EnumMovingObjectType d $VALUES
MovingObjectPosition$EnumMovingObjectType values ()[LMovingObjectPosition$EnumMovingObjectType; values
MovingObjectPosition$EnumMovingObjectType valueOf (Ljava/lang/String;)LMovingObjectPosition$EnumMovingObjectType; valueOf
Vec3D b x
Vec3D c y
Vec3D d z
Vec3D b (DDD)LVec3D; add
Vec3D g (LVec3D;)D distanceSquared
Vec3D a ZERO
Vec3D b (LBaseBlockPosition;)LVec3D; atLowerCornerOf
Vec3D c (LBaseBlockPosition;)LVec3D; atBottomCenterOf
Vec3D d ()LVec3D; normalize
Vec3D b (LVec3D;)D dot
Vec3D c (LVec3D;)LVec3D; cross
Vec3D d (LVec3D;)LVec3D; subtract
Vec3D e (LVec3D;)LVec3D; add
Vec3D f (LVec3D;)D distanceTo
Vec3D c (DDD)D distanceToSqr
Vec3D e ()LVec3D; reverse
Vec3D h (LVec3D;)LVec3D; multiply
Vec3D d (DDD)LVec3D; multiply
Vec3D f ()D length
Vec3D g ()D lengthSqr
Vec3D equals (Ljava/lang/Object;)Z equals
Vec3D hashCode ()I hashCode
Vec3D toString ()Ljava/lang/String; toString
Vec3D b (F)LVec3D; yRot
Vec3D c (F)LVec3D; zRot
Vec3D b ()D y
Vec3D c ()D z
OperatorBoolean a FALSE
OperatorBoolean b NOT_OR
OperatorBoolean c ONLY_SECOND
OperatorBoolean d NOT_FIRST
OperatorBoolean e ONLY_FIRST
OperatorBoolean f NOT_SECOND
OperatorBoolean g NOT_SAME
OperatorBoolean h NOT_AND
OperatorBoolean i AND
OperatorBoolean j SAME
OperatorBoolean k SECOND
OperatorBoolean l CAUSES
OperatorBoolean m FIRST
OperatorBoolean n CAUSED_BY
OperatorBoolean o OR
OperatorBoolean p TRUE
OperatorBoolean apply (ZZ)Z apply
OperatorBoolean b (ZZ)Z lambda$static$14
OperatorBoolean c (ZZ)Z lambda$static$13
OperatorBoolean d (ZZ)Z lambda$static$12
OperatorBoolean e (ZZ)Z lambda$static$11
OperatorBoolean f (ZZ)Z lambda$static$10
OperatorBoolean g (ZZ)Z lambda$static$9
OperatorBoolean h (ZZ)Z lambda$static$8
OperatorBoolean i (ZZ)Z lambda$static$7
OperatorBoolean j (ZZ)Z lambda$static$6
OperatorBoolean k (ZZ)Z lambda$static$5
OperatorBoolean l (ZZ)Z lambda$static$4
OperatorBoolean m (ZZ)Z lambda$static$3
OperatorBoolean n (ZZ)Z lambda$static$2
OperatorBoolean o (ZZ)Z lambda$static$1
OperatorBoolean p (ZZ)Z lambda$static$0
VoxelShapes a (DDDDDD)LVoxelShape; create
VoxelShapes b BLOCK
VoxelShapes a INFINITY
VoxelShapes c EMPTY
VoxelShapes b ()LVoxelShape; block
VoxelShapes b (LVoxelShape;LVoxelShape;LOperatorBoolean;)LVoxelShape; joinUnoptimized
VoxelShapes c (LVoxelShape;LVoxelShape;LOperatorBoolean;)Z joinIsNotEmpty
VoxelShapes b (LVoxelShape;LVoxelShape;LEnumDirection;)Z mergedFaceOccludes
VoxelShapes b (LVoxelShape;LVoxelShape;)Z faceShapeOccludes
VoxelShapes c ()LVoxelShapeCube; lambda$static$0
VoxelShape a ()LAxisAlignedBB; getBoundingBox
VoxelShape a (LVec3D;LVec3D;LBlockPosition;)LMovingObjectPositionBlock; rayTrace
VoxelShape b ()Z isEmpty
VoxelShape a shape
VoxelShape b faces
VoxelShape b (LEnumDirection$EnumAxis;)D min
VoxelShape c (LEnumDirection$EnumAxis;)D max
VoxelShape c ()LVoxelShape; optimize
VoxelShape b (LVoxelShapes$DoubleLineConsumer;)V forAllBoxes
VoxelShape d ()Ljava/util/List; toAabbs
VoxelShape b (LEnumDirection$EnumAxis;DD)D max
VoxelShape b (DDD)Z isFullWide
VoxelShape b (LEnumDirection;)LVoxelShape; calculateFace
VoxelShape toString ()Ljava/lang/String; toString
ScoreboardObjective d displayName
ScoreboardObjective a (LIChatBaseComponent;)V setDisplayName
ScoreboardObjective a (LIScoreboardCriteria$EnumScoreboardHealthDisplay;)V setRenderType
ScoreboardObjective b ()Ljava/lang/String; getName
ScoreboardObjective c ()LIScoreboardCriteria; getCriteria
ScoreboardObjective d ()LIChatBaseComponent; getDisplayName
ScoreboardObjective f ()LIScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
ScoreboardObjective a scoreboard
ScoreboardObjective b name
ScoreboardObjective c criteria
ScoreboardObjective e renderType
ScoreboardObjective e ()LIChatBaseComponent; getFormattedDisplayName
ScoreboardTeam a (LEnumChatFormat;)V setColor
ScoreboardTeam a (LIChatBaseComponent;)V setDisplayName
ScoreboardTeam a (LScoreboardTeamBase$EnumNameTagVisibility;)V setNameTagVisibility
ScoreboardTeam a (LScoreboardTeamBase$EnumTeamPush;)V setCollisionRule
ScoreboardTeam a (Z)V setAllowFriendlyFire
ScoreboardTeam b (LIChatBaseComponent;)V setPrefix
ScoreboardTeam b (LScoreboardTeamBase$EnumNameTagVisibility;)V setDeathMessageVisibility
ScoreboardTeam b (Z)V setCanSeeFriendlyInvisibles
ScoreboardTeam c ()LIChatBaseComponent; getDisplayName
ScoreboardTeam c (LIChatBaseComponent;)V setSuffix
ScoreboardTeam e ()LIChatBaseComponent; getPrefix
ScoreboardTeam f ()LIChatBaseComponent; getSuffix
ScoreboardTeam i ()Z canSeeFriendlyInvisibles
ScoreboardTeam j ()LScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
ScoreboardTeam m ()I packOptionData
ScoreboardTeam n ()LEnumChatFormat; getColor
ScoreboardTeam a scoreboard
ScoreboardTeam b name
ScoreboardTeam c players
ScoreboardTeam d displayName
ScoreboardTeam e playerPrefix
ScoreboardTeam f playerSuffix
ScoreboardTeam g allowFriendlyFire
ScoreboardTeam h seeFriendlyInvisibles
ScoreboardTeam i nameTagVisibility
ScoreboardTeam j deathMessageVisibility
ScoreboardTeam k color
ScoreboardTeam l collisionRule
ScoreboardTeam b ()Ljava/lang/String; getName
ScoreboardTeam d ()LIChatBaseComponent; getFormattedDisplayName
ScoreboardTeam g ()Ljava/util/Collection; getPlayers
ScoreboardTeam d (LIChatBaseComponent;)LIChatBaseComponent; getFormattedName
ScoreboardTeam h ()Z isAllowFriendlyFire
ScoreboardTeam k ()LScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
ScoreboardTeam l ()LScoreboardTeamBase$EnumTeamPush; getCollisionRule
ScoreboardScore d playerName
ScoreboardScore e score
ScoreboardScore a ()V incrementScore
ScoreboardScore a (I)V addScore
ScoreboardScore b ()I getScore
ScoreboardScore c (I)V setScore
ScoreboardScore d ()LScoreboardObjective; getObjective
ScoreboardScore e ()Ljava/lang/String; getPlayerName
ScoreboardScore a SCORE_COMPARATOR
ScoreboardScore b scoreboard
ScoreboardScore c objective
ScoreboardScore f locked
ScoreboardScore g forceUpdate
ScoreboardScore b (I)V remove
ScoreboardScore c ()V reset
ScoreboardScore f ()LScoreboard; getScoreboard
ScoreboardScore g ()Z isLocked
Scoreboard a objectivesByName
Scoreboard b objectivesByCriteria
Scoreboard c playerScores
Scoreboard d displaySlots
Scoreboard e teamsByName
Scoreboard f teamsByPlayer
Scoreboard a (I)LScoreboardObjective; getObjectiveForSlot
Scoreboard a (ILScoreboardObjective;)V setDisplaySlot
Scoreboard a (LIScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V getObjectivesForCriteria
Scoreboard a (LScoreboardObjective;)V handleObjectiveAdded
Scoreboard a (LScoreboardScore;)V handleScoreChanged
Scoreboard a (LScoreboardTeam;)V handleTeamAdded
Scoreboard a (Ljava/lang/String;)V handlePlayerRemoved
Scoreboard a (Ljava/lang/String;LIScoreboardCriteria;LIChatBaseComponent;LIScoreboardCriteria$EnumScoreboardHealthDisplay;)LScoreboardObjective; registerObjective
Scoreboard a (Ljava/lang/String;LScoreboardTeam;)Z addPlayerToTeam
Scoreboard b (I)Ljava/lang/String; getSlotName
Scoreboard b (LScoreboardObjective;)V handleObjectiveChanged
Scoreboard b (LScoreboardTeam;)V handleTeamChanged
Scoreboard b (Ljava/lang/String;LScoreboardTeam;)V removePlayerFromTeam
Scoreboard c ()Ljava/util/Collection; getObjectives
Scoreboard c (LScoreboardObjective;)V handleObjectiveRemoved
Scoreboard c (LScoreboardTeam;)V handleTeamRemoved
Scoreboard c (Ljava/lang/String;LScoreboardObjective;)LScoreboardScore; getPlayerScoreForObjective
Scoreboard d (LScoreboardTeam;)V removeTeam
Scoreboard d (Ljava/lang/String;)LScoreboardObjective; getObjective
Scoreboard d (Ljava/lang/String;LScoreboardObjective;)V resetPlayerScores
Scoreboard e ()Ljava/util/Collection; getPlayers
Scoreboard e (Ljava/lang/String;)Ljava/util/Map; getPlayerObjectives
Scoreboard f (Ljava/lang/String;)LScoreboardTeam; getTeam
Scoreboard g ()Ljava/util/Collection; getTeams
Scoreboard g (Ljava/lang/String;)LScoreboardTeam; createTeam
Scoreboard h (Ljava/lang/String;)Z removePlayerFromTeam
Scoreboard i (LScoreboardObjective;)Ljava/util/Collection; getScoresForObjective
Scoreboard i (Ljava/lang/String;)LScoreboardTeam; getPlayerTeam
Scoreboard j (LScoreboardObjective;)V unregisterObjective
Scoreboard j (Ljava/lang/String;)I getSlotForName
Scoreboard g displaySlotNames
Scoreboard b (Ljava/lang/String;)Z hasObjective
Scoreboard c (Ljava/lang/String;)LScoreboardObjective; getOrCreateObjective
Scoreboard b (Ljava/lang/String;LScoreboardObjective;)Z hasPlayerScore
Scoreboard d ()Ljava/util/Collection; getObjectiveNames
Scoreboard f ()Ljava/util/Collection; getTeamNames
Scoreboard h ()[Ljava/lang/String; getDisplaySlotNames
Scoreboard i ()LNBTTagList; savePlayerScores
Scoreboard b (LScoreboardScore;)Z lambda$null$4
Scoreboard e (Ljava/lang/String;LScoreboardObjective;)LScoreboardScore; lambda$getOrCreatePlayerScore$3
Scoreboard k (Ljava/lang/String;)Ljava/util/Map; lambda$getOrCreatePlayerScore$2
ScoreboardTeamBase a (LScoreboardTeamBase;)Z isAlly
ScoreboardTeamBase b ()Ljava/lang/String; getName
ScoreboardTeamBase d (LIChatBaseComponent;)LIChatBaseComponent; getFormattedName
ScoreboardTeamBase g ()Ljava/util/Collection; getPlayerNameSet
ScoreboardTeamBase h ()Z allowFriendlyFire
ScoreboardTeamBase k ()LScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
ScoreboardTeamBase l ()LScoreboardTeamBase$EnumTeamPush; getCollisionRule
ScoreboardTeamBase i ()Z canSeeFriendlyInvisibles
ScoreboardTeamBase j ()LScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
ScoreboardTeamBase n ()LEnumChatFormat; getColor
ScoreboardTeamBase$EnumTeamPush a ALWAYS
ScoreboardTeamBase$EnumTeamPush b NEVER
ScoreboardTeamBase$EnumTeamPush c PUSH_OTHER_TEAMS
ScoreboardTeamBase$EnumTeamPush d PUSH_OWN_TEAM
ScoreboardTeamBase$EnumTeamPush g BY_NAME
ScoreboardTeamBase$EnumTeamPush e name
ScoreboardTeamBase$EnumTeamPush f id
ScoreboardTeamBase$EnumTeamPush h $VALUES
ScoreboardTeamBase$EnumTeamPush values ()[LScoreboardTeamBase$EnumTeamPush; values
ScoreboardTeamBase$EnumTeamPush valueOf (Ljava/lang/String;)LScoreboardTeamBase$EnumTeamPush; valueOf
ScoreboardTeamBase$EnumTeamPush b ()LIChatBaseComponent; getDisplayName
ScoreboardTeamBase$EnumTeamPush b (LScoreboardTeamBase$EnumTeamPush;)Ljava/lang/String; lambda$static$0
ScoreboardTeamBase$EnumNameTagVisibility a ALWAYS
ScoreboardTeamBase$EnumNameTagVisibility b NEVER
ScoreboardTeamBase$EnumNameTagVisibility c HIDE_FOR_OTHER_TEAMS
ScoreboardTeamBase$EnumNameTagVisibility d HIDE_FOR_OWN_TEAM
ScoreboardTeamBase$EnumNameTagVisibility g BY_NAME
ScoreboardTeamBase$EnumNameTagVisibility e name
ScoreboardTeamBase$EnumNameTagVisibility f id
ScoreboardTeamBase$EnumNameTagVisibility h $VALUES
ScoreboardTeamBase$EnumNameTagVisibility values ()[LScoreboardTeamBase$EnumNameTagVisibility; values
ScoreboardTeamBase$EnumNameTagVisibility valueOf (Ljava/lang/String;)LScoreboardTeamBase$EnumNameTagVisibility; valueOf
ScoreboardTeamBase$EnumNameTagVisibility b ()LIChatBaseComponent; getDisplayName
ScoreboardTeamBase$EnumNameTagVisibility b (LScoreboardTeamBase$EnumNameTagVisibility;)Ljava/lang/String; lambda$static$0
IScoreboardCriteria a criteria
IScoreboardCriteria b DUMMY
IScoreboardCriteria c TRIGGER
IScoreboardCriteria d DEATH_COUNT
IScoreboardCriteria e PLAYER_KILL_COUNT
IScoreboardCriteria f TOTAL_KILL_COUNT
IScoreboardCriteria g HEALTH
IScoreboardCriteria h FOOD
IScoreboardCriteria i AIR
IScoreboardCriteria j ARMOR
IScoreboardCriteria k XP
IScoreboardCriteria l LEVEL
IScoreboardCriteria c ()Ljava/lang/String; getName
IScoreboardCriteria d ()Z isReadOnly
IScoreboardCriteria m TEAM_KILL
IScoreboardCriteria n KILLED_BY_TEAM
IScoreboardCriteria o name
IScoreboardCriteria p readOnly
IScoreboardCriteria q renderType
IScoreboardCriteria e ()LIScoreboardCriteria$EnumScoreboardHealthDisplay; getDefaultRenderType
IScoreboardCriteria$EnumScoreboardHealthDisplay a INTEGER
IScoreboardCriteria$EnumScoreboardHealthDisplay b HEARTS
IScoreboardCriteria$EnumScoreboardHealthDisplay c id
IScoreboardCriteria$EnumScoreboardHealthDisplay d BY_ID
IScoreboardCriteria$EnumScoreboardHealthDisplay e $VALUES
IScoreboardCriteria$EnumScoreboardHealthDisplay values ()[LIScoreboardCriteria$EnumScoreboardHealthDisplay; values
IScoreboardCriteria$EnumScoreboardHealthDisplay valueOf (Ljava/lang/String;)LIScoreboardCriteria$EnumScoreboardHealthDisplay; valueOf
ArgumentAnchor$Anchor a FEET
ArgumentAnchor$Anchor b EYES
ArgumentAnchor$Anchor c BY_NAME
ArgumentAnchor$Anchor d name
ArgumentAnchor$Anchor e transform
ArgumentAnchor$Anchor f $VALUES
ArgumentAnchor$Anchor values ()[LArgumentAnchor$Anchor; values
ArgumentAnchor$Anchor valueOf (Ljava/lang/String;)LArgumentAnchor$Anchor; valueOf
ArgumentAnchor$Anchor b (LVec3D;LEntity;)LVec3D; lambda$static$0
ArgumentEntity b ()LArgumentEntity; multipleEntities
ArgumentEntity g EXAMPLES
ArgumentEntity a ERROR_NOT_SINGLE_ENTITY
ArgumentEntity b ERROR_NOT_SINGLE_PLAYER
ArgumentEntity c ERROR_ONLY_PLAYERS_ALLOWED
ArgumentEntity d NO_ENTITIES_FOUND
ArgumentEntity e NO_PLAYERS_FOUND
ArgumentEntity f ERROR_SELECTORS_NOT_ALLOWED
ArgumentEntity h single
ArgumentEntity i playersOnly
ArgumentEntity b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getEntities
ArgumentEntity c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalEntities
ArgumentEntity d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getOptionalPlayers
ArgumentEntity c ()LArgumentEntity; player
ArgumentEntity e (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)LEntityPlayer; getPlayer
ArgumentEntity d ()LArgumentEntity; players
ArgumentEntity f (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getPlayers
ArgumentEntity listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentEntity getExamples ()Ljava/util/Collection; getExamples
ArgumentEntity parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentEntity b (LArgumentEntity;)Z access$100
ArgumentBlock a ()Ljava/util/Map; getStateMap
ArgumentBlock b ()LIBlockData; getBlockData
ArgumentBlock a ERROR_NO_TAGS_ALLOWED
ArgumentBlock b ERROR_UNKNOWN_BLOCK
ArgumentBlock c ERROR_UNKNOWN_PROPERTY
ArgumentBlock d ERROR_DUPLICATE_PROPERTY
ArgumentBlock e ERROR_INVALID_VALUE
ArgumentBlock f ERROR_EXPECTED_VALUE
ArgumentBlock g ERROR_EXPECTED_END_OF_PROPERTIES
ArgumentBlock h SUGGEST_NOTHING
ArgumentBlock i reader
ArgumentBlock j forTesting
ArgumentBlock k properties
ArgumentBlock l vagueProperties
ArgumentBlock m id
ArgumentBlock n definition
ArgumentBlock o state
ArgumentBlock p nbt
ArgumentBlock q tag
ArgumentBlock r tagCursor
ArgumentBlock s suggestions
ArgumentBlock c ()LNBTTagCompound; getNbt
ArgumentBlock d ()LMinecraftKey; getTag
ArgumentBlock b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyNameOrEnd
ArgumentBlock c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyNameOrEnd
ArgumentBlock d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestPropertyName
ArgumentBlock e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestVaguePropertyName
ArgumentBlock f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
ArgumentBlock k ()Z hasBlockEntity
ArgumentBlock g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestEquals
ArgumentBlock h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestNextPropertyOrEnd
ArgumentBlock i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenVaguePropertiesOrNbt
ArgumentBlock j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenPropertiesOrNbt
ArgumentBlock k (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
ArgumentBlock l (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestBlockIdOrTag
ArgumentBlock e ()V readBlock
ArgumentBlock f ()V readTag
ArgumentBlock g ()V readProperties
ArgumentBlock h ()V readVagueProperties
ArgumentBlock i ()V readNbt
ArgumentBlock j ()Ljava/util/Map; getVagueProperties
ArgumentBlock b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
ArgumentBlock c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
EntitySelector m checkPermissions
EntitySelector b (LCommandListenerWrapper;)Ljava/util/List; getEntities
EntitySelector a maxResults
EntitySelector b includesEntities
EntitySelector c worldLimited
EntitySelector d predicate
EntitySelector e range
EntitySelector f position
EntitySelector g aabb
EntitySelector h order
EntitySelector i currentEntity
EntitySelector j playerName
EntitySelector k entityUUID
EntitySelector l type
EntitySelector b ()Z includesEntities
EntitySelector c ()Z isSelfSelector
EntitySelector d ()Z isWorldLimited
EntitySelector e ()Z usesSelector
EntitySelector e (LCommandListenerWrapper;)V checkPermissions
EntitySelector c (LCommandListenerWrapper;)LEntityPlayer; findSinglePlayer
EntitySelector d (LCommandListenerWrapper;)Ljava/util/List; findPlayers
ArgumentParserSelector T checkPermissions
ArgumentParserSelector b ()V parseSelector
ArgumentParserSelector t ()LEntitySelector; parse
ArgumentParserSelector a ERROR_INVALID_NAME_OR_UUID
ArgumentParserSelector b ERROR_UNKNOWN_SELECTOR_TYPE
ArgumentParserSelector c ERROR_SELECTORS_NOT_ALLOWED
ArgumentParserSelector d ERROR_MISSING_SELECTOR_TYPE
ArgumentParserSelector e ERROR_EXPECTED_END_OF_OPTIONS
ArgumentParserSelector f ERROR_EXPECTED_OPTION_VALUE
ArgumentParserSelector g ORDER_ARBITRARY
ArgumentParserSelector h ORDER_NEAREST
ArgumentParserSelector i ORDER_FURTHEST
ArgumentParserSelector j ORDER_RANDOM
ArgumentParserSelector k SUGGEST_NOTHING
ArgumentParserSelector l reader
ArgumentParserSelector m allowSelectors
ArgumentParserSelector n maxResults
ArgumentParserSelector o includesEntities
ArgumentParserSelector p worldLimited
ArgumentParserSelector q distance
ArgumentParserSelector r level
ArgumentParserSelector s x
ArgumentParserSelector t y
ArgumentParserSelector u z
ArgumentParserSelector v deltaX
ArgumentParserSelector w deltaY
ArgumentParserSelector x deltaZ
ArgumentParserSelector y rotX
ArgumentParserSelector z rotY
ArgumentParserSelector A predicate
ArgumentParserSelector B order
ArgumentParserSelector C currentEntity
ArgumentParserSelector D playerName
ArgumentParserSelector E startPosition
ArgumentParserSelector F entityUUID
ArgumentParserSelector G suggestions
ArgumentParserSelector H hasNameEquals
ArgumentParserSelector I hasNameNotEquals
ArgumentParserSelector J isLimited
ArgumentParserSelector K isSorted
ArgumentParserSelector L hasGamemodeEquals
ArgumentParserSelector M hasGamemodeNotEquals
ArgumentParserSelector N hasTeamEquals
ArgumentParserSelector O hasTeamNotEquals
ArgumentParserSelector P type
ArgumentParserSelector Q typeInverse
ArgumentParserSelector R hasScores
ArgumentParserSelector S hasAdvancements
ArgumentParserSelector I ()V finalizePredicates
ArgumentParserSelector c ()V parseNameOrUUID
ArgumentParserSelector d ()V parseOptions
ArgumentParserSelector e ()Z shouldInvertValue
ArgumentParserSelector f ()Z isTag
ArgumentParserSelector g ()Lcom/mojang/brigadier/StringReader; getReader
ArgumentParserSelector h ()V setWorldLimited
ArgumentParserSelector i ()LCriterionConditionValue$FloatRange; getDistance
ArgumentParserSelector j ()LCriterionConditionValue$IntegerRange; getLevel
ArgumentParserSelector k ()LCriterionConditionRange; getRotX
ArgumentParserSelector l ()LCriterionConditionRange; getRotY
ArgumentParserSelector b (LCriterionConditionRange;)V setRotY
ArgumentParserSelector m ()Ljava/lang/Double; getX
ArgumentParserSelector n ()Ljava/lang/Double; getY
ArgumentParserSelector o ()Ljava/lang/Double; getZ
ArgumentParserSelector b (D)V setY
ArgumentParserSelector c (D)V setZ
ArgumentParserSelector d (D)V setDeltaX
ArgumentParserSelector e (D)V setDeltaY
ArgumentParserSelector f (D)V setDeltaZ
ArgumentParserSelector p ()Ljava/lang/Double; getDeltaX
ArgumentParserSelector q ()Ljava/lang/Double; getDeltaY
ArgumentParserSelector r ()Ljava/lang/Double; getDeltaZ
ArgumentParserSelector s ()Ljava/util/function/BiConsumer; getOrder
ArgumentParserSelector b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestNameOrSelector
ArgumentParserSelector c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestName
ArgumentParserSelector d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestSelector
ArgumentParserSelector e (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOpenOptions
ArgumentParserSelector f (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKeyOrClose
ArgumentParserSelector g (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsKey
ArgumentParserSelector h (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestOptionsNextOrClose
ArgumentParserSelector i (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; suggestEquals
ArgumentParserSelector u ()Z isCurrentEntity
ArgumentParserSelector b (Z)V setCurrentEntity
ArgumentParserSelector v ()Z hasNameEquals
ArgumentParserSelector c (Z)V setHasNameEquals
ArgumentParserSelector w ()Z hasNameNotEquals
ArgumentParserSelector d (Z)V setHasNameNotEquals
ArgumentParserSelector x ()Z isLimited
ArgumentParserSelector e (Z)V setLimited
ArgumentParserSelector y ()Z isSorted
ArgumentParserSelector f (Z)V setSorted
ArgumentParserSelector z ()Z hasGamemodeEquals
ArgumentParserSelector g (Z)V setHasGamemodeEquals
ArgumentParserSelector A ()Z hasGamemodeNotEquals
ArgumentParserSelector h (Z)V setHasGamemodeNotEquals
ArgumentParserSelector B ()Z hasTeamEquals
ArgumentParserSelector i (Z)V setHasTeamEquals
ArgumentParserSelector C ()Z hasTeamNotEquals
ArgumentParserSelector j (Z)V setHasTeamNotEquals
ArgumentParserSelector D ()V setTypeLimitedInversely
ArgumentParserSelector E ()Z isTypeLimited
ArgumentParserSelector F ()Z isTypeLimitedInversely
ArgumentParserSelector G ()Z hasScores
ArgumentParserSelector k (Z)V setHasScores
ArgumentParserSelector H ()Z hasAdvancements
ArgumentParserSelector l (Z)V setHasAdvancements
ArgumentParserSelector b (LEntity;)D lambda$finalizePredicates$13
ArgumentParserSelector c (LEntity;)D lambda$finalizePredicates$12
ArgumentParserSelector b (LVec3D;)LVec3D; lambda$getSelector$10
ArgumentParserSelector d (LEntity;)Z lambda$new$9
ArgumentParserSelector j (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$static$8
ArgumentParserSelector b (LVec3D;Ljava/util/List;)V lambda$static$6
ArgumentParserSelector c (LVec3D;Ljava/util/List;)V lambda$static$4
ArgumentParserSelector b (LVec3D;LEntity;LEntity;)I lambda$null$3
ArgumentParserSelector d (LVec3D;Ljava/util/List;)V lambda$static$2
ArgumentParserSelector b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
EnumAxisCycle a NONE
EnumAxisCycle b FORWARD
EnumAxisCycle c BACKWARD
EnumAxisCycle d AXIS_VALUES
EnumAxisCycle e VALUES
EnumAxisCycle f $VALUES
EnumAxisCycle values ()[LEnumAxisCycle; values
EnumAxisCycle valueOf (Ljava/lang/String;)LEnumAxisCycle; valueOf
BlockPosition a ZERO
BlockPosition a ()J asLong
BlockPosition a (LEnumDirection;)LBlockPosition; shift
BlockPosition b ()LBlockPosition; up
BlockPosition b (I)LBlockPosition; up
BlockPosition d ()LBlockPosition; north
BlockPosition d (I)LBlockPosition; north
BlockPosition e ()LBlockPosition; south
BlockPosition e (I)LBlockPosition; south
BlockPosition e (J)LBlockPosition; fromLong
BlockPosition f ()LBlockPosition; west
BlockPosition f (I)LBlockPosition; west
BlockPosition g ()LBlockPosition; east
BlockPosition g (I)LBlockPosition; east
BlockPosition h ()LBlockPosition; immutableCopy
BlockPosition c LOGGER
BlockPosition d PACKED_X_LENGTH
BlockPosition e PACKED_Z_LENGTH
BlockPosition f PACKED_Y_LENGTH
BlockPosition g PACKED_X_MASK
BlockPosition h PACKED_Y_MASK
BlockPosition i PACKED_Z_MASK
BlockPosition j Z_OFFSET
BlockPosition k X_OFFSET
BlockPosition b (J)I getX
BlockPosition c (J)I getY
BlockPosition d (J)I getZ
BlockPosition f (J)J getFlatIndex
BlockPosition b (III)LBlockPosition; offset
BlockPosition b (LBaseBlockPosition;)LBlockPosition; subtract
BlockPosition c ()LBlockPosition; below
BlockPosition c (I)LBlockPosition; below
BlockPosition c (LBaseBlockPosition;)LBlockPosition; cross
BlockPosition i ()LBlockPosition$MutableBlockPosition; mutable
BlockPosition b (LBlockPosition;III)Ljava/util/stream/Stream; withinManhattanStream
BlockPosition b (LBlockPosition;LBlockPosition;)Ljava/util/stream/Stream; betweenClosedStream
BlockPosition b (IIIIII)Ljava/lang/Iterable; betweenClosed
BlockPosition d (LBaseBlockPosition;)LBaseBlockPosition; cross
BlockPosition b (LEnumDirection$EnumAxis;I)LBaseBlockPosition; relative
BlockPosition b (LEnumDirection;I)LBaseBlockPosition; relative
BlockPosition b (LEnumDirection;)LBaseBlockPosition; relative
BlockPosition h (I)LBaseBlockPosition; east
BlockPosition j ()LBaseBlockPosition; east
BlockPosition i (I)LBaseBlockPosition; west
BlockPosition k ()LBaseBlockPosition; west
BlockPosition j (I)LBaseBlockPosition; south
BlockPosition l ()LBaseBlockPosition; south
BlockPosition k (I)LBaseBlockPosition; north
BlockPosition m ()LBaseBlockPosition; north
BlockPosition l (I)LBaseBlockPosition; below
BlockPosition n ()LBaseBlockPosition; below
BlockPosition m (I)LBaseBlockPosition; above
BlockPosition o ()LBaseBlockPosition; above
BlockPosition n (I)LBaseBlockPosition; multiply
BlockPosition e (LBaseBlockPosition;)LBaseBlockPosition; subtract
BlockPosition f (LBaseBlockPosition;)LBaseBlockPosition; offset
BlockPosition c (III)LBaseBlockPosition; offset
BlockPosition b (DDD)LBaseBlockPosition; offset
BlockPosition c (IIIIII)Ljava/util/Iterator; lambda$betweenClosed$4
BlockPosition b ([II)V lambda$deserialize$1
BlockPosition c ([II)V lambda$deserialize$0
ISourceBlock d ()LBlockPosition; getBlockPosition
ISourceBlock e ()LIBlockData; getBlockData
ISourceBlock g ()LTileEntity; getTileEntity
ISourceBlock b ()D y
ISourceBlock c ()D z
ISourceBlock f ()LMaterial; getMaterial
EnumDirection a DOWN
EnumDirection b UP
EnumDirection c NORTH
EnumDirection d SOUTH
EnumDirection e WEST
EnumDirection f EAST
EnumDirection a (D)LEnumDirection; fromAngle
EnumDirection a (I)LEnumDirection; fromType1
EnumDirection b (I)LEnumDirection; fromType2
EnumDirection c ()I get2DRotationValue
EnumDirection e ()LEnumDirection; opposite
EnumDirection h ()I getAdjacentX
EnumDirection i ()I getAdjacentY
EnumDirection j ()I getAdjacentZ
EnumDirection g data3d
EnumDirection h oppositeIndex
EnumDirection i data2d
EnumDirection j name
EnumDirection k axis
EnumDirection l axisDirection
EnumDirection m normal
EnumDirection n VALUES
EnumDirection o BY_NAME
EnumDirection p BY_3D_DATA
EnumDirection q BY_2D_DATA
EnumDirection r BY_NORMAL
EnumDirection s $VALUES
EnumDirection values ()[LEnumDirection; values
EnumDirection valueOf (Ljava/lang/String;)LEnumDirection; valueOf
EnumDirection b ()I get3DDataValue
EnumDirection d ()LEnumDirection$EnumAxisDirection; getAxisDirection
EnumDirection b (LEnumDirection$EnumAxis;)LEnumDirection; getCounterClockWise
EnumDirection f ()LEnumDirection; getClockWise
EnumDirection q ()LEnumDirection; getClockWiseX
EnumDirection r ()LEnumDirection; getCounterClockWiseX
EnumDirection s ()LEnumDirection; getClockWiseZ
EnumDirection t ()LEnumDirection; getCounterClockWiseZ
EnumDirection g ()LEnumDirection; getCounterClockWise
EnumDirection k ()LVector3fa; step
EnumDirection l ()Ljava/lang/String; getName
EnumDirection m ()LEnumDirection$EnumAxis; getAxis
EnumDirection n ()F toYRot
EnumDirection toString ()Ljava/lang/String; toString
EnumDirection o ()Ljava/lang/String; getSerializedName
EnumDirection p ()LBaseBlockPosition; getNormal
EnumDirection b (LEnumDirection;)Ljava/lang/Long; lambda$static$6
EnumDirection c (I)[LEnumDirection; lambda$static$5
EnumDirection c (LEnumDirection;)I lambda$static$4
EnumDirection d (LEnumDirection;)Z lambda$static$3
EnumDirection d (I)[LEnumDirection; lambda$static$2
EnumDirection e (LEnumDirection;)I lambda$static$1
EnumDirection f (LEnumDirection;)LEnumDirection; lambda$static$0
EnumDirection$EnumAxis a X
EnumDirection$EnumAxis b Y
EnumDirection$EnumAxis c Z
EnumDirection$EnumAxis d BY_NAME
EnumDirection$EnumAxis e name
EnumDirection$EnumAxis f $VALUES
EnumDirection$EnumAxis values ()[LEnumDirection$EnumAxis; values
EnumDirection$EnumAxis valueOf (Ljava/lang/String;)LEnumDirection$EnumAxis; valueOf
EnumDirection$EnumAxis b ()Z isVertical
EnumDirection$EnumAxis c ()Z isHorizontal
EnumDirection$EnumAxis toString ()Ljava/lang/String; toString
EnumDirection$EnumAxis d ()LEnumDirection$EnumDirectionLimit; getPlane
EnumDirection$EnumAxis o ()Ljava/lang/String; getSerializedName
EnumDirection$EnumAxis test (Ljava/lang/Object;)Z test
EnumDirection$EnumAxisDirection a POSITIVE
EnumDirection$EnumAxisDirection b NEGATIVE
EnumDirection$EnumAxisDirection c step
EnumDirection$EnumAxisDirection d name
EnumDirection$EnumAxisDirection e $VALUES
EnumDirection$EnumAxisDirection values ()[LEnumDirection$EnumAxisDirection; values
EnumDirection$EnumAxisDirection valueOf (Ljava/lang/String;)LEnumDirection$EnumAxisDirection; valueOf
EnumDirection$EnumAxisDirection b ()Ljava/lang/String; getName
EnumDirection$EnumAxisDirection toString ()Ljava/lang/String; toString
EnumDirection$EnumDirectionLimit a HORIZONTAL
EnumDirection$EnumDirectionLimit b VERTICAL
EnumDirection$EnumDirectionLimit c faces
EnumDirection$EnumDirectionLimit d axis
EnumDirection$EnumDirectionLimit e $VALUES
EnumDirection$EnumDirectionLimit values ()[LEnumDirection$EnumDirectionLimit; values
EnumDirection$EnumDirectionLimit valueOf (Ljava/lang/String;)LEnumDirection$EnumDirectionLimit; valueOf
EnumDirection$EnumDirectionLimit b (Ljava/util/Random;)LEnumDirection$EnumAxis; getRandomAxis
EnumDirection$EnumDirectionLimit iterator ()Ljava/util/Iterator; iterator
EnumDirection$EnumDirectionLimit test (Ljava/lang/Object;)Z test
EnumDirection8 a NORTH
EnumDirection8 b NORTH_EAST
EnumDirection8 c EAST
EnumDirection8 d SOUTH_EAST
EnumDirection8 e SOUTH
EnumDirection8 f SOUTH_WEST
EnumDirection8 g WEST
EnumDirection8 h NORTH_WEST
EnumDirection8 i NORTH_WEST_MASK
EnumDirection8 j WEST_MASK
EnumDirection8 k SOUTH_WEST_MASK
EnumDirection8 l SOUTH_MASK
EnumDirection8 m SOUTH_EAST_MASK
EnumDirection8 n EAST_MASK
EnumDirection8 o NORTH_EAST_MASK
EnumDirection8 p NORTH_MASK
EnumDirection8 q directions
EnumDirection8 r $VALUES
EnumDirection8 values ()[LEnumDirection8; values
EnumDirection8 valueOf (Ljava/lang/String;)LEnumDirection8; valueOf
GlobalPos a dimensionManager
GlobalPos b blockPosition
GlobalPos a ()LDimensionManager; getDimensionManager
GlobalPos a (LDimensionManager;LBlockPosition;)LGlobalPos; create
GlobalPos b ()LBlockPosition; getBlockPosition
GlobalPos equals (Ljava/lang/Object;)Z equals
GlobalPos hashCode ()I hashCode
GlobalPos toString ()Ljava/lang/String; toString
GlobalPos c ()Ljava/lang/IllegalArgumentException; lambda$of$2
GlobalPos b (LDimensionManager;LBlockPosition;)LGlobalPos; lambda$null$0
Registry a (I)Ljava/lang/Object; fromId
RegistryBlockID a (I)Ljava/lang/Object; fromId
RegistryBlockID a (Ljava/lang/Object;)I getId
RegistryBlockID a nextId
RegistryBlockID b tToId
RegistryBlockID c idToT
RegistryBlockID b (Ljava/lang/Object;)V add
RegistryBlockID iterator ()Ljava/util/Iterator; iterator
RegistryBlockID b (I)Z contains
ISource h ()LWorld; getWorld
IPosition a ()D getX
IPosition b ()D getY
IPosition c ()D getZ
EnumChatFormat a BLACK
EnumChatFormat b DARK_BLUE
EnumChatFormat c DARK_GREEN
EnumChatFormat d DARK_AQUA
EnumChatFormat e DARK_RED
EnumChatFormat f DARK_PURPLE
EnumChatFormat g GOLD
EnumChatFormat h GRAY
EnumChatFormat i DARK_GRAY
EnumChatFormat j BLUE
EnumChatFormat k GREEN
EnumChatFormat l AQUA
EnumChatFormat m RED
EnumChatFormat n LIGHT_PURPLE
EnumChatFormat o YELLOW
EnumChatFormat p WHITE
EnumChatFormat q OBFUSCATED
EnumChatFormat r BOLD
EnumChatFormat s STRIKETHROUGH
EnumChatFormat t UNDERLINE
EnumChatFormat u ITALIC
EnumChatFormat v RESET
EnumChatFormat z character
EnumChatFormat c ()Z isFormat
EnumChatFormat w FORMATTING_BY_NAME
EnumChatFormat x STRIP_FORMATTING_PATTERN
EnumChatFormat y name
EnumChatFormat A isFormat
EnumChatFormat B toString
EnumChatFormat C id
EnumChatFormat D color
EnumChatFormat E $VALUES
EnumChatFormat values ()[LEnumChatFormat; values
EnumChatFormat valueOf (Ljava/lang/String;)LEnumChatFormat; valueOf
EnumChatFormat d (Ljava/lang/String;)Ljava/lang/String; cleanName
EnumChatFormat b ()I getId
EnumChatFormat d ()Z isColor
EnumChatFormat e ()Ljava/lang/Integer; getColor
EnumChatFormat f ()Z shouldReset
EnumChatFormat g ()Ljava/lang/String; getName
EnumChatFormat toString ()Ljava/lang/String; toString
EnumChatFormat b (Ljava/lang/String;)Ljava/lang/String; stripFormatting
EnumChatFormat c (Ljava/lang/String;)LEnumChatFormat; getByName
EnumChatFormat b (LEnumChatFormat;)Ljava/lang/String; lambda$static$0
IRegistry A CHUNK_GENERATOR_TYPE
IRegistry B DIMENSION_TYPE
IRegistry C MOTIVE
IRegistry D CUSTOM_STAT
IRegistry E CHUNK_STATUS
IRegistry F STRUCTURE_FEATURE
IRegistry G STRUCTURE_PIECE
IRegistry H RULE_TEST
IRegistry I STRUCTURE_PROCESSOR
IRegistry J STRUCTURE_POOL_ELEMENT
IRegistry K MENU
IRegistry L RECIPE_TYPE
IRegistry M RECIPE_SERIALIZER
IRegistry N STATS
IRegistry O VILLAGER_TYPE
IRegistry P VILLAGER_PROFESSION
IRegistry Q POINT_OF_INTEREST_TYPE
IRegistry R MEMORY_MODULE_TYPE
IRegistry S SENSOR_TYPE
IRegistry T SCHEDULE
IRegistry U ACTIVITY
IRegistry g SOUND_EVENT
IRegistry h FLUID
IRegistry i MOB_EFFECT
IRegistry j BLOCK
IRegistry k ENCHANTMENT
IRegistry l ENTITY_TYPE
IRegistry m ITEM
IRegistry n POTION
IRegistry o CARVER
IRegistry p SURFACE_BUILDER
IRegistry q FEATURE
IRegistry r DECORATOR
IRegistry s BIOME
IRegistry x PARTICLE_TYPE
IRegistry y BIOME_SOURCE_TYPE
IRegistry z BLOCK_ENTITY_TYPE
IRegistry a (LMinecraftKey;)Ljava/lang/Object; get
IRegistry b ()Ljava/util/Set; keySet
IRegistry b (LMinecraftKey;)Ljava/util/Optional; getOptional
IRegistry b (Ljava/lang/Object;)LMinecraftKey; getKey
IRegistry e LOGGER
IRegistry a LOADERS
IRegistry f REGISTRY
IRegistry t BLOCKSTATE_PROVIDER_TYPES
IRegistry u BLOCK_PLACER_TYPES
IRegistry v FOLIAGE_PLACER_TYPES
IRegistry w TREE_DECORATOR_TYPES
IRegistry d ()Ljava/util/stream/Stream; stream
IRegistry c (LMinecraftKey;)Z containsKey
IRegistry b (I)Z containsId
IRegistry c ()LSchedule; lambda$static$39
IRegistry e ()LSensorType; lambda$static$38
IRegistry f ()LMemoryModuleType; lambda$static$37
IRegistry g ()LPointOfInterestType; lambda$static$36
IRegistry h ()LVillagerProfession; lambda$static$35
IRegistry i ()LVillagerType; lambda$static$34
IRegistry j ()LStatisticWrapper; lambda$static$33
IRegistry k ()LRecipeSerializer; lambda$static$32
IRegistry l ()LRecipes; lambda$static$31
IRegistry m ()LContainers; lambda$static$30
IRegistry n ()LWorldGenFeatureDefinedStructurePools; lambda$static$29
IRegistry o ()LDefinedStructureStructureProcessorType; lambda$static$28
IRegistry p ()LDefinedStructureRuleTestType; lambda$static$27
IRegistry q ()LWorldGenFeatureStructurePieceType; lambda$static$26
IRegistry r ()LStructureGenerator; lambda$static$25
IRegistry s ()LChunkStatus; lambda$static$24
IRegistry t ()LMinecraftKey; lambda$static$23
IRegistry u ()LPaintings; lambda$static$22
IRegistry v ()LDimensionManager; lambda$static$21
IRegistry w ()LChunkGeneratorType; lambda$static$20
IRegistry x ()LTileEntityTypes; lambda$static$19
IRegistry y ()LBiomeLayout; lambda$static$18
IRegistry z ()LParticle; lambda$static$17
IRegistry A ()LWorldGenFeatureTrees; lambda$static$16
IRegistry B ()LWorldGenFoilagePlacers; lambda$static$15
IRegistry C ()LWorldGenBlockPlacers; lambda$static$14
IRegistry D ()LWorldGenFeatureStateProviders; lambda$static$13
IRegistry E ()LBiomeBase; lambda$static$12
IRegistry F ()LWorldGenDecorator; lambda$static$11
IRegistry G ()LWorldGenerator; lambda$static$10
IRegistry H ()LWorldGenSurface; lambda$static$9
IRegistry I ()LWorldGenCarverAbstract; lambda$static$8
IRegistry J ()LPotionRegistry; lambda$static$7
IRegistry K ()LItem; lambda$static$6
IRegistry L ()LEntityTypes; lambda$static$5
IRegistry M ()LEnchantment; lambda$static$4
IRegistry N ()LBlock; lambda$static$3
IRegistry O ()LMobEffectList; lambda$static$2
IRegistry P ()LFluidType; lambda$static$1
IRegistry Q ()LSoundEffect; lambda$static$0
Vector3f a x
Vector3f b y
Vector3f c z
Vector3f b ()F getX
Vector3f c ()F getY
Vector3f d ()F getZ
Vector3f equals (Ljava/lang/Object;)Z equals
Vector3f e ()F getWrappedX
Vector3f f ()F getWrappedY
Vector3f g ()F getWrappedZ
BaseBlockPosition b ZERO
BaseBlockPosition a (DDDZ)D distanceSquared
BaseBlockPosition b (LEnumDirection;I)LBaseBlockPosition; shift
BaseBlockPosition l (I)LBaseBlockPosition; down
BaseBlockPosition n ()LBaseBlockPosition; down
BaseBlockPosition u ()I getX
BaseBlockPosition v ()I getY
BaseBlockPosition w ()I getZ
BaseBlockPosition a x
BaseBlockPosition c y
BaseBlockPosition d z
BaseBlockPosition equals (Ljava/lang/Object;)Z equals
BaseBlockPosition hashCode ()I hashCode
BaseBlockPosition i (LBaseBlockPosition;)I compareTo
BaseBlockPosition o (I)V setX
BaseBlockPosition p (I)V setY
BaseBlockPosition q (I)V setZ
BaseBlockPosition b (DDD)LBaseBlockPosition; offset
BaseBlockPosition c (III)LBaseBlockPosition; offset
BaseBlockPosition f (LBaseBlockPosition;)LBaseBlockPosition; offset
BaseBlockPosition e (LBaseBlockPosition;)LBaseBlockPosition; subtract
BaseBlockPosition n (I)LBaseBlockPosition; multiply
BaseBlockPosition o ()LBaseBlockPosition; above
BaseBlockPosition m (I)LBaseBlockPosition; above
BaseBlockPosition m ()LBaseBlockPosition; north
BaseBlockPosition k (I)LBaseBlockPosition; north
BaseBlockPosition l ()LBaseBlockPosition; south
BaseBlockPosition j (I)LBaseBlockPosition; south
BaseBlockPosition k ()LBaseBlockPosition; west
BaseBlockPosition i (I)LBaseBlockPosition; west
BaseBlockPosition j ()LBaseBlockPosition; east
BaseBlockPosition h (I)LBaseBlockPosition; east
BaseBlockPosition b (LEnumDirection;)LBaseBlockPosition; relative
BaseBlockPosition b (LEnumDirection$EnumAxis;I)LBaseBlockPosition; relative
BaseBlockPosition d (LBaseBlockPosition;)LBaseBlockPosition; cross
BaseBlockPosition j (LBaseBlockPosition;)D distSqr
BaseBlockPosition k (LBaseBlockPosition;)I distManhattan
BaseBlockPosition toString ()Ljava/lang/String; toString
BaseBlockPosition x ()Ljava/lang/String; toShortString
BaseBlockPosition compareTo (Ljava/lang/Object;)I compareTo
DispenseBehaviorProjectile b ()F getPower
IDispenseBehavior a NONE
IDispenseBehavior dispense (LISourceBlock;LItemStack;)LItemStack; dispense
IDispenseBehavior c ()V bootStrap
DispenseBehaviorMaybe b dispensed
ParticleParam b ()LParticle; getParticle
Particles A FLAME
Particles D FLASH
Particles E HAPPY_VILLAGER
Particles F COMPOSTER
Particles G HEART
Particles H INSTANT_EFFECT
Particles I ITEM
Particles J ITEM_SLIME
Particles K ITEM_SNOWBALL
Particles L LARGE_SMOKE
Particles M LAVA
Particles N MYCELIUM
Particles O NOTE
Particles P POOF
Particles Q PORTAL
Particles R RAIN
Particles S SMOKE
Particles T SNEEZE
Particles U SPIT
Particles V SQUID_INK
Particles W SWEEP_ATTACK
Particles X TOTEM_OF_UNDYING
Particles Y UNDERWATER
Particles Z SPLASH
Particles aa WITCH
Particles ab BUBBLE_POP
Particles a AMBIENT_ENTITY_EFFECT
Particles ac CURRENT_DOWN
Particles ad BUBBLE_COLUMN_UP
Particles ae NAUTILUS
Particles af DOLPHIN
Particles ag CAMPFIRE_COSY_SMOKE
Particles ah CAMPFIRE_SIGNAL_SMOKE
Particles ai DRIPPING_HONEY
Particles aj FALLING_HONEY
Particles ak LANDING_HONEY
Particles al FALLING_NECTAR
Particles b ANGRY_VILLAGER
Particles c BARRIER
Particles d BLOCK
Particles e BUBBLE
Particles f CLOUD
Particles g CRIT
Particles h DAMAGE_INDICATOR
Particles i DRAGON_BREATH
Particles j DRIPPING_LAVA
Particles k FALLING_LAVA
Particles l LANDING_LAVA
Particles m DRIPPING_WATER
Particles n FALLING_WATER
Particles o DUST
Particles p EFFECT
Particles q ELDER_GUARDIAN
Particles r ENCHANTED_HIT
Particles s ENCHANT
Particles t END_ROD
Particles u ENTITY_EFFECT
Particles v EXPLOSION_EMITTER
Particles w EXPLOSION
Particles x FALLING_DUST
Particles y FIREWORK
Particles z FISHING
Particles B SOUL_FIRE_FLAME
Particles C SOUL
Particles am ASH
Particles an CRIMSON_SPORE
Particles ao WARPED_SPORE
Particles ap DRIPPING_OBSIDIAN_TEAR
Particles aq FALLING_OBSIDIAN_TEAR
Particles ar LANDING_OBSIDIAN_TEAR
Particles as REVERSE_PORTAL
NBTTagByteArray b data
NBTTagByteArray d ()[B getBytes
NBTTagByteArray a TYPE
NBTTagByteArray b ()LNBTTagType; getType
NBTTagByteArray toString ()Ljava/lang/String; toString
NBTTagByteArray c ()LNBTBase; copy
NBTTagByteArray equals (Ljava/lang/Object;)Z equals
NBTTagByteArray hashCode ()I hashCode
NBTTagByteArray size ()I size
NBTTagByteArray b (ILNBTTagByte;)V add
NBTTagByteArray b (ILNBTBase;)Z addTag
NBTTagByteArray b (I)LNBTTagByte; remove
NBTTagByteArray a_ ()I getElementType
NBTTagByteArray clear ()V clear
NBTTagByteArray c (I)LNBTBase; remove
NBTTagByteArray c (ILNBTBase;)V add
NBTTagByteArray d (ILNBTBase;)LNBTBase; set
NBTTagByteArray remove (I)Ljava/lang/Object; remove
NBTTagByteArray add (ILjava/lang/Object;)V add
NBTTagByteArray set (ILjava/lang/Object;)Ljava/lang/Object; set
NBTTagByteArray get (I)Ljava/lang/Object; get
NBTTagByte h data
NBTTagByte a TYPE
NBTTagByte b ZERO
NBTTagByte c ONE
NBTTagByte b ()LNBTTagType; getType
NBTTagByte toString ()Ljava/lang/String; toString
NBTTagByte d ()LNBTTagByte; copy
NBTTagByte equals (Ljava/lang/Object;)Z equals
NBTTagByte hashCode ()I hashCode
NBTTagByte e ()J getAsLong
NBTTagByte f ()I getAsInt
NBTTagByte g ()S getAsShort
NBTTagByte h ()B getAsByte
NBTTagByte i ()D getAsDouble
NBTTagByte j ()F getAsFloat
NBTTagByte k ()Ljava/lang/Number; getAsNumber
NBTTagByte c ()LNBTBase; copy
NBTList d (ILNBTBase;)LNBTBase; set
NBTList c (ILNBTBase;)V add
NBTList c (I)LNBTBase; remove
NBTList b (ILNBTBase;)Z addTag
NBTList a_ ()I getElementType
NBTList remove (I)Ljava/lang/Object; remove
NBTList add (ILjava/lang/Object;)V add
NBTList set (ILjava/lang/Object;)Ljava/lang/Object; set
NBTTagCompound h map
NBTTagCompound a (Ljava/lang/String;B)V setByte
NBTTagCompound a (Ljava/lang/String;D)V setDouble
NBTTagCompound a (Ljava/lang/String;F)V setFloat
NBTTagCompound a (Ljava/lang/String;J)V setLong
NBTTagCompound a (Ljava/lang/String;LNBTBase;)LNBTBase; set
NBTTagCompound a (Ljava/lang/String;Ljava/lang/String;)V setString
NBTTagCompound a (Ljava/lang/String;S)V setShort
NBTTagCompound a (Ljava/lang/String;Z)V setBoolean
NBTTagCompound a (Ljava/lang/String;[B)V setByteArray
NBTTagCompound a (Ljava/lang/String;[I)V setIntArray
NBTTagCompound b (Ljava/lang/String;I)V setInt
NBTTagCompound c (Ljava/lang/String;I)Z hasKeyOfType
NBTTagCompound d ()Ljava/util/Set; getKeys
NBTTagCompound c (Ljava/lang/String;)LNBTBase; get
NBTTagCompound d (Ljava/lang/String;I)LNBTTagList; getList
NBTTagCompound e (Ljava/lang/String;)Z hasKey
NBTTagCompound g ()LNBTTagCompound; clone
NBTTagCompound f (Ljava/lang/String;)B getByte
NBTTagCompound g (Ljava/lang/String;)S getShort
NBTTagCompound h (Ljava/lang/String;)I getInt
NBTTagCompound i (Ljava/lang/String;)J getLong
NBTTagCompound j (Ljava/lang/String;)F getFloat
NBTTagCompound k (Ljava/lang/String;)D getDouble
NBTTagCompound l (Ljava/lang/String;)Ljava/lang/String; getString
NBTTagCompound m (Ljava/lang/String;)[B getByteArray
NBTTagCompound n (Ljava/lang/String;)[I getIntArray
NBTTagCompound o (Ljava/lang/String;)[J getLongArray
NBTTagCompound p (Ljava/lang/String;)LNBTTagCompound; getCompound
NBTTagCompound q (Ljava/lang/String;)Z getBoolean
NBTTagCompound r (Ljava/lang/String;)V remove
NBTTagCompound b LOGGER
NBTTagCompound c SIMPLE_VALUE
NBTTagCompound a TYPE
NBTTagCompound b ()LNBTTagType; getType
NBTTagCompound e ()I size
NBTTagCompound b (Ljava/lang/String;)Z hasUUID
NBTTagCompound b (Ljava/lang/String;Ljava/util/List;)V putIntArray
NBTTagCompound c (Ljava/lang/String;Ljava/util/List;)V putLongArray
NBTTagCompound d (Ljava/lang/String;)B getTagType
NBTTagCompound b_ ()V stripEmptyChildren
NBTTagCompound toString ()Ljava/lang/String; toString
NBTTagCompound isEmpty ()Z isEmpty
NBTTagCompound equals (Ljava/lang/Object;)Z equals
NBTTagCompound hashCode ()I hashCode
NBTTagCompound c (Ljava/io/DataInput;LNBTReadLimiter;)B readNamedTagType
NBTTagCompound d (Ljava/io/DataInput;LNBTReadLimiter;)Ljava/lang/String; readNamedTagName
NBTTagCompound b (LNBTTagType;Ljava/lang/String;Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; readNamedTagData
NBTTagCompound s (Ljava/lang/String;)Ljava/lang/String; handleEscape
NBTTagCompound t (Ljava/lang/String;)LIChatBaseComponent; handleEscapePretty
NBTTagCompound c ()LNBTBase; copy
NBTTagCompound u (Ljava/lang/String;)Ljava/lang/String; lambda$createReport$0
NBTTagCompound b (Ljava/io/DataInput;LNBTReadLimiter;)Ljava/lang/String; access$100
NBTTagDouble c data
NBTTagDouble a ZERO
NBTTagDouble b TYPE
NBTTagDouble b ()LNBTTagType; getType
NBTTagDouble toString ()Ljava/lang/String; toString
NBTTagDouble d ()LNBTTagDouble; copy
NBTTagDouble equals (Ljava/lang/Object;)Z equals
NBTTagDouble hashCode ()I hashCode
NBTTagDouble e ()J getAsLong
NBTTagDouble f ()I getAsInt
NBTTagDouble g ()S getAsShort
NBTTagDouble h ()B getAsByte
NBTTagDouble i ()D getAsDouble
NBTTagDouble j ()F getAsFloat
NBTTagDouble k ()Ljava/lang/Number; getAsNumber
NBTTagDouble c ()LNBTBase; copy
NBTTagFloat c data
NBTTagFloat a ZERO
NBTTagFloat b TYPE
NBTTagFloat b ()LNBTTagType; getType
NBTTagFloat toString ()Ljava/lang/String; toString
NBTTagFloat d ()LNBTTagFloat; copy
NBTTagFloat equals (Ljava/lang/Object;)Z equals
NBTTagFloat hashCode ()I hashCode
NBTTagFloat e ()J getAsLong
NBTTagFloat f ()I getAsInt
NBTTagFloat g ()S getAsShort
NBTTagFloat h ()B getAsByte
NBTTagFloat i ()D getAsDouble
NBTTagFloat j ()F getAsFloat
NBTTagFloat k ()Ljava/lang/Number; getAsNumber
NBTTagFloat c ()LNBTBase; copy
NBTTagIntArray b data
NBTTagIntArray g ()[I getInts
NBTTagIntArray a TYPE
NBTTagIntArray b ()LNBTTagType; getType
NBTTagIntArray toString ()Ljava/lang/String; toString
NBTTagIntArray d ()LNBTTagIntArray; copy
NBTTagIntArray equals (Ljava/lang/Object;)Z equals
NBTTagIntArray hashCode ()I hashCode
NBTTagIntArray size ()I size
NBTTagIntArray b (ILNBTTagInt;)V add
NBTTagIntArray b (ILNBTBase;)Z addTag
NBTTagIntArray b (I)LNBTTagInt; remove
NBTTagIntArray a_ ()I getElementType
NBTTagIntArray clear ()V clear
NBTTagIntArray c (I)LNBTBase; remove
NBTTagIntArray c (ILNBTBase;)V add
NBTTagIntArray d (ILNBTBase;)LNBTBase; set
NBTTagIntArray c ()LNBTBase; copy
NBTTagIntArray remove (I)Ljava/lang/Object; remove
NBTTagIntArray add (ILjava/lang/Object;)V add
NBTTagIntArray set (ILjava/lang/Object;)Ljava/lang/Object; set
NBTTagIntArray get (I)Ljava/lang/Object; get
NBTTagInt b data
NBTTagInt a TYPE
NBTTagInt b ()LNBTTagType; getType
NBTTagInt toString ()Ljava/lang/String; toString
NBTTagInt d ()LNBTTagInt; copy
NBTTagInt equals (Ljava/lang/Object;)Z equals
NBTTagInt hashCode ()I hashCode
NBTTagInt e ()J getAsLong
NBTTagInt f ()I getAsInt
NBTTagInt g ()S getAsShort
NBTTagInt h ()B getAsByte
NBTTagInt i ()D getAsDouble
NBTTagInt j ()F getAsFloat
NBTTagInt k ()Ljava/lang/Number; getAsNumber
NBTTagInt c ()LNBTBase; copy
NBTTagList c list
NBTTagList h type
NBTTagList a (I)LNBTTagCompound; getCompound
NBTTagList c (I)LNBTBase; remove
NBTTagList j (I)Ljava/lang/String; getString
NBTTagList size ()I size
NBTTagList a TYPE
NBTTagList b INLINE_ELEMENT_TYPES
NBTTagList b ()LNBTTagType; getType
NBTTagList toString ()Ljava/lang/String; toString
NBTTagList g ()V updateTypeAfterRemove
NBTTagList b_ ()V stripEmptyChildren
NBTTagList isEmpty ()Z isEmpty
NBTTagList b (I)LNBTTagList; getList
NBTTagList d (I)S getShort
NBTTagList e (I)I getInt
NBTTagList f (I)[I getIntArray
NBTTagList g (I)[J getLongArray
NBTTagList h (I)D getDouble
NBTTagList i (I)F getFloat
NBTTagList k (I)LNBTBase; get
NBTTagList d (ILNBTBase;)LNBTBase; set
NBTTagList c (ILNBTBase;)V add
NBTTagList b (ILNBTBase;)Z addTag
NBTTagList d ()LNBTTagList; copy
NBTTagList equals (Ljava/lang/Object;)Z equals
NBTTagList hashCode ()I hashCode
NBTTagList a_ ()I getElementType
NBTTagList clear ()V clear
NBTTagList c ()LNBTBase; copy
NBTTagList remove (I)Ljava/lang/Object; remove
NBTTagList add (ILjava/lang/Object;)V add
NBTTagList set (ILjava/lang/Object;)Ljava/lang/Object; set
NBTTagList get (I)Ljava/lang/Object; get
NBTTagLongArray g ()[J getLongs
NBTTagLongArray a TYPE
NBTTagLongArray b data
NBTTagLongArray b ()LNBTTagType; getType
NBTTagLongArray toString ()Ljava/lang/String; toString
NBTTagLongArray d ()LNBTTagLongArray; copy
NBTTagLongArray equals (Ljava/lang/Object;)Z equals
NBTTagLongArray hashCode ()I hashCode
NBTTagLongArray size ()I size
NBTTagLongArray b (ILNBTTagLong;)V add
NBTTagLongArray b (ILNBTBase;)Z addTag
NBTTagLongArray b (I)LNBTTagLong; remove
NBTTagLongArray a_ ()I getElementType
NBTTagLongArray clear ()V clear
NBTTagLongArray c (I)LNBTBase; remove
NBTTagLongArray c (ILNBTBase;)V add
NBTTagLongArray d (ILNBTBase;)LNBTBase; set
NBTTagLongArray c ()LNBTBase; copy
NBTTagLongArray remove (I)Ljava/lang/Object; remove
NBTTagLongArray add (ILjava/lang/Object;)V add
NBTTagLongArray set (ILjava/lang/Object;)Ljava/lang/Object; set
NBTTagLongArray get (I)Ljava/lang/Object; get
NBTTagLong b data
NBTTagLong a TYPE
NBTTagLong b ()LNBTTagType; getType
NBTTagLong toString ()Ljava/lang/String; toString
NBTTagLong d ()LNBTTagLong; copy
NBTTagLong equals (Ljava/lang/Object;)Z equals
NBTTagLong hashCode ()I hashCode
NBTTagLong e ()J getAsLong
NBTTagLong f ()I getAsInt
NBTTagLong g ()S getAsShort
NBTTagLong h ()B getAsByte
NBTTagLong i ()D getAsDouble
NBTTagLong j ()F getAsFloat
NBTTagLong k ()Ljava/lang/Number; getAsNumber
NBTTagLong c ()LNBTBase; copy
GameProfileSerializer a (LNBTTagCompound;)Lcom/mojang/authlib/GameProfile; deserialize
GameProfileSerializer a (LNBTTagCompound;Lcom/mojang/authlib/GameProfile;)LNBTTagCompound; serialize
GameProfileSerializer a LOGGER
GameProfileSerializer b (LNBTTagCompound;)LBlockPosition; readBlockPos
GameProfileSerializer c (LNBTTagCompound;)LIBlockData; readBlockState
GameProfileSerializer d (LNBTTagCompound;)LFluid; readFluidState
GameProfileSerializer b (LNBTBase;)Ljava/lang/String; prettyPrint
NBTNumber e ()J asLong
NBTNumber f ()I asInt
NBTNumber g ()S asShort
NBTNumber h ()B asByte
NBTNumber i ()D asDouble
NBTNumber j ()F asFloat
NBTNumber k ()Ljava/lang/Number; getAsNumber
NBTTagShort b data
NBTTagShort a TYPE
NBTTagShort b ()LNBTTagType; getType
NBTTagShort toString ()Ljava/lang/String; toString
NBTTagShort d ()LNBTTagShort; copy
NBTTagShort equals (Ljava/lang/Object;)Z equals
NBTTagShort hashCode ()I hashCode
NBTTagShort e ()J getAsLong
NBTTagShort f ()I getAsInt
NBTTagShort g ()S getAsShort
NBTTagShort h ()B getAsByte
NBTTagShort i ()D getAsDouble
NBTTagShort j ()F getAsFloat
NBTTagShort k ()Ljava/lang/Number; getAsNumber
NBTTagShort c ()LNBTBase; copy
NBTTagString c data
NBTTagString a TYPE
NBTTagString b EMPTY
NBTTagString b ()LNBTTagType; getType
NBTTagString toString ()Ljava/lang/String; toString
NBTTagString d ()LNBTTagString; copy
NBTTagString isEmpty ()Z isEmpty
NBTTagString equals (Ljava/lang/Object;)Z equals
NBTTagString hashCode ()I hashCode
NBTTagString c_ ()Ljava/lang/String; getAsString
NBTTagString b (Ljava/lang/String;)Ljava/lang/String; quoteAndEscape
NBTTagString c ()LNBTBase; copy
NBTBase a ()B getTypeId
NBTBase a (Ljava/io/DataOutput;)V write
NBTBase c ()LNBTBase; clone
NBTBase c_ ()Ljava/lang/String; asString
NBTBase isEmpty ()Z isEmpty
NBTBase d SYNTAX_HIGHLIGHTING_KEY
NBTBase e SYNTAX_HIGHLIGHTING_STRING
NBTBase f SYNTAX_HIGHLIGHTING_NUMBER
NBTBase g SYNTAX_HIGHLIGHTING_NUMBER_TYPE
NBTBase toString ()Ljava/lang/String; toString
NBTBase b ()LNBTTagType; getType
NBTBase b_ ()V stripEmptyChildren
NBTBase l ()LIChatBaseComponent; getPrettyDisplay
MojangsonParser a (Ljava/lang/String;)LNBTTagCompound; parse
MojangsonParser b (Ljava/lang/String;)LNBTBase; parseLiteral
MojangsonParser h ()LNBTBase; parseArray
MojangsonParser a ERROR_TRAILING_DATA
MojangsonParser b ERROR_EXPECTED_KEY
MojangsonParser c ERROR_EXPECTED_VALUE
MojangsonParser d ERROR_INSERT_MIXED_LIST
MojangsonParser e ERROR_INSERT_MIXED_ARRAY
MojangsonParser f ERROR_INVALID_ARRAY
MojangsonParser g DOUBLE_PATTERN_NOSUFFIX
MojangsonParser h DOUBLE_PATTERN
MojangsonParser i FLOAT_PATTERN
MojangsonParser j BYTE_PATTERN
MojangsonParser k LONG_PATTERN
MojangsonParser l SHORT_PATTERN
MojangsonParser m INT_PATTERN
MojangsonParser n reader
MojangsonParser b ()Ljava/lang/String; readKey
MojangsonParser c ()LNBTBase; readTypedValue
MojangsonParser d ()LNBTBase; readValue
MojangsonParser e ()LNBTBase; readList
MojangsonParser f ()LNBTTagCompound; readStruct
MojangsonParser g ()LNBTBase; readListTag
MojangsonParser i ()Z hasElementSeparator
MojangsonParser b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
NetworkManager i packetQueue
NetworkManager j channel
NetworkManager k socketAddress
NetworkManager l packetListener
NetworkManager a (I)V setCompressionLevel
NetworkManager a (LEnumProtocol;)V setProtocol
NetworkManager a (LIChatBaseComponent;)V close
NetworkManager a (LPacket;)V sendPacket
NetworkManager b (LPacket;Lio/netty/util/concurrent/GenericFutureListener;)V sendPacket
NetworkManager a (LPacketListener;)V setPacketListener
NetworkManager b ()Ljava/net/SocketAddress; getSocketAddress
NetworkManager c ()Z isLocal
NetworkManager g ()Z isConnected
NetworkManager k ()V stopReading
NetworkManager l ()V handleDisconnection
NetworkManager g LOGGER
NetworkManager a ROOT_MARKER
NetworkManager b PACKET_MARKER
NetworkManager c ATTRIBUTE_PROTOCOL
NetworkManager d NETWORK_WORKER_GROUP
NetworkManager e NETWORK_EPOLL_WORKER_GROUP
NetworkManager f LOCAL_WORKER_GROUP
NetworkManager h receiving
NetworkManager m disconnectedReason
NetworkManager n encrypted
NetworkManager o disconnectionHandled
NetworkManager p receivedPackets
NetworkManager q sentPackets
NetworkManager r averageReceivedPackets
NetworkManager s averageSentPackets
NetworkManager t tickCount
NetworkManager u handlingFault
NetworkManager channelActive (Lio/netty/channel/ChannelHandlerContext;)V channelActive
NetworkManager channelInactive (Lio/netty/channel/ChannelHandlerContext;)V channelInactive
NetworkManager exceptionCaught (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V exceptionCaught
NetworkManager o ()V flushQueue
NetworkManager d ()LEnumProtocolDirection; getReceiving
NetworkManager e ()LEnumProtocolDirection; getSending
NetworkManager f ()Z isEncrypted
NetworkManager h ()Z isConnecting
NetworkManager i ()LPacketListener; getPacketListener
NetworkManager j ()LIChatBaseComponent; getDisconnectedReason
NetworkManager m ()F getAverageReceivedPackets
NetworkManager n ()F getAverageSentPackets
NetworkManager channelRead0 (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead0
NetworkManager p ()Lio/netty/channel/DefaultEventLoopGroup; lambda$static$2
NetworkManager q ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$1
NetworkManager r ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$0
EnumProtocol a HANDSHAKING
EnumProtocol b PLAY
EnumProtocol c STATUS
EnumProtocol d LOGIN
EnumProtocol e LOOKUP
EnumProtocol f PROTOCOL_BY_PACKET
EnumProtocol g id
EnumProtocol h flows
EnumProtocol i $VALUES
EnumProtocol values ()[LEnumProtocol; values
EnumProtocol valueOf (Ljava/lang/String;)LEnumProtocol; valueOf
EnumProtocol b ()LEnumProtocol$ProtocolBuilder; protocol
ChatBaseComponent a siblings
ChatBaseComponent b style
ChatBaseComponent b ()LChatModifier; getStyle
ChatBaseComponent c ()Ljava/util/stream/Stream; stream
ChatBaseComponent equals (Ljava/lang/Object;)Z equals
ChatBaseComponent hashCode ()I hashCode
ChatBaseComponent toString ()Ljava/lang/String; toString
ChatMessageType a CHAT
ChatMessageType b SYSTEM
ChatMessageType c GAME_INFO
ChatMessageType d index
ChatMessageType e interrupt
ChatMessageType f $VALUES
ChatMessageType values ()[LChatMessageType; values
ChatMessageType valueOf (Ljava/lang/String;)LChatMessageType; valueOf
ChatMessageType b ()Z shouldInterrupt
ChatClickable$EnumClickAction a OPEN_URL
ChatClickable$EnumClickAction b OPEN_FILE
ChatClickable$EnumClickAction c RUN_COMMAND
ChatClickable$EnumClickAction d SUGGEST_COMMAND
ChatClickable$EnumClickAction e CHANGE_PAGE
ChatClickable$EnumClickAction f COPY_TO_CLIPBOARD
ChatClickable$EnumClickAction g LOOKUP
ChatClickable$EnumClickAction h allowFromServer
ChatClickable$EnumClickAction i name
ChatClickable$EnumClickAction j $VALUES
ChatClickable$EnumClickAction values ()[LChatClickable$EnumClickAction; values
ChatClickable$EnumClickAction valueOf (Ljava/lang/String;)LChatClickable$EnumClickAction; valueOf
ChatClickable$EnumClickAction b ()Ljava/lang/String; getName
IChatBaseComponent a ()Ljava/util/List; getSiblings
IChatBaseComponent a (LChatModifier;)LIChatBaseComponent; setChatModifier
IChatBaseComponent a (LIChatBaseComponent;)LIChatBaseComponent; addSibling
IChatBaseComponent b ()LChatModifier; getChatModifier
IChatBaseComponent d ()Ljava/lang/String; getText
IChatBaseComponent e ()Ljava/lang/String; getLegacyString
IChatBaseComponent getString ()Ljava/lang/String; getString
IChatBaseComponent c ()Ljava/util/stream/Stream; stream
IChatBaseComponent f ()Ljava/util/stream/Stream; flatStream
IChatBaseComponent iterator ()Ljava/util/Iterator; iterator
IChatBaseComponent g ()LIChatBaseComponent; copy
IChatBaseComponent h ()LIChatBaseComponent; deepCopy
IChatBaseComponent b (LIChatBaseComponent;)LIChatBaseComponent; flattenStyle
ChatComponentUtils a (LCommandListenerWrapper;LIChatBaseComponent;LEntity;I)LIChatBaseComponent; filterForDisplay
ChatComponentUtils b (Ljava/util/Collection;Ljava/util/function/Function;)LIChatBaseComponent; formatList
ChatHoverable$EnumHoverAction a SHOW_TEXT
ChatHoverable$EnumHoverAction b SHOW_ITEM
ChatHoverable$EnumHoverAction c SHOW_ENTITY
ChatHoverable$EnumHoverAction d LOOKUP
ChatHoverable$EnumHoverAction e allowFromServer
ChatHoverable$EnumHoverAction f name
ChatHoverable$EnumHoverAction g $VALUES
ChatHoverable$EnumHoverAction values ()[LChatHoverable$EnumHoverAction; values
ChatHoverable$EnumHoverAction valueOf (Ljava/lang/String;)LChatHoverable$EnumHoverAction; valueOf
ChatHoverable$EnumHoverAction b ()Ljava/lang/String; getName
ChatModifier b color
ChatModifier c bold
ChatModifier d italic
ChatModifier e underlined
ChatModifier f strikethrough
ChatModifier g obfuscated
ChatModifier h clickEvent
ChatModifier i hoverEvent
ChatModifier j insertion
ChatModifier a ()LEnumChatFormat; getColor
ChatModifier a (LChatClickable;)LChatModifier; setChatClickable
ChatModifier a (LChatHoverable;)LChatModifier; setChatHoverable
ChatModifier a (LChatModifier;)LChatModifier; setChatModifier
ChatModifier a (LEnumChatFormat;)LChatModifier; setColor
ChatModifier a (Ljava/lang/Boolean;)LChatModifier; setBold
ChatModifier a (Ljava/lang/String;)LChatModifier; setInsertion
ChatModifier b ()Z isBold
ChatModifier b (Ljava/lang/Boolean;)LChatModifier; setItalic
ChatModifier c ()Z isItalic
ChatModifier c (Ljava/lang/Boolean;)LChatModifier; setStrikethrough
ChatModifier d ()Z isStrikethrough
ChatModifier d (Ljava/lang/Boolean;)LChatModifier; setUnderline
ChatModifier e ()Z isUnderlined
ChatModifier e (Ljava/lang/Boolean;)LChatModifier; setRandom
ChatModifier f ()Z isRandom
ChatModifier h ()LChatClickable; getClickEvent
ChatModifier i ()LChatHoverable; getHoverEvent
ChatModifier j ()Ljava/lang/String; getInsertion
ChatModifier m ()LChatModifier; clone
ChatModifier a parent
ChatModifier k ROOT
ChatModifier g ()Z isEmpty
ChatModifier k ()Ljava/lang/String; getLegacyFormatCodes
ChatModifier o ()LChatModifier; getParent
ChatModifier l ()Ljava/lang/String; toStringResolved
ChatModifier toString ()Ljava/lang/String; toString
ChatModifier equals (Ljava/lang/Object;)Z equals
ChatModifier hashCode ()I hashCode
ChatModifier n ()LChatModifier; flatCopy
ChatModifier b (LChatModifier;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$102
ChatModifier c (LChatModifier;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$202
ChatModifier d (LChatModifier;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$302
ChatModifier e (LChatModifier;Ljava/lang/Boolean;)Ljava/lang/Boolean; access$402
ChatModifier b (LChatModifier;)Ljava/lang/Boolean; access$000
ChatModifier c (LChatModifier;)Ljava/lang/Boolean; access$100
ChatModifier d (LChatModifier;)Ljava/lang/Boolean; access$200
ChatModifier e (LChatModifier;)Ljava/lang/Boolean; access$300
ChatModifier f (LChatModifier;)Ljava/lang/Boolean; access$400
ChatModifier g (LChatModifier;)LEnumChatFormat; access$500
ChatModifier h (LChatModifier;)Ljava/lang/String; access$600
ChatModifier i (LChatModifier;)LChatClickable; access$700
ChatModifier j (LChatModifier;)LChatHoverable; access$800
ChatMessage f key
ChatMessage g args
ChatMessage k ()Ljava/lang/String; getKey
ChatMessage l ()[Ljava/lang/Object; getArgs
ChatMessage d DEFAULT_LANGUAGE
ChatMessage e LANGUAGE
ChatMessage h decomposeLock
ChatMessage i decomposedLanguageTime
ChatMessage b decomposedParts
ChatMessage c FORMAT_PATTERN
ChatMessage i ()V decompose
ChatMessage b (Ljava/lang/String;)V decomposeTemplate
ChatMessage b (I)LIChatBaseComponent; getComponent
ChatMessage c ()Ljava/util/stream/Stream; stream
ChatMessage d ()Ljava/lang/String; getContents
ChatMessage j ()LChatMessage; copy
ChatMessage equals (Ljava/lang/Object;)Z equals
ChatMessage hashCode ()I hashCode
ChatMessage toString ()Ljava/lang/String; toString
ChatMessage g ()LIChatBaseComponent; copy
EnumProtocolDirection a SERVERBOUND
EnumProtocolDirection b CLIENTBOUND
EnumProtocolDirection c $VALUES
EnumProtocolDirection values ()[LEnumProtocolDirection; values
EnumProtocolDirection valueOf (Ljava/lang/String;)LEnumProtocolDirection; valueOf
PlayerConnectionUtils a (LPacket;LPacketListener;LIAsyncTaskHandler;)V ensureMainThread
PlayerConnectionUtils a (LPacket;LPacketListener;LWorldServer;)V ensureMainThread
PlayerConnectionUtils a LOGGER
PacketPlayOutBlockChange b block
PacketPlayOutBlockChange a pos
PacketPlayOutBlockChange b (LPacketDataSerializer;)V write
PacketPlayOutBlockChange b ()LIBlockData; getBlockState
PacketPlayOutBlockChange c ()LBlockPosition; getPos
PacketPlayOutBoss$Action a ADD
PacketPlayOutBoss$Action b REMOVE
PacketPlayOutBoss$Action c UPDATE_PCT
PacketPlayOutBoss$Action d UPDATE_NAME
PacketPlayOutBoss$Action e UPDATE_STYLE
PacketPlayOutBoss$Action f UPDATE_PROPERTIES
PacketPlayOutBoss$Action g $VALUES
PacketPlayOutBoss$Action values ()[LPacketPlayOutBoss$Action; values
PacketPlayOutBoss$Action valueOf (Ljava/lang/String;)LPacketPlayOutBoss$Action; valueOf
PacketPlayOutCombatEvent$EnumCombatEventType a ENTER_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType b END_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType c ENTITY_DIED
PacketPlayOutCombatEvent$EnumCombatEventType d $VALUES
PacketPlayOutCombatEvent$EnumCombatEventType values ()[LPacketPlayOutCombatEvent$EnumCombatEventType; values
PacketPlayOutCombatEvent$EnumCombatEventType valueOf (Ljava/lang/String;)LPacketPlayOutCombatEvent$EnumCombatEventType; valueOf
PacketPlayOutPlayerInfo$EnumPlayerInfoAction a ADD_PLAYER
PacketPlayOutPlayerInfo$EnumPlayerInfoAction b UPDATE_GAME_MODE
PacketPlayOutPlayerInfo$EnumPlayerInfoAction c UPDATE_LATENCY
PacketPlayOutPlayerInfo$EnumPlayerInfoAction d UPDATE_DISPLAY_NAME
PacketPlayOutPlayerInfo$EnumPlayerInfoAction e REMOVE_PLAYER
PacketPlayOutPlayerInfo$EnumPlayerInfoAction f $VALUES
PacketPlayOutPlayerInfo$EnumPlayerInfoAction values ()[LPacketPlayOutPlayerInfo$EnumPlayerInfoAction; values
PacketPlayOutPlayerInfo$EnumPlayerInfoAction valueOf (Ljava/lang/String;)LPacketPlayOutPlayerInfo$EnumPlayerInfoAction; valueOf
PacketPlayOutPosition$EnumPlayerTeleportFlags a X
PacketPlayOutPosition$EnumPlayerTeleportFlags b Y
PacketPlayOutPosition$EnumPlayerTeleportFlags c Z
PacketPlayOutPosition$EnumPlayerTeleportFlags d Y_ROT
PacketPlayOutPosition$EnumPlayerTeleportFlags e X_ROT
PacketPlayOutPosition$EnumPlayerTeleportFlags f bit
PacketPlayOutPosition$EnumPlayerTeleportFlags g $VALUES
PacketPlayOutPosition$EnumPlayerTeleportFlags values ()[LPacketPlayOutPosition$EnumPlayerTeleportFlags; values
PacketPlayOutPosition$EnumPlayerTeleportFlags valueOf (Ljava/lang/String;)LPacketPlayOutPosition$EnumPlayerTeleportFlags; valueOf
PacketPlayOutPosition$EnumPlayerTeleportFlags b (I)Z isSet
PacketPlayOutRecipes$Action a INIT
PacketPlayOutRecipes$Action b ADD
PacketPlayOutRecipes$Action c REMOVE
PacketPlayOutRecipes$Action d $VALUES
PacketPlayOutRecipes$Action values ()[LPacketPlayOutRecipes$Action; values
PacketPlayOutRecipes$Action valueOf (Ljava/lang/String;)LPacketPlayOutRecipes$Action; valueOf
PacketPlayOutWorldBorder$EnumWorldBorderAction a SET_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction b LERP_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction c SET_CENTER
PacketPlayOutWorldBorder$EnumWorldBorderAction d INITIALIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction e SET_WARNING_TIME
PacketPlayOutWorldBorder$EnumWorldBorderAction f SET_WARNING_BLOCKS
PacketPlayOutWorldBorder$EnumWorldBorderAction g $VALUES
PacketPlayOutWorldBorder$EnumWorldBorderAction values ()[LPacketPlayOutWorldBorder$EnumWorldBorderAction; values
PacketPlayOutWorldBorder$EnumWorldBorderAction valueOf (Ljava/lang/String;)LPacketPlayOutWorldBorder$EnumWorldBorderAction; valueOf
PacketPlayOutSpawnPosition a position
PacketPlayOutSpawnPosition b (LPacketDataSerializer;)V write
PacketPlayOutSpawnPosition b ()LBlockPosition; getPos
PacketPlayOutTitle$EnumTitleAction a TITLE
PacketPlayOutTitle$EnumTitleAction b SUBTITLE
PacketPlayOutTitle$EnumTitleAction c ACTIONBAR
PacketPlayOutTitle$EnumTitleAction d TIMES
PacketPlayOutTitle$EnumTitleAction e CLEAR
PacketPlayOutTitle$EnumTitleAction f RESET
PacketPlayOutTitle$EnumTitleAction g $VALUES
PacketPlayOutTitle$EnumTitleAction values ()[LPacketPlayOutTitle$EnumTitleAction; values
PacketPlayOutTitle$EnumTitleAction valueOf (Ljava/lang/String;)LPacketPlayOutTitle$EnumTitleAction; valueOf
PacketPlayOutPlayerListHeaderFooter a header
PacketPlayOutPlayerListHeaderFooter b footer
PacketPlayOutPlayerListHeaderFooter b (LPacketDataSerializer;)V write
PacketPlayOutPlayerListHeaderFooter b ()LIChatBaseComponent; getHeader
PacketPlayOutPlayerListHeaderFooter c ()LIChatBaseComponent; getFooter
PacketPlayInClientCommand$EnumClientCommand a PERFORM_RESPAWN
PacketPlayInClientCommand$EnumClientCommand b REQUEST_STATS
PacketPlayInClientCommand$EnumClientCommand c $VALUES
PacketPlayInClientCommand$EnumClientCommand values ()[LPacketPlayInClientCommand$EnumClientCommand; values
PacketPlayInClientCommand$EnumClientCommand valueOf (Ljava/lang/String;)LPacketPlayInClientCommand$EnumClientCommand; valueOf
PacketPlayInSettings b viewDistance
PacketPlayInSettings g ()LEnumMainHand; getMainHand
PacketPlayInSettings a language
PacketPlayInSettings c chatVisibility
PacketPlayInSettings d chatColors
PacketPlayInSettings e modelCustomisation
PacketPlayInSettings f mainHand
PacketPlayInSettings b (LPacketDataSerializer;)V write
PacketPlayInSettings b ()Ljava/lang/String; getLanguage
PacketPlayInSettings c ()I getViewDistance
PacketPlayInSettings d ()LEnumChatVisibility; getChatVisibility
PacketPlayInSettings e ()Z getChatColors
PacketPlayInSettings f ()I getModelCustomisation
PacketPlayInWindowClick b slot
PacketPlayInWindowClick c button
PacketPlayInWindowClick e item
PacketPlayInWindowClick f shift
PacketPlayInWindowClick a containerId
PacketPlayInWindowClick d uid
PacketPlayInWindowClick b (LPacketDataSerializer;)V write
PacketPlayInWindowClick b ()I getContainerId
PacketPlayInWindowClick c ()I getSlotNum
PacketPlayInWindowClick d ()I getButtonNum
PacketPlayInWindowClick e ()S getUid
PacketPlayInWindowClick f ()LItemStack; getItem
PacketPlayInWindowClick g ()LInventoryClickType; getClickType
PacketPlayInCloseWindow a id
PacketPlayInCloseWindow b (LPacketDataSerializer;)V write
PacketPlayInCloseWindow b ()I getContainerId
PacketPlayInCustomPayload b tag
PacketPlayInCustomPayload c data
PacketPlayInCustomPayload a BRAND
PacketPlayInCustomPayload b (LPacketDataSerializer;)V write
PacketPlayInCustomPayload b ()LMinecraftKey; getIdentifier
PacketPlayInCustomPayload c ()LPacketDataSerializer; getData
PacketPlayInUseEntity b action
PacketPlayInUseEntity a entityId
PacketPlayInUseEntity c location
PacketPlayInUseEntity d hand
PacketPlayInUseEntity b (LPacketDataSerializer;)V write
PacketPlayInUseEntity b ()LPacketPlayInUseEntity$EnumEntityUseAction; getAction
PacketPlayInUseEntity c ()LEnumHand; getHand
PacketPlayInUseEntity d ()LVec3D; getLocation
PacketPlayInUseEntity$EnumEntityUseAction a INTERACT
PacketPlayInUseEntity$EnumEntityUseAction b ATTACK
PacketPlayInUseEntity$EnumEntityUseAction c INTERACT_AT
PacketPlayInUseEntity$EnumEntityUseAction d $VALUES
PacketPlayInUseEntity$EnumEntityUseAction values ()[LPacketPlayInUseEntity$EnumEntityUseAction; values
PacketPlayInUseEntity$EnumEntityUseAction valueOf (Ljava/lang/String;)LPacketPlayInUseEntity$EnumEntityUseAction; valueOf
PacketPlayInFlying a x
PacketPlayInFlying b y
PacketPlayInFlying c z
PacketPlayInFlying d yaw
PacketPlayInFlying e pitch
PacketPlayInFlying g hasPos
PacketPlayInFlying h hasLook
PacketPlayInFlying f onGround
PacketPlayInFlying b (LPacketDataSerializer;)V write
PacketPlayInFlying b (D)D getY
PacketPlayInFlying c (D)D getZ
PacketPlayInFlying b (F)F getXRot
PacketPlayInFlying b ()Z isOnGround
PacketPlayInFlying c ()Z hasPosition
PacketPlayInFlying d ()Z hasRotation
PacketPlayInVehicleMove b ()D getX
PacketPlayInVehicleMove c ()D getY
PacketPlayInVehicleMove d ()D getZ
PacketPlayInVehicleMove e ()F getYaw
PacketPlayInVehicleMove f ()F getPitch
PacketPlayInVehicleMove a x
PacketPlayInVehicleMove b y
PacketPlayInVehicleMove c z
PacketPlayInVehicleMove d yRot
PacketPlayInVehicleMove e xRot
PacketPlayInVehicleMove b (LPacketDataSerializer;)V write
PacketPlayInAbilities c ()Z isFlying
PacketPlayInAbilities a invulnerable
PacketPlayInAbilities b isFlying
PacketPlayInAbilities c canFly
PacketPlayInAbilities d instabuild
PacketPlayInAbilities e flyingSpeed
PacketPlayInAbilities f walkingSpeed
PacketPlayInAbilities b (LPacketDataSerializer;)V write
PacketPlayInAbilities b ()Z isInvulnerable
PacketPlayInAbilities b (Z)V setFlying
PacketPlayInAbilities d ()Z canFly
PacketPlayInAbilities c (Z)V setCanFly
PacketPlayInAbilities e ()Z canInstabuild
PacketPlayInAbilities d (Z)V setInstabuild
PacketPlayInAbilities f ()F getFlyingSpeed
PacketPlayInAbilities g ()F getWalkingSpeed
PacketPlayInAbilities b (F)V setWalkingSpeed
PacketPlayInBlockDig$EnumPlayerDigType a START_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType b ABORT_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType c STOP_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType d DROP_ALL_ITEMS
PacketPlayInBlockDig$EnumPlayerDigType e DROP_ITEM
PacketPlayInBlockDig$EnumPlayerDigType f RELEASE_USE_ITEM
PacketPlayInBlockDig$EnumPlayerDigType g SWAP_HELD_ITEMS
PacketPlayInBlockDig$EnumPlayerDigType h $VALUES
PacketPlayInBlockDig$EnumPlayerDigType values ()[LPacketPlayInBlockDig$EnumPlayerDigType; values
PacketPlayInBlockDig$EnumPlayerDigType valueOf (Ljava/lang/String;)LPacketPlayInBlockDig$EnumPlayerDigType; valueOf
PacketPlayInEntityAction b animation
PacketPlayInEntityAction a id
PacketPlayInEntityAction c data
PacketPlayInEntityAction b (LPacketDataSerializer;)V write
PacketPlayInEntityAction b ()I getId
PacketPlayInEntityAction c ()LPacketPlayInEntityAction$EnumPlayerAction; getAction
PacketPlayInEntityAction d ()I getData
PacketPlayInEntityAction$EnumPlayerAction a PRESS_SHIFT_KEY
PacketPlayInEntityAction$EnumPlayerAction b RELEASE_SHIFT_KEY
PacketPlayInEntityAction$EnumPlayerAction c STOP_SLEEPING
PacketPlayInEntityAction$EnumPlayerAction d START_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction e STOP_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction f START_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction g STOP_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction h OPEN_INVENTORY
PacketPlayInEntityAction$EnumPlayerAction i START_FALL_FLYING
PacketPlayInEntityAction$EnumPlayerAction j $VALUES
PacketPlayInEntityAction$EnumPlayerAction values ()[LPacketPlayInEntityAction$EnumPlayerAction; values
PacketPlayInEntityAction$EnumPlayerAction valueOf (Ljava/lang/String;)LPacketPlayInEntityAction$EnumPlayerAction; valueOf
PacketPlayInRecipeDisplayed$Status a SHOWN
PacketPlayInRecipeDisplayed$Status b SETTINGS
PacketPlayInRecipeDisplayed$Status c $VALUES
PacketPlayInRecipeDisplayed$Status values ()[LPacketPlayInRecipeDisplayed$Status; values
PacketPlayInRecipeDisplayed$Status valueOf (Ljava/lang/String;)LPacketPlayInRecipeDisplayed$Status; valueOf
PacketPlayInResourcePackStatus a status
PacketPlayInResourcePackStatus b (LPacketDataSerializer;)V write
PacketPlayInResourcePackStatus b ()LPacketPlayInResourcePackStatus$EnumResourcePackStatus; getAction
PacketPlayInResourcePackStatus$EnumResourcePackStatus a SUCCESSFULLY_LOADED
PacketPlayInResourcePackStatus$EnumResourcePackStatus b DECLINED
PacketPlayInResourcePackStatus$EnumResourcePackStatus c FAILED_DOWNLOAD
PacketPlayInResourcePackStatus$EnumResourcePackStatus d ACCEPTED
PacketPlayInResourcePackStatus$EnumResourcePackStatus e $VALUES
PacketPlayInResourcePackStatus$EnumResourcePackStatus values ()[LPacketPlayInResourcePackStatus$EnumResourcePackStatus; values
PacketPlayInResourcePackStatus$EnumResourcePackStatus valueOf (Ljava/lang/String;)LPacketPlayInResourcePackStatus$EnumResourcePackStatus; valueOf
PacketPlayInAdvancements$Status a OPENED_TAB
PacketPlayInAdvancements$Status b CLOSED_SCREEN
PacketPlayInAdvancements$Status c $VALUES
PacketPlayInAdvancements$Status values ()[LPacketPlayInAdvancements$Status; values
PacketPlayInAdvancements$Status valueOf (Ljava/lang/String;)LPacketPlayInAdvancements$Status; valueOf
PacketPlayInHeldItemSlot a itemInHandIndex
PacketPlayInHeldItemSlot b (LPacketDataSerializer;)V write
PacketPlayInHeldItemSlot b ()I getSlot
PacketPlayInSetCreativeSlot a slot
PacketPlayInSetCreativeSlot c ()LItemStack; getItemStack
PacketPlayInSetCreativeSlot b itemStack
PacketPlayInSetCreativeSlot b (LPacketDataSerializer;)V write
PacketPlayInSetCreativeSlot b ()I getSlotNum
PacketHandshakingInSetProtocol b hostname
PacketHandshakingInSetProtocol c port
PacketHandshakingInSetProtocol a protocolVersion
PacketHandshakingInSetProtocol d intention
PacketHandshakingInSetProtocol b (LPacketDataSerializer;)V write
PacketHandshakingInSetProtocol b ()LEnumProtocol; getIntention
PacketHandshakingInSetProtocol c ()I getProtocolVersion
PacketHandshakingInSetProtocol d ()Ljava/lang/String; getHostName
PacketHandshakingInSetProtocol e ()I getPort
PacketLoginInEncryptionBegin a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
PacketLoginInEncryptionBegin a keybytes
PacketLoginInEncryptionBegin b nonce
PacketLoginInEncryptionBegin b (LPacketDataSerializer;)V write
PacketLoginInEncryptionBegin b (Ljava/security/PrivateKey;)[B getNonce
ServerPing a (LIChatBaseComponent;)V setMOTD
ServerPing a (LServerPing$ServerData;)V setServerInfo
ServerPing a (LServerPing$ServerPingPlayerSample;)V setPlayerSample
ServerPing a (Ljava/lang/String;)V setFavicon
ServerPing c ()LServerPing$ServerData; getServerData
ServerPing a description
ServerPing b players
ServerPing c version
ServerPing d favicon
ServerPing b ()LServerPing$ServerPingPlayerSample; getPlayers
ServerPing d ()Ljava/lang/String; getFavicon
ServerPing$ServerData b ()I getProtocolVersion
ServerPing$ServerData a name
ServerPing$ServerData b protocol
SharedConstants d allowedCharacters
SharedConstants a ()Lcom/mojang/bridge/game/GameVersion; getGameVersion
SharedConstants a (C)Z isAllowedChatCharacter
SharedConstants a NETTY_LEAK_DETECTION
SharedConstants b MAXIMUM_TICK_TIME_NANOS
SharedConstants c IS_RUNNING_IN_IDE
SharedConstants e CURRENT_VERSION
SharedConstants b (Ljava/lang/String;)Ljava/lang/String; filterUnicodeSupplementary
DataWatcher c entity
DataWatcher d entries
DataWatcher e lock
DataWatcher a (LDataWatcherObject;)Ljava/lang/Object; get
DataWatcher a (LDataWatcherObject;Ljava/lang/Object;)V register
DataWatcher b (LDataWatcherObject;Ljava/lang/Object;)V set
DataWatcher c (LDataWatcherObject;Ljava/lang/Object;)V registerObject
DataWatcher a LOGGER
DataWatcher b ENTITY_ID_POOL
DataWatcher f isEmpty
DataWatcher g isDirty
DataWatcher b (LDataWatcherObject;)LDataWatcher$Item; getItem
DataWatcher b ()Ljava/util/List; packDirty
DataWatcher c ()Ljava/util/List; getAll
DataWatcher d ()Z isEmpty
DataWatcher e ()V clearDirty
MinecraftKey a namespace
MinecraftKey b key
MinecraftKey a ()Ljava/lang/String; getKey
MinecraftKey b ()Ljava/lang/String; getNamespace
MinecraftKey c ERROR_INVALID
MinecraftKey b (Ljava/lang/String;C)[Ljava/lang/String; decompose
MinecraftKey toString ()Ljava/lang/String; toString
MinecraftKey equals (Ljava/lang/Object;)Z equals
MinecraftKey hashCode ()I hashCode
MinecraftKey c (Ljava/lang/String;)Z isValidPath
MinecraftKey d (Ljava/lang/String;)Z isValidNamespace
MinecraftKey b (Ljava/lang/String;)Z isValidResourceLocation
MinecraftKey compareTo (Ljava/lang/Object;)I compareTo
MinecraftKey b (I)Z lambda$isValidPath$0
DispenserRegistry a ()V init
DispenserRegistry a STDOUT
DispenserRegistry b isBootstrapped
DispenserRegistry c LOGGER
DispenserRegistry b ()Ljava/util/Set; getMissingTranslations
DispenserRegistry c ()V validate
DispenserRegistry d ()V wrapStreams
DispenserRegistry b (Ljava/lang/String;)V lambda$validate$2
ServerCommand a command
ServerCommand b source
AdvancementDataPlayer f data
AdvancementDataPlayer j player
AdvancementDataPlayer a (LAdvancement;Ljava/lang/String;)Z grantCriteria
AdvancementDataPlayer b (LAdvancement;)LAdvancementProgress; getProgress
AdvancementDataPlayer b (LAdvancement;Ljava/lang/String;)Z revokeCritera
AdvancementDataPlayer a LOGGER
AdvancementDataPlayer b GSON
AdvancementDataPlayer c TYPE_TOKEN
AdvancementDataPlayer d server
AdvancementDataPlayer e file
AdvancementDataPlayer g visible
AdvancementDataPlayer h visibilityChanged
AdvancementDataPlayer i progressChanged
AdvancementDataPlayer k lastSelectedTab
AdvancementDataPlayer l isFirstPacket
AdvancementDataPlayer b ()V reload
AdvancementDataPlayer d ()V registerListeners
AdvancementDataPlayer e ()V ensureAllVisible
AdvancementDataPlayer f ()V checkForAutomaticTriggers
AdvancementDataPlayer g ()V load
AdvancementDataPlayer c ()V save
AdvancementDataPlayer c (LAdvancement;)V registerListeners
AdvancementDataPlayer d (LAdvancement;)V unregisterListeners
AdvancementDataPlayer b (LEntityPlayer;)V flushDirty
AdvancementDataPlayer e (LAdvancement;)V ensureVisibility
AdvancementDataPlayer f (LAdvancement;)Z shouldBeVisible
AdvancementDataPlayer g (LAdvancement;)Z hasCompletedChildrenOrSelf
CancelledPacketHandleException a INSTANCE
CancelledPacketHandleException fillInStackTrace ()Ljava/lang/Throwable; fillInStackTrace
AdvancementDataWorld b DESERIALIZER
AdvancementDataWorld c REGISTRY
AdvancementDataWorld a ()Ljava/util/Collection; getAdvancements
AdvancementDataWorld a LOGGER
CustomFunctionData f server
CustomFunctionData a ()Lnet/minecraft/server/MinecraftServer; getServer
CustomFunctionData d ()Lcom/mojang/brigadier/CommandDispatcher; getCommandDispatcher
CustomFunctionData e ()V tick
CustomFunctionData c LOGGER
CustomFunctionData d TICK_FUNCTION_TAG
CustomFunctionData e LOAD_FUNCTION_TAG
CustomFunctionData a PATH_PREFIX_LENGTH
CustomFunctionData b PATH_SUFFIX_LENGTH
CustomFunctionData g functions
CustomFunctionData h isInFunction
CustomFunctionData i commandQueue
CustomFunctionData j nestedCalls
CustomFunctionData k tags
CustomFunctionData l ticking
CustomFunctionData m postReload
CustomFunctionData b ()I getCommandLimit
CustomFunctionData c ()Ljava/util/Map; getFunctions
CustomFunctionData f ()LCommandListenerWrapper; getGameLoopSender
CustomFunctionData g ()LCommandListenerWrapper; getCompilationContext
CustomFunctionData h ()LTags; getTags
CustomFunctionData b (LIResourceManager;LMinecraftKey;)Ljava/util/List; lambda$onResourceManagerReload$1
IMinecraftServer E ()Ljava/lang/String; getVersion
IMinecraftServer F ()I getPlayerCount
IMinecraftServer G ()I getMaxPlayers
IMinecraftServer H ()[Ljava/lang/String; getPlayers
IMinecraftServer J ()Z isDebugging
IMinecraftServer P ()Ljava/lang/String; getWorld
IMinecraftServer a_ (Ljava/lang/String;)Ljava/lang/String; executeRemoteCommand
IMinecraftServer d_ ()LDedicatedServerProperties; getDedicatedServerProperties
IMinecraftServer e (Ljava/lang/String;)V info
IMinecraftServer f (Ljava/lang/String;)V warning
IMinecraftServer u ()Ljava/lang/String; getPlugins
IMinecraftServer e_ ()Ljava/lang/String; getServerIp
IMinecraftServer r ()I getServerPort
IMinecraftServer f_ ()Ljava/lang/String; getServerName
IMinecraftServer g (Ljava/lang/String;)V error
IMinecraftServer h (Ljava/lang/String;)V debug
SystemUtils b ()J getMonotonicMillis
SystemUtils c ()J getMonotonicNanos
SystemUtils d ()J getTimeMillis
SystemUtils b WORKER_COUNT
SystemUtils c BACKGROUND_EXECUTOR
SystemUtils a timeSource
SystemUtils d LOGGER
SystemUtils k ()Ljava/util/concurrent/ExecutorService; makeBackgroundExecutor
SystemUtils e ()Ljava/util/concurrent/Executor; backgroundExecutor
SystemUtils f ()V shutdownBackgroundExecutor
SystemUtils b (Ljava/lang/Throwable;)V throwAsRuntime
SystemUtils g ()LSystemUtils$OS; getPlatform
SystemUtils h ()Ljava/util/stream/Stream; getVmArguments
SystemUtils b (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; findPreviousInIterable
SystemUtils i ()Lit/unimi/dsi/fastutil/Hash$Strategy; identityStrategy
SystemUtils b (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; sequence
SystemUtils c (Ljava/lang/Throwable;)Ljava/lang/Throwable; pauseInIde
SystemUtils d (Ljava/lang/Throwable;)Ljava/lang/String; describeError
SystemUtils j ()Lorg/apache/logging/log4j/Logger; access$100
SystemUtils$IdentityHashingStrategy a INSTANCE
SystemUtils$IdentityHashingStrategy b $VALUES
SystemUtils$IdentityHashingStrategy values ()[LSystemUtils$IdentityHashingStrategy; values
SystemUtils$IdentityHashingStrategy valueOf (Ljava/lang/String;)LSystemUtils$IdentityHashingStrategy; valueOf
SystemUtils$IdentityHashingStrategy hashCode (Ljava/lang/Object;)I hashCode
SystemUtils$IdentityHashingStrategy equals (Ljava/lang/Object;Ljava/lang/Object;)Z equals
SystemUtils$OS a LINUX
SystemUtils$OS b SOLARIS
SystemUtils$OS c WINDOWS
SystemUtils$OS d OSX
SystemUtils$OS e UNKNOWN
SystemUtils$OS f $VALUES
SystemUtils$OS values ()[LSystemUtils$OS; values
SystemUtils$OS valueOf (Ljava/lang/String;)LSystemUtils$OS; valueOf
SystemUtils$OS b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
SystemUtils$OS c (Ljava/net/URL;)Ljava/lang/Process; lambda$openUrl$0
ScoreboardServer d (LScoreboardObjective;)Ljava/util/List; getScoreboardScorePacketsForObjective
ScoreboardServer a server
ScoreboardServer b trackedObjectives
ScoreboardServer c dirtyListeners
ScoreboardServer b (Ljava/lang/String;LScoreboardTeam;)V removePlayerFromTeam
ScoreboardServer b (LScoreboardObjective;)V onObjectiveChanged
ScoreboardServer c (LScoreboardObjective;)V onObjectiveRemoved
ScoreboardServer b (LScoreboardTeam;)V onTeamChanged
ScoreboardServer c (LScoreboardTeam;)V onTeamRemoved
ScoreboardServer b ()V setDirty
ScoreboardServer e (LScoreboardObjective;)V startTrackingObjective
ScoreboardServer f (LScoreboardObjective;)Ljava/util/List; getStopTrackingPackets
ScoreboardServer g (LScoreboardObjective;)V stopTrackingObjective
ScoreboardServer h (LScoreboardObjective;)I getObjectiveDisplaySlotCount
ScoreboardServer$Action a CHANGE
ScoreboardServer$Action b REMOVE
ScoreboardServer$Action c $VALUES
ScoreboardServer$Action values ()[LScoreboardServer$Action; values
ScoreboardServer$Action valueOf (Ljava/lang/String;)LScoreboardServer$Action; valueOf
BossBattleCustom a ()LMinecraftKey; getKey
BossBattleCustom h id
BossBattleCustom i players
BossBattleCustom j value
BossBattleCustom k max
BossBattleCustom b (LEntityPlayer;)V removePlayer
BossBattleCustom b ()V removeAllPlayers
BossBattleCustom c ()I getValue
BossBattleCustom d ()I getMax
BossBattleCustom b (I)V setMax
BossBattleCustom e ()LIChatBaseComponent; getDisplayName
BossBattleCustom f ()LNBTTagCompound; save
BossBattleCustom c (LEntityPlayer;)V onPlayerConnect
BossBattleCustom d (LEntityPlayer;)V onPlayerDisconnect
BossBattleCustomData a (LBossBattleCustom;)V remove
BossBattleCustomData a (LMinecraftKey;LIChatBaseComponent;)LBossBattleCustom; register
BossBattleCustomData a (LNBTTagCompound;)V load
BossBattleCustomData b ()Ljava/util/Collection; getBattles
BossBattleCustomData c ()LNBTTagCompound; save
BossBattleCustomData a server
BossBattleCustomData b events
BossBattleCustomData b (LEntityPlayer;)V onPlayerDisconnect
CommandAdvancement$Action a GRANT
CommandAdvancement$Action b REVOKE
CommandAdvancement$Action c key
CommandAdvancement$Action d $VALUES
CommandAdvancement$Action values ()[LCommandAdvancement$Action; values
CommandAdvancement$Action valueOf (Ljava/lang/String;)LCommandAdvancement$Action; valueOf
CommandAdvancement$Filter a ONLY
CommandAdvancement$Filter b THROUGH
CommandAdvancement$Filter c FROM
CommandAdvancement$Filter d UNTIL
CommandAdvancement$Filter e EVERYTHING
CommandAdvancement$Filter f parents
CommandAdvancement$Filter g children
CommandAdvancement$Filter h $VALUES
CommandAdvancement$Filter values ()[LCommandAdvancement$Filter; values
CommandAdvancement$Filter valueOf (Ljava/lang/String;)LCommandAdvancement$Filter; valueOf
CommandAdvancement$Filter b (LCommandAdvancement$Filter;)Z access$100
CommandClone$Mode a FORCE
CommandClone$Mode b MOVE
CommandClone$Mode c NORMAL
CommandClone$Mode d canOverlap
CommandClone$Mode e $VALUES
CommandClone$Mode values ()[LCommandClone$Mode; values
CommandClone$Mode valueOf (Ljava/lang/String;)LCommandClone$Mode; valueOf
CommandXp$Unit a POINTS
CommandXp$Unit b LEVELS
CommandXp$Unit c add
CommandXp$Unit d set
CommandXp$Unit e name
CommandXp$Unit f query
CommandXp$Unit g $VALUES
CommandXp$Unit values ()[LCommandXp$Unit; values
CommandXp$Unit valueOf (Ljava/lang/String;)LCommandXp$Unit; valueOf
CommandXp$Unit b (LEntityPlayer;)I lambda$static$1
CommandXp$Unit b (LEntityPlayer;Ljava/lang/Integer;)Z lambda$static$0
CommandFill$Mode a REPLACE
CommandFill$Mode b OUTLINE
CommandFill$Mode c HOLLOW
CommandFill$Mode d DESTROY
CommandFill$Mode e filter
CommandFill$Mode f $VALUES
CommandFill$Mode values ()[LCommandFill$Mode; values
CommandFill$Mode valueOf (Ljava/lang/String;)LCommandFill$Mode; valueOf
CommandFill$Mode b (LStructureBoundingBox;LBlockPosition;LArgumentTileLocation;LWorldServer;)LArgumentTileLocation; lambda$static$2
CommandFill$Mode c (LStructureBoundingBox;LBlockPosition;LArgumentTileLocation;LWorldServer;)LArgumentTileLocation; lambda$static$1
CommandFill$Mode d (LStructureBoundingBox;LBlockPosition;LArgumentTileLocation;LWorldServer;)LArgumentTileLocation; lambda$static$0
Advancement a parent
Advancement b display
Advancement c rewards
Advancement d key
Advancement e criteria
Advancement f requirements
Advancement g children
Advancement h chatComponent
Advancement f ()Ljava/util/Map; getCriteria
Advancement h ()LMinecraftKey; getName
Advancement b ()LAdvancement; getParent
Advancement c ()LAdvancementDisplay; getDisplay
Advancement d ()LAdvancementRewards; getRewards
Advancement toString ()Ljava/lang/String; toString
Advancement e ()Ljava/lang/Iterable; getChildren
Advancement g ()I getMaxCriteraRequired
Advancement equals (Ljava/lang/Object;)Z equals
Advancement hashCode ()I hashCode
Advancement i ()[[Ljava/lang/String; getRequirements
Advancement j ()LIChatBaseComponent; getChatComponent
Advancements b advancements
Advancements a LOGGER
Advancements c roots
Advancements d tasks
Advancements e listener
Advancements b ()Ljava/lang/Iterable; getRoots
Advancements c ()Ljava/util/Collection; getAllAdvancements
CommandSetBlock$Mode a REPLACE
CommandSetBlock$Mode b DESTROY
CommandSetBlock$Mode c $VALUES
CommandSetBlock$Mode values ()[LCommandSetBlock$Mode; values
CommandSetBlock$Mode valueOf (Ljava/lang/String;)LCommandSetBlock$Mode; valueOf
AdvancementProgress a ()Z isDone
AdvancementProgress c (Ljava/lang/String;)LCriterionProgress; getCriterionProgress
AdvancementProgress e ()Ljava/lang/Iterable; getRemainingCriteria
AdvancementProgress f ()Ljava/lang/Iterable; getAwardedCriteria
AdvancementProgress a criteria
AdvancementProgress b requirements
AdvancementProgress b ()Z hasProgress
AdvancementProgress b (Ljava/lang/String;)Z revokeProgress
AdvancementProgress toString ()Ljava/lang/String; toString
AdvancementProgress b (LPacketDataSerializer;)LAdvancementProgress; fromNetwork
AdvancementProgress c ()F getPercent
AdvancementProgress d ()Ljava/lang/String; getProgressText
AdvancementProgress h ()I countCompletedRequirements
AdvancementProgress g ()Ljava/util/Date; getFirstProgressDate
AdvancementProgress compareTo (Ljava/lang/Object;)I compareTo
AdvancementProgress b (LAdvancementProgress;)Ljava/util/Map; access$000
DedicatedPlayerList b ()LDedicatedServer; getServer
DedicatedPlayerList a LOGGER
DedicatedPlayerList b (Lcom/mojang/authlib/GameProfile;)V deop
DedicatedPlayerList c (Lcom/mojang/authlib/GameProfile;)V blackList
DedicatedPlayerList d (Lcom/mojang/authlib/GameProfile;)V whiteList
DedicatedPlayerList w ()V saveIpBanList
DedicatedPlayerList x ()V saveUserBanList
DedicatedPlayerList y ()V loadIpBanList
DedicatedPlayerList z ()V loadUserBanList
DedicatedPlayerList A ()V loadOps
DedicatedPlayerList B ()V saveOps
DedicatedPlayerList C ()V loadWhiteList
DedicatedPlayerList D ()V saveWhiteList
DedicatedPlayerList e (Lcom/mojang/authlib/GameProfile;)Z isWhiteListed
DedicatedPlayerList f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
DedicatedPlayerList c ()Lnet/minecraft/server/MinecraftServer; getServer
DedicatedServer j serverCommandQueue
DedicatedServer k remoteStatusListener
DedicatedServer l remoteControlCommandListener
DedicatedServer m remoteControlListener
DedicatedServer n propertyManager
DedicatedServer a (Ljava/lang/String;LCommandListenerWrapper;)V issueCommand
DedicatedServer bc ()V handleCommandQueue
DedicatedServer bf ()Z convertNames
DedicatedServer bg ()J getMaxTickTime
DedicatedServer o (Z)V setHasWhitelist
DedicatedServer h LOGGER
DedicatedServer i SHA1
DedicatedServer o gameType
DedicatedServer p gui
DedicatedServer d ()Z initServer
DedicatedServer bb ()Ljava/lang/String; getPackHash
DedicatedServer d_ ()LDedicatedServerProperties; getProperties
DedicatedServer f ()Z canGenerateStructures
DedicatedServer g ()LEnumGamemode; getDefaultGameType
DedicatedServer h ()LEnumDifficulty; getDefaultDifficulty
DedicatedServer i ()Z isHardcore
DedicatedServer b (LCrashReport;)LCrashReport; fillReport
DedicatedServer q ()Ljava/util/Optional; getModdedStatus
DedicatedServer e ()V onServerExit
DedicatedServer b (Ljava/util/function/BooleanSupplier;)V tickChildren
DedicatedServer A ()Z isNetherEnabled
DedicatedServer R ()Z getSpawnMonsters
DedicatedServer W ()Z isSnooperEnabled
DedicatedServer m ()Z isDedicatedServer
DedicatedServer n ()Z isEpollEnabled
DedicatedServer bd ()LDedicatedPlayerList; getPlayerList
DedicatedServer p ()Z isPublished
DedicatedServer e_ ()Ljava/lang/String; getServerIp
DedicatedServer r ()I getServerPort
DedicatedServer f_ ()Ljava/lang/String; getServerName
DedicatedServer be ()V showGui
DedicatedServer aj ()Z hasGui
DedicatedServer o ()Z isCommandBlockEnabled
DedicatedServer an ()I getSpawnProtectionRadius
DedicatedServer j ()I getOperatorUserPermissionLevel
DedicatedServer k ()I getFunctionCompilationLevel
DedicatedServer c (I)V setPlayerIdleTimeout
DedicatedServer l ()Z shouldRconBroadcast
DedicatedServer I_ ()Z shouldInformAdmins
DedicatedServer aw ()I getAbsoluteMaxWorldSize
DedicatedServer az ()I getCompressionThreshold
DedicatedServer bp ()V waitForRetry
DedicatedServer u ()Ljava/lang/String; getPluginNames
DedicatedServer a_ (Ljava/lang/String;)Ljava/lang/String; runCommand
DedicatedServer s ()V stopServer
DedicatedServer ag ()LPlayerList; getPlayerList
DedicatedServer l (Ljava/lang/String;)V lambda$runCommand$3
DedicatedServer bq ()Ljava/lang/String; lambda$fillReport$1
DedicatedServer br ()Ljava/lang/String; lambda$fillReport$0
DedicatedServer bh ()Lorg/apache/logging/log4j/Logger; access$000
DedicatedServerProperties A resourcePackHash
DedicatedServerProperties B resourcePackSha1
DedicatedServerProperties C hardcore
DedicatedServerProperties D allowNether
DedicatedServerProperties E spawnMonsters
DedicatedServerProperties F snooperEnabled
DedicatedServerProperties G useNativeTransport
DedicatedServerProperties H enableCommandBlock
DedicatedServerProperties I spawnProtection
DedicatedServerProperties J opPermissionLevel
DedicatedServerProperties K functionPermissionLevel
DedicatedServerProperties L maxTickTime
DedicatedServerProperties M viewDistance
DedicatedServerProperties N maxPlayers
DedicatedServerProperties O networkCompressionThreshold
DedicatedServerProperties P broadcastRconToOps
DedicatedServerProperties Q broadcastConsoleToOps
DedicatedServerProperties R maxWorldSize
DedicatedServerProperties S playerIdleTimeout
DedicatedServerProperties T whiteList
DedicatedServerProperties a onlineMode
DedicatedServerProperties b preventProxyConnections
DedicatedServerProperties c serverIp
DedicatedServerProperties d spawnAnimals
DedicatedServerProperties e spawnNpcs
DedicatedServerProperties f pvp
DedicatedServerProperties g allowFlight
DedicatedServerProperties h resourcePack
DedicatedServerProperties i motd
DedicatedServerProperties j forceGamemode
DedicatedServerProperties k enforceWhitelist
DedicatedServerProperties l generateStructures
DedicatedServerProperties m difficulty
DedicatedServerProperties n gamemode
DedicatedServerProperties o levelName
DedicatedServerProperties p levelSeed
DedicatedServerProperties q levelType
DedicatedServerProperties r generatorSettings
DedicatedServerProperties s serverPort
DedicatedServerProperties t maxBuildHeight
DedicatedServerProperties u announcePlayerAchievements
DedicatedServerProperties v enableQuery
DedicatedServerProperties w queryPort
DedicatedServerProperties x enableRcon
DedicatedServerProperties y rconPort
DedicatedServerProperties z rconPassword
DedicatedServerProperties a (Ljava/nio/file/Path;)LDedicatedServerProperties; load
DedicatedServerProperties b (Ljava/util/Properties;)LPropertyManager; reload
DedicatedServerProperties b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$new$0
DedicatedServerSettings a path
DedicatedServerSettings b properties
DedicatedServerSettings a ()LDedicatedServerProperties; getProperties
DedicatedServerSettings a (Ljava/util/function/UnaryOperator;)LDedicatedServerSettings; setProperty
DedicatedServerSettings b ()V save
PropertyManager b properties
PropertyManager a (Ljava/lang/String;I)I getInt
PropertyManager a (Ljava/lang/String;J)J getLong
PropertyManager a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getString
PropertyManager a (Ljava/lang/String;Z)Z getBoolean
PropertyManager b (Ljava/nio/file/Path;)Ljava/util/Properties; loadPropertiesFile
PropertyManager b (Ljava/util/Properties;)LPropertyManager; reload
PropertyManager c (Ljava/nio/file/Path;)V savePropertiesFile
PropertyManager a LOGGER
PropertyManager c (Ljava/lang/String;)Ljava/lang/String; getStringRaw
PropertyManager b (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)LPropertyManager$EditableProperty; getMutable
PropertyManager b (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)LPropertyManager$EditableProperty; getMutable
PropertyManager b (Ljava/lang/String;I)LPropertyManager$EditableProperty; getMutable
PropertyManager b (Ljava/lang/String;Z)LPropertyManager$EditableProperty; getMutable
PropertyManager b (Ljava/lang/String;)Ljava/lang/Boolean; getLegacyBoolean
PropertyManager$EditableProperty a (Ljava/lang/Object;)LPropertyManager; set
PropertyManager$EditableProperty b key
PropertyManager$EditableProperty c value
PropertyManager$EditableProperty d serializer
PropertyManager$EditableProperty a this$0
PropertyManager$EditableProperty get ()Ljava/lang/Object; get
PlayerListBox a ()V tick
PlayerListBox a server
PlayerListBox b tickCount
PlayerChunk a UNLOADED_CHUNK_ACCESS
PlayerChunk b UNLOADED_CHUNK_ACCESS_FUTURE
PlayerChunk c UNLOADED_CHUNK
PlayerChunk d UNLOADED_CHUNK_FUTURE
PlayerChunk e CHUNK_STATUSES
PlayerChunk f CHUNK_STATES
PlayerChunk g statusFutures
PlayerChunk h fullChunkFuture
PlayerChunk i tickingFuture
PlayerChunk j entityTickingFuture
PlayerChunk k chunkSave
PlayerChunk l oldTicketLevel
PlayerChunk m ticketLevel
PlayerChunk o location
PlayerChunk p dirtyBlocks
PlayerChunk q dirtyCount
PlayerChunk v lightEngine
PlayerChunk x players
PlayerChunk y hasBeenLoaded
PlayerChunk a (LChunkStatus;)Ljava/util/concurrent/CompletableFuture; getStatusFutureUnchecked
PlayerChunk b (I)LChunkStatus; getChunkStatus
PlayerChunk c (I)LPlayerChunk$State; getChunkState
PlayerChunk d ()LChunk; getChunk
PlayerChunk g ()Ljava/util/concurrent/CompletableFuture; getChunkSave
PlayerChunk j ()I getTicketLevel
PlayerChunk l ()Z hasBeenLoaded
PlayerChunk n queueLevel
PlayerChunk r changedSectionFilter
PlayerChunk s sectionsToForceSendLightFor
PlayerChunk t blockChangedLightSectionFilter
PlayerChunk u skyChangedLightSectionFilter
PlayerChunk w onLevelChange
PlayerChunk b (LChunkStatus;)Ljava/util/concurrent/CompletableFuture; getFutureIfPresent
PlayerChunk b ()Ljava/util/concurrent/CompletableFuture; getEntityTickingChunkFuture
PlayerChunk c ()Ljava/util/concurrent/CompletableFuture; getFullChunkFuture
PlayerChunk e ()LChunkStatus; getLastAvailableStatus
PlayerChunk f ()LIChunkAccess; getLastAvailable
PlayerChunk h ()LPlayerChunk$State; getFullStatus
PlayerChunk i ()LChunkCoordIntPair; getPos
PlayerChunk k ()I getQueueLevel
PlayerChunk d (I)V setQueueLevel
PlayerChunk m ()V refreshAccessibility
PlayerChunk$State a INACCESSIBLE
PlayerChunk$State b BORDER
PlayerChunk$State c TICKING
PlayerChunk$State d ENTITY_TICKING
PlayerChunk$State a (LPlayerChunk$State;)Z isAtLeast
PlayerChunk$State e $VALUES
PlayerChunk$State values ()[LPlayerChunk$State; values
PlayerChunk$State valueOf (Ljava/lang/String;)LPlayerChunk$State; valueOf
PlayerChunkMap A viewDistance
PlayerChunkMap a GOLDEN_TICKET
PlayerChunkMap d updatingChunks
PlayerChunkMap e visibleChunks
PlayerChunkMap f pendingUnload
PlayerChunkMap g loadedChunks
PlayerChunkMap h world
PlayerChunkMap i lightEngine
PlayerChunkMap j executor
PlayerChunkMap k chunkGenerator
PlayerChunkMap z unloadQueue
PlayerChunkMap o updatingChunksModified
PlayerChunkMap q mailboxWorldGen
PlayerChunkMap r mailboxMain
PlayerChunkMap s worldLoadListener
PlayerChunkMap t chunkDistanceManager
PlayerChunkMap v definedStructureManager
PlayerChunkMap x playerMap
PlayerChunkMap y trackedEntities
PlayerChunkMap a (I)V setViewDistance
PlayerChunkMap a (J)LPlayerChunk; getUpdatingChunk
PlayerChunkMap a (LEntity;)V addEntity
PlayerChunkMap a (LEntity;LPacket;)V broadcast
PlayerChunkMap a (LEntityPlayer;)V movePlayer
PlayerChunkMap a (LEntityPlayer;LChunkCoordIntPair;[LPacket;ZZ)V sendChunk
PlayerChunkMap a (LIChunkAccess;)Z saveChunk
PlayerChunkMap a (Ljava/util/function/BooleanSupplier;)V unloadChunks
PlayerChunkMap a (Z)V save
PlayerChunkMap b (J)LPlayerChunk; getVisibleChunk
PlayerChunkMap b (LEntity;)V removeEntity
PlayerChunkMap b (LEntity;LPacket;)V broadcastIncludingSelf
PlayerChunkMap d (LChunkCoordIntPair;)Z isOutsideOfRange
PlayerChunkMap g (LChunkCoordIntPair;)LNBTTagCompound; readChunkData
PlayerChunkMap c LOGGER
PlayerChunkMap l overworldDataStorage
PlayerChunkMap m poiManager
PlayerChunkMap p queueSorter
PlayerChunkMap u tickingGenerated
PlayerChunkMap w storageFolder
PlayerChunkMap b (LChunkCoordIntPair;LEntityPlayer;Z)I checkerboardDistance
PlayerChunkMap b (LChunkCoordIntPair;LEntity;)I checkerboardDistance
PlayerChunkMap c (J)Ljava/util/function/IntSupplier; getChunkQueueLevel
PlayerChunkMap b (LChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; getEntityTickingRangeFuture
PlayerChunkMap close ()V close
PlayerChunkMap b (Ljava/util/function/BooleanSupplier;)V processUnloads
PlayerChunkMap b ()Z promoteChunkMap
PlayerChunkMap f (LChunkCoordIntPair;)Ljava/util/concurrent/CompletableFuture; scheduleChunkLoad
PlayerChunkMap b (LPlayerChunk;LChunkStatus;)Ljava/util/concurrent/CompletableFuture; scheduleChunkGeneration
PlayerChunkMap c (LChunkCoordIntPair;)V releaseLightTicket
PlayerChunkMap c (LPlayerChunk;)Ljava/util/concurrent/CompletableFuture; protoChunkToFullChunk
PlayerChunkMap b (LPlayerChunk;)Ljava/util/concurrent/CompletableFuture; unpackTicks
PlayerChunkMap c ()I getTickingGenerated
PlayerChunkMap d ()I size
PlayerChunkMap e ()LPlayerChunkMap$DistanceManager; getDistanceManager
PlayerChunkMap f ()Ljava/lang/Iterable; getChunks
PlayerChunkMap b (LEntityPlayer;)Z skipPlayer
PlayerChunkMap c (LEntityPlayer;)LSectionPosition; updatePlayerPos
PlayerChunkMap g ()V tick
PlayerChunkMap h ()LVillagePlace; getPoiManager
PlayerChunkMap b (LChunk;)V lambda$packTicks$47
PlayerChunkMap c (LChunk;)Ljava/lang/String; lambda$printFuture$43
PlayerChunkMap d (LChunk;)Ljava/lang/Integer; lambda$dumpChunks$42
PlayerChunkMap e (LChunk;)Ljava/lang/Integer; lambda$dumpChunks$41
PlayerChunkMap b (LIChunkAccess;)Ljava/util/Optional; lambda$dumpChunks$40
PlayerChunkMap c (LIChunkAccess;)LChunk; lambda$null$36
PlayerChunkMap b (LPlayerChunk;Ljava/lang/Runnable;)V lambda$postProcess$35
PlayerChunkMap c (LPlayerChunk;Ljava/lang/Runnable;)V lambda$postProcess$31
PlayerChunkMap b (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$postProcess$30
PlayerChunkMap b (I)LChunkStatus; lambda$postProcess$28
PlayerChunkMap d (LPlayerChunk;Ljava/lang/Runnable;)V lambda$protoChunkToFullChunk$27
PlayerChunkMap d (LPlayerChunk;)LPlayerChunk$State; lambda$null$24
PlayerChunkMap h (LChunkCoordIntPair;)Ljava/lang/String; lambda$releaseLightTicket$23
PlayerChunkMap i (LChunkCoordIntPair;)V lambda$releaseLightTicket$22
PlayerChunkMap e (LPlayerChunk;Ljava/lang/Runnable;)V lambda$scheduleChunkGeneration$21
PlayerChunkMap b (LPlayerChunk;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$null$17
PlayerChunkMap b (LChunkStatus;I)LChunkStatus; lambda$scheduleChunkGeneration$15
PlayerChunkMap j (LChunkCoordIntPair;)Lcom/mojang/datafixers/util/Either; lambda$scheduleChunkLoad$14
PlayerChunkMap c (LPlayerChunk;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; lambda$null$12
PlayerChunkMap e (LPlayerChunk;)V lambda$saveAllChunks$9
PlayerChunkMap j ()Z lambda$saveAllChunks$8
PlayerChunkMap d (LIChunkAccess;)Z lambda$saveAllChunks$6
PlayerChunkMap f (LPlayerChunk;)LIChunkAccess; lambda$saveAllChunks$5
PlayerChunkMap c (Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either; lambda$getEntityTickingRangeFuture$4
PlayerChunkMap b (Ljava/util/List;)LChunk; lambda$null$3
PlayerChunkMap c (I)LChunkStatus; lambda$getEntityTickingRangeFuture$2
PlayerChunkMap d (J)I lambda$getChunkQueueLevel$0
PlayerChunkMap b (LPlayerChunkMap;)LWorldServer; access$500
PlayerChunkMap c (LPlayerChunkMap;)I access$600
PlayerChunkMap$EntityTracker b trackerEntry
PlayerChunkMap$EntityTracker c tracker
PlayerChunkMap$EntityTracker d trackingDistance
PlayerChunkMap$EntityTracker f trackedPlayers
PlayerChunkMap$EntityTracker a (LEntityPlayer;)V clear
PlayerChunkMap$EntityTracker a (LPacket;)V broadcast
PlayerChunkMap$EntityTracker a (Ljava/util/List;)V track
PlayerChunkMap$EntityTracker b (LEntityPlayer;)V updatePlayer
PlayerChunkMap$EntityTracker b (LPacket;)V broadcastIncludingSelf
PlayerChunkMap$EntityTracker e lastSectionPos
PlayerChunkMap$EntityTracker a this$0
PlayerChunkMap$EntityTracker equals (Ljava/lang/Object;)Z equals
PlayerChunkMap$EntityTracker hashCode ()I hashCode
PlayerChunkMap$EntityTracker b ()I getEffectiveRange
PlayerChunkMap$EntityTracker b (LPlayerChunkMap$EntityTracker;)LSectionPosition; access$100
PlayerChunkMap$EntityTracker c (LPlayerChunkMap$EntityTracker;)LEntityTrackerEntry; access$200
ChunkMapDistance d tickets
ChunkMapDistance h pendingChunkUpdates
ChunkMapDistance n currentTick
ChunkMapDistance a ()V purgeTickets
ChunkMapDistance a (JLTicket;)V addTicket
ChunkMapDistance b (JLTicket;)V removeTicket
ChunkMapDistance c (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkMapDistance b (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkMapDistance a LOGGER
ChunkMapDistance b PLAYER_TICKET_LEVEL
ChunkMapDistance c playersPerChunk
ChunkMapDistance e ticketTracker
ChunkMapDistance f naturalSpawnChunkCounter
ChunkMapDistance g playerTicketManager
ChunkMapDistance i ticketThrottler
ChunkMapDistance j ticketThrottlerInput
ChunkMapDistance k ticketThrottlerReleaser
ChunkMapDistance l ticketsToRelease
ChunkMapDistance m mainThreadExecutor
ChunkMapDistance b (J)LPlayerChunk; getChunk
ChunkMapDistance e (J)LArraySetSorted; getTickets
ChunkMapDistance b (LSectionPosition;LEntityPlayer;)V removePlayer
ChunkMapDistance c (J)Ljava/lang/String; getTicketDebugString
ChunkMapDistance b ()I getNaturalSpawnChunkCount
ChunkMapDistance d (J)Z hasPlayersNearby
ChunkMapDistance c ()Ljava/lang/String; getDebugStatus
ChunkMapDistance f (J)Lit/unimi/dsi/fastutil/objects/ObjectSet; lambda$addPlayer$7
ChunkMapDistance g (J)LArraySetSorted; lambda$getTickets$6
ChunkMapDistance h (J)V lambda$null$4
ChunkMapDistance f ()V lambda$null$3
ChunkMapDistance b (LTicket;)Z lambda$purgeStaleTickets$0
ChunkMapDistance d ()Lorg/apache/logging/log4j/Logger; access$100
ChunkMapDistance e ()I access$200
ChunkMapDistance b (LChunkMapDistance;)LMailbox; access$300
ChunkMapDistance c (LChunkMapDistance;)LMailbox; access$400
ChunkMapDistance d (LChunkMapDistance;)LChunkTaskQueueSorter; access$500
ChunkMapDistance e (LChunkMapDistance;)Ljava/util/concurrent/Executor; access$600
ChunkMapDistance b (LChunkMapDistance;JLTicket;)V access$800
ChunkMapDistance f (LChunkMapDistance;)Lit/unimi/dsi/fastutil/longs/LongSet; access$900
ChunkMapDistance g (LChunkMapDistance;)Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap; access$1000
ChunkMapDistance h (LChunkMapDistance;)Ljava/util/Set; access$1100
BossBattleServer j visible
BossBattleServer a (F)V setProgress
BossBattleServer a (LEntityPlayer;)V addPlayer
BossBattleServer a (LPacketPlayOutBoss$Action;)V sendUpdate
BossBattleServer a (Z)LBossBattle; setDarkenSky
BossBattleServer b (LEntityPlayer;)V removePlayer
BossBattleServer b (Z)LBossBattle; setPlayMusic
BossBattleServer c (Z)LBossBattle; setCreateFog
BossBattleServer d (Z)V setVisible
BossBattleServer h ()Ljava/util/Collection; getPlayers
BossBattleServer h players
BossBattleServer i unmodifiablePlayers
BossBattleServer b ()V removeAllPlayers
BossBattleServer g ()Z isVisible
ChunkProviderServer a playerChunkMap
ChunkProviderServer d chunkMapDistance
ChunkProviderServer e chunkGenerator
ChunkProviderServer f world
ChunkProviderServer g serverThread
ChunkProviderServer h lightEngine
ChunkProviderServer i serverThreadQueue
ChunkProviderServer j worldPersistentData
ChunkProviderServer k lastTickTime
ChunkProviderServer l allowMonsters
ChunkProviderServer m allowAnimals
ChunkProviderServer n cachePos
ChunkProviderServer o cacheStatus
ChunkProviderServer p cacheChunk
ChunkProviderServer a (I)V setViewDistance
ChunkProviderServer a (J)LPlayerChunk; getChunk
ChunkProviderServer a (LEntity;LPacket;)V broadcastIncludingSelf
ChunkProviderServer a (LEntityPlayer;)V movePlayer
ChunkProviderServer a (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkProviderServer a (Ljava/util/function/BooleanSupplier;)V tick
ChunkProviderServer a (Z)V save
ChunkProviderServer b (II)Z isLoaded
ChunkProviderServer b (LBlockPosition;)V flagDirty
ChunkProviderServer b (LEntity;LPacket;)V broadcast
ChunkProviderServer b (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkProviderServer c (IILChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFutureMainThread
ChunkProviderServer c (LEntity;)V removeEntity
ChunkProviderServer d ()Z runTasks
ChunkProviderServer d (LEntity;)V addEntity
ChunkProviderServer g ()LChunkGenerator; getChunkGenerator
ChunkProviderServer i ()LWorldPersistentData; getWorldPersistentData
ChunkProviderServer m ()V clearCache
ChunkProviderServer n ()Z tickDistanceManager
ChunkProviderServer o ()V tickChunks
ChunkProviderServer b MAGIC_NUMBER
ChunkProviderServer c CHUNK_STATUSES
ChunkProviderServer b ()I getTickingGenerated
ChunkProviderServer b (IILChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFuture
ChunkProviderServer c (II)LIBlockAccess; getChunkForLighting
ChunkProviderServer c ()LWorld; getLevel
ChunkProviderServer b (LEntity;)Z isInAccessibleChunk
ChunkProviderServer close ()V close
ChunkProviderServer e ()Ljava/lang/String; gatherStats
ChunkProviderServer f ()I getPendingTasksCount
ChunkProviderServer h ()I getLoadedChunksCount
ChunkProviderServer b (LChunkCoordIntPair;)Ljava/lang/String; getChunkDebugData
ChunkProviderServer j ()LVillagePlace; getPoiManager
ChunkProviderServer k ()LLightEngine; getLightEngine
ChunkProviderServer l ()LIBlockAccess; getLevel
ChunkProviderServer d (IILChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; lambda$getChunkFuture$3
ChunkProviderServer e (IILChunkStatus;Z)LIChunkAccess; lambda$getChunk$0
ChunkProviderServer b (LChunkProviderServer;)LWorldServer; access$200
ChunkProviderServer c (LChunkProviderServer;)Z access$300
ChunkProviderServer d (LChunkProviderServer;)LLightEngineThreaded; access$400
EntityTrackerEntry c tracker
EntityTrackerEntry g xLoc
EntityTrackerEntry h yLoc
EntityTrackerEntry i zLoc
EntityTrackerEntry j yRot
EntityTrackerEntry k xRot
EntityTrackerEntry l headYaw
EntityTrackerEntry n tickCounter
EntityTrackerEntry a (LPacket;)V broadcastIncludingSelf
EntityTrackerEntry a LOGGER
EntityTrackerEntry b level
EntityTrackerEntry d updateInterval
EntityTrackerEntry e trackDelta
EntityTrackerEntry f broadcast
EntityTrackerEntry m ap
EntityTrackerEntry o teleportDelay
EntityTrackerEntry p lastPassengers
EntityTrackerEntry q wasRiding
EntityTrackerEntry r wasOnGround
EntityTrackerEntry b (LEntityPlayer;)V addPairing
EntityTrackerEntry c ()V sendDirtyEntityData
EntityTrackerEntry d ()V updateSentPos
EntityTrackerEntry b ()LVec3D; sentPos
WorldServer A server
WorldServer B dataManager
WorldServer C everyoneSleeping
WorldServer D emptyTime
WorldServer E portalTravelAgent
WorldServer F nextTickListBlock
WorldServer G nextTickListFluid
WorldServer H navigators
WorldServer J ticking
WorldServer K mobSpawnerTrader
WorldServer a tickingEntities
WorldServer b savingDisabled
WorldServer c persistentRaid
WorldServer v globalEntityList
WorldServer w entitiesById
WorldServer x entitiesByUUID
WorldServer y entitiesToAdd
WorldServer z players
WorldServer B ()LPersistentRaid; getPersistentRaid
WorldServer a (IIZ)Z setForceLoaded
WorldServer a (LChunk;)V unloadChunk
WorldServer a (LEntity;)V entityJoinedWorld
WorldServer a (LEntityLightning;)V strikeLightning
WorldServer a (LEntityPlayer;)V addPlayerCommand
WorldServer a (LIProgressUpdate;ZZ)V save
WorldServer a (Ljava/util/UUID;)LEntity; getEntity
WorldServer a (Ljava/util/function/BooleanSupplier;)V doTick
WorldServer ab ()V wakeupPlayers
WorldServer ac ()V clearWeather
WorldServer b (LEntity;)V chunkCheck
WorldServer b (LEntityPlayer;)V addPlayerPortal
WorldServer c (LEntityPlayer;)V addPlayerJoin
WorldServer d (LEntity;)Z addEntitySerialized
WorldServer d (LEntityPlayer;)V addPlayerRespawn
WorldServer e (LEntity;)V addEntityTeleport
WorldServer e (LEntityPlayer;)V removePlayer
WorldServer f (LEntity;)Z addEntityChunk
WorldServer f (LEntityPlayer;)V addPlayer0
WorldServer g (LEntity;)V unregisterEntity
WorldServer g ()LBlockPosition; getDimensionSpawn
WorldServer h (LEntity;)V removeEntity
WorldServer i_ ()V everyoneSleeping
WorldServer k (LEntity;)Z addEntity0
WorldServer l (LEntity;)Z isUUIDTaken
WorldServer k_ ()V resetEmptyTime
WorldServer m (LEntity;)V registerEntity
WorldServer n (LEntity;)V removeEntityFromChunk
WorldServer l_ ()LPortalTravelAgent; getTravelAgent
WorldServer u ()V checkSession
WorldServer v ()LWorldNBTStorage; getDataManager
WorldServer w ()LWorldPersistentData; getWorldPersistentData
WorldServer y ()Lit/unimi/dsi/fastutil/longs/LongSet; getForceLoadedChunks
WorldServer u LOGGER
WorldServer I blockEvents
WorldServer b ()Z isHandlingTick
WorldServer j_ ()LScoreboardServer; getScoreboard
WorldServer b (LNextTickListEntry;)V tickBlock
WorldServer f ()V generateBonusItemsNearSpawn
WorldServer h ()V saveLevelData
WorldServer i ()Ljava/util/List; getDragons
WorldServer j ()LEntityPlayer; getRandomPlayer
WorldServer k ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; getMobCategoryCounts
WorldServer c (LEntity;)Z addFreshEntity
WorldServer b (ILBlockPosition;I)V globalLevelEvent
WorldServer l ()LChunkProviderServer; getChunkSource
WorldServer ad ()V runBlockEvents
WorldServer m ()LTickListServer; getBlockTicks
WorldServer n ()LTickListServer; getLiquidTicks
WorldServer o ()Lnet/minecraft/server/MinecraftServer; getServer
WorldServer m_ ()LDefinedStructureManager; getStructureManager
WorldServer r ()LCraftingManager; getRecipeManager
WorldServer s ()LTagRegistry; getTagManager
WorldServer t ()Z noSave
WorldServer x ()I getFreeMapId
WorldServer a_ (LBlockPosition;)V setDefaultSpawnPos
WorldServer z ()Ljava/util/List; players
WorldServer A ()LVillagePlace; getPoiManager
WorldServer b_ (LBlockPosition;)Z isVillage
WorldServer b (LSectionPosition;)I sectionsToVillage
WorldServer c_ (LBlockPosition;)LRaid; getRaidAt
WorldServer e (LBlockPosition;)Z isRaided
WorldServer C ()LScoreboard; getScoreboard
WorldServer D ()LIChunkProvider; getChunkSource
WorldServer E ()LTickList; getLiquidTicks
WorldServer F ()LTickList; getBlockTicks
WorldServer b (LBlockPosition;LPointOfInterestType;)V lambda$null$14
WorldServer c (LBlockPosition;LPointOfInterestType;)V lambda$onBlockStateChange$13
WorldServer D (LBlockPosition;)V lambda$null$12
WorldServer c (Ljava/lang/String;)LWorldMap; lambda$getMapData$11
WorldServer o (LEntity;)Ljava/lang/String; lambda$tickPassenger$10
WorldServer p (LEntity;)Ljava/lang/String; lambda$tickNonPassenger$9
WorldServer g (LEntityPlayer;)V lambda$wakeUpAllPlayers$7
WorldServer q (LEntity;)V lambda$tick$6
WorldServer h (LEntityPlayer;)Z lambda$tick$5
WorldServer ae ()LPersistentRaid; lambda$new$4
EntityPlayer b playerConnection
EntityPlayer bR locale
EntityPlayer bS removeQueue
EntityPlayer bT advancementDataPlayer
EntityPlayer bU serverStatisticManager
EntityPlayer bV lastHealthScored
EntityPlayer bW lastFoodScored
EntityPlayer bX lastAirScored
EntityPlayer bY lastArmorScored
EntityPlayer c server
EntityPlayer bZ lastExpLevelScored
EntityPlayer ca lastExpTotalScored
EntityPlayer cb lastHealthSent
EntityPlayer cc lastFoodSent
EntityPlayer cd lastSentSaturationZero
EntityPlayer ce lastSentExp
EntityPlayer cf invulnerableTicks
EntityPlayer cj spectatedEntity
EntityPlayer ck worldChangeInvuln
EntityPlayer cm recipeBook
EntityPlayer cv containerCounter
EntityPlayer d playerInteractManager
EntityPlayer f ping
EntityPlayer g viewingCredits
EntityPlayer A ()LServerStatisticManager; getStatisticManager
EntityPlayer D ()LEntity; getSpecatorTarget
EntityPlayer G ()LIChatBaseComponent; getPlayerListName
EntityPlayer J ()LAdvancementDataPlayer; getAdvancementData
EntityPlayer a (LContainer;)V updateInventory
EntityPlayer a (LEntityPlayer;Z)V copyFrom
EntityPlayer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
EntityPlayer b (LWorldServer;)V triggerDimensionAdvancements
EntityPlayer e (LEntity;)V setSpectatorTarget
EntityPlayer eJ ()Z canPvP
EntityPlayer eK ()V nextContainerCounter
EntityPlayer i ()V playerTick
EntityPlayer v_ ()V broadcastCarriedItem
EntityPlayer p ()V triggerHealthUpdate
EntityPlayer s ()LWorldServer; getWorldServer
EntityPlayer u_ ()V syncInventory
EntityPlayer x ()LEnumChatVisibility; getChatFlags
EntityPlayer z ()V resetIdleTimer
EntityPlayer bQ LOGGER
EntityPlayer cg chatVisibility
EntityPlayer ch canChatColor
EntityPlayer ci lastActionTime
EntityPlayer cl seenCredits
EntityPlayer cn levitationStartPos
EntityPlayer co levitationStartTime
EntityPlayer cp disconnected
EntityPlayer cq enteredNetherPosition
EntityPlayer cr lastSectionPos
EntityPlayer cs respawnDimension
EntityPlayer ct respawnPosition
EntityPlayer cu respawnForced
EntityPlayer e ignoreSlotUpdateHack
EntityPlayer u (I)I getCoprime
EntityPlayer b (LNBTTagCompound;)V addAdditionalSaveData
EntityPlayer b (I)V setExperienceLevels
EntityPlayer c (I)V giveExperienceLevels
EntityPlayer e ()V onEnterCombat
EntityPlayer f ()V onLeaveCombat
EntityPlayer g ()LItemCooldown; createItemCooldowns
EntityPlayer h ()V tick
EntityPlayer b (LBlockPosition;)V startSleeping
EntityPlayer g (LBlockPosition;)Z isReachableBedBlock
EntityPlayer b (LBlockPosition;LEnumDirection;)Z bedBlocked
EntityPlayer j ()V stopRiding
EntityPlayer b (LDamageSource;)Z isInvulnerableTo
EntityPlayer c (LBlockPosition;)V onChangedBlock
EntityPlayer k ()V closeContainer
EntityPlayer m ()V doCloseContainer
EntityPlayer b (Ljava/util/Collection;)I resetRecipes
EntityPlayer d (I)V giveExperiencePoints
EntityPlayer n ()V disconnect
EntityPlayer o ()Z hasDisconnected
EntityPlayer q ()V completeUsingItem
EntityPlayer b (LMobEffect;)V onEffectRemoved
EntityPlayer b (DDD)V forceMove
EntityPlayer b (LEntity;)V magicCrit
EntityPlayer r ()V onUpdateAbilities
EntityPlayer t ()Z isSpectator
EntityPlayer u ()Z isCreative
EntityPlayer v ()Ljava/lang/String; getIpAddress
EntityPlayer w ()Z canChatInColor
EntityPlayer y ()I getPermissionLevel
EntityPlayer B ()LRecipeBookServer; getRecipeBook
EntityPlayer c (LEntity;)V sendRemoveEntity
EntityPlayer d (LEntity;)V cancelRemoveEntity
EntityPlayer C ()V updateInvisibilityStatus
EntityPlayer E ()V processDimensionDelay
EntityPlayer f (LEntity;)V attack
EntityPlayer F ()J getLastActionTime
EntityPlayer H ()Z isChangingDimension
EntityPlayer I ()V hasChangedDimension
EntityPlayer K ()LBlockPosition; getRespawnPosition
EntityPlayer L ()LDimensionManager; getRespawnDimension
EntityPlayer M ()Z isRespawnForced
EntityPlayer N ()LSectionPosition; getLastSectionPos
EntityPlayer O ()LPacket; getAddEntityPacket
EntityPlayer b (ILScoreboardScore;)V lambda$updateScoreForCriteria$0
PlayerInteractManager a world
PlayerInteractManager b player
PlayerInteractManager d gamemode
PlayerInteractManager f lastDigTick
PlayerInteractManager h currentTick
PlayerInteractManager a (LBlockPosition;)Z breakBlock
PlayerInteractManager a (LEnumGamemode;)V setGameMode
PlayerInteractManager b ()LEnumGamemode; getGameMode
PlayerInteractManager d ()Z isCreative
PlayerInteractManager c LOGGER
PlayerInteractManager e isDestroyingBlock
PlayerInteractManager g destroyPos
PlayerInteractManager i hasDelayedDestroy
PlayerInteractManager j delayedDestroyPos
PlayerInteractManager k delayedTickStart
PlayerInteractManager l lastSentState
PlayerInteractManager c ()Z isSurvival
PlayerInteractManager b (LEnumGamemode;)V updateGameMode
LightEngineThreaded B_ ()V queueUpdate
LightEngineThreaded a LOGGER
LightEngineThreaded b taskMailbox
LightEngineThreaded c lightTasks
LightEngineThreaded d chunkMap
LightEngineThreaded e sorterMailbox
LightEngineThreaded f taskPerBatch
LightEngineThreaded g scheduled
LightEngineThreaded close ()V close
LightEngineThreaded b (LChunkCoordIntPair;Z)V retainData
LightEngineThreaded b ()V runUpdate
LightEngineThreaded c ()V lambda$tryScheduleUpdate$22
LightEngineThreaded c (LChunkCoordIntPair;Z)Ljava/lang/String; lambda$lightChunk$19
LightEngineThreaded b (LChunkCoordIntPair;)Ljava/lang/String; lambda$retainData$16
LightEngineThreaded d (LChunkCoordIntPair;Z)V lambda$retainData$15
LightEngineThreaded d ()I lambda$retainData$14
LightEngineThreaded b (LEnumSkyBlock;LSectionPosition;LNibbleArray;)V lambda$queueSectionData$11
LightEngineThreaded e ()I lambda$queueSectionData$10
LightEngineThreaded e (LChunkCoordIntPair;Z)Ljava/lang/String; lambda$enableLightSources$9
LightEngineThreaded f (LChunkCoordIntPair;Z)V lambda$enableLightSources$8
LightEngineThreaded b (LSectionPosition;Z)Ljava/lang/String; lambda$updateSectionStatus$7
LightEngineThreaded c (LSectionPosition;Z)V lambda$updateSectionStatus$6
LightEngineThreaded f ()I lambda$updateSectionStatus$5
LightEngineThreaded c (LChunkCoordIntPair;)Ljava/lang/String; lambda$updateChunkStatus$4
LightEngineThreaded d (LChunkCoordIntPair;)V lambda$updateChunkStatus$3
LightEngineThreaded g ()I lambda$updateChunkStatus$2
LightEngineThreaded b (LBlockPosition;)Ljava/lang/String; lambda$checkBlock$1
LightEngineThreaded c (LBlockPosition;)V lambda$checkBlock$0
LightEngineThreaded$Update a PRE_UPDATE
LightEngineThreaded$Update b POST_UPDATE
LightEngineThreaded$Update c $VALUES
LightEngineThreaded$Update values ()[LLightEngineThreaded$Update; values
LightEngineThreaded$Update valueOf (Ljava/lang/String;)LLightEngineThreaded$Update; valueOf
Ticket c identifier
Ticket a ()LTicketType; getTicketType
Ticket a type
Ticket b ticketLevel
Ticket d createdTick
Ticket equals (Ljava/lang/Object;)Z equals
Ticket hashCode ()I hashCode
Ticket toString ()Ljava/lang/String; toString
Ticket b ()I getTicketLevel
Ticket b (J)Z timedOut
Ticket compareTo (Ljava/lang/Object;)I compareTo
TicketType a START
TicketType b DRAGON
TicketType c PLAYER
TicketType d FORCED
TicketType e LIGHT
TicketType f PORTAL
TicketType g POST_TELEPORT
TicketType h UNKNOWN
TicketType k loadPeriod
TicketType i name
TicketType j comparator
TicketType toString ()Ljava/lang/String; toString
TicketType b ()J timeout
TicketType b (LUnit;LUnit;)I lambda$static$0
ServerConnection f listeningChannels
ServerConnection g connectedChannels
ServerConnection d LOGGER
ServerConnection a SERVER_EVENT_GROUP
ServerConnection b SERVER_EPOLL_EVENT_GROUP
ServerConnection e server
ServerConnection c running
ServerConnection b ()V stop
ServerConnection c ()V tick
ServerConnection d ()Lnet/minecraft/server/MinecraftServer; getServer
ServerConnection e ()Lio/netty/channel/epoll/EpollEventLoopGroup; lambda$static$1
ServerConnection f ()Lio/netty/channel/nio/NioEventLoopGroup; lambda$static$0
ServerConnection b (LServerConnection;)Lnet/minecraft/server/MinecraftServer; access$100
PlayerConnection F receivedMovePackets
PlayerConnection G processedMovePackets
PlayerConnection a networkManager
PlayerConnection b player
PlayerConnection d minecraftServer
PlayerConnection f lastKeepAlive
PlayerConnection g awaitingKeepAlive
PlayerConnection i chatThrottle
PlayerConnection y teleportPos
PlayerConnection z teleportAwait
PlayerConnection a (LPacket;)V sendPacket
PlayerConnection b ()V tick
PlayerConnection b (LIChatBaseComponent;)V disconnect
PlayerConnection c ()V syncPosition
PlayerConnection c (Ljava/lang/String;)V handleCommand
PlayerConnection d ()Z isExemptPlayer
PlayerConnection c LOGGER
PlayerConnection e tickCount
PlayerConnection h keepAliveChallenge
PlayerConnection j dropSpamTickCount
PlayerConnection k expectedAcks
PlayerConnection l firstGoodX
PlayerConnection m firstGoodY
PlayerConnection n firstGoodZ
PlayerConnection o lastGoodX
PlayerConnection p lastGoodY
PlayerConnection q lastGoodZ
PlayerConnection r lastVehicle
PlayerConnection s vehicleFirstGoodX
PlayerConnection t vehicleFirstGoodY
PlayerConnection u vehicleFirstGoodZ
PlayerConnection v vehicleLastGoodX
PlayerConnection w vehicleLastGoodY
PlayerConnection x vehicleLastGoodZ
PlayerConnection A awaitingTeleportTime
PlayerConnection B clientIsFloating
PlayerConnection C aboveGroundTickCount
PlayerConnection D clientVehicleIsFloating
PlayerConnection E aboveGroundVehicleTickCount
PlayerConnection b (LPacketPlayInFlying;)Z containsInvalidValues
PlayerConnection b (LPacketPlayInVehicleMove;)Z containsInvalidValues
PlayerConnection b (Ljava/lang/String;)V warn
PlayerConnection b (LPacket;)Ljava/lang/String; lambda$send$2
LoginListener a networkManager
LoginListener d random
LoginListener f server
LoginListener k loginKey
LoginListener b ()V tick
LoginListener b (LIChatBaseComponent;)V disconnect
LoginListener b UNIQUE_THREAD_ID
LoginListener c LOGGER
LoginListener e nonce
LoginListener g state
LoginListener h tick
LoginListener i gameProfile
LoginListener j serverId
LoginListener l delayedAcceptPlayer
LoginListener c ()V handleAcceptedLogin
LoginListener d ()Ljava/lang/String; getUserName
LoginListener b (LLoginListener;)Lnet/minecraft/server/MinecraftServer; access$100
LoginListener c (LLoginListener;)Ljavax/crypto/SecretKey; access$200
LoginListener e ()Lorg/apache/logging/log4j/Logger; access$300
LoginListener$EnumProtocolState a HELLO
LoginListener$EnumProtocolState b KEY
LoginListener$EnumProtocolState c AUTHENTICATING
LoginListener$EnumProtocolState d NEGOTIATING
LoginListener$EnumProtocolState e READY_TO_ACCEPT
LoginListener$EnumProtocolState f DELAY_ACCEPT
LoginListener$EnumProtocolState g ACCEPTED
LoginListener$EnumProtocolState h $VALUES
LoginListener$EnumProtocolState values ()[LLoginListener$EnumProtocolState; values
LoginListener$EnumProtocolState valueOf (Ljava/lang/String;)LLoginListener$EnumProtocolState; valueOf
PacketStatusListener b minecraftServer
PacketStatusListener c networkManager
PacketStatusListener a DISCONNECT_REASON
PacketStatusListener d hasRequestedStatus
EnumResourcePackType a CLIENT_RESOURCES
EnumResourcePackType b SERVER_DATA
EnumResourcePackType c directory
EnumResourcePackType d $VALUES
EnumResourcePackType values ()[LEnumResourcePackType; values
EnumResourcePackType valueOf (Ljava/lang/String;)LEnumResourcePackType; valueOf
ResourcePackSourceFolder b file
ResourcePackSourceFolder a RESOURCEPACK_FILTER
ResourcePackSourceFolder b (Ljava/io/File;)LIResourcePack; lambda$createSupplier$2
ResourcePackSourceFolder c (Ljava/io/File;)LIResourcePack; lambda$createSupplier$1
ResourcePackSourceFolder d (Ljava/io/File;)Z lambda$static$0
EnumResourcePackVersion a TOO_OLD
EnumResourcePackVersion b TOO_NEW
EnumResourcePackVersion c COMPATIBLE
EnumResourcePackVersion d description
EnumResourcePackVersion e confirmation
EnumResourcePackVersion f $VALUES
EnumResourcePackVersion values ()[LEnumResourcePackVersion; values
EnumResourcePackVersion valueOf (Ljava/lang/String;)LEnumResourcePackVersion; valueOf
EnumResourcePackVersion b ()LIChatBaseComponent; getDescription
EnumResourcePackVersion c ()LIChatBaseComponent; getConfirmation
ResourcePackLoader$Position a TOP
ResourcePackLoader$Position b BOTTOM
ResourcePackLoader$Position c $VALUES
ResourcePackLoader$Position values ()[LResourcePackLoader$Position; values
ResourcePackLoader$Position valueOf (Ljava/lang/String;)LResourcePackLoader$Position; valueOf
ExpirableListEntry b ()Ljava/lang/String; getSource
ExpirableListEntry c ()Ljava/util/Date; getExpires
ExpirableListEntry d ()Ljava/lang/String; getReason
ExpirableListEntry a DATE_FORMAT
ExpirableListEntry b created
ExpirableListEntry c source
ExpirableListEntry d expires
ExpirableListEntry e reason
ExpirableListEntry e ()LIChatBaseComponent; getDisplayName
ExpirableListEntry f ()Z hasExpired
UserCache a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; getProfile
UserCache a (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; getProfile
UserCache a DATE_FORMAT
UserCache c usesAuthentication
UserCache d profilesByName
UserCache e profilesByUUID
UserCache f profileMRUList
UserCache g profileRepository
UserCache b gson
UserCache h file
UserCache i GAMEPROFILE_ENTRY_TYPE
UserCache d ()Z usesAuthentication
UserCache b (Ljava/util/UUID;)LUserCache$UserCacheEntry; getProfileInfo
UserCache b ()V load
UserCache c ()V save
IpBanList a (Ljava/net/SocketAddress;)Z isBanned
IpBanList b (Ljava/net/SocketAddress;)LIpBanEntry; get
IpBanList c (Ljava/net/SocketAddress;)Ljava/lang/String; getIpFromAddress
NameReferencingFileConverter g (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getPlayersFolder
NameReferencingFileConverter e LOGGER
NameReferencingFileConverter a OLD_IPBANLIST
NameReferencingFileConverter b OLD_USERBANLIST
NameReferencingFileConverter c OLD_OPLIST
NameReferencingFileConverter d OLD_WHITELIST
NameReferencingFileConverter b (Lnet/minecraft/server/MinecraftServer;)Z convertIpBanlist
NameReferencingFileConverter c (Lnet/minecraft/server/MinecraftServer;)Z convertOpsList
NameReferencingFileConverter d (Lnet/minecraft/server/MinecraftServer;)Z convertWhiteList
NameReferencingFileConverter b (Ljava/io/File;)V ensureDirectoryExists
NameReferencingFileConverter e (Lnet/minecraft/server/MinecraftServer;)Z serverReadyAfterUserconversion
NameReferencingFileConverter b ()Z areOldUserlistsRemoved
NameReferencingFileConverter f (Lnet/minecraft/server/MinecraftServer;)Z areOldPlayersConverted
NameReferencingFileConverter c (Ljava/io/File;)V renameOldFile
NameReferencingFileConverter b (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; parseDate
PlayerList f maxPlayers
PlayerList h server
PlayerList i players
PlayerList m operators
PlayerList n whitelist
PlayerList q playerFileData
PlayerList r hasWhitelist
PlayerList s viewDistance
PlayerList a ()V reloadWhitelist
PlayerList a (LEntityHuman;)LServerStatisticManager; getStatisticManager
PlayerList a (LEntityHuman;DDDDLDimensionManager;LPacket;)V sendPacketNearby
PlayerList a (LIChatBaseComponent;)V sendMessage
PlayerList a (LIChatBaseComponent;Z)V sendMessage
PlayerList a (LPacket;)V sendAll
PlayerList a (LScoreboardServer;LEntityPlayer;)V sendScoreboard
PlayerList a (LWorldServer;)V setPlayerFileData
PlayerList a (Lcom/mojang/authlib/GameProfile;)V addOp
PlayerList a (Ljava/lang/String;)LEntityPlayer; getPlayer
PlayerList a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)LIChatBaseComponent; attemptLogin
PlayerList a (Z)V setHasWhitelist
PlayerList b (LEntityPlayer;)V savePlayerFile
PlayerList b (Lcom/mojang/authlib/GameProfile;)V removeOp
PlayerList c ()Lnet/minecraft/server/MinecraftServer; getServer
PlayerList c (LEntityPlayer;)V disconnect
PlayerList d ()V tick
PlayerList e (LEntityPlayer;)V updateClient
PlayerList e (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
PlayerList g ()LGameProfileBanList; getProfileBans
PlayerList g (Lcom/mojang/authlib/GameProfile;)LEntityPlayer; processLogin
PlayerList h ()LIpBanList; getIPBans
PlayerList h (Lcom/mojang/authlib/GameProfile;)Z isOp
PlayerList i ()V savePlayers
PlayerList j ()LWhiteList; getWhitelist
PlayerList k ()[Ljava/lang/String; getWhitelisted
PlayerList l ()LOpList; getOPs
PlayerList n ()I getPlayerCount
PlayerList o ()I getMaxPlayers
PlayerList p ()Z getHasWhitelist
PlayerList q ()I getViewDistance
PlayerList r ()LNBTTagCompound; save
PlayerList s ()V shutdown
PlayerList t ()Ljava/util/List; getPlayers
PlayerList u ()V reload
PlayerList b USERBANLIST_FILE
PlayerList c IPBANLIST_FILE
PlayerList d OPLIST_FILE
PlayerList e WHITELIST_FILE
PlayerList a LOGGER
PlayerList g BAN_DATE_FORMAT
PlayerList j playersByUUID
PlayerList k bans
PlayerList l ipBans
PlayerList o stats
PlayerList p advancements
PlayerList t overrideGameMode
PlayerList u allowCheatsForAllPlayers
PlayerList v sendAllPlayerInfoIn
PlayerList d (LEntityPlayer;)V sendPlayerPermissionLevel
PlayerList b (LEntityHuman;LIChatBaseComponent;)V broadcastToAllExceptTeam
PlayerList b (Z)Ljava/lang/String; getPlayerNames
PlayerList e ()[Ljava/lang/String; getPlayerNamesArray
PlayerList f ()[Lcom/mojang/authlib/GameProfile; getPlayerGameProfiles
PlayerList d (Lcom/mojang/authlib/GameProfile;)V whiteList
PlayerList c (Lcom/mojang/authlib/GameProfile;)V blackList
PlayerList m ()[Ljava/lang/String; getOpNames
PlayerList b (Ljava/lang/String;)Ljava/util/List; getPlayersWithAddress
PlayerList c (Z)V setAllowCheatsForAllPlayers
PlayerList f (LEntityPlayer;)LAdvancementDataPlayer; getPlayerAdvancements
PlayerList f (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
PlayerList v ()Z isAllowCheatsForAllPlayers
JsonListEntry f ()Z hasExpired
JsonListEntry g ()Ljava/lang/Object; getKey
JsonListEntry a user
JsonList a ()[Ljava/lang/String; getEntries
JsonList a (LJsonListEntry;)V add
JsonList b ()Z isEnabled
JsonList b (Ljava/lang/Object;)LJsonListEntry; get
JsonList c (Ljava/lang/Object;)V remove
JsonList d ()Z isEmpty
JsonList f ()V save
JsonList g ()V load
JsonList a LOGGER
JsonList b GSON
JsonList c file
JsonList d map
JsonList e enabled
JsonList c ()Ljava/io/File; getFile
JsonList b (LJsonListEntry;)V remove
JsonList d (Ljava/lang/Object;)Z contains
JsonList h ()V removeExpired
JsonList e ()Ljava/util/Collection; getEntries
JsonList c (LJsonListEntry;)Lcom/google/gson/JsonObject; lambda$save$0
GameProfileBanList a (Lcom/mojang/authlib/GameProfile;)Z isBanned
GameProfileBanList b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
WhiteList a (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
WhiteList b (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
net/minecraft/server/MinecraftServer C spawnAnimals
net/minecraft/server/MinecraftServer D spawnNPCs
net/minecraft/server/MinecraftServer E pvpMode
net/minecraft/server/MinecraftServer F allowFlight
net/minecraft/server/MinecraftServer G motd
net/minecraft/server/MinecraftServer N demoMode
net/minecraft/server/MinecraftServer O bonusChest
net/minecraft/server/MinecraftServer R hasTicked
net/minecraft/server/MinecraftServer S lastOverloadTime
net/minecraft/server/MinecraftServer W yggdrasilAuthenticationService
net/minecraft/server/MinecraftServer X minecraftSessionService
net/minecraft/server/MinecraftServer Y gameProfileRepository
net/minecraft/server/MinecraftServer Z userCache
net/minecraft/server/MinecraftServer ab nextTick
net/minecraft/server/MinecraftServer ag resourcePackRepository
net/minecraft/server/MinecraftServer ah resourcePackFolder
net/minecraft/server/MinecraftServer ai commandDispatcher
net/minecraft/server/MinecraftServer aj craftingManager
net/minecraft/server/MinecraftServer ak tagRegistry
net/minecraft/server/MinecraftServer al scoreboardServer
net/minecraft/server/MinecraftServer am persistentCommandStorage
net/minecraft/server/MinecraftServer an bossBattleCustomData
net/minecraft/server/MinecraftServer ao lootPredicateManager
net/minecraft/server/MinecraftServer ap lootTableRegistry
net/minecraft/server/MinecraftServer aq advancementDataWorld
net/minecraft/server/MinecraftServer ar customFunctionData
net/minecraft/server/MinecraftServer as circularTimer
net/minecraft/server/MinecraftServer au forceUpgrade
net/minecraft/server/MinecraftServer av eraseCache
net/minecraft/server/MinecraftServer ax executorService
net/minecraft/server/MinecraftServer d worldLoadListenerFactory
net/minecraft/server/MinecraftServer e proxy
net/minecraft/server/MinecraftServer g serverThread
net/minecraft/server/MinecraftServer j convertable
net/minecraft/server/MinecraftServer k snooper
net/minecraft/server/MinecraftServer l universe
net/minecraft/server/MinecraftServer m tickables
net/minecraft/server/MinecraftServer o methodProfiler
net/minecraft/server/MinecraftServer p serverConnection
net/minecraft/server/MinecraftServer q serverPing
net/minecraft/server/MinecraftServer s dataConverterManager
net/minecraft/server/MinecraftServer t serverIp
net/minecraft/server/MinecraftServer u serverPort
net/minecraft/server/MinecraftServer v worldServer
net/minecraft/server/MinecraftServer w playerList
net/minecraft/server/MinecraftServer x isRunning
net/minecraft/server/MinecraftServer y isStopped
net/minecraft/server/MinecraftServer z ticks
net/minecraft/server/MinecraftServer A onlineMode
net/minecraft/server/MinecraftServer A ()Z getAllowNether
net/minecraft/server/MinecraftServer B ()V startServerThread
net/minecraft/server/MinecraftServer D ()Ljava/lang/Iterable; getWorlds
net/minecraft/server/MinecraftServer E ()Ljava/lang/String; getVersion
net/minecraft/server/MinecraftServer F ()I getPlayerCount
net/minecraft/server/MinecraftServer G ()I getMaxPlayers
net/minecraft/server/MinecraftServer H ()[Ljava/lang/String; getPlayers
net/minecraft/server/MinecraftServer J ()Z isDebugging
net/minecraft/server/MinecraftServer L ()Ljava/security/KeyPair; getKeyPair
net/minecraft/server/MinecraftServer M ()I getPort
net/minecraft/server/MinecraftServer N ()Ljava/lang/String; getSinglePlayerName
net/minecraft/server/MinecraftServer O ()Z isEmbeddedServer
net/minecraft/server/MinecraftServer P ()Ljava/lang/String; getWorld
net/minecraft/server/MinecraftServer R ()Z getSpawnMonsters
net/minecraft/server/MinecraftServer S ()Z isDemoMode
net/minecraft/server/MinecraftServer T ()LConvertable; getConvertable
net/minecraft/server/MinecraftServer U ()Ljava/lang/String; getResourcePack
net/minecraft/server/MinecraftServer V ()Ljava/lang/String; getResourcePackHash
net/minecraft/server/MinecraftServer X ()Z getOnlineMode
net/minecraft/server/MinecraftServer Z ()Z getSpawnAnimals
net/minecraft/server/MinecraftServer a (I)V setPort
net/minecraft/server/MinecraftServer a (LDimensionManager;)LWorldServer; getWorldServer
net/minecraft/server/MinecraftServer a (LEnumGamemode;)V setGamemode
net/minecraft/server/MinecraftServer a (LWorldLoadListener;)V loadSpawn
net/minecraft/server/MinecraftServer a (LWorldPersistentData;)V initializeScoreboards
net/minecraft/server/MinecraftServer a (Ljava/lang/String;)V convertWorld
net/minecraft/server/MinecraftServer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
net/minecraft/server/MinecraftServer a (Z)V safeShutdown
net/minecraft/server/MinecraftServer a (ZZZ)Z saveChunks
net/minecraft/server/MinecraftServer aC ()LAdvancementDataWorld; getAdvancementData
net/minecraft/server/MinecraftServer aD ()LCustomFunctionData; getFunctionData
net/minecraft/server/MinecraftServer aE ()V reload
net/minecraft/server/MinecraftServer aF ()LIReloadableResourceManager; getResourceManager
net/minecraft/server/MinecraftServer aG ()LResourcePackRepository; getResourcePackRepository
net/minecraft/server/MinecraftServer aI ()LCommandDispatcher; getCommandDispatcher
net/minecraft/server/MinecraftServer aJ ()LCommandListenerWrapper; getServerCommandListener
net/minecraft/server/MinecraftServer aK ()LCraftingManager; getCraftingManager
net/minecraft/server/MinecraftServer aL ()LTagRegistry; getTagRegistry
net/minecraft/server/MinecraftServer aM ()LScoreboardServer; getScoreboard
net/minecraft/server/MinecraftServer aO ()LLootTableRegistry; getLootTableRegistry
net/minecraft/server/MinecraftServer aQ ()LGameRules; getGameRules
net/minecraft/server/MinecraftServer aR ()LBossBattleCustomData; getBossBattleCustomData
net/minecraft/server/MinecraftServer ba ()Lorg/apache/logging/log4j/Logger; getLogger
net/minecraft/server/MinecraftServer bb ()Z canSleepForTick
net/minecraft/server/MinecraftServer aa ()Z getSpawnNPCs
net/minecraft/server/MinecraftServer ab ()Z getPVP
net/minecraft/server/MinecraftServer ac ()Z getAllowFlight
net/minecraft/server/MinecraftServer ad ()Ljava/lang/String; getMotd
net/minecraft/server/MinecraftServer ae ()I getMaxBuildHeight
net/minecraft/server/MinecraftServer af ()Z isStopped
net/minecraft/server/MinecraftServer ag ()LPlayerList; getPlayerList
net/minecraft/server/MinecraftServer ah ()LServerConnection; getServerConnection
net/minecraft/server/MinecraftServer an ()I getSpawnProtection
net/minecraft/server/MinecraftServer ao ()Z getForceGamemode
net/minecraft/server/MinecraftServer aq ()I getIdleTimeout
net/minecraft/server/MinecraftServer ar ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
net/minecraft/server/MinecraftServer as ()Lcom/mojang/authlib/GameProfileRepository; getGameProfileRepository
net/minecraft/server/MinecraftServer at ()LUserCache; getUserCache
net/minecraft/server/MinecraftServer au ()LServerPing; getServerPing
net/minecraft/server/MinecraftServer av ()V invalidatePingSample
net/minecraft/server/MinecraftServer b (Z)V setForceUpgrade
net/minecraft/server/MinecraftServer c (I)V setIdleTimeout
net/minecraft/server/MinecraftServer c (Z)V setEraseCache
net/minecraft/server/MinecraftServer d ()Z init
net/minecraft/server/MinecraftServer e ()V exit
net/minecraft/server/MinecraftServer e (Ljava/lang/String;)V info
net/minecraft/server/MinecraftServer f ()Z getGenerateStructures
net/minecraft/server/MinecraftServer f (Ljava/lang/String;)V warning
net/minecraft/server/MinecraftServer g ()LEnumGamemode; getGamemode
net/minecraft/server/MinecraftServer g (Z)V setOnlineMode
net/minecraft/server/MinecraftServer h ()LEnumDifficulty; getDifficulty
net/minecraft/server/MinecraftServer h_ ()Z isRunning
net/minecraft/server/MinecraftServer i ()Z isHardcore
net/minecraft/server/MinecraftServer i (Z)V setSpawnAnimals
net/minecraft/server/MinecraftServer j (Z)V setSpawnNPCs
net/minecraft/server/MinecraftServer k (Ljava/lang/String;)V setMotd
net/minecraft/server/MinecraftServer k (Z)V setPVP
net/minecraft/server/MinecraftServer l (Z)V setAllowFlight
net/minecraft/server/MinecraftServer m (Z)V setForceGamemode
net/minecraft/server/MinecraftServer o ()Z getEnableCommandBlock
net/minecraft/server/MinecraftServer s ()V stop
net/minecraft/server/MinecraftServer t ()Ljava/lang/String; getServerIp
net/minecraft/server/MinecraftServer v ()V sleepForTick
net/minecraft/server/MinecraftServer h LOGGER
net/minecraft/server/MinecraftServer b USERID_CACHE_FILE
net/minecraft/server/MinecraftServer i DATA_RELOAD_INITIAL_TASK
net/minecraft/server/MinecraftServer c DEMO_SETTINGS
net/minecraft/server/MinecraftServer n continousProfiler
net/minecraft/server/MinecraftServer r random
net/minecraft/server/MinecraftServer B preventProxyConnections
net/minecraft/server/MinecraftServer H maxBuildHeight
net/minecraft/server/MinecraftServer I playerIdleTimeout
net/minecraft/server/MinecraftServer f tickTimes
net/minecraft/server/MinecraftServer J keyPair
net/minecraft/server/MinecraftServer K singleplayerName
net/minecraft/server/MinecraftServer L levelIdName
net/minecraft/server/MinecraftServer M levelName
net/minecraft/server/MinecraftServer P resourcePack
net/minecraft/server/MinecraftServer Q resourcePackHash
net/minecraft/server/MinecraftServer T startupState
net/minecraft/server/MinecraftServer U delayProfilerStart
net/minecraft/server/MinecraftServer V forceGameType
net/minecraft/server/MinecraftServer aa lastServerStatus
net/minecraft/server/MinecraftServer ac delayedTasksMaxNextTickTime
net/minecraft/server/MinecraftServer ad mayHaveDelayedTasks
net/minecraft/server/MinecraftServer ae hasWorldScreenshot
net/minecraft/server/MinecraftServer af resources
net/minecraft/server/MinecraftServer at enforceWhitelist
net/minecraft/server/MinecraftServer aw averageTickTime
net/minecraft/server/MinecraftServer ay serverId
net/minecraft/server/MinecraftServer b (LIChatBaseComponent;)V setServerStartupState
net/minecraft/server/MinecraftServer g_ ()LIChatBaseComponent; getStartupState
net/minecraft/server/MinecraftServer j ()I getOperatorUserPermissionLevel
net/minecraft/server/MinecraftServer k ()I getFunctionCompilationLevel
net/minecraft/server/MinecraftServer l ()Z shouldRconBroadcast
net/minecraft/server/MinecraftServer close ()V close
net/minecraft/server/MinecraftServer b (Ljava/lang/String;)V setLocalIp
net/minecraft/server/MinecraftServer run ()V run
net/minecraft/server/MinecraftServer w ()Z pollTask
net/minecraft/server/MinecraftServer bc ()Z pollTaskInternal
net/minecraft/server/MinecraftServer b (LTickTask;)V doRunTask
net/minecraft/server/MinecraftServer x ()Z hasWorldScreenshot
net/minecraft/server/MinecraftServer y ()Ljava/io/File; getWorldScreenshotFile
net/minecraft/server/MinecraftServer z ()Ljava/io/File; getServerDirectory
net/minecraft/server/MinecraftServer b (Ljava/util/function/BooleanSupplier;)V tickChildren
net/minecraft/server/MinecraftServer b (Ljava/lang/Runnable;)V addTickable
net/minecraft/server/MinecraftServer main ([Ljava/lang/String;)V main
net/minecraft/server/MinecraftServer c (Ljava/lang/String;)V setId
net/minecraft/server/MinecraftServer C ()Z isShutdown
net/minecraft/server/MinecraftServer d (Ljava/lang/String;)Ljava/io/File; getFile
net/minecraft/server/MinecraftServer I ()[Lcom/mojang/authlib/GameProfile; getPlayerGameProfiles
net/minecraft/server/MinecraftServer g (Ljava/lang/String;)V error
net/minecraft/server/MinecraftServer h (Ljava/lang/String;)V debug
net/minecraft/server/MinecraftServer getServerModName ()Ljava/lang/String; getServerModName
net/minecraft/server/MinecraftServer b (LCrashReport;)LCrashReport; fillReport
net/minecraft/server/MinecraftServer q ()Ljava/util/Optional; getModdedStatus
net/minecraft/server/MinecraftServer K ()Z isInitialized
net/minecraft/server/MinecraftServer i (Ljava/lang/String;)V setSingleplayerName
net/minecraft/server/MinecraftServer j (Ljava/lang/String;)V setLevelName
net/minecraft/server/MinecraftServer Q ()Ljava/lang/String; getLevelName
net/minecraft/server/MinecraftServer d (Z)V setDifficultyLocked
net/minecraft/server/MinecraftServer e (Z)V setDemo
net/minecraft/server/MinecraftServer f (Z)V setBonusChest
net/minecraft/server/MinecraftServer b (LMojangStatisticsGenerator;)V populateSnooperInitial
net/minecraft/server/MinecraftServer W ()Z isSnooperEnabled
net/minecraft/server/MinecraftServer m ()Z isDedicatedServer
net/minecraft/server/MinecraftServer Y ()Z getPreventProxyConnections
net/minecraft/server/MinecraftServer h (Z)V setPreventProxyConnections
net/minecraft/server/MinecraftServer n ()Z isEpollEnabled
net/minecraft/server/MinecraftServer b (I)V setMaxBuildHeight
net/minecraft/server/MinecraftServer p ()Z isPublished
net/minecraft/server/MinecraftServer ai ()Z isReady
net/minecraft/server/MinecraftServer aj ()Z hasGui
net/minecraft/server/MinecraftServer ak ()I getTickCount
net/minecraft/server/MinecraftServer al ()LMojangStatisticsGenerator; getSnooper
net/minecraft/server/MinecraftServer am ()LIBlockAccess; getCommandSenderWorld
net/minecraft/server/MinecraftServer ap ()Ljava/net/Proxy; getProxy
net/minecraft/server/MinecraftServer aw ()I getAbsoluteMaxWorldSize
net/minecraft/server/MinecraftServer ax ()Z scheduleExecutables
net/minecraft/server/MinecraftServer ay ()Ljava/lang/Thread; getRunningThread
net/minecraft/server/MinecraftServer az ()I getCompressionThreshold
net/minecraft/server/MinecraftServer aA ()J getNextTickTime
net/minecraft/server/MinecraftServer aB ()Lcom/mojang/datafixers/DataFixer; getFixerUpper
net/minecraft/server/MinecraftServer b (LWorldData;)V updateSelectedPacks
net/minecraft/server/MinecraftServer aH ()LResourcePackSourceFolder; getFolderPackSource
net/minecraft/server/MinecraftServer b ()Z acceptsFailure
net/minecraft/server/MinecraftServer I_ ()Z shouldInformAdmins
net/minecraft/server/MinecraftServer aN ()LPersistentCommandStorage; getCommandStorage
net/minecraft/server/MinecraftServer aP ()LLootPredicateManager; getPredicateManager
net/minecraft/server/MinecraftServer aS ()Z isEnforceWhitelist
net/minecraft/server/MinecraftServer n (Z)V setEnforceWhitelist
net/minecraft/server/MinecraftServer aT ()F getAverageTickTime
net/minecraft/server/MinecraftServer b (Lcom/mojang/authlib/GameProfile;)I getProfilePermissions
net/minecraft/server/MinecraftServer aU ()LCircularTimer; getFrameTimer
net/minecraft/server/MinecraftServer aV ()LGameProfilerFiller; getProfiler
net/minecraft/server/MinecraftServer aW ()Ljava/util/concurrent/Executor; getBackgroundTaskExecutor
net/minecraft/server/MinecraftServer b (Ljava/nio/file/Path;)V dumpMiscStats
net/minecraft/server/MinecraftServer c (Ljava/nio/file/Path;)V dumpCrashCategory
net/minecraft/server/MinecraftServer d (Ljava/nio/file/Path;)V dumpGameRules
net/minecraft/server/MinecraftServer e (Ljava/nio/file/Path;)V dumpClasspath
net/minecraft/server/MinecraftServer f (Ljava/nio/file/Path;)V dumpThreads
net/minecraft/server/MinecraftServer bd ()V refreshRegistries
net/minecraft/server/MinecraftServer b (LSingleTickProfiler;)V endProfilerTick
net/minecraft/server/MinecraftServer aX ()Z isProfiling
net/minecraft/server/MinecraftServer aY ()V startProfiling
net/minecraft/server/MinecraftServer aZ ()LMethodProfilerResults; finishProfiling
net/minecraft/server/MinecraftServer c (Ljava/lang/Runnable;)V doRunTask
net/minecraft/server/MinecraftServer d (Ljava/lang/Runnable;)Z shouldRun
net/minecraft/server/MinecraftServer e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
net/minecraft/server/MinecraftServer b (LWorldData;LResourcePackLoader;)V lambda$updateSelectedPacks$9
net/minecraft/server/MinecraftServer be ()Ljava/lang/String; lambda$fillReport$6
net/minecraft/server/MinecraftServer bf ()Ljava/lang/String; lambda$fillReport$5
net/minecraft/server/MinecraftServer bg ()Ljava/lang/String; lambda$fillReport$4
net/minecraft/server/MinecraftServer b (LWorldServer;)Ljava/lang/String; lambda$tickChildren$3
net/minecraft/server/MinecraftServer bh ()Z lambda$waitUntilNextTick$2
Matrix3f j G
Matrix3f k CS
Matrix3f l SS
Matrix3f m SQ2
Matrix3f a m00
Matrix3f b m01
Matrix3f c m02
Matrix3f d m10
Matrix3f e m11
Matrix3f f m12
Matrix3f g m20
Matrix3f h m21
Matrix3f i m22
Matrix3f c (LMatrix3f;)LQuaternion; stepJacobi
Matrix3f b ()Lorg/apache/commons/lang3/tuple/Triple; svdDecompose
Matrix3f equals (Ljava/lang/Object;)Z equals
Matrix3f hashCode ()I hashCode
Matrix3f toString ()Ljava/lang/String; toString
Matrix3f c ()V setIdentity
Matrix3f b (LMatrix3f;)V mul
Matrix3f d ()LMatrix3f; copy
Matrix4f a m00
Matrix4f b m01
Matrix4f c m02
Matrix4f d m03
Matrix4f e m10
Matrix4f f m11
Matrix4f g m12
Matrix4f h m13
Matrix4f i m20
Matrix4f j m21
Matrix4f k m22
Matrix4f l m23
Matrix4f m m30
Matrix4f n m31
Matrix4f o m32
Matrix4f p m33
Matrix4f equals (Ljava/lang/Object;)Z equals
Matrix4f hashCode ()I hashCode
Matrix4f toString ()Ljava/lang/String; toString
Matrix4f b ()F adjugateAndDet
Matrix4f c ()Z invert
Matrix4f d ()LMatrix4f; copy
Matrix4f b (FFF)LMatrix4f; createTranslateMatrix
Quaternion a ONE
Quaternion b i
Quaternion c j
Quaternion d k
Quaternion e r
Quaternion equals (Ljava/lang/Object;)Z equals
Quaternion hashCode ()I hashCode
Quaternion toString ()Ljava/lang/String; toString
Quaternion b ()F j
Quaternion c ()F k
Quaternion d ()F r
Quaternion e ()V conj
Quaternion b (F)F cos
Quaternion c (F)F sin
Quaternion f ()V normalize
Quaternion g ()LQuaternion; copy
Transformation a matrix
Transformation b decomposed
Transformation c translation
Transformation d leftRotation
Transformation e scale
Transformation f rightRotation
Transformation g IDENTITY
Transformation b ()LTransformation; inverse
Transformation e ()V ensureDecomposed
Transformation c ()LMatrix4f; getMatrix
Transformation d ()LQuaternion; getLeftRotation
Transformation equals (Ljava/lang/Object;)Z equals
Transformation hashCode ()I hashCode
Transformation f ()LTransformation; lambda$static$0
Vector3fa a XN
Vector3fa b XP
Vector3fa c YN
Vector3fa d YP
Vector3fa e ZN
Vector3fa f ZP
Vector3fa g x
Vector3fa h y
Vector3fa i z
Vector3fa equals (Ljava/lang/Object;)Z equals
Vector3fa hashCode ()I hashCode
Vector3fa b ()F y
Vector3fa c ()F z
Vector3fa toString ()Ljava/lang/String; toString
Vector4f a x
Vector4f b y
Vector4f c z
Vector4f d w
Vector4f equals (Ljava/lang/Object;)Z equals
Vector4f hashCode ()I hashCode
Vector4f b ()F y
Vector4f c ()F z
Vector4f toString ()Ljava/lang/String; toString
CrashReport a LOGGER
CrashReport b title
CrashReport c exception
CrashReport d systemDetails
CrashReport e details
CrashReport f saveFile
CrashReport g trackingStackTrace
CrashReport h uncategorizedStackTrace
CrashReport i ()V initDetails
CrashReport b ()Ljava/lang/Throwable; getException
CrashReport c ()Ljava/lang/String; getDetails
CrashReport d ()Ljava/lang/String; getExceptionMessage
CrashReport e ()Ljava/lang/String; getFriendlyReport
CrashReport f ()Ljava/io/File; getSaveFile
CrashReport g ()LCrashReportSystemDetails; getSystemDetails
CrashReport j ()Ljava/lang/String; getErrorComment
CrashReport h ()V preload
CrashReport k ()Ljava/lang/String; lambda$initDetails$6
CrashReport l ()Ljava/lang/String; lambda$initDetails$5
CrashReport m ()Ljava/lang/String; lambda$initDetails$4
CrashReport n ()Ljava/lang/String; lambda$initDetails$3
CrashReport o ()Ljava/lang/String; lambda$initDetails$2
CrashReport p ()Ljava/lang/String; lambda$initDetails$1
CrashReport q ()Ljava/lang/String; lambda$initDetails$0
CrashReportSystemDetails a report
CrashReportSystemDetails b title
CrashReportSystemDetails c entries
CrashReportSystemDetails d stackTrace
CrashReportSystemDetails b (I)V trimStacktrace
CrashReportSystemDetails b (LBlockPosition;)Ljava/lang/String; lambda$populateBlockDetails$0
CrashReportSystemDetails$CrashReportDetail a key
CrashReportSystemDetails$CrashReportDetail b value
CrashReportSystemDetails$CrashReportDetail b ()Ljava/lang/String; getValue
DefaultUncaughtExceptionHandler a logger
DefaultUncaughtExceptionHandler uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V uncaughtException
ThreadNamedUncaughtExceptionHandler a logger
ThreadNamedUncaughtExceptionHandler uncaughtException (Ljava/lang/Thread;Ljava/lang/Throwable;)V uncaughtException
MinecraftVersion a LOGGER
MinecraftVersion b id
MinecraftVersion c name
MinecraftVersion d stable
MinecraftVersion e worldVersion
MinecraftVersion f protocolVersion
MinecraftVersion g packVersion
MinecraftVersion h buildTime
MinecraftVersion i releaseTarget
MinecraftVersion getId ()Ljava/lang/String; getId
MinecraftVersion getName ()Ljava/lang/String; getName
MinecraftVersion getReleaseTarget ()Ljava/lang/String; getReleaseTarget
MinecraftVersion getWorldVersion ()I getWorldVersion
MinecraftVersion getProtocolVersion ()I getProtocolVersion
MinecraftVersion getPackVersion ()I getPackVersion
MinecraftVersion getBuildTime ()Ljava/util/Date; getBuildTime
MinecraftVersion isStable ()Z isStable
FileUtils a COPY_COUNTER_PATTERN
FileUtils b RESERVED_WINDOWS_FILENAMES
FileUtils b (Ljava/nio/file/Path;)Z isPathPortable
FileUtils b (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; createPathToResource
ReportedException a report
ReportedException getCause ()Ljava/lang/Throwable; getCause
ReportedException getMessage ()Ljava/lang/String; getMessage
SystemUtils$1 onTermination (Ljava/lang/Throwable;)V onTermination
SystemUtils$OS$1 b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
SystemUtils$OS$2 b (Ljava/net/URL;)[Ljava/lang/String; getOpenUrlArguments
Advancement$SerializedAdvancement a parentId
Advancement$SerializedAdvancement b parent
Advancement$SerializedAdvancement c display
Advancement$SerializedAdvancement d rewards
Advancement$SerializedAdvancement e criteria
Advancement$SerializedAdvancement f requirements
Advancement$SerializedAdvancement g requirementsStrategy
Advancement$SerializedAdvancement b (LMinecraftKey;)LAdvancement; build
Advancement$SerializedAdvancement b ()Lcom/google/gson/JsonObject; serializeToJson
Advancement$SerializedAdvancement toString ()Ljava/lang/String; toString
Advancement$SerializedAdvancement b (LPacketDataSerializer;)LAdvancement$SerializedAdvancement; fromNetwork
Advancement$SerializedAdvancement c ()Ljava/util/Map; getCriteria
Advancement$SerializedAdvancement c (LMinecraftKey;)LAdvancement; lambda$build$0
Advancements$Listener b (LAdvancement;)V onRemoveAdvancementRoot
Advancements$Listener c (LAdvancement;)V onAddAdvancementTask
Advancements$Listener d (LAdvancement;)V onRemoveAdvancementTask
AdvancementProgress$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
AdvancementProgress$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
AdvancementRewards a EMPTY
AdvancementRewards b experience
AdvancementRewards c loot
AdvancementRewards d recipes
AdvancementRewards e function
AdvancementRewards toString ()Ljava/lang/String; toString
AdvancementRewards b ()Lcom/google/gson/JsonElement; serializeToJson
AdvancementRewards$Builder a experience
AdvancementRewards$Builder b loot
AdvancementRewards$Builder c recipes
AdvancementRewards$Builder d function
AdvancementRewards$Builder b (I)LAdvancementRewards$Builder; addExperience
AdvancementRewards$Builder b (LMinecraftKey;)LAdvancementRewards$Builder; addLootTable
AdvancementRewards$Builder c (LMinecraftKey;)LAdvancementRewards$Builder; recipe
AdvancementRewards$Builder d (LMinecraftKey;)LAdvancementRewards$Builder; addRecipe
AdvancementRewards$Builder e (LMinecraftKey;)LAdvancementRewards$Builder; function
AdvancementRewards$Builder f (LMinecraftKey;)LAdvancementRewards$Builder; runs
AdvancementRewards$Deserializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
CriterionTriggers N CRITERIA
CriterionTriggers a IMPOSSIBLE
CriterionTriggers b PLAYER_KILLED_ENTITY
CriterionTriggers c ENTITY_KILLED_PLAYER
CriterionTriggers d ENTER_BLOCK
CriterionTriggers e INVENTORY_CHANGED
CriterionTriggers f RECIPE_UNLOCKED
CriterionTriggers g PLAYER_HURT_ENTITY
CriterionTriggers h ENTITY_HURT_PLAYER
CriterionTriggers i ENCHANTED_ITEM
CriterionTriggers j FILLED_BUCKET
CriterionTriggers k BREWED_POTION
CriterionTriggers l CONSTRUCT_BEACON
CriterionTriggers m USED_ENDER_EYE
CriterionTriggers n SUMMONED_ENTITY
CriterionTriggers o BRED_ANIMALS
CriterionTriggers p LOCATION
CriterionTriggers q SLEPT_IN_BED
CriterionTriggers r CURED_ZOMBIE_VILLAGER
CriterionTriggers s TRADE
CriterionTriggers t ITEM_DURABILITY_CHANGED
CriterionTriggers u LEVITATION
CriterionTriggers v CHANGED_DIMENSION
CriterionTriggers w TICK
CriterionTriggers x TAME_ANIMAL
CriterionTriggers y PLACED_BLOCK
CriterionTriggers z CONSUME_ITEM
CriterionTriggers A EFFECTS_CHANGED
CriterionTriggers B USED_TOTEM
CriterionTriggers C NETHER_TRAVEL
CriterionTriggers D FISHING_ROD_HOOKED
CriterionTriggers E CHANNELED_LIGHTNING
CriterionTriggers F SHOT_CROSSBOW
CriterionTriggers G KILLED_BY_CROSSBOW
CriterionTriggers H RAID_WIN
CriterionTriggers I BAD_OMEN
CriterionTriggers J SAFELY_HARVEST_HONEY
CriterionTriggers K HONEY_BLOCK_SLIDE
CriterionTriggers L BEE_NEST_DESTROYED
CriterionTriggers M TARGET_BLOCK_HIT
Criterion a trigger
Criterion b (LPacketDataSerializer;)LCriterion; criterionFromNetwork
Criterion b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/util/Map; criteriaFromJson
Criterion c (LPacketDataSerializer;)Ljava/util/Map; criteriaFromNetwork
Criterion b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTrigger b (LAdvancementDataPlayer;LCriterionTrigger$Listener;)V removePlayerListener
CriterionTrigger$Listener a trigger
CriterionTrigger$Listener b advancement
CriterionTrigger$Listener c criterion
CriterionTrigger$Listener equals (Ljava/lang/Object;)Z equals
CriterionTrigger$Listener hashCode ()I hashCode
CriterionInstance b ()Lcom/google/gson/JsonElement; serializeToJson
AdvancementDisplay a title
AdvancementDisplay b description
AdvancementDisplay c icon
AdvancementDisplay d background
AdvancementDisplay e frame
AdvancementDisplay f showToast
AdvancementDisplay g announceChat
AdvancementDisplay h hidden
AdvancementDisplay i x
AdvancementDisplay j y
AdvancementDisplay b ()LIChatBaseComponent; getDescription
AdvancementDisplay c ()LItemStack; getIcon
AdvancementDisplay d ()LMinecraftKey; getBackground
AdvancementDisplay e ()LAdvancementFrameType; getFrame
AdvancementDisplay f ()F getX
AdvancementDisplay g ()F getY
AdvancementDisplay h ()Z shouldShowToast
AdvancementDisplay i ()Z shouldAnnounceChat
AdvancementDisplay j ()Z isHidden
AdvancementDisplay b (LPacketDataSerializer;)LAdvancementDisplay; fromNetwork
AdvancementDisplay k ()Lcom/google/gson/JsonElement; serializeToJson
AdvancementDisplay l ()Lcom/google/gson/JsonObject; serializeIcon
AdvancementTree a advancement
AdvancementTree b parent
AdvancementTree c previousSibling
AdvancementTree d childIndex
AdvancementTree e children
AdvancementTree f ancestor
AdvancementTree g thread
AdvancementTree h x
AdvancementTree i y
AdvancementTree j mod
AdvancementTree k change
AdvancementTree l shift
AdvancementTree b ()V executeShifts
AdvancementTree c ()LAdvancementTree; previousOrThread
AdvancementTree d ()LAdvancementTree; nextOrThread
AdvancementTree e ()V finalizePosition
CriterionInstanceAbstract a criterion
CriterionInstanceAbstract toString ()Ljava/lang/String; toString
CriterionTriggerBeeNestDestroyed a ID
CriterionTriggerBeeNestDestroyed b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerBeeNestDestroyed$TriggerInstance; createInstance
CriterionTriggerBeeNestDestroyed b ()LMinecraftKey; access$000
CriterionTriggerBeeNestDestroyed$TriggerInstance a block
CriterionTriggerBeeNestDestroyed$TriggerInstance b item
CriterionTriggerBeeNestDestroyed$TriggerInstance c numBees
CriterionTriggerBeeNestDestroyed$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionBlock a ANY
CriterionConditionBlock b tag
CriterionConditionBlock c block
CriterionConditionBlock d properties
CriterionConditionBlock e nbt
CriterionConditionBlock$Builder a block
CriterionConditionBlock$Builder b blocks
CriterionConditionBlock$Builder c properties
CriterionConditionBlock$Builder d nbt
CriterionConditionBlock$Builder b ()LCriterionConditionBlock; build
CriterionTriggerBredAnimals a ID
CriterionTriggerBredAnimals b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerBredAnimals$TriggerInstance; createInstance
CriterionTriggerBredAnimals b ()LMinecraftKey; access$000
CriterionTriggerBredAnimals$TriggerInstance a parent
CriterionTriggerBredAnimals$TriggerInstance b partner
CriterionTriggerBredAnimals$TriggerInstance c child
CriterionTriggerBredAnimals$TriggerInstance c ()LCriterionTriggerBredAnimals$TriggerInstance; bredAnimals
CriterionTriggerBredAnimals$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerBrewedPotion a ID
CriterionTriggerBrewedPotion b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerBrewedPotion$TriggerInstance; createInstance
CriterionTriggerBrewedPotion b ()LMinecraftKey; access$000
CriterionTriggerBrewedPotion$TriggerInstance a potion
CriterionTriggerBrewedPotion$TriggerInstance c ()LCriterionTriggerBrewedPotion$TriggerInstance; brewedPotion
CriterionTriggerBrewedPotion$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerChangedDimension a ID
CriterionTriggerChangedDimension b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerChangedDimension$TriggerInstance; createInstance
CriterionTriggerChangedDimension b ()LMinecraftKey; access$000
CriterionTriggerChangedDimension$TriggerInstance a from
CriterionTriggerChangedDimension$TriggerInstance b to
CriterionTriggerChangedDimension$TriggerInstance c ()LCriterionTriggerChangedDimension$TriggerInstance; changedDimension
CriterionTriggerChangedDimension$TriggerInstance b (LDimensionManager;)LCriterionTriggerChangedDimension$TriggerInstance; changedDimensionFrom
CriterionTriggerChangedDimension$TriggerInstance b (LDimensionManager;LDimensionManager;)Z matches
CriterionTriggerChangedDimension$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerChanneledLightning a ID
CriterionTriggerChanneledLightning b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerChanneledLightning$TriggerInstance; createInstance
CriterionTriggerChanneledLightning b ()LMinecraftKey; access$000
CriterionTriggerChanneledLightning$TriggerInstance a victims
CriterionTriggerChanneledLightning$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerConstructBeacon a ID
CriterionTriggerConstructBeacon b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerConstructBeacon$TriggerInstance; createInstance
CriterionTriggerConstructBeacon b ()LMinecraftKey; access$000
CriterionTriggerConstructBeacon$TriggerInstance a level
CriterionTriggerConstructBeacon$TriggerInstance c ()LCriterionTriggerConstructBeacon$TriggerInstance; constructedBeacon
CriterionTriggerConstructBeacon$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerConsumeItem a ID
CriterionTriggerConsumeItem b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerConsumeItem$TriggerInstance; createInstance
CriterionTriggerConsumeItem b ()LMinecraftKey; access$000
CriterionTriggerConsumeItem$TriggerInstance a item
CriterionTriggerConsumeItem$TriggerInstance c ()LCriterionTriggerConsumeItem$TriggerInstance; usedItem
CriterionTriggerConsumeItem$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerCuredZombieVillager a ID
CriterionTriggerCuredZombieVillager b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerCuredZombieVillager$TriggerInstance; createInstance
CriterionTriggerCuredZombieVillager b ()LMinecraftKey; access$000
CriterionTriggerCuredZombieVillager$TriggerInstance a zombie
CriterionTriggerCuredZombieVillager$TriggerInstance b villager
CriterionTriggerCuredZombieVillager$TriggerInstance c ()LCriterionTriggerCuredZombieVillager$TriggerInstance; curedZombieVillager
CriterionTriggerCuredZombieVillager$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionDamage a ANY
CriterionConditionDamage b dealtDamage
CriterionConditionDamage c takenDamage
CriterionConditionDamage d sourceEntity
CriterionConditionDamage e blocked
CriterionConditionDamage f type
CriterionConditionDamage$Builder a dealtDamage
CriterionConditionDamage$Builder b takenDamage
CriterionConditionDamage$Builder c sourceEntity
CriterionConditionDamage$Builder d blocked
CriterionConditionDamage$Builder e type
CriterionConditionDamage$Builder b (LCriterionConditionValue$FloatRange;)LCriterionConditionDamage$Builder; takenDamage
CriterionConditionDamage$Builder b ()LCriterionConditionDamage; build
CriterionConditionDamageSource a ANY
CriterionConditionDamageSource b isProjectile
CriterionConditionDamageSource c isExplosion
CriterionConditionDamageSource d bypassesArmor
CriterionConditionDamageSource e bypassesInvulnerability
CriterionConditionDamageSource f bypassesMagic
CriterionConditionDamageSource g isFire
CriterionConditionDamageSource h isMagic
CriterionConditionDamageSource i isLightning
CriterionConditionDamageSource j directEntity
CriterionConditionDamageSource k sourceEntity
CriterionConditionDamageSource$Builder a isProjectile
CriterionConditionDamageSource$Builder b isExplosion
CriterionConditionDamageSource$Builder c bypassesArmor
CriterionConditionDamageSource$Builder d bypassesInvulnerability
CriterionConditionDamageSource$Builder e bypassesMagic
CriterionConditionDamageSource$Builder f isFire
CriterionConditionDamageSource$Builder g isMagic
CriterionConditionDamageSource$Builder h isLightning
CriterionConditionDamageSource$Builder i directEntity
CriterionConditionDamageSource$Builder j sourceEntity
CriterionConditionDamageSource$Builder b (Ljava/lang/Boolean;)LCriterionConditionDamageSource$Builder; isExplosion
CriterionConditionDamageSource$Builder c (Ljava/lang/Boolean;)LCriterionConditionDamageSource$Builder; bypassesArmor
CriterionConditionDamageSource$Builder d (Ljava/lang/Boolean;)LCriterionConditionDamageSource$Builder; bypassesInvulnerability
CriterionConditionDamageSource$Builder e (Ljava/lang/Boolean;)LCriterionConditionDamageSource$Builder; bypassesMagic
CriterionConditionDamageSource$Builder f (Ljava/lang/Boolean;)LCriterionConditionDamageSource$Builder; isFire
CriterionConditionDamageSource$Builder g (Ljava/lang/Boolean;)LCriterionConditionDamageSource$Builder; isMagic
CriterionConditionDamageSource$Builder h (Ljava/lang/Boolean;)LCriterionConditionDamageSource$Builder; isLightning
CriterionConditionDamageSource$Builder b (LCriterionConditionEntity;)LCriterionConditionDamageSource$Builder; source
CriterionConditionDamageSource$Builder b (LCriterionConditionEntity$Builder;)LCriterionConditionDamageSource$Builder; source
CriterionConditionDamageSource$Builder b ()LCriterionConditionDamageSource; build
CriterionConditionDistance a ANY
CriterionConditionDistance b x
CriterionConditionDistance c y
CriterionConditionDistance d z
CriterionConditionDistance e horizontal
CriterionConditionDistance f absolute
CriterionConditionDistance b (LCriterionConditionValue$FloatRange;)LCriterionConditionDistance; vertical
CriterionTriggerEffectsChanged a ID
CriterionTriggerEffectsChanged b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerEffectsChanged$TriggerInstance; createInstance
CriterionTriggerEffectsChanged b ()LMinecraftKey; access$000
CriterionTriggerEffectsChanged$TriggerInstance a effects
CriterionTriggerEffectsChanged$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerEnchantedItem a ID
CriterionTriggerEnchantedItem b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerEnchantedItem$TriggerInstance; createInstance
CriterionTriggerEnchantedItem b ()LMinecraftKey; access$000
CriterionTriggerEnchantedItem$TriggerInstance a item
CriterionTriggerEnchantedItem$TriggerInstance b levels
CriterionTriggerEnchantedItem$TriggerInstance c ()LCriterionTriggerEnchantedItem$TriggerInstance; enchantedItem
CriterionTriggerEnchantedItem$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionEnchantments a ANY
CriterionConditionEnchantments b NONE
CriterionConditionEnchantments c enchantment
CriterionConditionEnchantments d level
CriterionConditionEnchantments b (Lcom/google/gson/JsonElement;)[LCriterionConditionEnchantments; fromJsonArray
CriterionTriggerEnterBlock a ID
CriterionTriggerEnterBlock b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerEnterBlock$TriggerInstance; createInstance
CriterionTriggerEnterBlock b ()LMinecraftKey; access$000
CriterionTriggerEnterBlock$TriggerInstance a block
CriterionTriggerEnterBlock$TriggerInstance b state
CriterionTriggerEnterBlock$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionEntityEquipment a ANY
CriterionConditionEntityEquipment b CAPTAIN
CriterionConditionEntityEquipment c head
CriterionConditionEntityEquipment d chest
CriterionConditionEntityEquipment e legs
CriterionConditionEntityEquipment f feet
CriterionConditionEntityEquipment g mainhand
CriterionConditionEntityEquipment h offhand
CriterionConditionEntityEquipment$Builder a head
CriterionConditionEntityEquipment$Builder b chest
CriterionConditionEntityEquipment$Builder c legs
CriterionConditionEntityEquipment$Builder d feet
CriterionConditionEntityEquipment$Builder e mainhand
CriterionConditionEntityEquipment$Builder f offhand
CriterionConditionEntityEquipment$Builder b (LCriterionConditionItem;)LCriterionConditionEntityEquipment$Builder; chest
CriterionConditionEntityEquipment$Builder c (LCriterionConditionItem;)LCriterionConditionEntityEquipment$Builder; legs
CriterionConditionEntityEquipment$Builder d (LCriterionConditionItem;)LCriterionConditionEntityEquipment$Builder; feet
CriterionConditionEntityEquipment$Builder e (LCriterionConditionItem;)LCriterionConditionEntityEquipment$Builder; mainhand
CriterionConditionEntityEquipment$Builder f (LCriterionConditionItem;)LCriterionConditionEntityEquipment$Builder; offhand
CriterionConditionEntityEquipment$Builder b ()LCriterionConditionEntityEquipment; build
CriterionConditionEntityFlags a ANY
CriterionConditionEntityFlags b isOnFire
CriterionConditionEntityFlags c isCrouching
CriterionConditionEntityFlags d isSprinting
CriterionConditionEntityFlags e isSwimming
CriterionConditionEntityFlags f isBaby
CriterionConditionEntityFlags$Builder a isOnFire
CriterionConditionEntityFlags$Builder b isCrouching
CriterionConditionEntityFlags$Builder c isSprinting
CriterionConditionEntityFlags$Builder d isSwimming
CriterionConditionEntityFlags$Builder e isBaby
CriterionConditionEntityFlags$Builder b (Ljava/lang/Boolean;)LCriterionConditionEntityFlags$Builder; setCrouching
CriterionConditionEntityFlags$Builder c (Ljava/lang/Boolean;)LCriterionConditionEntityFlags$Builder; setSprinting
CriterionConditionEntityFlags$Builder d (Ljava/lang/Boolean;)LCriterionConditionEntityFlags$Builder; setSwimming
CriterionConditionEntityFlags$Builder e (Ljava/lang/Boolean;)LCriterionConditionEntityFlags$Builder; setIsBaby
CriterionConditionEntityFlags$Builder b ()LCriterionConditionEntityFlags; build
CriterionTriggerEntityHurtPlayer a ID
CriterionTriggerEntityHurtPlayer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerEntityHurtPlayer$TriggerInstance; createInstance
CriterionTriggerEntityHurtPlayer b ()LMinecraftKey; access$000
CriterionTriggerEntityHurtPlayer$TriggerInstance a damage
CriterionTriggerEntityHurtPlayer$TriggerInstance c ()LCriterionTriggerEntityHurtPlayer$TriggerInstance; entityHurtPlayer
CriterionTriggerEntityHurtPlayer$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionEntity a ANY
CriterionConditionEntity b ANY_ARRAY
CriterionConditionEntity c entityType
CriterionConditionEntity d distanceToPlayer
CriterionConditionEntity e location
CriterionConditionEntity f effects
CriterionConditionEntity g nbt
CriterionConditionEntity h flags
CriterionConditionEntity i equipment
CriterionConditionEntity j player
CriterionConditionEntity k fishingHook
CriterionConditionEntity l team
CriterionConditionEntity m catType
CriterionConditionEntity b (Lcom/google/gson/JsonElement;)[LCriterionConditionEntity; fromJsonArray
CriterionConditionEntity$Builder a entityType
CriterionConditionEntity$Builder b distanceToPlayer
CriterionConditionEntity$Builder c location
CriterionConditionEntity$Builder d effects
CriterionConditionEntity$Builder e nbt
CriterionConditionEntity$Builder f flags
CriterionConditionEntity$Builder g equipment
CriterionConditionEntity$Builder h player
CriterionConditionEntity$Builder i fishingHook
CriterionConditionEntity$Builder j team
CriterionConditionEntity$Builder k catType
CriterionConditionEntity$Builder b (LMinecraftKey;)LCriterionConditionEntity$Builder; catType
CriterionConditionEntity$Builder b ()LCriterionConditionEntity; build
CriterionConditionEntityType a ANY
CriterionConditionEntityType b COMMA_JOINER
CriterionConditionEntityType b (LEntityTypes;)LCriterionConditionEntityType; of
CriterionConditionEntityType$TagPredicate b tag
CriterionConditionEntityType$TypePredicate b type
CriterionTriggerFilledBucket a ID
CriterionTriggerFilledBucket b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerFilledBucket$TriggerInstance; createInstance
CriterionTriggerFilledBucket b ()LMinecraftKey; access$000
CriterionTriggerFilledBucket$TriggerInstance a item
CriterionTriggerFilledBucket$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
FishingHookPredicate a ANY
FishingHookPredicate b inOpenWater
CriterionTriggerFishingRodHooked a ID
CriterionTriggerFishingRodHooked b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerFishingRodHooked$TriggerInstance; createInstance
CriterionTriggerFishingRodHooked b ()LMinecraftKey; access$000
CriterionTriggerFishingRodHooked$TriggerInstance a rod
CriterionTriggerFishingRodHooked$TriggerInstance b entity
CriterionTriggerFishingRodHooked$TriggerInstance c item
CriterionTriggerFishingRodHooked$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionFluid a ANY
CriterionConditionFluid b tag
CriterionConditionFluid c fluid
CriterionConditionFluid d properties
CriterionConditionFluid$Builder a fluid
CriterionConditionFluid$Builder b fluids
CriterionConditionFluid$Builder c properties
CriterionConditionFluid$Builder b ()LCriterionConditionFluid; build
CriterionTriggerImpossible a ID
CriterionTriggerImpossible b (LAdvancementDataPlayer;LCriterionTrigger$Listener;)V removePlayerListener
CriterionTriggerImpossible b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerImpossible$TriggerInstance; createInstance
CriterionTriggerImpossible b ()LMinecraftKey; access$000
CriterionTriggerInventoryChanged a ID
CriterionTriggerInventoryChanged b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerInventoryChanged$TriggerInstance; createInstance
CriterionTriggerInventoryChanged b ()LMinecraftKey; access$000
CriterionTriggerInventoryChanged$TriggerInstance a slotsOccupied
CriterionTriggerInventoryChanged$TriggerInstance b slotsFull
CriterionTriggerInventoryChanged$TriggerInstance c slotsEmpty
CriterionTriggerInventoryChanged$TriggerInstance d predicates
CriterionTriggerInventoryChanged$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerItemDurabilityChanged a ID
CriterionTriggerItemDurabilityChanged b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerItemDurabilityChanged$TriggerInstance; createInstance
CriterionTriggerItemDurabilityChanged b ()LMinecraftKey; access$000
CriterionTriggerItemDurabilityChanged$TriggerInstance a item
CriterionTriggerItemDurabilityChanged$TriggerInstance b durability
CriterionTriggerItemDurabilityChanged$TriggerInstance c delta
CriterionTriggerItemDurabilityChanged$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionItem a ANY
CriterionConditionItem b tag
CriterionConditionItem c item
CriterionConditionItem d count
CriterionConditionItem e durability
CriterionConditionItem f enchantments
CriterionConditionItem g storedEnchantments
CriterionConditionItem h potion
CriterionConditionItem i nbt
CriterionConditionItem b (Lcom/google/gson/JsonElement;)[LCriterionConditionItem; fromJsonArray
CriterionConditionItem b (LMinecraftKey;)Lcom/google/gson/JsonSyntaxException; lambda$fromJson$0
CriterionConditionItem$Builder a enchantments
CriterionConditionItem$Builder b storedEnchantments
CriterionConditionItem$Builder c item
CriterionConditionItem$Builder d tag
CriterionConditionItem$Builder e count
CriterionConditionItem$Builder f durability
CriterionConditionItem$Builder g potion
CriterionConditionItem$Builder h nbt
CriterionConditionItem$Builder b (LCriterionConditionValue$IntegerRange;)LCriterionConditionItem$Builder; hasDurability
CriterionConditionItem$Builder b (LCriterionConditionEnchantments;)LCriterionConditionItem$Builder; hasStoredEnchantment
CriterionConditionItem$Builder b ()LCriterionConditionItem; build
CriterionTriggerInteractBlock a id
CriterionTriggerInteractBlock b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerInteractBlock$TriggerInstance; createInstance
CriterionTriggerInteractBlock$TriggerInstance a block
CriterionTriggerInteractBlock$TriggerInstance b state
CriterionTriggerInteractBlock$TriggerInstance c item
CriterionTriggerInteractBlock$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerKilledByCrossbow a ID
CriterionTriggerKilledByCrossbow b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerKilledByCrossbow$TriggerInstance; createInstance
CriterionTriggerKilledByCrossbow b ()LMinecraftKey; access$000
CriterionTriggerKilledByCrossbow$TriggerInstance a victims
CriterionTriggerKilledByCrossbow$TriggerInstance b uniqueEntityTypes
CriterionTriggerKilledByCrossbow$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerKilled a id
CriterionTriggerKilled b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerKilled$TriggerInstance; createInstance
CriterionTriggerKilled$TriggerInstance a entityPredicate
CriterionTriggerKilled$TriggerInstance b killingBlow
CriterionTriggerKilled$TriggerInstance c ()LCriterionTriggerKilled$TriggerInstance; playerKilledEntity
CriterionTriggerKilled$TriggerInstance b (LCriterionConditionEntity;)LCriterionTriggerKilled$TriggerInstance; entityKilledPlayer
CriterionTriggerKilled$TriggerInstance b (LCriterionConditionEntity$Builder;)LCriterionTriggerKilled$TriggerInstance; entityKilledPlayer
CriterionTriggerKilled$TriggerInstance d ()LCriterionTriggerKilled$TriggerInstance; entityKilledPlayer
CriterionTriggerKilled$TriggerInstance b (LCriterionConditionEntity;LCriterionConditionDamageSource;)LCriterionTriggerKilled$TriggerInstance; entityKilledPlayer
CriterionTriggerKilled$TriggerInstance b (LCriterionConditionEntity$Builder;LCriterionConditionDamageSource;)LCriterionTriggerKilled$TriggerInstance; entityKilledPlayer
CriterionTriggerKilled$TriggerInstance b (LCriterionConditionEntity;LCriterionConditionDamageSource$Builder;)LCriterionTriggerKilled$TriggerInstance; entityKilledPlayer
CriterionTriggerKilled$TriggerInstance b (LCriterionConditionEntity$Builder;LCriterionConditionDamageSource$Builder;)LCriterionTriggerKilled$TriggerInstance; entityKilledPlayer
CriterionTriggerKilled$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerLevitation a ID
CriterionTriggerLevitation b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerLevitation$TriggerInstance; createInstance
CriterionTriggerLevitation b ()LMinecraftKey; access$000
CriterionTriggerLevitation$TriggerInstance a distance
CriterionTriggerLevitation$TriggerInstance b duration
CriterionTriggerLevitation$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionLight a ANY
CriterionConditionLight b composite
CriterionConditionLight$Builder a composite
CriterionConditionLight$Builder b ()LCriterionConditionLight; build
CriterionConditionLocation a ANY
CriterionConditionLocation b x
CriterionConditionLocation c y
CriterionConditionLocation d z
CriterionConditionLocation e biome
CriterionConditionLocation f feature
CriterionConditionLocation g dimension
CriterionConditionLocation h light
CriterionConditionLocation i block
CriterionConditionLocation j fluid
CriterionConditionLocation$Builder a x
CriterionConditionLocation$Builder b y
CriterionConditionLocation$Builder c z
CriterionConditionLocation$Builder d biome
CriterionConditionLocation$Builder e feature
CriterionConditionLocation$Builder f dimension
CriterionConditionLocation$Builder g light
CriterionConditionLocation$Builder h block
CriterionConditionLocation$Builder i fluid
CriterionConditionLocation$Builder b (LCriterionConditionValue$FloatRange;)LCriterionConditionLocation$Builder; setY
CriterionConditionLocation$Builder c (LCriterionConditionValue$FloatRange;)LCriterionConditionLocation$Builder; setZ
CriterionConditionLocation$Builder b ()LCriterionConditionLocation; build
CriterionTriggerLocation a id
CriterionTriggerLocation b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerLocation$TriggerInstance; createInstance
CriterionTriggerLocation$TriggerInstance a location
CriterionTriggerLocation$TriggerInstance c ()LCriterionTriggerLocation$TriggerInstance; sleptInBed
CriterionTriggerLocation$TriggerInstance d ()LCriterionTriggerLocation$TriggerInstance; raidWon
CriterionTriggerLocation$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionValue a ERROR_EMPTY
CriterionConditionValue b ERROR_SWAPPED
CriterionConditionValue c min
CriterionConditionValue d max
CriterionConditionValue b ()Ljava/lang/Number; getMax
CriterionConditionValue c ()Z isAny
CriterionConditionValue d ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionValue$BoundsFactory create (Ljava/lang/Number;Ljava/lang/Number;)LCriterionConditionValue; create
CriterionConditionValue$BoundsFromReaderFactory create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Number;Ljava/lang/Number;)LCriterionConditionValue; create
CriterionConditionValue$FloatRange e ANY
CriterionConditionValue$FloatRange f minSq
CriterionConditionValue$FloatRange g maxSq
CriterionConditionValue$FloatRange b (F)LCriterionConditionValue$FloatRange; atLeast
CriterionConditionValue$FloatRange c (F)LCriterionConditionValue$FloatRange; atMost
CriterionConditionValue$FloatRange d (F)Z matches
CriterionConditionValue$FloatRange b (Ljava/lang/Float;)Ljava/lang/Float; lambda$fromReader$0
CriterionConditionValue$IntegerRange e ANY
CriterionConditionValue$IntegerRange f minSq
CriterionConditionValue$IntegerRange g maxSq
CriterionConditionValue$IntegerRange b (I)LCriterionConditionValue$IntegerRange; atLeast
CriterionConditionValue$IntegerRange c (I)LCriterionConditionValue$IntegerRange; atMost
CriterionConditionValue$IntegerRange d (I)Z matches
CriterionConditionValue$IntegerRange b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$fromReader$0
CriterionConditionMobEffect a ANY
CriterionConditionMobEffect b effects
CriterionConditionMobEffect b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionMobEffect$MobEffectInstancePredicate a amplifier
CriterionConditionMobEffect$MobEffectInstancePredicate b duration
CriterionConditionMobEffect$MobEffectInstancePredicate c ambient
CriterionConditionMobEffect$MobEffectInstancePredicate d visible
CriterionConditionNBT a ANY
CriterionConditionNBT b tag
CriterionConditionNBT b (LEntity;)LNBTTagCompound; getEntityTagToCompare
CriterionTriggerNetherTravel a ID
CriterionTriggerNetherTravel b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerNetherTravel$TriggerInstance; createInstance
CriterionTriggerNetherTravel b ()LMinecraftKey; access$000
CriterionTriggerNetherTravel$TriggerInstance a entered
CriterionTriggerNetherTravel$TriggerInstance b exited
CriterionTriggerNetherTravel$TriggerInstance c distance
CriterionTriggerNetherTravel$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerPlacedBlock a ID
CriterionTriggerPlacedBlock b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerPlacedBlock$TriggerInstance; createInstance
CriterionTriggerPlacedBlock b ()LMinecraftKey; access$000
CriterionTriggerPlacedBlock$TriggerInstance a block
CriterionTriggerPlacedBlock$TriggerInstance b state
CriterionTriggerPlacedBlock$TriggerInstance c location
CriterionTriggerPlacedBlock$TriggerInstance d item
CriterionTriggerPlacedBlock$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerPlayerHurtEntity a ID
CriterionTriggerPlayerHurtEntity b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerPlayerHurtEntity$TriggerInstance; createInstance
CriterionTriggerPlayerHurtEntity b ()LMinecraftKey; access$000
CriterionTriggerPlayerHurtEntity$TriggerInstance a damage
CriterionTriggerPlayerHurtEntity$TriggerInstance b entity
CriterionTriggerPlayerHurtEntity$TriggerInstance c ()LCriterionTriggerPlayerHurtEntity$TriggerInstance; playerHurtEntity
CriterionTriggerPlayerHurtEntity$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionPlayer a ANY
CriterionConditionPlayer b level
CriterionConditionPlayer c gameType
CriterionConditionPlayer d stats
CriterionConditionPlayer e recipes
CriterionConditionPlayer f advancements
CriterionConditionPlayer b (Lcom/google/gson/JsonElement;)LCriterionConditionPlayer$AdvancementPredicate; advancementPredicateFromJson
CriterionConditionPlayer$AdvancementCriterionsPredicate a criterions
CriterionConditionPlayer$AdvancementCriterionsPredicate test (Ljava/lang/Object;)Z test
CriterionConditionPlayer$AdvancementDonePredicate a state
CriterionConditionPlayer$AdvancementDonePredicate test (Ljava/lang/Object;)Z test
CriterionConditionPlayer$Builder a level
CriterionConditionPlayer$Builder b gameType
CriterionConditionPlayer$Builder c stats
CriterionConditionPlayer$Builder d recipes
CriterionConditionPlayer$Builder e advancements
CriterionConditionPlayer$Builder b (LMinecraftKey;Z)LCriterionConditionPlayer$Builder; checkAdvancementDone
CriterionConditionPlayer$Builder b ()LCriterionConditionPlayer; build
CriterionTriggerRecipeUnlocked a ID
CriterionTriggerRecipeUnlocked b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerRecipeUnlocked$TriggerInstance; createInstance
CriterionTriggerRecipeUnlocked b ()LMinecraftKey; access$000
CriterionTriggerRecipeUnlocked$TriggerInstance a recipe
CriterionTriggerRecipeUnlocked$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerShotCrossbow a ID
CriterionTriggerShotCrossbow b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerShotCrossbow$TriggerInstance; createInstance
CriterionTriggerShotCrossbow b ()LMinecraftKey; access$000
CriterionTriggerShotCrossbow$TriggerInstance a item
CriterionTriggerShotCrossbow$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerAbstract a players
CriterionTriggerAbstract b (LAdvancementDataPlayer;LCriterionTrigger$Listener;)V removePlayerListener
CriterionTriggerAbstract b (LAdvancementDataPlayer;)V trigger
CriterionTriggerAbstract c (LAdvancementDataPlayer;)Ljava/util/Set; lambda$addPlayerListener$0
CriterionSlideDownBlock a ID
CriterionSlideDownBlock b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionSlideDownBlock$TriggerInstance; createInstance
CriterionSlideDownBlock b ()LMinecraftKey; access$000
CriterionSlideDownBlock$TriggerInstance a block
CriterionSlideDownBlock$TriggerInstance b state
CriterionSlideDownBlock$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerProperties a ANY
CriterionTriggerProperties b properties
CriterionTriggerProperties b (Lcom/google/gson/JsonElement;)Ljava/lang/String; getStringOrNull
CriterionTriggerProperties$Builder a matchers
CriterionTriggerProperties$Builder b ()LCriterionTriggerProperties; build
CriterionTriggerProperties$ExactPropertyMatcher a value
CriterionTriggerProperties$PropertyMatcher a name
CriterionTriggerProperties$PropertyMatcher b ()Ljava/lang/String; getName
CriterionTriggerProperties$RangedPropertyMatcher a minValue
CriterionTriggerProperties$RangedPropertyMatcher b maxValue
CriterionTriggerSummonedEntity a ID
CriterionTriggerSummonedEntity b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerSummonedEntity$TriggerInstance; createInstance
CriterionTriggerSummonedEntity b ()LMinecraftKey; access$000
CriterionTriggerSummonedEntity$TriggerInstance a entity
CriterionTriggerSummonedEntity$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerTamedAnimal a ID
CriterionTriggerTamedAnimal b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerTamedAnimal$TriggerInstance; createInstance
CriterionTriggerTamedAnimal b ()LMinecraftKey; access$000
CriterionTriggerTamedAnimal$TriggerInstance a entity
CriterionTriggerTamedAnimal$TriggerInstance c ()LCriterionTriggerTamedAnimal$TriggerInstance; tamedAnimal
CriterionTriggerTamedAnimal$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
TargetBlockTrigger a ID
TargetBlockTrigger b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LTargetBlockTrigger$TriggerInstance; createInstance
TargetBlockTrigger b ()LMinecraftKey; access$000
TargetBlockTrigger$TriggerInstance a signalStrength
TargetBlockTrigger$TriggerInstance b projectile
TargetBlockTrigger$TriggerInstance c shooter
TargetBlockTrigger$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerTick a ID
CriterionTriggerTick b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerTick$TriggerInstance; createInstance
CriterionTriggerVillagerTrade a ID
CriterionTriggerVillagerTrade b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerVillagerTrade$TriggerInstance; createInstance
CriterionTriggerVillagerTrade b ()LMinecraftKey; access$000
CriterionTriggerVillagerTrade$TriggerInstance a villager
CriterionTriggerVillagerTrade$TriggerInstance b item
CriterionTriggerVillagerTrade$TriggerInstance c ()LCriterionTriggerVillagerTrade$TriggerInstance; tradedWithVillager
CriterionTriggerVillagerTrade$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionTriggerUsedEnderEye a ID
CriterionTriggerUsedEnderEye b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerUsedEnderEye$TriggerInstance; createInstance
CriterionTriggerUsedEnderEye b ()LMinecraftKey; access$000
CriterionTriggerUsedEnderEye$TriggerInstance a level
CriterionTriggerUsedTotem a ID
CriterionTriggerUsedTotem b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LCriterionTriggerUsedTotem$TriggerInstance; createInstance
CriterionTriggerUsedTotem b ()LMinecraftKey; access$000
CriterionTriggerUsedTotem$TriggerInstance a item
CriterionTriggerUsedTotem$TriggerInstance b ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionRange a ANY
CriterionConditionRange b ERROR_INTS_ONLY
CriterionConditionRange c min
CriterionConditionRange d max
CriterionConditionRange b (F)LCriterionConditionRange; atLeast
CriterionConditionRange c (F)LCriterionConditionRange; atMost
CriterionConditionRange d (F)Z matches
CriterionConditionRange b ()Ljava/lang/Float; getMax
CriterionConditionRange c ()Lcom/google/gson/JsonElement; serializeToJson
CriterionConditionRange b (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; readNumber
CriterionConditionRange c (Lcom/mojang/brigadier/StringReader;Z)Z isAllowedNumber
CommandExceptionProvider a DOUBLE_TOO_SMALL
CommandExceptionProvider b DOUBLE_TOO_BIG
CommandExceptionProvider c FLOAT_TOO_SMALL
CommandExceptionProvider d FLOAT_TOO_BIG
CommandExceptionProvider e INTEGER_TOO_SMALL
CommandExceptionProvider f INTEGER_TOO_BIG
CommandExceptionProvider g LONG_TOO_SMALL
CommandExceptionProvider h LONG_TOO_BIG
CommandExceptionProvider i LITERAL_INCORRECT
CommandExceptionProvider j READER_EXPECTED_START_OF_QUOTE
CommandExceptionProvider k READER_EXPECTED_END_OF_QUOTE
CommandExceptionProvider l READER_INVALID_ESCAPE
CommandExceptionProvider m READER_INVALID_BOOL
CommandExceptionProvider n READER_INVALID_INT
CommandExceptionProvider o READER_EXPECTED_INT
CommandExceptionProvider p READER_INVALID_LONG
CommandExceptionProvider q READER_EXPECTED_LONG
CommandExceptionProvider r READER_INVALID_DOUBLE
CommandExceptionProvider s READER_EXPECTED_DOUBLE
CommandExceptionProvider t READER_INVALID_FLOAT
CommandExceptionProvider u READER_EXPECTED_FLOAT
CommandExceptionProvider v READER_EXPECTED_BOOL
CommandExceptionProvider w READER_EXPECTED_SYMBOL
CommandExceptionProvider x DISPATCHER_UNKNOWN_COMMAND
CommandExceptionProvider y DISPATCHER_UNKNOWN_ARGUMENT
CommandExceptionProvider z DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
CommandExceptionProvider A DISPATCHER_PARSE_EXCEPTION
CommandExceptionProvider doubleTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; doubleTooLow
CommandExceptionProvider doubleTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; doubleTooHigh
CommandExceptionProvider floatTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; floatTooLow
CommandExceptionProvider floatTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; floatTooHigh
CommandExceptionProvider integerTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; integerTooLow
CommandExceptionProvider integerTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; integerTooHigh
CommandExceptionProvider longTooLow ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; longTooLow
CommandExceptionProvider longTooHigh ()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType; longTooHigh
CommandExceptionProvider literalIncorrect ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; literalIncorrect
CommandExceptionProvider readerExpectedStartOfQuote ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedStartOfQuote
CommandExceptionProvider readerExpectedEndOfQuote ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedEndOfQuote
CommandExceptionProvider readerInvalidEscape ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidEscape
CommandExceptionProvider readerInvalidBool ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidBool
CommandExceptionProvider readerInvalidInt ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidInt
CommandExceptionProvider readerExpectedInt ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedInt
CommandExceptionProvider readerInvalidLong ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidLong
CommandExceptionProvider readerExpectedLong ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedLong
CommandExceptionProvider readerInvalidDouble ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidDouble
CommandExceptionProvider readerExpectedDouble ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedDouble
CommandExceptionProvider readerInvalidFloat ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerInvalidFloat
CommandExceptionProvider readerExpectedFloat ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedFloat
CommandExceptionProvider readerExpectedBool ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; readerExpectedBool
CommandExceptionProvider readerExpectedSymbol ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; readerExpectedSymbol
CommandExceptionProvider dispatcherUnknownCommand ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; dispatcherUnknownCommand
CommandExceptionProvider dispatcherUnknownArgument ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; dispatcherUnknownArgument
CommandExceptionProvider dispatcherExpectedArgumentSeparator ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; dispatcherExpectedArgumentSeparator
CommandExceptionProvider dispatcherParseException ()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType; dispatcherParseException
CommandExceptionProvider b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$15
CommandExceptionProvider c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$14
CommandExceptionProvider d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$13
CommandExceptionProvider e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$12
CommandExceptionProvider f (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$11
CommandExceptionProvider g (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$10
CommandExceptionProvider h (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$9
CommandExceptionProvider i (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$8
CommandExceptionProvider b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$6
CommandExceptionProvider c (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$5
CommandExceptionProvider d (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$4
CommandExceptionProvider e (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
CommandExceptionProvider f (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
CommandExceptionProvider g (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
CommandExceptionProvider h (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
CustomFunction a entries
CustomFunction b id
CustomFunction b ()[LCustomFunction$Entry; getEntries
CustomFunction$CacheableFunction a NONE
CustomFunction$CacheableFunction b id
CustomFunction$CacheableFunction c resolved
CustomFunction$CacheableFunction d function
CustomFunction$CommandEntry a parse
CustomFunction$CommandEntry toString ()Ljava/lang/String; toString
CustomFunction$FunctionEntry a function
CustomFunction$FunctionEntry toString ()Ljava/lang/String; toString
CommandException a message
ICommandListener$1 b ()Z acceptsFailure
ICommandListener$1 I_ ()Z shouldInformAdmins
CommandDispatcher a LOGGER
CommandDispatcher b dispatcher
CommandDispatcher$ParseFunction parse (Lcom/mojang/brigadier/StringReader;)V parse
ICompletionProvider$TextCoordinates a DEFAULT_LOCAL
ICompletionProvider$TextCoordinates b DEFAULT_GLOBAL
ICompletionProvider$TextCoordinates c x
ICompletionProvider$TextCoordinates d y
ICompletionProvider$TextCoordinates e z
ArgumentChatFormat b EXAMPLES
ArgumentChatFormat a ERROR_INVALID_VALUE
ArgumentChatFormat listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentChatFormat getExamples ()Ljava/util/Collection; getExamples
ArgumentChatFormat parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentChatComponent b EXAMPLES
ArgumentChatComponent a ERROR_INVALID_JSON
ArgumentChatComponent getExamples ()Ljava/util/Collection; getExamples
ArgumentChatComponent parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentNBTTag a EXAMPLES
ArgumentNBTTag getExamples ()Ljava/util/Collection; getExamples
ArgumentNBTTag parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentDimension b EXAMPLES
ArgumentDimension a ERROR_INVALID_VALUE
ArgumentDimension listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentDimension getExamples ()Ljava/util/Collection; getExamples
ArgumentDimension parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentAnchor a EXAMPLES
ArgumentAnchor b ERROR_INVALID
ArgumentAnchor listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentAnchor getExamples ()Ljava/util/Collection; getExamples
ArgumentAnchor parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentEntity$Serializer b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentEntitySummon b EXAMPLES
ArgumentEntitySummon a ERROR_UNKNOWN_ENTITY
ArgumentEntitySummon getExamples ()Ljava/util/Collection; getExamples
ArgumentEntitySummon parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentEntitySummon b (LMinecraftKey;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; lambda$verifyCanSummon$1
ArgumentProfile b EXAMPLES
ArgumentProfile a ERROR_UNKNOWN_PLAYER
ArgumentProfile listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentProfile getExamples ()Ljava/util/Collection; getExamples
ArgumentProfile parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentProfile$Result getNames (LCommandListenerWrapper;)Ljava/util/Collection; getNames
ArgumentProfile$SelectorResult a selector
ArgumentProfile$SelectorResult getNames (LCommandListenerWrapper;)Ljava/util/Collection; getNames
ArgumentEnchantment b EXAMPLES
ArgumentEnchantment a ERROR_UNKNOWN_ENCHANTMENT
ArgumentEnchantment listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentEnchantment getExamples ()Ljava/util/Collection; getExamples
ArgumentEnchantment parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentChat a EXAMPLES
ArgumentChat getExamples ()Ljava/util/Collection; getExamples
ArgumentChat parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentChat$Message a text
ArgumentChat$Message b parts
ArgumentChat$Message b ()[LArgumentChat$Part; getParts
ArgumentChat$Part a start
ArgumentChat$Part b end
ArgumentChat$Part c selector
ArgumentChat$Part b ()I getEnd
ArgumentChat$Part c ()LEntitySelector; getSelector
ArgumentMobEffect b EXAMPLES
ArgumentMobEffect a ERROR_UNKNOWN_EFFECT
ArgumentMobEffect listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentMobEffect getExamples ()Ljava/util/Collection; getExamples
ArgumentMobEffect parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentNBTKey c EXAMPLES
ArgumentNBTKey a ERROR_INVALID_NODE
ArgumentNBTKey b ERROR_NOTHING_FOUND
ArgumentNBTKey b (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; readUnquotedName
ArgumentNBTKey getExamples ()Ljava/util/Collection; getExamples
ArgumentNBTKey b (LNBTTagCompound;)Ljava/util/function/Predicate; createTagPredicate
ArgumentNBTKey parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentNBTKey$AllElementsNode a INSTANCE
ArgumentNBTKey$CompoundChildNode a name
ArgumentNBTKey$IndexedElementNode a index
ArgumentNBTKey$MatchElementNode a pattern
ArgumentNBTKey$MatchElementNode b predicate
ArgumentNBTKey$MatchObjectNode a name
ArgumentNBTKey$MatchObjectNode b pattern
ArgumentNBTKey$MatchObjectNode c predicate
ArgumentNBTKey$MatchRootObjectNode a predicate
ArgumentNBTKey$NbtPath a original
ArgumentNBTKey$NbtPath b nodeToOriginalPosition
ArgumentNBTKey$NbtPath c nodes
ArgumentNBTKey$NbtPath b (LNBTBase;)I countMatching
ArgumentNBTKey$NbtPath d (LNBTBase;)Ljava/util/List; getOrCreateParents
ArgumentNBTKey$NbtPath b (LNBTBase;Ljava/util/function/Supplier;)I set
ArgumentNBTKey$NbtPath c (LNBTBase;)I remove
ArgumentNBTKey$NbtPath toString ()Ljava/lang/String; toString
ArgumentNBTBase a EXAMPLES
ArgumentNBTBase getExamples ()Ljava/util/Collection; getExamples
ArgumentNBTBase parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentScoreboardObjective b EXAMPLES
ArgumentScoreboardObjective c ERROR_OBJECTIVE_NOT_FOUND
ArgumentScoreboardObjective d ERROR_OBJECTIVE_READ_ONLY
ArgumentScoreboardObjective a ERROR_OBJECTIVE_NAME_TOO_LONG
ArgumentScoreboardObjective b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)LScoreboardObjective; getWritableObjective
ArgumentScoreboardObjective listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentScoreboardObjective getExamples ()Ljava/util/Collection; getExamples
ArgumentScoreboardObjective parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentScoreboardObjective b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
ArgumentScoreboardObjective c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
ArgumentScoreboardCriteria b EXAMPLES
ArgumentScoreboardCriteria a ERROR_INVALID_VALUE
ArgumentScoreboardCriteria listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentScoreboardCriteria getExamples ()Ljava/util/Collection; getExamples
ArgumentScoreboardCriteria parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentMathOperation a EXAMPLES
ArgumentMathOperation b ERROR_INVALID_OPERATION
ArgumentMathOperation c ERROR_DIVIDE_BY_ZERO
ArgumentMathOperation listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentMathOperation getExamples ()Ljava/util/Collection; getExamples
ArgumentMathOperation b (Ljava/lang/String;)LArgumentMathOperation$SimpleOperation; getSimpleOperation
ArgumentMathOperation parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentMathOperation b (II)I lambda$getSimpleOperation$5
ArgumentMathOperation c (II)I lambda$getSimpleOperation$4
ArgumentMathOperation d (II)I lambda$getSimpleOperation$3
ArgumentMathOperation e (II)I lambda$getSimpleOperation$2
ArgumentMathOperation f (II)I lambda$getSimpleOperation$1
ArgumentMathOperation$Operation apply (LScoreboardScore;LScoreboardScore;)V apply
ArgumentMathOperation$SimpleOperation apply (II)I apply
ArgumentMathOperation$SimpleOperation apply (LScoreboardScore;LScoreboardScore;)V apply
ArgumentParticle b EXAMPLES
ArgumentParticle a ERROR_UNKNOWN_PARTICLE
ArgumentParticle getExamples ()Ljava/util/Collection; getExamples
ArgumentParticle b (Lcom/mojang/brigadier/StringReader;)LParticleParam; readParticle
ArgumentParticle listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentParticle parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentCriterionValue b ()LArgumentCriterionValue$Floats; doubleRange
ArgumentCriterionValue$Floats a EXAMPLES
ArgumentCriterionValue$Floats getExamples ()Ljava/util/Collection; getExamples
ArgumentCriterionValue$Floats parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentCriterionValue$Floats$Serializer b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentCriterionValue$Ints a EXAMPLES
ArgumentCriterionValue$Ints getExamples ()Ljava/util/Collection; getExamples
ArgumentCriterionValue$Ints parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentCriterionValue$Ints$Serializer b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentMinecraftKeyRegistered a EXAMPLES
ArgumentMinecraftKeyRegistered b ERROR_UNKNOWN_ADVANCEMENT
ArgumentMinecraftKeyRegistered c ERROR_UNKNOWN_RECIPE
ArgumentMinecraftKeyRegistered d ERROR_UNKNOWN_PREDICATE
ArgumentMinecraftKeyRegistered b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)LIRecipe; getRecipe
ArgumentMinecraftKeyRegistered c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)LLootItemCondition; getPredicate
ArgumentMinecraftKeyRegistered d (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)LMinecraftKey; getId
ArgumentMinecraftKeyRegistered getExamples ()Ljava/util/Collection; getExamples
ArgumentMinecraftKeyRegistered parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentMinecraftKeyRegistered b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
ArgumentMinecraftKeyRegistered c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
ArgumentScoreholder a SUGGEST_SCORE_HOLDERS
ArgumentScoreholder b EXAMPLES
ArgumentScoreholder c ERROR_NO_RESULTS
ArgumentScoreholder d multiple
ArgumentScoreholder b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNames
ArgumentScoreholder c (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; getNamesWithDefaultWildcard
ArgumentScoreholder b ()LArgumentScoreholder; scoreHolders
ArgumentScoreholder getExamples ()Ljava/util/Collection; getExamples
ArgumentScoreholder parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentScoreholder b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V lambda$null$0
ArgumentScoreholder$Result getNames (LCommandListenerWrapper;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
ArgumentScoreholder$SelectorResult a selector
ArgumentScoreholder$SelectorResult getNames (LCommandListenerWrapper;Ljava/util/function/Supplier;)Ljava/util/Collection; getNames
ArgumentScoreholder$Serializer b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentScoreboardSlot b EXAMPLES
ArgumentScoreboardSlot a ERROR_INVALID_VALUE
ArgumentScoreboardSlot listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentScoreboardSlot getExamples ()Ljava/util/Collection; getExamples
ArgumentScoreboardSlot parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentInventorySlot a EXAMPLES
ArgumentInventorySlot b ERROR_UNKNOWN_SLOT
ArgumentInventorySlot c SLOTS
ArgumentInventorySlot listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentInventorySlot getExamples ()Ljava/util/Collection; getExamples
ArgumentInventorySlot parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentScoreboardTeam a EXAMPLES
ArgumentScoreboardTeam b ERROR_TEAM_NOT_FOUND
ArgumentScoreboardTeam listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentScoreboardTeam getExamples ()Ljava/util/Collection; getExamples
ArgumentScoreboardTeam parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentTime a EXAMPLES
ArgumentTime b ERROR_INVALID_UNIT
ArgumentTime c ERROR_INVALID_TICK_COUNT
ArgumentTime d UNITS
ArgumentTime listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentTime getExamples ()Ljava/util/Collection; getExamples
ArgumentTime parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentTileLocation a state
ArgumentTileLocation b properties
ArgumentTileLocation c tag
ArgumentTileLocation b ()LNBTTagCompound; getTag
ArgumentTileLocation c ()Ljava/util/Set; getDefinedProperties
ArgumentTileLocation test (Ljava/lang/Object;)Z test
ArgumentBlockPredicate a EXAMPLES
ArgumentBlockPredicate b ERROR_UNKNOWN_TAG
ArgumentBlockPredicate listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentBlockPredicate getExamples ()Ljava/util/Collection; getExamples
ArgumentBlockPredicate parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentBlockPredicate$BlockPredicate a state
ArgumentBlockPredicate$BlockPredicate b properties
ArgumentBlockPredicate$BlockPredicate c nbt
ArgumentBlockPredicate$BlockPredicate test (Ljava/lang/Object;)Z test
ArgumentBlockPredicate$Result create (LTagRegistry;)Ljava/util/function/Predicate; create
ArgumentBlockPredicate$TagPredicate a tag
ArgumentBlockPredicate$TagPredicate b nbt
ArgumentBlockPredicate$TagPredicate c vagueProperties
ArgumentBlockPredicate$TagPredicate test (Ljava/lang/Object;)Z test
ArgumentTile a EXAMPLES
ArgumentTile listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentTile getExamples ()Ljava/util/Collection; getExamples
ArgumentTile parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentPosition c EXAMPLES
ArgumentPosition a ERROR_NOT_LOADED
ArgumentPosition b ERROR_OUT_OF_WORLD
ArgumentPosition b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)LBlockPosition; getOrLoadBlockPos
ArgumentPosition listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentPosition getExamples ()Ljava/util/Collection; getExamples
ArgumentPosition parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentVec2I b EXAMPLES
ArgumentVec2I a ERROR_NOT_COMPLETE
ArgumentVec2I listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentVec2I getExamples ()Ljava/util/Collection; getExamples
ArgumentVec2I parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
IVectorPosition b (LCommandListenerWrapper;)LVec2F; getRotation
IVectorPosition c (LCommandListenerWrapper;)LBlockPosition; getBlockPos
IVectorPosition b ()Z isYRelative
IVectorPosition c ()Z isZRelative
ArgumentVectorPosition a left
ArgumentVectorPosition b up
ArgumentVectorPosition c forwards
ArgumentVectorPosition b (LCommandListenerWrapper;)LVec2F; getRotation
ArgumentVectorPosition b ()Z isYRelative
ArgumentVectorPosition c ()Z isZRelative
ArgumentVectorPosition equals (Ljava/lang/Object;)Z equals
ArgumentVectorPosition hashCode ()I hashCode
ArgumentRotation b EXAMPLES
ArgumentRotation a ERROR_NOT_COMPLETE
ArgumentRotation getExamples ()Ljava/util/Collection; getExamples
ArgumentRotation parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentRotationAxis a EXAMPLES
ArgumentRotationAxis b ERROR_INVALID
ArgumentRotationAxis getExamples ()Ljava/util/Collection; getExamples
ArgumentRotationAxis parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentVec2 b EXAMPLES
ArgumentVec2 a ERROR_NOT_COMPLETE
ArgumentVec2 c centerCorrect
ArgumentVec2 listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentVec2 getExamples ()Ljava/util/Collection; getExamples
ArgumentVec2 parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentVec3 c EXAMPLES
ArgumentVec3 a ERROR_NOT_COMPLETE
ArgumentVec3 b ERROR_MIXED_TYPE
ArgumentVec3 d centerCorrect
ArgumentVec3 b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)LIVectorPosition; getCoordinates
ArgumentVec3 listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentVec3 getExamples ()Ljava/util/Collection; getExamples
ArgumentVec3 parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentParserPosition a ERROR_EXPECTED_DOUBLE
ArgumentParserPosition b ERROR_EXPECTED_INT
ArgumentParserPosition c relative
ArgumentParserPosition d value
ArgumentParserPosition b (Lcom/mojang/brigadier/StringReader;)Z isRelative
ArgumentParserPosition equals (Ljava/lang/Object;)Z equals
ArgumentParserPosition hashCode ()I hashCode
VectorPosition a x
VectorPosition b y
VectorPosition c z
VectorPosition b (LCommandListenerWrapper;)LVec2F; getRotation
VectorPosition b ()Z isYRelative
VectorPosition c ()Z isZRelative
VectorPosition equals (Ljava/lang/Object;)Z equals
VectorPosition d ()LVectorPosition; current
VectorPosition hashCode ()I hashCode
ArgumentTag a EXAMPLES
ArgumentTag b ERROR_UNKNOWN_TAG
ArgumentTag c ERROR_UNKNOWN_FUNCTION
ArgumentTag c (Lcom/mojang/brigadier/context/CommandContext;LMinecraftKey;)LCustomFunction; getFunction
ArgumentTag d (Lcom/mojang/brigadier/context/CommandContext;LMinecraftKey;)LTag; getFunctionTag
ArgumentTag b (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; getFunctionOrTag
ArgumentTag getExamples ()Ljava/util/Collection; getExamples
ArgumentTag parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentTag b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
ArgumentTag b (Lcom/mojang/brigadier/context/CommandContext;LMinecraftKey;)LCustomFunction; access$100
ArgumentTag$1 a val$id
ArgumentTag$1 b this$0
ArgumentTag$1 b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Either; unwrap
ArgumentTag$2 a val$id
ArgumentTag$2 b this$0
ArgumentTag$2 b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Either; unwrap
ArgumentTag$Result b (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Either; unwrap
ArgumentItemStack a EXAMPLES
ArgumentItemStack listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentItemStack getExamples ()Ljava/util/Collection; getExamples
ArgumentItemStack parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentPredicateItemStack a ERROR_STACK_TOO_BIG
ArgumentPredicateItemStack b item
ArgumentPredicateItemStack c tag
ArgumentPredicateItemStack b ()LNBTTagCompound; getTag
ArgumentPredicateItemStack c ()Ljava/lang/String; serialize
ArgumentPredicateItemStack test (Ljava/lang/Object;)Z test
ArgumentParserItemStack a ERROR_NO_TAGS_ALLOWED
ArgumentParserItemStack b ERROR_UNKNOWN_ITEM
ArgumentParserItemStack c SUGGEST_NOTHING
ArgumentParserItemStack d reader
ArgumentParserItemStack e forTesting
ArgumentParserItemStack f properties
ArgumentParserItemStack g item
ArgumentParserItemStack h nbt
ArgumentParserItemStack i tag
ArgumentParserItemStack j tagCursor
ArgumentParserItemStack k suggestions
ArgumentParserItemStack b ()LItem; getItem
ArgumentParserItemStack c ()LNBTTagCompound; getNbt
ArgumentParserItemStack d ()LMinecraftKey; getTag
ArgumentParserItemStack e ()V readItem
ArgumentParserItemStack f ()V readTag
ArgumentParserItemStack g ()V readNbt
ArgumentParserItemStack h ()LArgumentParserItemStack; parse
ArgumentParserItemStack b (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestOpenNbt
ArgumentParserItemStack c (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestTag
ArgumentParserItemStack d (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; suggestItemIdOrTag
ArgumentItemPredicate a EXAMPLES
ArgumentItemPredicate b ERROR_UNKNOWN_TAG
ArgumentItemPredicate listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
ArgumentItemPredicate getExamples ()Ljava/util/Collection; getExamples
ArgumentItemPredicate parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
ArgumentItemPredicate$ItemPredicate a item
ArgumentItemPredicate$ItemPredicate b nbt
ArgumentItemPredicate$ItemPredicate test (Ljava/lang/Object;)Z test
ArgumentItemPredicate$Result create (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate; create
ArgumentItemPredicate$TagPredicate a tag
ArgumentItemPredicate$TagPredicate b nbt
ArgumentItemPredicate$TagPredicate test (Ljava/lang/Object;)Z test
PlayerSelector i OPTIONS
PlayerSelector a ERROR_UNKNOWN_OPTION
PlayerSelector b ERROR_INAPPLICABLE_OPTION
PlayerSelector c ERROR_RANGE_NEGATIVE
PlayerSelector d ERROR_LEVEL_NEGATIVE
PlayerSelector e ERROR_LIMIT_TOO_SMALL
PlayerSelector f ERROR_SORT_UNKNOWN
PlayerSelector g ERROR_GAME_MODE_INVALID
PlayerSelector h ERROR_ENTITY_TYPE_INVALID
PlayerSelector b (LArgumentParserSelector;)V lambda$bootStrap$62
PlayerSelector c (LArgumentParserSelector;)Z lambda$bootStrap$60
PlayerSelector d (LArgumentParserSelector;)V lambda$bootStrap$59
PlayerSelector e (LArgumentParserSelector;)Z lambda$bootStrap$54
PlayerSelector f (LArgumentParserSelector;)V lambda$bootStrap$53
PlayerSelector b (Ljava/util/Map;LEntity;)Z lambda$null$52
PlayerSelector g (LArgumentParserSelector;)Z lambda$bootStrap$51
PlayerSelector h (LArgumentParserSelector;)V lambda$bootStrap$50
PlayerSelector i (LArgumentParserSelector;)Z lambda$bootStrap$48
PlayerSelector j (LArgumentParserSelector;)V lambda$bootStrap$47
PlayerSelector k (LArgumentParserSelector;)Z lambda$bootStrap$45
PlayerSelector l (LArgumentParserSelector;)V lambda$bootStrap$44
PlayerSelector m (LArgumentParserSelector;)Z lambda$bootStrap$39
PlayerSelector n (LArgumentParserSelector;)V lambda$bootStrap$38
PlayerSelector b (Ljava/lang/String;ZLEntity;)Z lambda$null$37
PlayerSelector o (LArgumentParserSelector;)Z lambda$bootStrap$36
PlayerSelector p (LArgumentParserSelector;)V lambda$bootStrap$35
PlayerSelector b (LArgumentParserSelector;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; lambda$null$33
PlayerSelector q (LArgumentParserSelector;)Z lambda$bootStrap$32
PlayerSelector r (LArgumentParserSelector;)V lambda$bootStrap$31
PlayerSelector s (LArgumentParserSelector;)Z lambda$bootStrap$29
PlayerSelector t (LArgumentParserSelector;)V lambda$bootStrap$28
PlayerSelector u (LArgumentParserSelector;)Z lambda$bootStrap$27
PlayerSelector v (LArgumentParserSelector;)V lambda$bootStrap$26
PlayerSelector w (LArgumentParserSelector;)Z lambda$bootStrap$25
PlayerSelector x (LArgumentParserSelector;)V lambda$bootStrap$24
PlayerSelector y (LArgumentParserSelector;)Z lambda$bootStrap$23
PlayerSelector z (LArgumentParserSelector;)V lambda$bootStrap$22
PlayerSelector A (LArgumentParserSelector;)Z lambda$bootStrap$21
PlayerSelector B (LArgumentParserSelector;)V lambda$bootStrap$20
PlayerSelector C (LArgumentParserSelector;)Z lambda$bootStrap$19
PlayerSelector D (LArgumentParserSelector;)V lambda$bootStrap$18
PlayerSelector E (LArgumentParserSelector;)Z lambda$bootStrap$17
PlayerSelector F (LArgumentParserSelector;)V lambda$bootStrap$16
PlayerSelector G (LArgumentParserSelector;)Z lambda$bootStrap$15
PlayerSelector H (LArgumentParserSelector;)V lambda$bootStrap$14
PlayerSelector I (LArgumentParserSelector;)Z lambda$bootStrap$13
PlayerSelector J (LArgumentParserSelector;)V lambda$bootStrap$12
PlayerSelector K (LArgumentParserSelector;)Z lambda$bootStrap$11
PlayerSelector L (LArgumentParserSelector;)V lambda$bootStrap$10
PlayerSelector M (LArgumentParserSelector;)Z lambda$bootStrap$9
PlayerSelector N (LArgumentParserSelector;)V lambda$bootStrap$8
PlayerSelector O (LArgumentParserSelector;)Z lambda$bootStrap$7
PlayerSelector P (LArgumentParserSelector;)V lambda$bootStrap$6
PlayerSelector c (Ljava/lang/String;ZLEntity;)Z lambda$null$5
PlayerSelector b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
PlayerSelector c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
PlayerSelector d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
PlayerSelector e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
PlayerSelector$Modifier handle (LArgumentParserSelector;)V handle
PlayerSelector$Option a modifier
PlayerSelector$Option b predicate
PlayerSelector$Option c description
ArgumentSerializer b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentRegistry a LOGGER
ArgumentRegistry b BY_CLASS
ArgumentRegistry c BY_NAME
ArgumentRegistry$Entry a clazz
ArgumentRegistry$Entry b serializer
ArgumentRegistry$Entry c name
ArgumentSerializerVoid a constructor
ArgumentSerializerVoid b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
CompletionProviders f PROVIDERS_BY_NAME
CompletionProviders g DEFAULT_NAME
CompletionProviders a ASK_SERVER
CompletionProviders b ALL_RECIPES
CompletionProviders c AVAILABLE_SOUNDS
CompletionProviders d AVAILABLE_BIOMES
CompletionProviders e SUMMONABLE_ENTITIES
CompletionProviders b (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; safelySwap
CompletionProviders b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$3
CompletionProviders c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$2
CompletionProviders d (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$1
CompletionProviders e (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
CompletionProviders$Wrapper a delegate
CompletionProviders$Wrapper b name
CompletionProviders$Wrapper getSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; getSuggestions
ArgumentSerializers b (B)Z numberHasMax
ArgumentSerializerDouble b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentSerializerFloat b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentSerializerInteger b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentSerializerLong b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentSerializerString b (LPacketDataSerializer;)Lcom/mojang/brigadier/arguments/ArgumentType; deserializeFromNetwork
ArgumentSerializerString$1 a $SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
BlockMath c LOGGER
BlockMath a vanillaUvTransformLocalToGlobal
BlockMath b vanillaUvTransformGlobalToLocal
BlockMath b (LTransformation;)LTransformation; blockCornerToCenter
BlockMath b (Ljava/util/EnumMap;)V lambda$static$0
BlockPosition$1 f currentDepth
BlockPosition$1 g maxX
BlockPosition$1 h maxY
BlockPosition$1 i x
BlockPosition$1 j y
BlockPosition$1 k pendingBlockPos
BlockPosition$1 a val$maxDepth
BlockPosition$1 b val$reachX
BlockPosition$1 c val$reachY
BlockPosition$1 d val$reachZ
BlockPosition$1 e val$origin
BlockPosition$1 computeNext ()Ljava/lang/Object; computeNext
BlockPosition$2 g index
BlockPosition$2 a val$end
BlockPosition$2 b val$width
BlockPosition$2 c val$height
BlockPosition$2 d val$minX
BlockPosition$2 e val$minY
BlockPosition$2 f val$minZ
BlockPosition$2 computeNext ()Ljava/lang/Object; computeNext
BlockPosition$3 a $SwitchMap$net$minecraft$world$level$block$Rotation
BlockPosition$MutableBlockPosition b (III)LBlockPosition; offset
BlockPosition$MutableBlockPosition d (III)LBlockPosition$MutableBlockPosition; set
BlockPosition$MutableBlockPosition c (DDD)LBlockPosition$MutableBlockPosition; set
BlockPosition$MutableBlockPosition g (LBaseBlockPosition;)LBlockPosition$MutableBlockPosition; set
BlockPosition$MutableBlockPosition g (J)LBlockPosition$MutableBlockPosition; set
BlockPosition$MutableBlockPosition c (LEnumDirection;)LBlockPosition$MutableBlockPosition; move
BlockPosition$MutableBlockPosition c (LEnumDirection;I)LBlockPosition$MutableBlockPosition; move
BlockPosition$MutableBlockPosition e (III)LBlockPosition$MutableBlockPosition; move
BlockPosition$MutableBlockPosition h (LBaseBlockPosition;)LBlockPosition$MutableBlockPosition; move
BlockPosition$MutableBlockPosition o (I)V setX
BlockPosition$MutableBlockPosition p (I)V setY
BlockPosition$MutableBlockPosition q (I)V setZ
BlockPosition$MutableBlockPosition h ()LBlockPosition; immutable
BlockPosition$MutableBlockPosition d (LBaseBlockPosition;)LBaseBlockPosition; cross
BlockPosition$MutableBlockPosition b (LEnumDirection$EnumAxis;I)LBaseBlockPosition; relative
BlockPosition$MutableBlockPosition b (LEnumDirection;I)LBaseBlockPosition; relative
BlockPosition$MutableBlockPosition b (LEnumDirection;)LBaseBlockPosition; relative
BlockPosition$MutableBlockPosition h (I)LBaseBlockPosition; east
BlockPosition$MutableBlockPosition j ()LBaseBlockPosition; east
BlockPosition$MutableBlockPosition i (I)LBaseBlockPosition; west
BlockPosition$MutableBlockPosition k ()LBaseBlockPosition; west
BlockPosition$MutableBlockPosition j (I)LBaseBlockPosition; south
BlockPosition$MutableBlockPosition l ()LBaseBlockPosition; south
BlockPosition$MutableBlockPosition k (I)LBaseBlockPosition; north
BlockPosition$MutableBlockPosition m ()LBaseBlockPosition; north
BlockPosition$MutableBlockPosition l (I)LBaseBlockPosition; below
BlockPosition$MutableBlockPosition n ()LBaseBlockPosition; below
BlockPosition$MutableBlockPosition m (I)LBaseBlockPosition; above
BlockPosition$MutableBlockPosition o ()LBaseBlockPosition; above
BlockPosition$MutableBlockPosition n (I)LBaseBlockPosition; multiply
BlockPosition$MutableBlockPosition e (LBaseBlockPosition;)LBaseBlockPosition; subtract
BlockPosition$MutableBlockPosition f (LBaseBlockPosition;)LBaseBlockPosition; offset
BlockPosition$MutableBlockPosition c (III)LBaseBlockPosition; offset
BlockPosition$MutableBlockPosition b (DDD)LBaseBlockPosition; offset
SourceBlock a level
SourceBlock b pos
SourceBlock h ()LWorld; getLevel
SourceBlock b ()D y
SourceBlock c ()D z
SourceBlock d ()LBlockPosition; getPos
SourceBlock e ()LIBlockData; getBlockState
SourceBlock f ()LMaterial; getMaterial
SourceBlock g ()LTileEntity; getEntity
CursorPosition a originX
CursorPosition b originY
CursorPosition c originZ
CursorPosition d width
CursorPosition e height
CursorPosition f depth
CursorPosition g end
CursorPosition h index
CursorPosition i x
CursorPosition j y
CursorPosition k z
CursorPosition b ()I nextX
CursorPosition c ()I nextY
CursorPosition d ()I nextZ
CursorPosition e ()I getNextType
RegistryBlocks V defaultKey
RegistryBlocks W defaultValue
RegistryBlocks b (Ljava/lang/Object;)LMinecraftKey; getKey
EnumDirection$1 a $SwitchMap$net$minecraft$core$Direction
EnumDirection$1 b $SwitchMap$net$minecraft$core$Direction$Axis
EnumDirection$Axis$1 test (Ljava/lang/Object;)Z test
EnumDirection$Axis$2 test (Ljava/lang/Object;)Z test
EnumDirection$Axis$3 test (Ljava/lang/Object;)Z test
MapGeneratorUtils b (Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Map; linkedHashMapFrom
RegistryMaterials a LOGGER
RegistryMaterials b map
RegistryMaterials c storage
RegistryMaterials d randomCache
RegistryMaterials V nextId
RegistryMaterials b (Ljava/lang/Object;)LMinecraftKey; getKey
RegistryMaterials iterator ()Ljava/util/Iterator; iterator
RegistryMaterials b (LMinecraftKey;)Ljava/util/Optional; getOptional
RegistryMaterials b ()Ljava/util/Set; keySet
RegistryMaterials c ()Z isEmpty
RegistryMaterials c (LMinecraftKey;)Z containsKey
RegistryMaterials b (I)Z containsId
NonNullList a list
NonNullList b defaultValue
NonNullList get (I)Ljava/lang/Object; get
NonNullList set (ILjava/lang/Object;)Ljava/lang/Object; set
NonNullList add (ILjava/lang/Object;)V add
NonNullList remove (I)Ljava/lang/Object; remove
NonNullList size ()I size
NonNullList clear ()V clear
Position a x
Position b y
Position c z
Position b ()D y
Position c ()D z
SectionPosition b (I)I sectionRelative
SectionPosition b (LBlockPosition;)S sectionRelativePos
SectionPosition c (I)I sectionToBlockCoord
SectionPosition b (J)I x
SectionPosition c (J)I y
SectionPosition d (J)I z
SectionPosition b ()I y
SectionPosition c ()I z
SectionPosition d ()I minBlockX
SectionPosition e ()I minBlockY
SectionPosition f ()I minBlockZ
SectionPosition g ()I maxBlockX
SectionPosition h ()I maxBlockY
SectionPosition i ()I maxBlockZ
SectionPosition e (J)J blockToSection
SectionPosition f (J)J getZeroNode
SectionPosition p ()LBlockPosition; origin
SectionPosition q ()LBlockPosition; center
SectionPosition r ()LChunkCoordIntPair; chunk
SectionPosition b (III)J asLong
SectionPosition s ()J asLong
SectionPosition d (III)LSectionPosition; offset
SectionPosition t ()Ljava/util/stream/Stream; blocksInside
SectionPosition b (LChunkCoordIntPair;I)Ljava/util/stream/Stream; aroundChunk
SectionPosition c (III)LBaseBlockPosition; offset
SectionPosition$1 a cursor
SectionPosition$1 b val$minX
SectionPosition$1 c val$minY
SectionPosition$1 d val$minZ
SectionPosition$1 e val$maxX
SectionPosition$1 f val$maxY
SectionPosition$1 g val$maxZ
SectionPosition$1 tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
SerializableBoolean a value
SerializableBoolean equals (Ljava/lang/Object;)Z equals
SerializableBoolean hashCode ()I hashCode
SerializableBoolean toString ()Ljava/lang/String; toString
MinecraftSerializableLong a value
MinecraftSerializableLong equals (Ljava/lang/Object;)Z equals
MinecraftSerializableLong hashCode ()I hashCode
MinecraftSerializableLong toString ()Ljava/lang/String; toString
SerializableUUID a value
SerializableUUID toString ()Ljava/lang/String; toString
IRegistryWritable c ()Z isEmpty
DispenseBehaviorBoat b defaultDispenseItemBehavior
DispenseBehaviorBoat c type
DispenseBehaviorItem dispense (LISourceBlock;LItemStack;)LItemStack; dispense
IDispenseBehavior$13 b defaultDispenseItemBehavior
IDispenseBehavior$14 b defaultDispenseItemBehavior
IDispenseBehavior$21 c defaultDispenseItemBehavior
IDispenseBehavior$6 b ()F getPower
IDispenseBehavior$7 dispense (LISourceBlock;LItemStack;)LItemStack; dispense
IDispenseBehavior$7$1 b this$0
IDispenseBehavior$7$1 b ()F getPower
IDispenseBehavior$8 dispense (LISourceBlock;LItemStack;)LItemStack; dispense
IDispenseBehavior$8$1 b this$0
IDispenseBehavior$8$1 b ()F getPower
ParticleParamBlock a DESERIALIZER
ParticleParamBlock b type
ParticleParamBlock c state
ParticleParamBlock b ()LParticle; getType
ParticleParamBlock c ()LIBlockData; getState
ParticleParamBlock$1 b (LParticle;LPacketDataSerializer;)LParticleParam; fromNetwork
ParticleParamBlock$1 b (LParticle;Lcom/mojang/brigadier/StringReader;)LParticleParam; fromCommand
ParticleParamRedstone a REDSTONE
ParticleParamRedstone b DESERIALIZER
ParticleParamRedstone c r
ParticleParamRedstone d g
ParticleParamRedstone e b
ParticleParamRedstone f scale
ParticleParamRedstone b ()LParticle; getType
ParticleParamRedstone c ()F getR
ParticleParamRedstone d ()F getG
ParticleParamRedstone e ()F getB
ParticleParamRedstone f ()F getScale
ParticleParamRedstone$1 b (LParticle;LPacketDataSerializer;)LParticleParam; fromNetwork
ParticleParamRedstone$1 b (LParticle;Lcom/mojang/brigadier/StringReader;)LParticleParam; fromCommand
ParticleParamItem a DESERIALIZER
ParticleParamItem b type
ParticleParamItem c itemStack
ParticleParamItem b ()LParticle; getType
ParticleParamItem c ()LItemStack; getItem
ParticleParamItem$1 b (LParticle;LPacketDataSerializer;)LParticleParam; fromNetwork
ParticleParamItem$1 b (LParticle;Lcom/mojang/brigadier/StringReader;)LParticleParam; fromCommand
ParticleParam$Deserializer b (LParticle;Lcom/mojang/brigadier/StringReader;)LParticleParam; fromCommand
ParticleParam$Deserializer b (LParticle;LPacketDataSerializer;)LParticleParam; fromNetwork
Particle a overrideLimiter
Particle b deserializer
Particle c ()Z getOverrideLimiter
Particle d ()LParticleParam$Deserializer; getDeserializer
ParticleType a DESERIALIZER
ParticleType b ()LParticle; getType
ParticleType$1 b (LParticle;LPacketDataSerializer;)LParticleParam; fromNetwork
ParticleType$1 b (LParticle;Lcom/mojang/brigadier/StringReader;)LParticleParam; fromCommand
DebugReportGenerator a LOGGER
DebugReportGenerator b inputFolders
DebugReportGenerator c outputFolder
DebugReportGenerator d providers
DebugReportGenerator b ()Ljava/nio/file/Path; getOutputFolder
DebugReportGenerator c ()V run
DebugReportProvider a SHA1
HashCache a LOGGER
HashCache b path
HashCache c cachePath
HashCache d hits
HashCache e oldCache
HashCache f newCache
HashCache g keep
HashCache b (Ljava/nio/file/Path;)Z had
HashCache c (Ljava/nio/file/Path;)V keep
HashCache b ()V removeStale
HashCache c ()Ljava/util/stream/Stream; walkOutputFiles
HashCache d (Ljava/nio/file/Path;)Z lambda$walkOutputFiles$4
HashCache e (Ljava/nio/file/Path;)V lambda$removeStale$3
HashCache b (Ljava/nio/file/Path;Ljava/lang/String;)V lambda$new$1
HashCache f (Ljava/nio/file/Path;)V lambda$new$0
Main main ([Ljava/lang/String;)V main
AdvancementProvider b LOGGER
AdvancementProvider c GSON
AdvancementProvider d generator
AdvancementProvider e tabs
AdventureAdvancements a EXPLORABLE_BIOMES
AdventureAdvancements b MOBS_TO_KILL
AdventureAdvancements b (LAdvancement$SerializedAdvancement;)LAdvancement$SerializedAdvancement; addBiomes
AdventureAdvancements accept (Ljava/lang/Object;)V accept
HusbandryAdvancements a BREEDABLE_ANIMALS
HusbandryAdvancements b FISH
HusbandryAdvancements c FISH_BUCKETS
HusbandryAdvancements d EDIBLE_ITEMS
HusbandryAdvancements b (LAdvancement$SerializedAdvancement;)LAdvancement$SerializedAdvancement; addBreedable
HusbandryAdvancements c (LAdvancement$SerializedAdvancement;)LAdvancement$SerializedAdvancement; addFishBuckets
HusbandryAdvancements d (LAdvancement$SerializedAdvancement;)LAdvancement$SerializedAdvancement; addFish
HusbandryAdvancements e (LAdvancement$SerializedAdvancement;)LAdvancement$SerializedAdvancement; addCatVariants
HusbandryAdvancements accept (Ljava/lang/Object;)V accept
NetherAdvancements accept (Ljava/lang/Object;)V accept
StoryAdvancements accept (Ljava/lang/Object;)V accept
TheEndAdvancements accept (Ljava/lang/Object;)V accept
BlockListReport b GSON
BlockListReport c generator
CommandsReport b GSON
CommandsReport c generator
RegistryDumpReport b GSON
RegistryDumpReport c generator
BlockLoot a HAS_SILK_TOUCH
BlockLoot b HAS_NO_SILK_TOUCH
BlockLoot c HAS_SHEARS
BlockLoot d HAS_SHEARS_OR_SILK_TOUCH
BlockLoot e HAS_NO_SHEARS_OR_SILK_TOUCH
BlockLoot f EXPLOSION_RESISTANT
BlockLoot g NORMAL_LEAVES_SAPLING_CHANCES
BlockLoot h JUNGLE_LEAVES_SAPLING_CHANGES
BlockLoot i map
BlockLoot b (LBlock;LLootEntryAbstract$Builder;)LLootTable$Builder; createShearsDispatchTable
BlockLoot c (LBlock;LLootEntryAbstract$Builder;)LLootTable$Builder; createSilkTouchOrShearsDispatchTable
BlockLoot b (LBlock;LIMaterial;)LLootTable$Builder; createSingleItemTableWithSilkTouch
BlockLoot b (LIMaterial;)LLootTable$Builder; createSilkTouchOnlyTable
BlockLoot c (LIMaterial;)LLootTable$Builder; createPotFlowerItemTable
BlockLoot e (LBlock;)LLootTable$Builder; createSlabItemTable
BlockLoot f (LBlock;)LLootTable$Builder; createNameableBlockEntityTable
BlockLoot g (LBlock;)LLootTable$Builder; createShulkerBoxDrop
BlockLoot h (LBlock;)LLootTable$Builder; createBannerDrop
BlockLoot i (LBlock;)LLootTable$Builder; createBeeNestDrop
BlockLoot j (LBlock;)LLootTable$Builder; createBeeHiveDrop
BlockLoot c (LBlock;LIMaterial;)LLootTable$Builder; createMushroomBlockDrop
BlockLoot k (LBlock;)LLootTable$Builder; createGrassDrops
BlockLoot b (LBlock;LItem;)LLootTable$Builder; createStemDrops
BlockLoot c (LBlock;LItem;)LLootTable$Builder; createAttachedStemDrops
BlockLoot d (LIMaterial;)LLootTable$Builder; createShearsOnlyDrop
BlockLoot b (LBlock;LBlock;[F)LLootTable$Builder; createOakLeavesDrops
BlockLoot b (LBlock;LBlock;)V addNetherVinesDropTable
BlockLoot b (LBlock;)V dropPottedContents
BlockLoot c (LBlock;)V dropWhenSilkTouch
BlockLoot d (LBlock;)V dropSelf
BlockLoot accept (Ljava/lang/Object;)V accept
BlockLoot l (LBlock;)LLootTable$Builder; lambda$dropPottedContents$69
BlockLoot m (LBlock;)LLootTable$Builder; lambda$accept$68
BlockLoot n (LBlock;)LLootTable$Builder; lambda$accept$67
BlockLoot o (LBlock;)LLootTable$Builder; lambda$accept$66
BlockLoot p (LBlock;)LLootTable$Builder; lambda$accept$65
BlockLoot q (LBlock;)LLootTable$Builder; lambda$accept$64
BlockLoot r (LBlock;)LLootTable$Builder; lambda$accept$63
BlockLoot s (LBlock;)LLootTable$Builder; lambda$accept$62
BlockLoot t (LBlock;)LLootTable$Builder; lambda$accept$61
BlockLoot u (LBlock;)LLootTable$Builder; lambda$accept$60
BlockLoot v (LBlock;)LLootTable$Builder; lambda$accept$59
BlockLoot w (LBlock;)LLootTable$Builder; lambda$accept$58
BlockLoot x (LBlock;)LLootTable$Builder; lambda$accept$57
BlockLoot y (LBlock;)LLootTable$Builder; lambda$accept$56
BlockLoot z (LBlock;)LLootTable$Builder; lambda$accept$55
BlockLoot A (LBlock;)LLootTable$Builder; lambda$accept$54
BlockLoot B (LBlock;)LLootTable$Builder; lambda$accept$53
BlockLoot C (LBlock;)LLootTable$Builder; lambda$accept$52
BlockLoot D (LBlock;)LLootTable$Builder; lambda$accept$51
BlockLoot E (LBlock;)LLootTable$Builder; lambda$accept$50
BlockLoot F (LBlock;)LLootTable$Builder; lambda$accept$49
BlockLoot G (LBlock;)LLootTable$Builder; lambda$accept$48
BlockLoot H (LBlock;)LLootTable$Builder; lambda$accept$47
BlockLoot I (LBlock;)LLootTable$Builder; lambda$accept$46
BlockLoot J (LBlock;)LLootTable$Builder; lambda$accept$45
BlockLoot K (LBlock;)LLootTable$Builder; lambda$accept$44
BlockLoot L (LBlock;)LLootTable$Builder; lambda$accept$43
BlockLoot M (LBlock;)LLootTable$Builder; lambda$accept$42
BlockLoot N (LBlock;)LLootTable$Builder; lambda$accept$41
BlockLoot O (LBlock;)LLootTable$Builder; lambda$accept$40
BlockLoot P (LBlock;)LLootTable$Builder; lambda$accept$39
BlockLoot Q (LBlock;)LLootTable$Builder; lambda$accept$38
BlockLoot R (LBlock;)LLootTable$Builder; lambda$accept$37
BlockLoot S (LBlock;)LLootTable$Builder; lambda$accept$36
BlockLoot T (LBlock;)LLootTable$Builder; lambda$accept$35
BlockLoot U (LBlock;)LLootTable$Builder; lambda$accept$34
BlockLoot V (LBlock;)LLootTable$Builder; lambda$accept$33
BlockLoot W (LBlock;)LLootTable$Builder; lambda$accept$32
BlockLoot X (LBlock;)LLootTable$Builder; lambda$accept$31
BlockLoot Y (LBlock;)LLootTable$Builder; lambda$accept$30
BlockLoot Z (LBlock;)LLootTable$Builder; lambda$accept$29
BlockLoot aa (LBlock;)LLootTable$Builder; lambda$accept$28
BlockLoot ab (LBlock;)LLootTable$Builder; lambda$accept$27
BlockLoot ac (LBlock;)LLootTable$Builder; lambda$accept$26
BlockLoot ad (LBlock;)LLootTable$Builder; lambda$accept$25
BlockLoot ae (LBlock;)LLootTable$Builder; lambda$accept$24
BlockLoot af (LBlock;)LLootTable$Builder; lambda$accept$23
BlockLoot ag (LBlock;)LLootTable$Builder; lambda$accept$22
BlockLoot ah (LBlock;)LLootTable$Builder; lambda$accept$21
BlockLoot ai (LBlock;)LLootTable$Builder; lambda$accept$20
BlockLoot aj (LBlock;)LLootTable$Builder; lambda$accept$19
BlockLoot ak (LBlock;)LLootTable$Builder; lambda$accept$18
BlockLoot al (LBlock;)LLootTable$Builder; lambda$accept$17
BlockLoot am (LBlock;)LLootTable$Builder; lambda$accept$16
BlockLoot an (LBlock;)LLootTable$Builder; lambda$accept$15
BlockLoot ao (LBlock;)LLootTable$Builder; lambda$accept$14
BlockLoot ap (LBlock;)LLootTable$Builder; lambda$accept$13
BlockLoot aq (LBlock;)LLootTable$Builder; lambda$accept$12
BlockLoot ar (LBlock;)LLootTable$Builder; lambda$accept$11
BlockLoot as (LBlock;)LLootTable$Builder; lambda$accept$10
BlockLoot at (LBlock;)LLootTable$Builder; lambda$accept$9
BlockLoot au (LBlock;)LLootTable$Builder; lambda$accept$8
BlockLoot av (LBlock;)LLootTable$Builder; lambda$accept$7
BlockLoot aw (LBlock;)LLootTable$Builder; lambda$accept$6
BlockLoot ax (LBlock;)LLootTable$Builder; lambda$accept$5
BlockLoot ay (LBlock;)LLootTable$Builder; lambda$accept$4
BlockLoot az (LBlock;)LLootTable$Builder; lambda$accept$3
BlockLoot aA (LBlock;)LLootTable$Builder; lambda$accept$2
BlockLoot aB (LBlock;)LLootTable$Builder; lambda$accept$1
BlockLoot aC (LBlock;)LLootTable$Builder; lambda$accept$0
ChestLoot accept (Ljava/lang/Object;)V accept
EntityLoot a ENTITY_ON_FIRE
EntityLoot b SPECIAL_LOOT_TABLE_TYPES
EntityLoot c map
EntityLoot accept (Ljava/lang/Object;)V accept
FishingLoot a IN_JUNGLE
FishingLoot b IN_JUNGLE_HILLS
FishingLoot c IN_JUNGLE_EDGE
FishingLoot d IN_BAMBOO_JUNGLE
FishingLoot e IN_MODIFIED_JUNGLE
FishingLoot f IN_MODIFIED_JUNGLE_EDGE
FishingLoot g IN_BAMBOO_JUNGLE_HILLS
FishingLoot accept (Ljava/lang/Object;)V accept
GiftLoot accept (Ljava/lang/Object;)V accept
GiftLoot b (LNBTTagCompound;)V lambda$accept$11
GiftLoot c (LNBTTagCompound;)V lambda$accept$10
GiftLoot d (LNBTTagCompound;)V lambda$accept$9
GiftLoot e (LNBTTagCompound;)V lambda$accept$8
GiftLoot f (LNBTTagCompound;)V lambda$accept$7
GiftLoot g (LNBTTagCompound;)V lambda$accept$6
GiftLoot h (LNBTTagCompound;)V lambda$accept$5
GiftLoot i (LNBTTagCompound;)V lambda$accept$4
GiftLoot j (LNBTTagCompound;)V lambda$accept$3
GiftLoot k (LNBTTagCompound;)V lambda$accept$2
GiftLoot l (LNBTTagCompound;)V lambda$accept$1
GiftLoot m (LNBTTagCompound;)V lambda$accept$0
LootTableProvider b LOGGER
LootTableProvider c GSON
LootTableProvider d generator
LootTableProvider e subProviders
PiglinBarterLoot accept (Ljava/lang/Object;)V accept
PiglinBarterLoot b (LNBTTagCompound;)V lambda$accept$0
BlockModelGenerators a blockStateOutput
BlockModelGenerators b modelOutput
BlockModelGenerators c skippedAutoModelsOutput
BlockModelGenerators c (LBlock;LMinecraftKey;)V delegateItemModel
BlockModelGenerators b (LBlock;)V createSimpleFlatItemModel
BlockModelGenerators b ()LPropertyDispatch; createHorizontalFacingDispatch
BlockModelGenerators c ()LPropertyDispatch; createHorizontalFacingDispatchAlt
BlockModelGenerators d ()LPropertyDispatch; createTorchHorizontalDispatch
BlockModelGenerators e ()LPropertyDispatch; createFacingDispatch
BlockModelGenerators d (LBlock;LMinecraftKey;)LMultiVariantGenerator; createRotatedVariant
BlockModelGenerators e (LBlock;LMinecraftKey;LMinecraftKey;)LMultiVariantGenerator; createRotatedVariant
BlockModelGenerators c (LBlock;)V createRotatedMirroredVariantBlock
BlockModelGenerators d (LBlock;)V createRotatedVariantBlock
BlockModelGenerators f (LBlock;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createButton
BlockModelGenerators b (LBlock;LMinecraftKey;LMinecraftKey;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createDoor
BlockModelGenerators g (LBlock;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createFence
BlockModelGenerators d (LBlock;LMinecraftKey;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createWall
BlockModelGenerators c (LBlock;LMinecraftKey;LMinecraftKey;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createFenceGate
BlockModelGenerators e (LBlock;LMinecraftKey;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createStairs
BlockModelGenerators f (LBlock;LMinecraftKey;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createOrientableTrapdoor
BlockModelGenerators g (LBlock;LMinecraftKey;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createTrapdoor
BlockModelGenerators e (LBlock;LMinecraftKey;)LMultiVariantGenerator; createSimpleBlock
BlockModelGenerators f ()LPropertyDispatch; createRotatedPillar
BlockModelGenerators f (LBlock;LMinecraftKey;)LBlockStateGenerator; createAxisAlignedPillarBlock
BlockModelGenerators b (LBlock;LTexturedModel$Provider;)V createHorizontallyRotatedBlock
BlockModelGenerators h (LBlock;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createRotatedPillarWithHorizontalVariant
BlockModelGenerators i (LBlock;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createPressurePlate
BlockModelGenerators h (LBlock;LMinecraftKey;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; createSlab
BlockModelGenerators e (LBlock;)V createTrivialCube
BlockModelGenerators c (LBlock;LTexturedModel$Provider;)V createTrivialBlock
BlockModelGenerators d (LBlock;LTexturedModel$Provider;)LBlockModelGenerators$BlockFamilyProvider; family
BlockModelGenerators f (LBlock;)LBlockModelGenerators$BlockFamilyProvider; family
BlockModelGenerators g (LBlock;)V createDoor
BlockModelGenerators h (LBlock;)V createOrientableTrapdoor
BlockModelGenerators i (LBlock;)V createTrapdoor
BlockModelGenerators j (LBlock;)LBlockModelGenerators$WoodProvider; woodProvider
BlockModelGenerators k (LBlock;)V createNonTemplateModelBlock
BlockModelGenerators b (LBlock;LBlockModelGenerators$TintState;)V createCrossBlock
BlockModelGenerators b (LBlock;LBlockModelGenerators$TintState;LTextureMapping;)V createCrossBlock
BlockModelGenerators b (LBlock;LBlock;)V createCoralFans
BlockModelGenerators c (LBlock;LBlock;)V createStems
BlockModelGenerators c (LBlock;LBlockModelGenerators$TintState;)V createDoublePlant
BlockModelGenerators g ()V createSunflower
BlockModelGenerators h ()V createTallSeagrass
BlockModelGenerators j (LBlock;LMinecraftKey;LMinecraftKey;)V createDoubleBlock
BlockModelGenerators l (LBlock;)V createPassiveRail
BlockModelGenerators m (LBlock;)V createActiveRail
BlockModelGenerators d (LBlock;LBlock;)LBlockModelGenerators$BlockEntityModelGenerator; blockEntityModels
BlockModelGenerators g (LBlock;LMinecraftKey;)V createAirLikeBlock
BlockModelGenerators e (LBlock;LBlock;)V createWoolBlocks
BlockModelGenerators b (LTexturedModel$Provider;[LBlock;)V createColoredBlockWithStateRotations
BlockModelGenerators f (LBlock;LBlock;)V createGlassBlocks
BlockModelGenerators n (LBlock;)V createCommandBlock
BlockModelGenerators o (LBlock;)V createAnvil
BlockModelGenerators i ()V createBamboo
BlockModelGenerators j ()LPropertyDispatch; createColumnWithFacing
BlockModelGenerators e (LBlock;LTexturedModel$Provider;)V createOrientableBlock
BlockModelGenerators k ()V createBarrel
BlockModelGenerators l ()V createBell
BlockModelGenerators m ()V createGrindstone
BlockModelGenerators f (LBlock;LTexturedModel$Provider;)V createFurnace
BlockModelGenerators n ()V createCampfire
BlockModelGenerators o ()V createBookshelf
BlockModelGenerators p ()V createRedstoneWire
BlockModelGenerators q ()V createComparator
BlockModelGenerators r ()V createSmoothStoneSlab
BlockModelGenerators s ()V createBrewingStand
BlockModelGenerators p (LBlock;)V createMushroomBlock
BlockModelGenerators t ()V createCakeBlock
BlockModelGenerators u ()V createCartographyTable
BlockModelGenerators v ()V createSmithingTable
BlockModelGenerators w ()V createPumpkins
BlockModelGenerators x ()V createCauldron
BlockModelGenerators g (LBlock;LBlock;)V createChiseledSandsone
BlockModelGenerators y ()V createChorusFlower
BlockModelGenerators q (LBlock;)V createDispenserBlock
BlockModelGenerators z ()V createEndPortalFrame
BlockModelGenerators A ()V createChorusPlant
BlockModelGenerators B ()V createComposter
BlockModelGenerators r (LBlock;)V createNyliumBlock
BlockModelGenerators C ()V createDaylightDetector
BlockModelGenerators D ()V createEndRod
BlockModelGenerators E ()V createFarmland
BlockModelGenerators s (LBlock;)Ljava/util/List; createFloorFireModels
BlockModelGenerators t (LBlock;)Ljava/util/List; createSideFireModels
BlockModelGenerators u (LBlock;)Ljava/util/List; createTopFireModels
BlockModelGenerators F ()V createFire
BlockModelGenerators G ()V createSoulFire
BlockModelGenerators v (LBlock;)V createLantern
BlockModelGenerators H ()V createFrostedIce
BlockModelGenerators I ()V createGrassBlocks
BlockModelGenerators J ()V createCocoa
BlockModelGenerators K ()V createGrassPath
BlockModelGenerators h (LBlock;LBlock;)V createWeightedPressurePlate
BlockModelGenerators L ()V createHopper
BlockModelGenerators i (LBlock;LBlock;)V copyModel
BlockModelGenerators M ()V createIronBars
BlockModelGenerators w (LBlock;)V createNonTemplateHorizontalBlock
BlockModelGenerators N ()V createLever
BlockModelGenerators O ()V createLilyPad
BlockModelGenerators P ()V createNetherPortalBlock
BlockModelGenerators Q ()V createNetherrack
BlockModelGenerators R ()V createObserver
BlockModelGenerators S ()V createPistons
BlockModelGenerators T ()V createPistonHeads
BlockModelGenerators U ()V createScaffolding
BlockModelGenerators V ()V createRedstoneLamp
BlockModelGenerators j (LBlock;LBlock;)V createNormalTorch
BlockModelGenerators W ()V createRedstoneTorch
BlockModelGenerators X ()V createRepeater
BlockModelGenerators Y ()V createSeaPickle
BlockModelGenerators Z ()V createSnowBlocks
BlockModelGenerators aa ()V createStonecutter
BlockModelGenerators ab ()V createStructureBlock
BlockModelGenerators ac ()V createSweetBerryBush
BlockModelGenerators ad ()V createTripwire
BlockModelGenerators ae ()V createTripwireHook
BlockModelGenerators af ()V createTurtleEgg
BlockModelGenerators ag ()V createVine
BlockModelGenerators ah ()V createMagmaBlock
BlockModelGenerators x (LBlock;)V createShulkerBox
BlockModelGenerators b (LBlock;LBlock;LBlockModelGenerators$TintState;)V createGrowingPlant
BlockModelGenerators k (LBlock;LBlock;)V createBedItem
BlockModelGenerators ai ()V createInfestedStone
BlockModelGenerators l (LBlock;LBlock;)V createNetherRoots
BlockModelGenerators aj ()V createRespawnAnchor
BlockModelGenerators b (LTextureMapping;)V lambda$run$34
BlockModelGenerators c (LTextureMapping;)V lambda$run$33
BlockModelGenerators d (LTextureMapping;)LMinecraftKey; lambda$run$32
BlockModelGenerators e (LTextureMapping;)V lambda$run$31
BlockModelGenerators b (Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List; lambda$createTurtleEgg$29
BlockModelGenerators b (LMinecraftKey;LTextureMapping;)V lambda$createGrassBlocks$22
BlockModelGenerators b (LVariant;)LVariant; lambda$createSoulFire$20
BlockModelGenerators c (LVariant;)LVariant; lambda$createSoulFire$19
BlockModelGenerators d (LVariant;)LVariant; lambda$createSoulFire$18
BlockModelGenerators e (LVariant;)LVariant; lambda$createSoulFire$17
BlockModelGenerators f (LVariant;)LVariant; lambda$createFire$16
BlockModelGenerators g (LVariant;)LVariant; lambda$createFire$15
BlockModelGenerators h (LVariant;)LVariant; lambda$createFire$14
BlockModelGenerators i (LVariant;)LVariant; lambda$createFire$13
BlockModelGenerators j (LVariant;)LVariant; lambda$createFire$12
BlockModelGenerators k (LVariant;)LVariant; lambda$createFire$11
BlockModelGenerators b (LMinecraftKey;)LVariant; lambda$wrapModels$10
BlockModelGenerators c (LMinecraftKey;LTextureMapping;)V lambda$createFurnace$8
BlockModelGenerators d (LMinecraftKey;LTextureMapping;)V lambda$createBarrel$4
BlockModelGenerators b (LTextureMapping;LMinecraftKey;)LTextureMapping; lambda$createCommandBlock$2
BlockModelGenerators b (LBlockModelGenerators;)Ljava/util/function/Consumer; access$200
BlockModelGenerators b (LBlock;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; access$600
BlockModelGenerators c (LBlock;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; access$800
BlockModelGenerators b (LBlock;LMinecraftKey;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; access$1100
BlockModelGenerators c (LBlock;LMinecraftKey;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; access$1200
BlockModelGenerators b (LBlock;LMinecraftKey;)LBlockStateGenerator; access$1300
BlockModelGenerators d (LBlock;LMinecraftKey;LMinecraftKey;)LBlockStateGenerator; access$1400
BlockModelGenerators$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
BlockModelGenerators$BlockEntityModelGenerator b baseModel
BlockModelGenerators$BlockEntityModelGenerator a this$0
BlockModelGenerators$BlockEntityModelGenerator b ([LBlock;)LBlockModelGenerators$BlockEntityModelGenerator; createWithoutBlockItem
BlockModelGenerators$BlockFamilyProvider b mapping
BlockModelGenerators$BlockFamilyProvider c fullBlock
BlockModelGenerators$BlockFamilyProvider a this$0
BlockModelGenerators$BlockFamilyProvider b (LBlock;)LBlockModelGenerators$BlockFamilyProvider; wall
BlockModelGenerators$BlockFamilyProvider c (LBlock;)LBlockModelGenerators$BlockFamilyProvider; fence
BlockModelGenerators$BlockFamilyProvider d (LBlock;)LBlockModelGenerators$BlockFamilyProvider; fenceGate
BlockModelGenerators$BlockFamilyProvider e (LBlock;)LBlockModelGenerators$BlockFamilyProvider; pressurePlate
BlockModelGenerators$BlockFamilyProvider f (LBlock;)LBlockModelGenerators$BlockFamilyProvider; slab
BlockModelGenerators$BlockFamilyProvider g (LBlock;)LBlockModelGenerators$BlockFamilyProvider; stairs
BlockModelGenerators$TintState a TINTED
BlockModelGenerators$TintState b NOT_TINTED
BlockModelGenerators$TintState c $VALUES
BlockModelGenerators$TintState values ()[LBlockModelGenerators$TintState; values
BlockModelGenerators$TintState valueOf (Ljava/lang/String;)LBlockModelGenerators$TintState; valueOf
BlockModelGenerators$TintState b ()LModelTemplate; getCrossPot
BlockModelGenerators$WoodProvider b logMapping
BlockModelGenerators$WoodProvider a this$0
BlockModelGenerators$WoodProvider b (LBlock;)LBlockModelGenerators$WoodProvider; log
BlockModelGenerators$WoodProvider c (LBlock;)LBlockModelGenerators$WoodProvider; logWithHorizontal
ItemModelGenerators a output
ModelProvider b LOGGER
ModelProvider c GSON
ModelProvider d generator
Condition b ([LCondition;)LCondition; or
Condition$CompositeCondition a operation
Condition$CompositeCondition b subconditions
Condition$CompositeCondition b ()Lcom/google/gson/JsonElement; get
Condition$CompositeCondition get ()Ljava/lang/Object; get
Condition$Operation a AND
Condition$Operation b OR
Condition$Operation c id
Condition$Operation d $VALUES
Condition$Operation values ()[LCondition$Operation; values
Condition$Operation valueOf (Ljava/lang/String;)LCondition$Operation; valueOf
Condition$TerminalCondition a terms
Condition$TerminalCondition c (LIBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; getTerm
Condition$TerminalCondition b (LIBlockState;Ljava/lang/Comparable;)LCondition$TerminalCondition; negatedTerm
Condition$TerminalCondition b (LIBlockState;Ljava/lang/Comparable;[Ljava/lang/Comparable;)LCondition$TerminalCondition; negatedTerm
Condition$TerminalCondition b ()Lcom/google/gson/JsonElement; get
Condition$TerminalCondition get ()Ljava/lang/Object; get
MultiPartGenerator a block
MultiPartGenerator b parts
MultiPartGenerator b ()Lcom/google/gson/JsonElement; get
MultiPartGenerator get ()Ljava/lang/Object; get
MultiPartGenerator$ConditionalEntry a condition
MultiPartGenerator$Entry a variants
MultiPartGenerator$Entry get ()Ljava/lang/Object; get
MultiVariantGenerator a block
MultiVariantGenerator b baseVariants
MultiVariantGenerator c seenProperties
MultiVariantGenerator d declaredPropertySets
MultiVariantGenerator b ()Lcom/google/gson/JsonElement; get
MultiVariantGenerator get ()Ljava/lang/Object; get
MultiVariantGenerator b (Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream; lambda$get$2
PropertyDispatch a values
PropertyDispatch c ()V verifyComplete
PropertyDispatch b ()Ljava/util/List; getDefinedProperties
PropertyDispatch$C1 a property1
PropertyDispatch$C1 b ()Ljava/util/List; getDefinedProperties
PropertyDispatch$C1 b (Ljava/util/function/Function;)LPropertyDispatch; generateList
PropertyDispatch$C1 b (Ljava/util/function/Function;Ljava/lang/Comparable;)V lambda$generate$0
PropertyDispatch$C2 a property1
PropertyDispatch$C2 b property2
PropertyDispatch$C2 b ()Ljava/util/List; getDefinedProperties
PropertyDispatch$C2 b (Ljava/util/function/BiFunction;)LPropertyDispatch; generateList
PropertyDispatch$C2 b (Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$generate$1
PropertyDispatch$C2 b (Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V lambda$null$0
PropertyDispatch$C3 a property1
PropertyDispatch$C3 b property2
PropertyDispatch$C3 c property3
PropertyDispatch$C3 b ()Ljava/util/List; getDefinedProperties
PropertyDispatch$C3 b (LPropertyDispatch$TriFunction;)LPropertyDispatch; generateList
PropertyDispatch$C3 b (LPropertyDispatch$TriFunction;Ljava/lang/Comparable;)V lambda$generate$2
PropertyDispatch$C3 b (Ljava/lang/Comparable;LPropertyDispatch$TriFunction;Ljava/lang/Comparable;)V lambda$null$1
PropertyDispatch$C3 b (Ljava/lang/Comparable;Ljava/lang/Comparable;LPropertyDispatch$TriFunction;Ljava/lang/Comparable;)V lambda$null$0
PropertyDispatch$C4 a property1
PropertyDispatch$C4 b property2
PropertyDispatch$C4 c property3
PropertyDispatch$C4 d property4
PropertyDispatch$C4 b ()Ljava/util/List; getDefinedProperties
PropertyDispatch$C4 b (LPropertyDispatch$QuadFunction;)LPropertyDispatch; generateList
PropertyDispatch$C4 b (LPropertyDispatch$QuadFunction;Ljava/lang/Comparable;)V lambda$generate$3
PropertyDispatch$C4 b (Ljava/lang/Comparable;LPropertyDispatch$QuadFunction;Ljava/lang/Comparable;)V lambda$null$2
PropertyDispatch$C4 b (Ljava/lang/Comparable;Ljava/lang/Comparable;LPropertyDispatch$QuadFunction;Ljava/lang/Comparable;)V lambda$null$1
PropertyDispatch$C4 b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;LPropertyDispatch$QuadFunction;Ljava/lang/Comparable;)V lambda$null$0
PropertyDispatch$C5 a property1
PropertyDispatch$C5 b property2
PropertyDispatch$C5 c property3
PropertyDispatch$C5 d property4
PropertyDispatch$C5 e property5
PropertyDispatch$C5 b ()Ljava/util/List; getDefinedProperties
PropertyDispatch$C5 b (LPropertyDispatch$PentaFunction;)LPropertyDispatch; generateList
PropertyDispatch$C5 b (LPropertyDispatch$PentaFunction;Ljava/lang/Comparable;)V lambda$generate$4
PropertyDispatch$C5 b (Ljava/lang/Comparable;LPropertyDispatch$PentaFunction;Ljava/lang/Comparable;)V lambda$null$3
PropertyDispatch$C5 b (Ljava/lang/Comparable;Ljava/lang/Comparable;LPropertyDispatch$PentaFunction;Ljava/lang/Comparable;)V lambda$null$2
PropertyDispatch$C5 b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;LPropertyDispatch$PentaFunction;Ljava/lang/Comparable;)V lambda$null$1
PropertyDispatch$C5 b (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;LPropertyDispatch$PentaFunction;Ljava/lang/Comparable;)V lambda$null$0
PropertyDispatch$TriFunction apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
PropertyValue a property
PropertyValue b value
PropertyValue toString ()Ljava/lang/String; toString
PropertyValue equals (Ljava/lang/Object;)Z equals
PropertyValue hashCode ()I hashCode
Selector a EMPTY
Selector b COMPARE_BY_NAME
Selector c values
Selector equals (Ljava/lang/Object;)Z equals
Selector hashCode ()I hashCode
Selector b ()Ljava/lang/String; getKey
Selector toString ()Ljava/lang/String; toString
Selector b (LPropertyValue;)Ljava/lang/String; lambda$static$0
Variant a values
Variant b ()Lcom/google/gson/JsonElement; get
Variant get ()Ljava/lang/Object; get
VariantProperties a X_ROT
VariantProperties b Y_ROT
VariantProperties c MODEL
VariantProperties d UV_LOCK
VariantProperties e WEIGHT
VariantProperties b (LVariantProperties$Rotation;)Lcom/google/gson/JsonElement; lambda$static$0
VariantProperties$Rotation a R0
VariantProperties$Rotation b R90
VariantProperties$Rotation c R180
VariantProperties$Rotation d R270
VariantProperties$Rotation e value
VariantProperties$Rotation f $VALUES
VariantProperties$Rotation values ()[LVariantProperties$Rotation; values
VariantProperties$Rotation valueOf (Ljava/lang/String;)LVariantProperties$Rotation; valueOf
VariantProperty a key
VariantProperty b serializer
VariantProperty toString ()Ljava/lang/String; toString
VariantProperty b (LVariantProperty;)Ljava/util/function/Function; access$100
VariantProperty$Value b value
VariantProperty$Value a this$0
VariantProperty$Value toString ()Ljava/lang/String; toString
DelegatedModel a parent
DelegatedModel get ()Ljava/lang/Object; get
ModelLocationUtils b (Ljava/lang/String;)LMinecraftKey; decorateItemModelLocation
ModelTemplate a model
ModelTemplate b requiredSlots
ModelTemplate c suffix
ModelTemplate b (LBlock;Ljava/lang/String;LTextureMapping;Ljava/util/function/BiConsumer;)LMinecraftKey; createWithOverride
ModelTemplates a CUBE
ModelTemplates b CUBE_ALL
ModelTemplates c CUBE_MIRRORED_ALL
ModelTemplates d CUBE_COLUMN
ModelTemplates e CUBE_COLUMN_HORIZONTAL
ModelTemplates f CUBE_TOP
ModelTemplates g CUBE_BOTTOM_TOP
ModelTemplates h CUBE_ORIENTABLE
ModelTemplates i CUBE_ORIENTABLE_TOP_BOTTOM
ModelTemplates j CUBE_ORIENTABLE_VERTICAL
ModelTemplates k BUTTON
ModelTemplates l BUTTON_PRESSED
ModelTemplates m BUTTON_INVENTORY
ModelTemplates n DOOR_BOTTOM
ModelTemplates o DOOR_BOTTOM_HINGE
ModelTemplates p DOOR_TOP
ModelTemplates q DOOR_TOP_HINGE
ModelTemplates r FENCE_POST
ModelTemplates s FENCE_SIDE
ModelTemplates t FENCE_INVENTORY
ModelTemplates u WALL_POST
ModelTemplates v WALL_LOW_SIDE
ModelTemplates w WALL_TALL_SIDE
ModelTemplates x WALL_INVENTORY
ModelTemplates y FENCE_GATE_CLOSED
ModelTemplates z FENCE_GATE_OPEN
ModelTemplates A FENCE_GATE_WALL_CLOSED
ModelTemplates B FENCE_GATE_WALL_OPEN
ModelTemplates C PRESSURE_PLATE_UP
ModelTemplates D PRESSURE_PLATE_DOWN
ModelTemplates E PARTICLE_ONLY
ModelTemplates F SLAB_BOTTOM
ModelTemplates G SLAB_TOP
ModelTemplates H LEAVES
ModelTemplates I STAIRS_STRAIGHT
ModelTemplates J STAIRS_INNER
ModelTemplates K STAIRS_OUTER
ModelTemplates L TRAPDOOR_TOP
ModelTemplates M TRAPDOOR_BOTTOM
ModelTemplates N TRAPDOOR_OPEN
ModelTemplates O ORIENTABLE_TRAPDOOR_TOP
ModelTemplates P ORIENTABLE_TRAPDOOR_BOTTOM
ModelTemplates Q ORIENTABLE_TRAPDOOR_OPEN
ModelTemplates R CROSS
ModelTemplates S TINTED_CROSS
ModelTemplates T FLOWER_POT_CROSS
ModelTemplates U TINTED_FLOWER_POT_CROSS
ModelTemplates V RAIL_FLAT
ModelTemplates W RAIL_CURVED
ModelTemplates X RAIL_RAISED_NE
ModelTemplates Y RAIL_RAISED_SW
ModelTemplates Z CARPET
ModelTemplates aa CORAL_FAN
ModelTemplates ab CORAL_WALL_FAN
ModelTemplates ac GLAZED_TERRACOTTA
ModelTemplates ad CHORUS_FLOWER
ModelTemplates ae DAYLIGHT_DETECTOR
ModelTemplates af STAINED_GLASS_PANE_NOSIDE
ModelTemplates ag STAINED_GLASS_PANE_NOSIDE_ALT
ModelTemplates ah STAINED_GLASS_PANE_POST
ModelTemplates ai STAINED_GLASS_PANE_SIDE
ModelTemplates aj STAINED_GLASS_PANE_SIDE_ALT
ModelTemplates ak COMMAND_BLOCK
ModelTemplates al ANVIL
ModelTemplates am STEMS
ModelTemplates an ATTACHED_STEM
ModelTemplates ao CROP
ModelTemplates ap FARMLAND
ModelTemplates aq FIRE_FLOOR
ModelTemplates ar FIRE_SIDE
ModelTemplates as FIRE_SIDE_ALT
ModelTemplates at FIRE_UP
ModelTemplates au FIRE_UP_ALT
ModelTemplates av LANTERN
ModelTemplates aw HANGING_LANTERN
ModelTemplates ax TORCH
ModelTemplates ay WALL_TORCH
ModelTemplates az PISTON
ModelTemplates aA PISTON_HEAD
ModelTemplates aB PISTON_HEAD_SHORT
ModelTemplates aC SEAGRASS
ModelTemplates aD TURTLE_EGG
ModelTemplates aE TWO_TURTLE_EGGS
ModelTemplates aF THREE_TURTLE_EGGS
ModelTemplates aG FOUR_TURTLE_EGGS
ModelTemplates aH SINGLE_FACE
ModelTemplates aI FLAT_ITEM
ModelTemplates aJ FLAT_HANDHELD_ITEM
ModelTemplates aK FLAT_HANDHELD_ROD_ITEM
ModelTemplates aL SHULKER_BOX_INVENTORY
ModelTemplates aM BED_INVENTORY
ModelTemplates aN BANNER_INVENTORY
ModelTemplates aO SKULL_INVENTORY
ModelTemplates b (Ljava/lang/String;[LTextureSlot;)LModelTemplate; createItem
ModelTemplates b (I)LModelTemplate; lambda$static$0
TextureMapping a slots
TextureMapping b forcedSlots
TextureMapping b (LTextureSlot;LMinecraftKey;)LTextureMapping; putForced
TextureMapping b (LTextureSlot;LTextureSlot;)LTextureMapping; copyForced
TextureMapping c (LTextureSlot;LMinecraftKey;)LTextureMapping; copyAndUpdate
TextureMapping b (LBlock;)LTextureMapping; defaultTexture
TextureMapping b (LMinecraftKey;)LTextureMapping; cube
TextureMapping c (LBlock;)LTextureMapping; cross
TextureMapping c (LMinecraftKey;)LTextureMapping; cross
TextureMapping d (LBlock;)LTextureMapping; plant
TextureMapping d (LMinecraftKey;)LTextureMapping; plant
TextureMapping e (LBlock;)LTextureMapping; rail
TextureMapping e (LMinecraftKey;)LTextureMapping; rail
TextureMapping f (LBlock;)LTextureMapping; wool
TextureMapping f (LMinecraftKey;)LTextureMapping; wool
TextureMapping g (LBlock;)LTextureMapping; stem
TextureMapping h (LBlock;)LTextureMapping; pattern
TextureMapping i (LBlock;)LTextureMapping; fan
TextureMapping g (LMinecraftKey;)LTextureMapping; crop
TextureMapping b (LBlock;LBlock;)LTextureMapping; pane
TextureMapping d (LTextureSlot;LMinecraftKey;)LTextureMapping; singleSlot
TextureMapping j (LBlock;)LTextureMapping; column
TextureMapping k (LBlock;)LTextureMapping; cubeTop
TextureMapping l (LBlock;)LTextureMapping; logColumn
TextureMapping m (LBlock;)LTextureMapping; cubeBottomTop
TextureMapping n (LBlock;)LTextureMapping; cubeBottomTopWithWall
TextureMapping b (LMinecraftKey;LMinecraftKey;)LTextureMapping; door
TextureMapping o (LBlock;)LTextureMapping; door
TextureMapping p (LBlock;)LTextureMapping; particle
TextureMapping h (LMinecraftKey;)LTextureMapping; particle
TextureMapping q (LBlock;)LTextureMapping; fire0
TextureMapping r (LBlock;)LTextureMapping; fire1
TextureMapping s (LBlock;)LTextureMapping; lantern
TextureMapping t (LBlock;)LTextureMapping; torch
TextureMapping i (LMinecraftKey;)LTextureMapping; torch
TextureMapping u (LBlock;)LTextureMapping; commandBlock
TextureMapping v (LBlock;)LTextureMapping; orientableCube
TextureMapping w (LBlock;)LTextureMapping; orientableCubeOnlyTop
TextureMapping x (LBlock;)LTextureMapping; orientableCubeSameEnds
TextureMapping y (LBlock;)LTextureMapping; top
TextureMapping c (LBlock;LBlock;)LTextureMapping; craftingTable
TextureMapping d (LBlock;LBlock;)LTextureMapping; fletchingTable
TextureMapping b (LItem;)LTextureMapping; layer0
TextureMapping z (LBlock;)LTextureMapping; layer0
TextureMapping j (LMinecraftKey;)LTextureMapping; layer0
TextureMapping A (LBlock;)LMinecraftKey; getBlockTexture
TextureMapping c (LItem;)LMinecraftKey; getItemTexture
TextureSlot a ALL
TextureSlot b TEXTURE
TextureSlot c PARTICLE
TextureSlot d END
TextureSlot e BOTTOM
TextureSlot f TOP
TextureSlot g FRONT
TextureSlot h BACK
TextureSlot i SIDE
TextureSlot j NORTH
TextureSlot k SOUTH
TextureSlot l EAST
TextureSlot m WEST
TextureSlot n UP
TextureSlot o DOWN
TextureSlot p CROSS
TextureSlot q PLANT
TextureSlot r WALL
TextureSlot s RAIL
TextureSlot t WOOL
TextureSlot u PATTERN
TextureSlot v PANE
TextureSlot w EDGE
TextureSlot x FAN
TextureSlot y STEM
TextureSlot z UPPER_STEM
TextureSlot A CROP
TextureSlot B DIRT
TextureSlot C FIRE
TextureSlot D LANTERN
TextureSlot E PLATFORM
TextureSlot F UNSTICKY
TextureSlot G TORCH
TextureSlot H LAYER0
TextureSlot I id
TextureSlot J parent
TextureSlot K $VALUES
TextureSlot values ()[LTextureSlot; values
TextureSlot valueOf (Ljava/lang/String;)LTextureSlot; valueOf
TextureSlot b ()LTextureSlot; getParent
TexturedModel a CUBE
TexturedModel b CUBE_MIRRORED
TexturedModel c COLUMN
TexturedModel d COLUMN_HORIZONTAL
TexturedModel e CUBE_TOP_BOTTOM
TexturedModel f CUBE_TOP
TexturedModel g ORIENTABLE_ONLY_TOP
TexturedModel h ORIENTABLE
TexturedModel i CARPET
TexturedModel j GLAZED_TERRACOTTA
TexturedModel k CORAL_FAN
TexturedModel l PARTICLE_ONLY
TexturedModel m ANVIL
TexturedModel n LEAVES
TexturedModel o LANTERN
TexturedModel p HANGING_LANTERN
TexturedModel q TORCH
TexturedModel r WALL_TORCH
TexturedModel s SEAGRASS
TexturedModel t COLUMN_ALT
TexturedModel u COLUMN_HORIZONTAL_ALT
TexturedModel v TOP_BOTTOM_WITH_WALL
TexturedModel w mapping
TexturedModel x template
TexturedModel b ()LTextureMapping; getMapping
TexturedModel$Provider get (LBlock;)LTexturedModel; get
FinishedRecipe b ()LMinecraftKey; getId
FinishedRecipe c ()LRecipeSerializer; getType
FinishedRecipe d ()Lcom/google/gson/JsonObject; serializeAdvancement
FinishedRecipe e ()LMinecraftKey; getAdvancementId
RecipeProvider b LOGGER
RecipeProvider c GSON
RecipeProvider d generator
RecipeProvider b (LHashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V saveAdvancement
RecipeProvider b (Ljava/util/function/Consumer;LIMaterial;LTag;)V planksFromLogs
RecipeProvider b (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenBoat
RecipeProvider c (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenButton
RecipeProvider d (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenDoor
RecipeProvider e (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenFence
RecipeProvider f (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenFenceGate
RecipeProvider g (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenPressurePlate
RecipeProvider h (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenSlab
RecipeProvider i (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenStairs
RecipeProvider j (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenTrapdoor
RecipeProvider k (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V woodenSign
RecipeProvider l (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V coloredWoolFromWhiteWoolAndDye
RecipeProvider m (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V carpetFromWool
RecipeProvider n (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V coloredCarpetFromWhiteCarpetAndDye
RecipeProvider o (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V bedFromPlanksAndWool
RecipeProvider p (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V bedFromWhiteBedAndDye
RecipeProvider q (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V banner
RecipeProvider r (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V stainedGlassFromGlassAndDye
RecipeProvider s (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V stainedGlassPaneFromStainedGlass
RecipeProvider t (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V stainedGlassPaneFromGlassPaneAndDye
RecipeProvider u (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V coloredTerracottaFromTerracottaAndDye
RecipeProvider v (Ljava/util/function/Consumer;LIMaterial;LIMaterial;)V concretePowder
ShapedRecipeBuilder a LOGGER
ShapedRecipeBuilder b result
ShapedRecipeBuilder c count
ShapedRecipeBuilder d rows
ShapedRecipeBuilder e key
ShapedRecipeBuilder f advancement
ShapedRecipeBuilder g group
ShapedRecipeBuilder b (Ljava/lang/String;)LShapedRecipeBuilder; group
ShapedRecipeBuilder$Result b id
ShapedRecipeBuilder$Result c result
ShapedRecipeBuilder$Result d count
ShapedRecipeBuilder$Result e group
ShapedRecipeBuilder$Result f pattern
ShapedRecipeBuilder$Result g key
ShapedRecipeBuilder$Result h advancement
ShapedRecipeBuilder$Result i advancementId
ShapedRecipeBuilder$Result a this$0
ShapedRecipeBuilder$Result c ()LRecipeSerializer; getType
ShapedRecipeBuilder$Result b ()LMinecraftKey; getId
ShapedRecipeBuilder$Result d ()Lcom/google/gson/JsonObject; serializeAdvancement
ShapedRecipeBuilder$Result e ()LMinecraftKey; getAdvancementId
ShapelessRecipeBuilder a LOGGER
ShapelessRecipeBuilder b result
ShapelessRecipeBuilder c count
ShapelessRecipeBuilder d ingredients
ShapelessRecipeBuilder e advancement
ShapelessRecipeBuilder f group
ShapelessRecipeBuilder b (LIMaterial;)LShapelessRecipeBuilder; requires
ShapelessRecipeBuilder b (LIMaterial;I)LShapelessRecipeBuilder; requires
ShapelessRecipeBuilder$Result a id
ShapelessRecipeBuilder$Result b result
ShapelessRecipeBuilder$Result c count
ShapelessRecipeBuilder$Result d group
ShapelessRecipeBuilder$Result e ingredients
ShapelessRecipeBuilder$Result f advancement
ShapelessRecipeBuilder$Result g advancementId
ShapelessRecipeBuilder$Result c ()LRecipeSerializer; getType
ShapelessRecipeBuilder$Result b ()LMinecraftKey; getId
ShapelessRecipeBuilder$Result d ()Lcom/google/gson/JsonObject; serializeAdvancement
ShapelessRecipeBuilder$Result e ()LMinecraftKey; getAdvancementId
SimpleCookingRecipeBuilder a result
SimpleCookingRecipeBuilder b ingredient
SimpleCookingRecipeBuilder c experience
SimpleCookingRecipeBuilder d cookingTime
SimpleCookingRecipeBuilder e advancement
SimpleCookingRecipeBuilder f group
SimpleCookingRecipeBuilder g serializer
SimpleCookingRecipeBuilder b (LRecipeItemStack;LIMaterial;FI)LSimpleCookingRecipeBuilder; blasting
SimpleCookingRecipeBuilder c (LRecipeItemStack;LIMaterial;FI)LSimpleCookingRecipeBuilder; smelting
SimpleCookingRecipeBuilder d (LRecipeItemStack;LIMaterial;FI)LSimpleCookingRecipeBuilder; smoking
SimpleCookingRecipeBuilder$Result a id
SimpleCookingRecipeBuilder$Result b group
SimpleCookingRecipeBuilder$Result c ingredient
SimpleCookingRecipeBuilder$Result d result
SimpleCookingRecipeBuilder$Result e experience
SimpleCookingRecipeBuilder$Result f cookingTime
SimpleCookingRecipeBuilder$Result g advancement
SimpleCookingRecipeBuilder$Result h advancementId
SimpleCookingRecipeBuilder$Result i serializer
SimpleCookingRecipeBuilder$Result c ()LRecipeSerializer; getType
SimpleCookingRecipeBuilder$Result b ()LMinecraftKey; getId
SimpleCookingRecipeBuilder$Result d ()Lcom/google/gson/JsonObject; serializeAdvancement
SimpleCookingRecipeBuilder$Result e ()LMinecraftKey; getAdvancementId
SingleItemRecipeBuilder a result
SingleItemRecipeBuilder b ingredient
SingleItemRecipeBuilder c count
SingleItemRecipeBuilder d advancement
SingleItemRecipeBuilder e group
SingleItemRecipeBuilder f type
SingleItemRecipeBuilder$Result a id
SingleItemRecipeBuilder$Result b group
SingleItemRecipeBuilder$Result c ingredient
SingleItemRecipeBuilder$Result d result
SingleItemRecipeBuilder$Result e count
SingleItemRecipeBuilder$Result f advancement
SingleItemRecipeBuilder$Result g advancementId
SingleItemRecipeBuilder$Result h type
SingleItemRecipeBuilder$Result b ()LMinecraftKey; getId
SingleItemRecipeBuilder$Result c ()LRecipeSerializer; getType
SingleItemRecipeBuilder$Result d ()Lcom/google/gson/JsonObject; serializeAdvancement
SingleItemRecipeBuilder$Result e ()LMinecraftKey; getAdvancementId
SpecialRecipeBuilder a serializer
SpecialRecipeBuilder$1 a val$id
SpecialRecipeBuilder$1 b this$0
SpecialRecipeBuilder$1 c ()LRecipeSerializer; getType
SpecialRecipeBuilder$1 b ()LMinecraftKey; getId
SpecialRecipeBuilder$1 d ()Lcom/google/gson/JsonObject; serializeAdvancement
SpecialRecipeBuilder$1 e ()LMinecraftKey; getAdvancementId
DebugReportNBT b LOGGER
DebugReportNBT c generator
SnbtToNbt b LOGGER
SnbtToNbt c generator
SnbtToNbt d filters
SnbtToNbt b (Ljava/nio/file/Path;Ljava/nio/file/Path;)LSnbtToNbt$TaskResult; lambda$null$1
SnbtToNbt$TaskResult a name
SnbtToNbt$TaskResult b payload
SnbtToNbt$TaskResult c hash
SnbtToNbt$TaskResult b (LSnbtToNbt$TaskResult;)Ljava/lang/String; access$100
SnbtToNbt$TaskResult c (LSnbtToNbt$TaskResult;)[B access$200
StructureUpdater b (LNBTTagCompound;)LNBTTagCompound; updateStructure
BlockTagsProvider b ()V addTags
EntityTypeTagsProvider b ()V addTags
FluidTagsProvider b ()V addTags
ItemTagsProvider e LOGGER
ItemTagsProvider b ()V addTags
TagsProvider e LOGGER
TagsProvider f GSON
TagsProvider b generator
TagsProvider c registry
TagsProvider d builders
TagsProvider b ()V addTags
TagsProvider b (LTag;)LTag$Builder; lambda$tag$3
TagsProvider b (LMinecraftKey;)Ljava/util/Optional; lambda$run$0
GameTest b ()Ljava/lang/String; batch
GameTest c ()Z required
GameTest d ()Ljava/lang/String; template
GameTest e ()J setupTicks
GameTestHarnessAssertionPosition a absolutePos
GameTestHarnessAssertionPosition b relativePos
GameTestHarnessAssertionPosition c tick
GameTestHarnessAssertionPosition getMessage ()Ljava/lang/String; getMessage
GameTestHarnessAssertionPosition b ()LBlockPosition; getRelativePos
GameTestHarnessAssertionPosition c ()LBlockPosition; getAbsolutePos
GameTestHarnessBatch a name
GameTestHarnessBatch b testFunctions
GameTestHarnessBatch c beforeBatchFunction
GameTestHarnessBatch b ()Ljava/util/Collection; getTestFunctions
GameTestHarnessBatchRunner a LOGGER
GameTestHarnessBatchRunner b startPos
GameTestHarnessBatchRunner c level
GameTestHarnessBatchRunner d testTicker
GameTestHarnessBatchRunner e allTestInfos
GameTestHarnessBatchRunner f batches
GameTestHarnessBatchRunner g currentBatchTracker
GameTestHarnessBatchRunner h currentBatchIndex
GameTestHarnessBatchRunner i nextTestPos
GameTestHarnessBatchRunner j maxDepthOnThisRow
GameTestHarnessBatchRunner b ()V start
GameTestHarnessBatchRunner b (LGameTestHarnessInfo;)V lambda$runBatch$1
GameTestHarnessBatchRunner$1 a this$0
GameTestHarnessBatchRunner$1 b (LGameTestHarnessInfo;)V testPassed
GameTestHarnessBatchRunner$1 c (LGameTestHarnessInfo;)V testFailed
GameTestHarnessEvent a expectedDelay
GameTestHarnessEvent b assertion
GameTestHarnessHelper a testInfo
GameTestHarnessHelper b finalCheckAdded
GameTestHarnessHelper b ()LBlockPosition; getTestPos
GameTestHarnessHelper c ()LBlockPosition; getStructureSize
GameTestHarnessHelper d ()V killAllEntities
GameTestHarnessHelper b (III)V pullLever
GameTestHarnessHelper b (LBlockPosition;)V pullLever
GameTestHarnessHelper e ()V setNight
GameTestHarnessHelper b (LBlock;III)V assertBlockNotPresent
GameTestHarnessHelper b (LBlock;LBlockPosition;)V assertBlockNotPresent
GameTestHarnessHelper c (LBlock;III)V succeedWhenBlockPresent
GameTestHarnessHelper c (LBlock;LBlockPosition;)V succeedWhenBlockPresent
GameTestHarnessHelper b (LBlockPosition;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V assertBlockState
GameTestHarnessHelper b (LEntityTypes;III)V assertEntityPresent
GameTestHarnessHelper b (LEntityTypes;LBlockPosition;)V assertEntityPresent
GameTestHarnessHelper b (LEntityTypes;)V assertEntityNotPresent
GameTestHarnessHelper c (LEntityTypes;III)V assertEntityNotPresent
GameTestHarnessHelper c (LEntityTypes;LBlockPosition;)V assertEntityNotPresent
GameTestHarnessHelper b (LEntityTypes;DDD)V assertEntityNotTouching
GameTestHarnessHelper c (LBlockPosition;)V assertContainerEmpty
GameTestHarnessHelper b (LBlockPosition;LEntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V succeedWhenEntityData
GameTestHarnessHelper d (LEntityTypes;III)V succeedWhenEntityPresent
GameTestHarnessHelper d (LEntityTypes;LBlockPosition;)V succeedWhenEntityPresent
GameTestHarnessHelper e (LEntityTypes;III)V succeedWhenEntityNotPresent
GameTestHarnessHelper e (LEntityTypes;LBlockPosition;)V succeedWhenEntityNotPresent
GameTestHarnessHelper f ()V succeed
GameTestHarnessHelper h ()V ensureSingleFinalCheck
GameTestHarnessHelper b (Ljava/lang/Runnable;)V succeedWhen
GameTestHarnessHelper b (JLjava/lang/Runnable;)V runAfterDelay
GameTestHarnessHelper c (Ljava/lang/Runnable;)V failIf
GameTestHarnessHelper g ()LGameTestHarnessSequence; startSequence
GameTestHarnessHelper d (LBlockPosition;)LBlockPosition; absolutePos
GameTestHarnessHelper i ()LAxisAlignedBB; getBounds
GameTestHarnessHelper e (LBlockPosition;)LBlock; getBlockType
GameTestHarnessHelper j ()Ljava/lang/Exception; lambda$failIf$18
GameTestHarnessHelper f (LEntityTypes;LBlockPosition;)V lambda$succeedWhenEntityNotPresent$17
GameTestHarnessHelper g (LEntityTypes;LBlockPosition;)V lambda$succeedWhenEntityPresent$16
GameTestHarnessHelper c (LBlockPosition;LEntityTypes;Ljava/util/function/Function;Ljava/lang/Object;)V lambda$succeedWhenEntityData$15
GameTestHarnessHelper f (LBlockPosition;)V lambda$assertAtTickTimeContainerEmpty$14
GameTestHarnessHelper b (LBlockPosition;LItem;)V lambda$assertAtTickTimeContainerContains$13
GameTestHarnessHelper b (LVec3D;LEntity;)Z lambda$assertEntityTouching$11
GameTestHarnessHelper b (Ljava/lang/String;)Ljava/lang/String; lambda$assertBlock$5
GameTestHarnessHelper d (LBlock;LBlockPosition;)V lambda$succeedWhenBlockPresent$4
GameTestHarnessHelper b (LBlockPosition;LBlock;LBlock;)Z lambda$assertBlockPresent$2
GameTestHarnessHelper g (LBlockPosition;)V lambda$pulseRedstone$1
GameTestHarnessInfo a testFunction
GameTestHarnessInfo b testPos
GameTestHarnessInfo c level
GameTestHarnessInfo d listeners
GameTestHarnessInfo e timeoutTicks
GameTestHarnessInfo f sequences
GameTestHarnessInfo g runAtTickTimeMap
GameTestHarnessInfo h startTick
GameTestHarnessInfo i tickCount
GameTestHarnessInfo j started
GameTestHarnessInfo k timer
GameTestHarnessInfo l done
GameTestHarnessInfo m error
GameTestHarnessInfo b ()V tick
GameTestHarnessInfo t ()V startTest
GameTestHarnessInfo c ()Ljava/lang/String; getTestName
GameTestHarnessInfo d ()LBlockPosition; getTestPos
GameTestHarnessInfo e ()LBlockPosition; getStructureSize
GameTestHarnessInfo f ()LAxisAlignedBB; getStructureBounds
GameTestHarnessInfo u ()LTileEntityStructure; getStructureBlockEntity
GameTestHarnessInfo g ()LWorldServer; getLevel
GameTestHarnessInfo h ()Z hasSucceeded
GameTestHarnessInfo i ()Z hasFailed
GameTestHarnessInfo j ()Z hasStarted
GameTestHarnessInfo k ()Z isDone
GameTestHarnessInfo l ()J getRunTime
GameTestHarnessInfo v ()V finish
GameTestHarnessInfo m ()V succeed
GameTestHarnessInfo n ()Ljava/lang/Throwable; getError
GameTestHarnessInfo toString ()Ljava/lang/String; toString
GameTestHarnessInfo o ()J getTick
GameTestHarnessInfo p ()LGameTestHarnessSequence; createSequence
GameTestHarnessInfo q ()Z isRequired
GameTestHarnessInfo r ()Z isOptional
GameTestHarnessInfo s ()Ljava/lang/String; getStructureName
GameTestHarnessInfo b (LGameTestHarnessListener;)V lambda$spawnStructure$4
GameTestHarnessInfo c (LGameTestHarnessListener;)V lambda$fail$3
GameTestHarnessInfo d (LGameTestHarnessListener;)V lambda$succeed$2
GameTestHarnessInfo b (LGameTestHarnessSequence;)V lambda$tick$0
GameTestHarnessListener b (LGameTestHarnessInfo;)V testPassed
GameTestHarnessListener c (LGameTestHarnessInfo;)V testFailed
GameTestHarnessRegistry a testFunctions
GameTestHarnessRegistry b testClassNames
GameTestHarnessRegistry c beforeBatchFunctions
GameTestHarnessRegistry b ()Ljava/util/Collection; getAllTestClassNames
GameTestHarnessRegistry b (Ljava/lang/String;)Z isTestClass
GameTestHarnessRegistry c (Ljava/lang/String;)Ljava/util/function/Consumer; getBeforeBatchFunction
GameTestHarnessRegistry d (Ljava/lang/String;)Ljava/util/Optional; findTestFunction
GameTestHarnessRegistry e (Ljava/lang/String;)LGameTestHarnessTestFunction; getTestFunction
GameTestHarnessRegistry b (Ljava/lang/reflect/Method;)Ljava/util/Collection; useTestGeneratorMethod
GameTestHarnessRegistry c (Ljava/lang/reflect/Method;)LGameTestHarnessTestFunction; turnMethodIntoTestFunction
GameTestHarnessRegistry d (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; turnMethodIntoConsumer
GameTestHarnessRegistry b (Ljava/lang/String;LGameTestHarnessTestFunction;)Z lambda$getTestFunctionsForClassName$0
GameTestHarnessRunner a TEST_REPORTER
GameTestHarnessRunner b (Ljava/util/Collection;LBlockPosition;LWorldServer;LGameTestHarnessTicker;)Ljava/util/Collection; runTests
GameTestHarnessRunner c (LGameTestHarnessInfo;)V visualizeFailedTest
GameTestHarnessRunner d (LGameTestHarnessInfo;)V visualizePassedTest
GameTestHarnessRunner b (LGameTestHarnessInfo;LBlock;)V spawnBeacon
GameTestHarnessRunner b (LGameTestHarnessInfo;Ljava/lang/String;)V spawnLectern
GameTestHarnessRunner b (LWorldServer;LBlockPosition;)Z lambda$clearAllTests$7
GameTestHarnessRunner b (LGameTestHarnessInfo;)V access$300
GameTestHarnessRunner$1 b (LGameTestHarnessInfo;)V testPassed
GameTestHarnessRunner$1 c (LGameTestHarnessInfo;)V testFailed
GameTestHarnessSequence a parent
GameTestHarnessSequence b events
GameTestHarnessSequence c lastTick
GameTestHarnessSequence b (Ljava/lang/Runnable;)LGameTestHarnessSequence; thenExecute
GameTestHarnessSequence b ()LGameTestHarnessSequence$Condition; thenTrigger
GameTestHarnessSequence b (J)V tickAndFailIfNotComplete
GameTestHarnessSequence c (Ljava/lang/Runnable;)V executeWithoutFail
GameTestHarnessSequence c (J)V tick
GameTestHarnessSequence b (Ljava/util/function/Supplier;)V lambda$thenFail$3
GameTestHarnessSequence b (ILjava/lang/Runnable;)V lambda$thenExecuteAfter$2
GameTestHarnessSequence d (Ljava/lang/Runnable;)V lambda$thenExecute$1
GameTestHarnessSequence c ()V lambda$thenIdle$0
GameTestHarnessSequence$Condition b triggerTime
GameTestHarnessSequence$Condition a this$0
GameTestServer h LOGGER
GameTestServer i testBatches
GameTestServer j spawnPos
GameTestServer k testTracker
GameTestServer d ()Z initServer
GameTestServer e ()V onServerExit
GameTestServer b (LWorldServer;)V startTests
GameTestServer bb ()Z haveTestsStarted
GameTestServer f ()Z canGenerateStructures
GameTestServer g ()LEnumGamemode; getDefaultGameType
GameTestServer h ()LEnumDifficulty; getDefaultDifficulty
GameTestServer i ()Z isHardcore
GameTestServer j ()I getOperatorUserPermissionLevel
GameTestServer k ()I getFunctionCompilationLevel
GameTestServer l ()Z shouldRconBroadcast
GameTestServer m ()Z isDedicatedServer
GameTestServer n ()Z isEpollEnabled
GameTestServer o ()Z isCommandBlockEnabled
GameTestServer p ()Z isPublished
GameTestServer I_ ()Z shouldInformAdmins
GameTestServer q ()Ljava/util/Optional; getModdedStatus
GameTestServer b (LGameTestHarnessInfo;)V lambda$tickServer$0
GameTestServer$1 a this$0
GameTestHarnessTicker a singleton
GameTestHarnessTicker b testInfos
GameTestHarnessTicker b ()V tick
GameTestHarnessLogger a LOGGER
GameTestHarnessLogger b (LGameTestHarnessInfo;)V onTestSuccess
GameTestHarnessCollector a tests
GameTestHarnessCollector b listener
GameTestHarnessCollector b ()I getFailedOptionalCount
GameTestHarnessCollector c ()I getDoneCount
GameTestHarnessCollector d ()Z hasFailedRequired
GameTestHarnessCollector e ()Z hasFailedOptional
GameTestHarnessCollector f ()Ljava/util/Collection; getFailedRequired
GameTestHarnessCollector g ()Ljava/util/Collection; getFailedOptional
GameTestHarnessCollector h ()I getTotalCount
GameTestHarnessCollector i ()Z isDone
GameTestHarnessCollector j ()Ljava/lang/String; getProgressBar
GameTestHarnessCollector toString ()Ljava/lang/String; toString
GameTestHarnessStructures a testStructuresDir
GameTestHarnessStructures b (LBlockPosition;LWorldServer;)V forceLoadChunks
GameTestHarnessStructures b (LBlockPosition;ILWorldServer;)LBlockPosition; findNearestStructureBlock
GameTestHarnessStructures c (LBlockPosition;ILWorldServer;)Ljava/util/Collection; findStructureBlocks
TeamcityTestReporter a LOGGER
TeamcityTestReporter b ESCAPER
TeamcityTestReporter b (LGameTestHarnessInfo;)V onTestSuccess
GameTestHarnessTestClassArgument a EXAMPLES
GameTestHarnessTestClassArgument listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
GameTestHarnessTestClassArgument getExamples ()Ljava/util/Collection; getExamples
GameTestHarnessTestClassArgument parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
GameTestHarnessTestCommand b (LCommandListenerWrapper;)I runAllNearbyTests
GameTestHarnessTestCommand b (LWorldServer;LGameTestHarnessCollector;)V showTestSummaryIfAllDone
GameTestHarnessTestCommand c (LCommandListenerWrapper;)I runAllTests
GameTestHarnessTestCommand b (LCommandListenerWrapper;Ljava/lang/String;)I runAllTestsInClass
GameTestHarnessTestCommand c (LCommandListenerWrapper;Ljava/lang/String;)V say
GameTestHarnessTestCommand d (LCommandListenerWrapper;Ljava/lang/String;)I exportTestStructure
GameTestHarnessTestCommand e (LCommandListenerWrapper;Ljava/lang/String;)I importTestStructure
GameTestHarnessTestCommand b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
GameTestHarnessTestCommand c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
GameTestHarnessTestCommand d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
GameTestHarnessTestCommand e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
GameTestHarnessTestCommand f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
GameTestHarnessTestCommand g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
GameTestHarnessTestCommand h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
GameTestHarnessTestCommand i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
GameTestHarnessTestCommand j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
GameTestHarnessTestCommand k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
GameTestHarnessTestCommand l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
GameTestHarnessTestCommand m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
GameTestHarnessTestCommand n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
GameTestHarnessTestCommand$TestSummaryDisplayer a level
GameTestHarnessTestCommand$TestSummaryDisplayer b tracker
GameTestHarnessTestCommand$TestSummaryDisplayer b (LGameTestHarnessInfo;)V testPassed
GameTestHarnessTestCommand$TestSummaryDisplayer c (LGameTestHarnessInfo;)V testFailed
GameTestHarnessTestFunction a batchName
GameTestHarnessTestFunction b testName
GameTestHarnessTestFunction c structureName
GameTestHarnessTestFunction d required
GameTestHarnessTestFunction e function
GameTestHarnessTestFunction f maxTicks
GameTestHarnessTestFunction g setupTicks
GameTestHarnessTestFunction b ()Ljava/lang/String; getStructureName
GameTestHarnessTestFunction toString ()Ljava/lang/String; toString
GameTestHarnessTestFunction c ()I getMaxTicks
GameTestHarnessTestFunction d ()Z isRequired
GameTestHarnessTestFunction e ()Ljava/lang/String; getBatchName
GameTestHarnessTestFunction f ()J getSetupTicks
GameTestHarnessTestFunctionArgument a EXAMPLES
GameTestHarnessTestFunctionArgument listSuggestions (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; listSuggestions
GameTestHarnessTestFunctionArgument getExamples ()Ljava/util/Collection; getExamples
GameTestHarnessTestFunctionArgument parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object; parse
GameTestHarnessITestReporter b (LGameTestHarnessInfo;)V onTestSuccess
LocaleLanguage a LOGGER
LocaleLanguage b UNSUPPORTED_FORMAT_PATTERN
LocaleLanguage c SINGLETON
LocaleLanguage d storage
LocaleLanguage e lastUpdateTime
LocaleLanguage c (Ljava/lang/String;)Ljava/lang/String; getProperty
LocaleLanguage b (Ljava/lang/String;)Z exists
LocaleLanguage b ()J getLastUpdateTime
NBTTagByteArray$1 b ()Ljava/lang/String; getPrettyName
NBTTagByteArray$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagByte$1 b ()Ljava/lang/String; getPrettyName
NBTTagByte$1 c ()Z isValue
NBTTagByte$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagByte$Cache a cache
NBTTagCompound$1 b ()Ljava/lang/String; getPrettyName
NBTTagCompound$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagDouble$1 b ()Ljava/lang/String; getPrettyName
NBTTagDouble$1 c ()Z isValue
NBTTagDouble$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagEnd a TYPE
NBTTagEnd b INSTANCE
NBTTagEnd b ()LNBTTagType; getType
NBTTagEnd toString ()Ljava/lang/String; toString
NBTTagEnd d ()LNBTTagEnd; copy
NBTTagEnd c ()LNBTBase; copy
NBTTagEnd$1 b ()Ljava/lang/String; getPrettyName
NBTTagEnd$1 c ()Z isValue
NBTTagEnd$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagFloat$1 b ()Ljava/lang/String; getPrettyName
NBTTagFloat$1 c ()Z isValue
NBTTagFloat$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagIntArray$1 b ()Ljava/lang/String; getPrettyName
NBTTagIntArray$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagInt$1 b ()Ljava/lang/String; getPrettyName
NBTTagInt$1 c ()Z isValue
NBTTagInt$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagInt$Cache a cache
NBTTagList$1 b ()Ljava/lang/String; getPrettyName
NBTTagList$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagLongArray$1 b ()Ljava/lang/String; getPrettyName
NBTTagLongArray$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagLong$1 b ()Ljava/lang/String; getPrettyName
NBTTagLong$1 c ()Z isValue
NBTTagLong$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagLong$Cache a cache
NBTReadLimiter a UNLIMITED
NBTReadLimiter b quota
NBTReadLimiter c usage
NBTCompressedStreamTools b (LNBTTagCompound;Ljava/io/File;)V write
DynamicOpsNBT a INSTANCE
DynamicOpsNBT b (LNBTBase;)Ljava/util/Optional; getNumberValue
DynamicOpsNBT c (LNBTBase;)Ljava/util/Optional; getStringValue
DynamicOpsNBT b (LNBTBase;LNBTBase;)LNBTBase; merge
DynamicOpsNBT d (LNBTBase;)Ljava/util/Optional; getMapValues
DynamicOpsNBT e (LNBTBase;)Ljava/util/Optional; getStream
DynamicOpsNBT f (LNBTBase;)Ljava/util/Optional; getByteBuffer
DynamicOpsNBT g (LNBTBase;)Ljava/util/Optional; getIntStream
DynamicOpsNBT h (LNBTBase;)Ljava/util/Optional; getLongStream
DynamicOpsNBT toString ()Ljava/lang/String; toString
DynamicOpsNBT remove (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; remove
DynamicOpsNBT createLongList (Ljava/util/stream/LongStream;)Ljava/lang/Object; createLongList
DynamicOpsNBT getLongStream (Ljava/lang/Object;)Ljava/util/Optional; getLongStream
DynamicOpsNBT createIntList (Ljava/util/stream/IntStream;)Ljava/lang/Object; createIntList
DynamicOpsNBT getIntStream (Ljava/lang/Object;)Ljava/util/Optional; getIntStream
DynamicOpsNBT createByteList (Ljava/nio/ByteBuffer;)Ljava/lang/Object; createByteList
DynamicOpsNBT getByteBuffer (Ljava/lang/Object;)Ljava/util/Optional; getByteBuffer
DynamicOpsNBT createList (Ljava/util/stream/Stream;)Ljava/lang/Object; createList
DynamicOpsNBT getStream (Ljava/lang/Object;)Ljava/util/Optional; getStream
DynamicOpsNBT createMap (Ljava/util/Map;)Ljava/lang/Object; createMap
DynamicOpsNBT getMapValues (Ljava/lang/Object;)Ljava/util/Optional; getMapValues
DynamicOpsNBT merge (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; merge
DynamicOpsNBT mergeInto (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; mergeInto
DynamicOpsNBT mergeInto (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; mergeInto
DynamicOpsNBT createString (Ljava/lang/String;)Ljava/lang/Object; createString
DynamicOpsNBT getStringValue (Ljava/lang/Object;)Ljava/util/Optional; getStringValue
DynamicOpsNBT createBoolean (Z)Ljava/lang/Object; createBoolean
DynamicOpsNBT createDouble (D)Ljava/lang/Object; createDouble
DynamicOpsNBT createFloat (F)Ljava/lang/Object; createFloat
DynamicOpsNBT createLong (J)Ljava/lang/Object; createLong
DynamicOpsNBT createInt (I)Ljava/lang/Object; createInt
DynamicOpsNBT createShort (S)Ljava/lang/Object; createShort
DynamicOpsNBT createByte (B)Ljava/lang/Object; createByte
DynamicOpsNBT createNumeric (Ljava/lang/Number;)Ljava/lang/Object; createNumeric
DynamicOpsNBT getNumberValue (Ljava/lang/Object;)Ljava/util/Optional; getNumberValue
DynamicOpsNBT getType (Ljava/lang/Object;)Lcom/mojang/datafixers/types/Type; getType
DynamicOpsNBT empty ()Ljava/lang/Object; empty
DynamicOpsNBT i (LNBTBase;)Ljava/lang/Long; lambda$createList$7
DynamicOpsNBT j (LNBTBase;)Ljava/lang/Integer; lambda$createList$6
DynamicOpsNBT k (LNBTBase;)Ljava/lang/Byte; lambda$createList$5
DynamicOpsNBT l (LNBTBase;)LNBTBase; lambda$getStream$4
DynamicOpsNBT b (LNBTTagCompound;LNBTTagCompound;Ljava/lang/String;)V lambda$merge$2
DynamicOpsNBT c (LNBTTagCompound;LNBTTagCompound;Ljava/lang/String;)V lambda$merge$1
DynamicOpsNBT d (LNBTTagCompound;LNBTTagCompound;Ljava/lang/String;)V lambda$mergeInto$0
NBTTagShort$1 b ()Ljava/lang/String; getPrettyName
NBTTagShort$1 c ()Z isValue
NBTTagShort$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagShort$Cache a cache
NBTTagString$1 b ()Ljava/lang/String; getPrettyName
NBTTagString$1 c ()Z isValue
NBTTagString$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagType b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagType c ()Z isValue
NBTTagType b ()Ljava/lang/String; getPrettyName
NBTTagType$1 a val$id
NBTTagType$1 b ()Ljava/lang/String; getPrettyName
NBTTagType$1 b (Ljava/io/DataInput;ILNBTReadLimiter;)LNBTBase; load
NBTTagTypes a TYPES
PacketEncryptionHandler a cipher
PacketEncryptionHandler b heapIn
PacketEncryptionHandler c heapOut
PacketDecrypter a cipher
PacketDecrypter decode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V decode
PacketEncrypter a cipher
PacketEncrypter encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
PacketDecompressor a inflater
PacketDecompressor b threshold
PacketDecompressor decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
PacketCompressor a encodeBuf
PacketCompressor b deflater
PacketCompressor c threshold
PacketCompressor encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
NetworkManager$1 a val$connection
NetworkManager$1 initChannel (Lio/netty/channel/Channel;)V initChannel
NetworkManager$2 a val$connection
NetworkManager$2 initChannel (Lio/netty/channel/Channel;)V initChannel
NetworkManager$QueuedPacket a packet
NetworkManager$QueuedPacket b listener
NetworkManager$QueuedPacket b (LNetworkManager$QueuedPacket;)Lio/netty/util/concurrent/GenericFutureListener; access$100
EnumProtocol$PacketSet a classToId
EnumProtocol$PacketSet b idToConstructor
EnumProtocol$ProtocolBuilder a flows
PacketDataSerializer a source
PacketDataSerializer b (I)[B readByteArray
PacketDataSerializer b ()[I readVarIntArray
PacketDataSerializer c (I)[I readVarIntArray
PacketDataSerializer c ()[J readLongArray
PacketDataSerializer b ([J)[J readLongArray
PacketDataSerializer d ()[B accessByteBufWithCorrectSize
PacketDataSerializer e ()LBlockPosition; readBlockPos
PacketDataSerializer f ()LChunkCoordIntPair; readChunkPos
PacketDataSerializer g ()LSectionPosition; readSectionPos
PacketDataSerializer h ()LIChatBaseComponent; readComponent
PacketDataSerializer i ()I readVarInt
PacketDataSerializer j ()J readVarLong
PacketDataSerializer k ()Ljava/util/UUID; readUUID
PacketDataSerializer d (I)LPacketDataSerializer; writeVarInt
PacketDataSerializer b (J)LPacketDataSerializer; writeVarLong
PacketDataSerializer l ()LNBTTagCompound; readNbt
PacketDataSerializer m ()LItemStack; readItem
PacketDataSerializer n ()Ljava/lang/String; readUtf
PacketDataSerializer e (I)Ljava/lang/String; readUtf
PacketDataSerializer o ()LMinecraftKey; readResourceLocation
PacketDataSerializer p ()Ljava/util/Date; readDate
PacketDataSerializer q ()LMovingObjectPositionBlock; readBlockHitResult
PacketDataSerializer capacity ()I capacity
PacketDataSerializer capacity (I)Lio/netty/buffer/ByteBuf; capacity
PacketDataSerializer maxCapacity ()I maxCapacity
PacketDataSerializer alloc ()Lio/netty/buffer/ByteBufAllocator; alloc
PacketDataSerializer order ()Ljava/nio/ByteOrder; order
PacketDataSerializer order (Ljava/nio/ByteOrder;)Lio/netty/buffer/ByteBuf; order
PacketDataSerializer unwrap ()Lio/netty/buffer/ByteBuf; unwrap
PacketDataSerializer isDirect ()Z isDirect
PacketDataSerializer isReadOnly ()Z isReadOnly
PacketDataSerializer asReadOnly ()Lio/netty/buffer/ByteBuf; asReadOnly
PacketDataSerializer readerIndex ()I readerIndex
PacketDataSerializer readerIndex (I)Lio/netty/buffer/ByteBuf; readerIndex
PacketDataSerializer writerIndex ()I writerIndex
PacketDataSerializer writerIndex (I)Lio/netty/buffer/ByteBuf; writerIndex
PacketDataSerializer setIndex (II)Lio/netty/buffer/ByteBuf; setIndex
PacketDataSerializer readableBytes ()I readableBytes
PacketDataSerializer writableBytes ()I writableBytes
PacketDataSerializer maxWritableBytes ()I maxWritableBytes
PacketDataSerializer isReadable ()Z isReadable
PacketDataSerializer isReadable (I)Z isReadable
PacketDataSerializer isWritable ()Z isWritable
PacketDataSerializer isWritable (I)Z isWritable
PacketDataSerializer clear ()Lio/netty/buffer/ByteBuf; clear
PacketDataSerializer markReaderIndex ()Lio/netty/buffer/ByteBuf; markReaderIndex
PacketDataSerializer resetReaderIndex ()Lio/netty/buffer/ByteBuf; resetReaderIndex
PacketDataSerializer markWriterIndex ()Lio/netty/buffer/ByteBuf; markWriterIndex
PacketDataSerializer resetWriterIndex ()Lio/netty/buffer/ByteBuf; resetWriterIndex
PacketDataSerializer discardReadBytes ()Lio/netty/buffer/ByteBuf; discardReadBytes
PacketDataSerializer discardSomeReadBytes ()Lio/netty/buffer/ByteBuf; discardSomeReadBytes
PacketDataSerializer ensureWritable (I)Lio/netty/buffer/ByteBuf; ensureWritable
PacketDataSerializer ensureWritable (IZ)I ensureWritable
PacketDataSerializer getBoolean (I)Z getBoolean
PacketDataSerializer getByte (I)B getByte
PacketDataSerializer getUnsignedByte (I)S getUnsignedByte
PacketDataSerializer getShort (I)S getShort
PacketDataSerializer getShortLE (I)S getShortLE
PacketDataSerializer getUnsignedShort (I)I getUnsignedShort
PacketDataSerializer getUnsignedShortLE (I)I getUnsignedShortLE
PacketDataSerializer getMedium (I)I getMedium
PacketDataSerializer getMediumLE (I)I getMediumLE
PacketDataSerializer getUnsignedMedium (I)I getUnsignedMedium
PacketDataSerializer getUnsignedMediumLE (I)I getUnsignedMediumLE
PacketDataSerializer getInt (I)I getInt
PacketDataSerializer getIntLE (I)I getIntLE
PacketDataSerializer getUnsignedInt (I)J getUnsignedInt
PacketDataSerializer getUnsignedIntLE (I)J getUnsignedIntLE
PacketDataSerializer getLong (I)J getLong
PacketDataSerializer getLongLE (I)J getLongLE
PacketDataSerializer getChar (I)C getChar
PacketDataSerializer getFloat (I)F getFloat
PacketDataSerializer getDouble (I)D getDouble
PacketDataSerializer getBytes (ILio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; getBytes
PacketDataSerializer getBytes (ILio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; getBytes
PacketDataSerializer getBytes (ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; getBytes
PacketDataSerializer getBytes (I[B)Lio/netty/buffer/ByteBuf; getBytes
PacketDataSerializer getBytes (I[BII)Lio/netty/buffer/ByteBuf; getBytes
PacketDataSerializer getBytes (ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; getBytes
PacketDataSerializer getBytes (ILjava/io/OutputStream;I)Lio/netty/buffer/ByteBuf; getBytes
PacketDataSerializer getBytes (ILjava/nio/channels/GatheringByteChannel;I)I getBytes
PacketDataSerializer getBytes (ILjava/nio/channels/FileChannel;JI)I getBytes
PacketDataSerializer getCharSequence (IILjava/nio/charset/Charset;)Ljava/lang/CharSequence; getCharSequence
PacketDataSerializer setBoolean (IZ)Lio/netty/buffer/ByteBuf; setBoolean
PacketDataSerializer setByte (II)Lio/netty/buffer/ByteBuf; setByte
PacketDataSerializer setShort (II)Lio/netty/buffer/ByteBuf; setShort
PacketDataSerializer setShortLE (II)Lio/netty/buffer/ByteBuf; setShortLE
PacketDataSerializer setMedium (II)Lio/netty/buffer/ByteBuf; setMedium
PacketDataSerializer setMediumLE (II)Lio/netty/buffer/ByteBuf; setMediumLE
PacketDataSerializer setInt (II)Lio/netty/buffer/ByteBuf; setInt
PacketDataSerializer setIntLE (II)Lio/netty/buffer/ByteBuf; setIntLE
PacketDataSerializer setLong (IJ)Lio/netty/buffer/ByteBuf; setLong
PacketDataSerializer setLongLE (IJ)Lio/netty/buffer/ByteBuf; setLongLE
PacketDataSerializer setChar (II)Lio/netty/buffer/ByteBuf; setChar
PacketDataSerializer setFloat (IF)Lio/netty/buffer/ByteBuf; setFloat
PacketDataSerializer setDouble (ID)Lio/netty/buffer/ByteBuf; setDouble
PacketDataSerializer setBytes (ILio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; setBytes
PacketDataSerializer setBytes (ILio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; setBytes
PacketDataSerializer setBytes (ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; setBytes
PacketDataSerializer setBytes (I[B)Lio/netty/buffer/ByteBuf; setBytes
PacketDataSerializer setBytes (I[BII)Lio/netty/buffer/ByteBuf; setBytes
PacketDataSerializer setBytes (ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; setBytes
PacketDataSerializer setBytes (ILjava/io/InputStream;I)I setBytes
PacketDataSerializer setBytes (ILjava/nio/channels/ScatteringByteChannel;I)I setBytes
PacketDataSerializer setBytes (ILjava/nio/channels/FileChannel;JI)I setBytes
PacketDataSerializer setZero (II)Lio/netty/buffer/ByteBuf; setZero
PacketDataSerializer setCharSequence (ILjava/lang/CharSequence;Ljava/nio/charset/Charset;)I setCharSequence
PacketDataSerializer readBoolean ()Z readBoolean
PacketDataSerializer readByte ()B readByte
PacketDataSerializer readUnsignedByte ()S readUnsignedByte
PacketDataSerializer readShort ()S readShort
PacketDataSerializer readShortLE ()S readShortLE
PacketDataSerializer readUnsignedShort ()I readUnsignedShort
PacketDataSerializer readUnsignedShortLE ()I readUnsignedShortLE
PacketDataSerializer readMedium ()I readMedium
PacketDataSerializer readMediumLE ()I readMediumLE
PacketDataSerializer readUnsignedMedium ()I readUnsignedMedium
PacketDataSerializer readUnsignedMediumLE ()I readUnsignedMediumLE
PacketDataSerializer readInt ()I readInt
PacketDataSerializer readIntLE ()I readIntLE
PacketDataSerializer readUnsignedInt ()J readUnsignedInt
PacketDataSerializer readUnsignedIntLE ()J readUnsignedIntLE
PacketDataSerializer readLong ()J readLong
PacketDataSerializer readLongLE ()J readLongLE
PacketDataSerializer readChar ()C readChar
PacketDataSerializer readFloat ()F readFloat
PacketDataSerializer readDouble ()D readDouble
PacketDataSerializer readBytes (I)Lio/netty/buffer/ByteBuf; readBytes
PacketDataSerializer readSlice (I)Lio/netty/buffer/ByteBuf; readSlice
PacketDataSerializer readRetainedSlice (I)Lio/netty/buffer/ByteBuf; readRetainedSlice
PacketDataSerializer readBytes (Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; readBytes
PacketDataSerializer readBytes (Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; readBytes
PacketDataSerializer readBytes (Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; readBytes
PacketDataSerializer readBytes ([B)Lio/netty/buffer/ByteBuf; readBytes
PacketDataSerializer readBytes ([BII)Lio/netty/buffer/ByteBuf; readBytes
PacketDataSerializer readBytes (Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; readBytes
PacketDataSerializer readBytes (Ljava/io/OutputStream;I)Lio/netty/buffer/ByteBuf; readBytes
PacketDataSerializer readBytes (Ljava/nio/channels/GatheringByteChannel;I)I readBytes
PacketDataSerializer readCharSequence (ILjava/nio/charset/Charset;)Ljava/lang/CharSequence; readCharSequence
PacketDataSerializer readBytes (Ljava/nio/channels/FileChannel;JI)I readBytes
PacketDataSerializer skipBytes (I)Lio/netty/buffer/ByteBuf; skipBytes
PacketDataSerializer writeBoolean (Z)Lio/netty/buffer/ByteBuf; writeBoolean
PacketDataSerializer writeByte (I)Lio/netty/buffer/ByteBuf; writeByte
PacketDataSerializer writeShort (I)Lio/netty/buffer/ByteBuf; writeShort
PacketDataSerializer writeShortLE (I)Lio/netty/buffer/ByteBuf; writeShortLE
PacketDataSerializer writeMedium (I)Lio/netty/buffer/ByteBuf; writeMedium
PacketDataSerializer writeMediumLE (I)Lio/netty/buffer/ByteBuf; writeMediumLE
PacketDataSerializer writeInt (I)Lio/netty/buffer/ByteBuf; writeInt
PacketDataSerializer writeIntLE (I)Lio/netty/buffer/ByteBuf; writeIntLE
PacketDataSerializer writeLong (J)Lio/netty/buffer/ByteBuf; writeLong
PacketDataSerializer writeLongLE (J)Lio/netty/buffer/ByteBuf; writeLongLE
PacketDataSerializer writeChar (I)Lio/netty/buffer/ByteBuf; writeChar
PacketDataSerializer writeFloat (F)Lio/netty/buffer/ByteBuf; writeFloat
PacketDataSerializer writeDouble (D)Lio/netty/buffer/ByteBuf; writeDouble
PacketDataSerializer writeBytes (Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; writeBytes
PacketDataSerializer writeBytes (Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf; writeBytes
PacketDataSerializer writeBytes (Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf; writeBytes
PacketDataSerializer writeBytes ([B)Lio/netty/buffer/ByteBuf; writeBytes
PacketDataSerializer writeBytes ([BII)Lio/netty/buffer/ByteBuf; writeBytes
PacketDataSerializer writeBytes (Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf; writeBytes
PacketDataSerializer writeBytes (Ljava/io/InputStream;I)I writeBytes
PacketDataSerializer writeBytes (Ljava/nio/channels/ScatteringByteChannel;I)I writeBytes
PacketDataSerializer writeBytes (Ljava/nio/channels/FileChannel;JI)I writeBytes
PacketDataSerializer writeZero (I)Lio/netty/buffer/ByteBuf; writeZero
PacketDataSerializer writeCharSequence (Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)I writeCharSequence
PacketDataSerializer indexOf (IIB)I indexOf
PacketDataSerializer bytesBefore (B)I bytesBefore
PacketDataSerializer bytesBefore (IB)I bytesBefore
PacketDataSerializer bytesBefore (IIB)I bytesBefore
PacketDataSerializer forEachByte (Lio/netty/util/ByteProcessor;)I forEachByte
PacketDataSerializer forEachByte (IILio/netty/util/ByteProcessor;)I forEachByte
PacketDataSerializer forEachByteDesc (Lio/netty/util/ByteProcessor;)I forEachByteDesc
PacketDataSerializer forEachByteDesc (IILio/netty/util/ByteProcessor;)I forEachByteDesc
PacketDataSerializer copy ()Lio/netty/buffer/ByteBuf; copy
PacketDataSerializer copy (II)Lio/netty/buffer/ByteBuf; copy
PacketDataSerializer slice ()Lio/netty/buffer/ByteBuf; slice
PacketDataSerializer retainedSlice ()Lio/netty/buffer/ByteBuf; retainedSlice
PacketDataSerializer slice (II)Lio/netty/buffer/ByteBuf; slice
PacketDataSerializer retainedSlice (II)Lio/netty/buffer/ByteBuf; retainedSlice
PacketDataSerializer duplicate ()Lio/netty/buffer/ByteBuf; duplicate
PacketDataSerializer retainedDuplicate ()Lio/netty/buffer/ByteBuf; retainedDuplicate
PacketDataSerializer nioBufferCount ()I nioBufferCount
PacketDataSerializer nioBuffer ()Ljava/nio/ByteBuffer; nioBuffer
PacketDataSerializer nioBuffer (II)Ljava/nio/ByteBuffer; nioBuffer
PacketDataSerializer internalNioBuffer (II)Ljava/nio/ByteBuffer; internalNioBuffer
PacketDataSerializer nioBuffers ()[Ljava/nio/ByteBuffer; nioBuffers
PacketDataSerializer nioBuffers (II)[Ljava/nio/ByteBuffer; nioBuffers
PacketDataSerializer hasArray ()Z hasArray
PacketDataSerializer array ()[B array
PacketDataSerializer arrayOffset ()I arrayOffset
PacketDataSerializer hasMemoryAddress ()Z hasMemoryAddress
PacketDataSerializer memoryAddress ()J memoryAddress
PacketDataSerializer toString (Ljava/nio/charset/Charset;)Ljava/lang/String; toString
PacketDataSerializer toString (IILjava/nio/charset/Charset;)Ljava/lang/String; toString
PacketDataSerializer hashCode ()I hashCode
PacketDataSerializer equals (Ljava/lang/Object;)Z equals
PacketDataSerializer compareTo (Lio/netty/buffer/ByteBuf;)I compareTo
PacketDataSerializer toString ()Ljava/lang/String; toString
PacketDataSerializer retain (I)Lio/netty/buffer/ByteBuf; retain
PacketDataSerializer retain ()Lio/netty/buffer/ByteBuf; retain
PacketDataSerializer touch ()Lio/netty/buffer/ByteBuf; touch
PacketDataSerializer touch (Ljava/lang/Object;)Lio/netty/buffer/ByteBuf; touch
PacketDataSerializer refCnt ()I refCnt
PacketDataSerializer release ()Z release
PacketDataSerializer release (I)Z release
PacketDataSerializer touch (Ljava/lang/Object;)Lio/netty/util/ReferenceCounted; touch
PacketDataSerializer touch ()Lio/netty/util/ReferenceCounted; touch
PacketDataSerializer retain (I)Lio/netty/util/ReferenceCounted; retain
PacketDataSerializer retain ()Lio/netty/util/ReferenceCounted; retain
PacketDataSerializer compareTo (Ljava/lang/Object;)I compareTo
PacketDecoder a LOGGER
PacketDecoder b MARKER
PacketDecoder c flow
PacketDecoder decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
PacketEncoder a LOGGER
PacketEncoder b MARKER
PacketEncoder c flow
PacketEncoder encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
PacketSplitter decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V decode
PacketPrepender encode (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V encode
ChatClickable a action
ChatClickable b value
ChatClickable b ()Ljava/lang/String; getValue
ChatClickable equals (Ljava/lang/Object;)Z equals
ChatClickable toString ()Ljava/lang/String; toString
ChatClickable hashCode ()I hashCode
IChatBaseComponent$1 a $SwitchMap$net$minecraft$ChatFormatting
IChatBaseComponent$ChatSerializer a GSON
IChatBaseComponent$ChatSerializer b JSON_READER_POS
IChatBaseComponent$ChatSerializer c JSON_READER_LINESTART
IChatBaseComponent$ChatSerializer b (LIChatBaseComponent;)Lcom/google/gson/JsonElement; toJsonTree
IChatBaseComponent$ChatSerializer b (Ljava/lang/String;)LIChatBaseComponent; fromJsonLenient
IChatBaseComponent$ChatSerializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
IChatBaseComponent$ChatSerializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
IChatBaseComponent$ChatSerializer b ()Ljava/lang/reflect/Field; lambda$static$1
IChatBaseComponent$ChatSerializer c ()Lcom/google/gson/Gson; lambda$static$0
ChatHoverable a action
ChatHoverable b value
ChatHoverable b ()LIChatBaseComponent; getValue
ChatHoverable equals (Ljava/lang/Object;)Z equals
ChatHoverable toString ()Ljava/lang/String; toString
ChatHoverable hashCode ()I hashCode
ChatComponentKeybind b keyResolver
ChatComponentKeybind c name
ChatComponentKeybind d nameResolver
ChatComponentKeybind d ()Ljava/lang/String; getContents
ChatComponentKeybind i ()LChatComponentKeybind; copy
ChatComponentKeybind equals (Ljava/lang/Object;)Z equals
ChatComponentKeybind toString ()Ljava/lang/String; toString
ChatComponentKeybind j ()Ljava/lang/String; getName
ChatComponentKeybind g ()LIChatBaseComponent; copy
ChatComponentKeybind b (Ljava/lang/String;)Ljava/util/function/Supplier; lambda$static$1
ChatComponentKeybind c (Ljava/lang/String;)Ljava/lang/String; lambda$null$0
ChatComponentNBT e LOGGER
ChatComponentNBT b interpreting
ChatComponentNBT c nbtPathPattern
ChatComponentNBT d compiledNbtPath
ChatComponentNBT b (Ljava/lang/String;)LArgumentNBTKey$NbtPath; compileNbtPath
ChatComponentNBT d ()Ljava/lang/String; getContents
ChatComponentNBT i ()Ljava/lang/String; getNbtPath
ChatComponentNBT j ()Z isInterpreting
ChatComponentNBT$BlockNbtComponent e posPattern
ChatComponentNBT$BlockNbtComponent f compiledPos
ChatComponentNBT$BlockNbtComponent b (Ljava/lang/String;)LIVectorPosition; compilePos
ChatComponentNBT$BlockNbtComponent k ()Ljava/lang/String; getPos
ChatComponentNBT$BlockNbtComponent g ()LIChatBaseComponent; copy
ChatComponentNBT$BlockNbtComponent equals (Ljava/lang/Object;)Z equals
ChatComponentNBT$BlockNbtComponent toString ()Ljava/lang/String; toString
ChatComponentNBT$EntityNbtComponent e selectorPattern
ChatComponentNBT$EntityNbtComponent f compiledSelector
ChatComponentNBT$EntityNbtComponent b (Ljava/lang/String;)LEntitySelector; compileSelector
ChatComponentNBT$EntityNbtComponent k ()Ljava/lang/String; getSelector
ChatComponentNBT$EntityNbtComponent g ()LIChatBaseComponent; copy
ChatComponentNBT$EntityNbtComponent equals (Ljava/lang/Object;)Z equals
ChatComponentNBT$EntityNbtComponent toString ()Ljava/lang/String; toString
ChatComponentNBT$StorageNbtComponent e id
ChatComponentNBT$StorageNbtComponent k ()LMinecraftKey; getId
ChatComponentNBT$StorageNbtComponent g ()LIChatBaseComponent; copy
ChatComponentNBT$StorageNbtComponent equals (Ljava/lang/Object;)Z equals
ChatComponentNBT$StorageNbtComponent toString ()Ljava/lang/String; toString
ChatComponentScore b name
ChatComponentScore c selector
ChatComponentScore d objective
ChatComponentScore e value
ChatComponentScore i ()Ljava/lang/String; getName
ChatComponentScore j ()LEntitySelector; getSelector
ChatComponentScore k ()Ljava/lang/String; getObjective
ChatComponentScore b (Ljava/lang/String;)V setValue
ChatComponentScore d ()Ljava/lang/String; getContents
ChatComponentScore b (LCommandListenerWrapper;)V resolve
ChatComponentScore l ()LChatComponentScore; copy
ChatComponentScore equals (Ljava/lang/Object;)Z equals
ChatComponentScore toString ()Ljava/lang/String; toString
ChatComponentScore g ()LIChatBaseComponent; copy
ChatComponentSelector b LOGGER
ChatComponentSelector c pattern
ChatComponentSelector d selector
ChatComponentSelector i ()Ljava/lang/String; getPattern
ChatComponentSelector j ()LEntitySelector; getSelector
ChatComponentSelector d ()Ljava/lang/String; getContents
ChatComponentSelector k ()LChatComponentSelector; copy
ChatComponentSelector equals (Ljava/lang/Object;)Z equals
ChatComponentSelector toString ()Ljava/lang/String; toString
ChatComponentSelector g ()LIChatBaseComponent; copy
ChatModifier$1 b ()Z isBold
ChatModifier$1 c ()Z isItalic
ChatModifier$1 d ()Z isStrikethrough
ChatModifier$1 e ()Z isUnderlined
ChatModifier$1 f ()Z isObfuscated
ChatModifier$1 h ()LChatClickable; getClickEvent
ChatModifier$1 i ()LChatHoverable; getHoverEvent
ChatModifier$1 j ()Ljava/lang/String; getInsertion
ChatModifier$1 b (Ljava/lang/Boolean;)LChatModifier; setItalic
ChatModifier$1 c (Ljava/lang/Boolean;)LChatModifier; setStrikethrough
ChatModifier$1 d (Ljava/lang/Boolean;)LChatModifier; setUnderlined
ChatModifier$1 e (Ljava/lang/Boolean;)LChatModifier; setObfuscated
ChatModifier$1 toString ()Ljava/lang/String; toString
ChatModifier$1 m ()LChatModifier; copy
ChatModifier$1 n ()LChatModifier; flatCopy
ChatModifier$1 k ()Ljava/lang/String; getLegacyFormatCodes
ChatModifier$ChatModifierSerializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
ChatModifier$ChatModifierSerializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ChatComponentText b text
ChatComponentText i ()Ljava/lang/String; getText
ChatComponentText d ()Ljava/lang/String; getContents
ChatComponentText j ()LChatComponentText; copy
ChatComponentText equals (Ljava/lang/Object;)Z equals
ChatComponentText toString ()Ljava/lang/String; toString
ChatComponentText g ()LIChatBaseComponent; copy
Packet b (LPacketDataSerializer;)V write
PacketPlayOutSpawnEntity a id
PacketPlayOutSpawnEntity b uuid
PacketPlayOutSpawnEntity c x
PacketPlayOutSpawnEntity d y
PacketPlayOutSpawnEntity e z
PacketPlayOutSpawnEntity f xa
PacketPlayOutSpawnEntity g ya
PacketPlayOutSpawnEntity h za
PacketPlayOutSpawnEntity i xRot
PacketPlayOutSpawnEntity j yRot
PacketPlayOutSpawnEntity k type
PacketPlayOutSpawnEntity l data
PacketPlayOutSpawnEntity b (LPacketDataSerializer;)V write
PacketPlayOutSpawnEntity b ()I getId
PacketPlayOutSpawnEntity c ()Ljava/util/UUID; getUUID
PacketPlayOutSpawnEntity d ()D getX
PacketPlayOutSpawnEntity e ()D getY
PacketPlayOutSpawnEntity f ()D getZ
PacketPlayOutSpawnEntity g ()D getXa
PacketPlayOutSpawnEntity h ()D getYa
PacketPlayOutSpawnEntity i ()D getZa
PacketPlayOutSpawnEntity j ()I getxRot
PacketPlayOutSpawnEntity k ()I getyRot
PacketPlayOutSpawnEntity l ()LEntityTypes; getType
PacketPlayOutSpawnEntity m ()I getData
PacketPlayOutSpawnEntityExperienceOrb a id
PacketPlayOutSpawnEntityExperienceOrb b x
PacketPlayOutSpawnEntityExperienceOrb c y
PacketPlayOutSpawnEntityExperienceOrb d z
PacketPlayOutSpawnEntityExperienceOrb e value
PacketPlayOutSpawnEntityExperienceOrb b (LPacketDataSerializer;)V write
PacketPlayOutSpawnEntityExperienceOrb b ()I getId
PacketPlayOutSpawnEntityExperienceOrb c ()D getX
PacketPlayOutSpawnEntityExperienceOrb d ()D getY
PacketPlayOutSpawnEntityExperienceOrb e ()D getZ
PacketPlayOutSpawnEntityExperienceOrb f ()I getValue
PacketPlayOutSpawnEntityWeather a id
PacketPlayOutSpawnEntityWeather b x
PacketPlayOutSpawnEntityWeather c y
PacketPlayOutSpawnEntityWeather d z
PacketPlayOutSpawnEntityWeather e type
PacketPlayOutSpawnEntityWeather b (LPacketDataSerializer;)V write
PacketPlayOutSpawnEntityWeather b ()I getId
PacketPlayOutSpawnEntityWeather c ()D getX
PacketPlayOutSpawnEntityWeather d ()D getY
PacketPlayOutSpawnEntityWeather e ()D getZ
PacketPlayOutSpawnEntityWeather f ()I getType
PacketPlayOutSpawnEntityLiving a id
PacketPlayOutSpawnEntityLiving b uuid
PacketPlayOutSpawnEntityLiving c type
PacketPlayOutSpawnEntityLiving d x
PacketPlayOutSpawnEntityLiving e y
PacketPlayOutSpawnEntityLiving f z
PacketPlayOutSpawnEntityLiving g xd
PacketPlayOutSpawnEntityLiving h yd
PacketPlayOutSpawnEntityLiving i zd
PacketPlayOutSpawnEntityLiving j yRot
PacketPlayOutSpawnEntityLiving k xRot
PacketPlayOutSpawnEntityLiving l yHeadRot
PacketPlayOutSpawnEntityLiving b (LPacketDataSerializer;)V write
PacketPlayOutSpawnEntityLiving b ()I getId
PacketPlayOutSpawnEntityLiving c ()Ljava/util/UUID; getUUID
PacketPlayOutSpawnEntityLiving d ()I getType
PacketPlayOutSpawnEntityLiving e ()D getX
PacketPlayOutSpawnEntityLiving f ()D getY
PacketPlayOutSpawnEntityLiving g ()D getZ
PacketPlayOutSpawnEntityLiving h ()I getXd
PacketPlayOutSpawnEntityLiving i ()I getYd
PacketPlayOutSpawnEntityLiving j ()I getZd
PacketPlayOutSpawnEntityLiving k ()B getyRot
PacketPlayOutSpawnEntityLiving l ()B getxRot
PacketPlayOutSpawnEntityLiving m ()B getyHeadRot
PacketPlayOutSpawnEntityPainting a id
PacketPlayOutSpawnEntityPainting b uuid
PacketPlayOutSpawnEntityPainting c pos
PacketPlayOutSpawnEntityPainting d direction
PacketPlayOutSpawnEntityPainting e motive
PacketPlayOutSpawnEntityPainting b (LPacketDataSerializer;)V write
PacketPlayOutSpawnEntityPainting b ()I getId
PacketPlayOutSpawnEntityPainting c ()Ljava/util/UUID; getUUID
PacketPlayOutSpawnEntityPainting d ()LBlockPosition; getPos
PacketPlayOutSpawnEntityPainting e ()LEnumDirection; getDirection
PacketPlayOutSpawnEntityPainting f ()LPaintings; getMotive
PacketPlayOutNamedEntitySpawn a entityId
PacketPlayOutNamedEntitySpawn b playerId
PacketPlayOutNamedEntitySpawn c x
PacketPlayOutNamedEntitySpawn d y
PacketPlayOutNamedEntitySpawn e z
PacketPlayOutNamedEntitySpawn f yRot
PacketPlayOutNamedEntitySpawn g xRot
PacketPlayOutNamedEntitySpawn b (LPacketDataSerializer;)V write
PacketPlayOutNamedEntitySpawn b ()I getEntityId
PacketPlayOutNamedEntitySpawn c ()Ljava/util/UUID; getPlayerId
PacketPlayOutNamedEntitySpawn d ()D getX
PacketPlayOutNamedEntitySpawn e ()D getY
PacketPlayOutNamedEntitySpawn f ()D getZ
PacketPlayOutNamedEntitySpawn g ()B getyRot
PacketPlayOutNamedEntitySpawn h ()B getxRot
PacketPlayOutAnimation a id
PacketPlayOutAnimation b action
PacketPlayOutAnimation b (LPacketDataSerializer;)V write
PacketPlayOutAnimation b ()I getId
PacketPlayOutAnimation c ()I getAction
PacketPlayOutStatistic a stats
PacketPlayOutStatistic b (LPacketDataSerializer;)V write
PacketPlayOutStatistic b ()Ljava/util/Map; getStats
PacketPlayOutBlockBreak b LOGGER
PacketPlayOutBlockBreak c pos
PacketPlayOutBlockBreak d state
PacketPlayOutBlockBreak a action
PacketPlayOutBlockBreak e allGood
PacketPlayOutBlockBreak b (LPacketDataSerializer;)V write
PacketPlayOutBlockBreak b ()LIBlockData; getState
PacketPlayOutBlockBreak c ()LBlockPosition; getPos
PacketPlayOutBlockBreak d ()Z allGood
PacketPlayOutBlockBreak e ()LPacketPlayInBlockDig$EnumPlayerDigType; action
PacketPlayOutBlockBreakAnimation a id
PacketPlayOutBlockBreakAnimation b pos
PacketPlayOutBlockBreakAnimation c progress
PacketPlayOutBlockBreakAnimation b (LPacketDataSerializer;)V write
PacketPlayOutBlockBreakAnimation b ()I getId
PacketPlayOutBlockBreakAnimation c ()LBlockPosition; getPos
PacketPlayOutBlockBreakAnimation d ()I getProgress
PacketPlayOutTileEntityData a pos
PacketPlayOutTileEntityData b type
PacketPlayOutTileEntityData c tag
PacketPlayOutTileEntityData b (LPacketDataSerializer;)V write
PacketPlayOutTileEntityData b ()LBlockPosition; getPos
PacketPlayOutTileEntityData c ()I getType
PacketPlayOutTileEntityData d ()LNBTTagCompound; getTag
PacketPlayOutBlockAction a pos
PacketPlayOutBlockAction b b0
PacketPlayOutBlockAction c b1
PacketPlayOutBlockAction d block
PacketPlayOutBlockAction b (LPacketDataSerializer;)V write
PacketPlayOutBlockAction b ()LBlockPosition; getPos
PacketPlayOutBlockAction c ()I getB0
PacketPlayOutBlockAction d ()I getB1
PacketPlayOutBlockAction e ()LBlock; getBlock
PacketPlayOutBoss a id
PacketPlayOutBoss b operation
PacketPlayOutBoss c name
PacketPlayOutBoss d pct
PacketPlayOutBoss e color
PacketPlayOutBoss f overlay
PacketPlayOutBoss g darkenScreen
PacketPlayOutBoss h playMusic
PacketPlayOutBoss i createWorldFog
PacketPlayOutBoss b (LPacketDataSerializer;)V write
PacketPlayOutBoss k ()I encodeProperties
PacketPlayOutBoss b ()Ljava/util/UUID; getId
PacketPlayOutBoss c ()LPacketPlayOutBoss$Action; getOperation
PacketPlayOutBoss d ()LIChatBaseComponent; getName
PacketPlayOutBoss e ()F getPercent
PacketPlayOutBoss f ()LBossBattle$BarColor; getColor
PacketPlayOutBoss g ()LBossBattle$BarStyle; getOverlay
PacketPlayOutBoss h ()Z shouldDarkenScreen
PacketPlayOutBoss i ()Z shouldPlayMusic
PacketPlayOutBoss j ()Z shouldCreateWorldFog
PacketPlayOutBoss$1 a $SwitchMap$net$minecraft$network$protocol$game$ClientboundBossEventPacket$Operation
PacketPlayOutServerDifficulty a difficulty
PacketPlayOutServerDifficulty b locked
PacketPlayOutServerDifficulty b (LPacketDataSerializer;)V write
PacketPlayOutServerDifficulty b ()Z isLocked
PacketPlayOutServerDifficulty c ()LEnumDifficulty; getDifficulty
PacketPlayOutChat a message
PacketPlayOutChat b type
PacketPlayOutChat b (LPacketDataSerializer;)V write
PacketPlayOutChat b ()LIChatBaseComponent; getMessage
PacketPlayOutChat c ()Z isSystem
PacketPlayOutChat d ()LChatMessageType; getType
PacketPlayOutMultiBlockChange a chunkPos
PacketPlayOutMultiBlockChange b updates
PacketPlayOutMultiBlockChange b (LPacketDataSerializer;)V write
PacketPlayOutMultiBlockChange b ()[LPacketPlayOutMultiBlockChange$MultiBlockChangeInfo; getUpdates
PacketPlayOutMultiBlockChange$MultiBlockChangeInfo b offset
PacketPlayOutMultiBlockChange$MultiBlockChangeInfo c block
PacketPlayOutMultiBlockChange$MultiBlockChangeInfo a this$0
PacketPlayOutMultiBlockChange$MultiBlockChangeInfo b ()S getOffset
PacketPlayOutMultiBlockChange$MultiBlockChangeInfo c ()LIBlockData; getBlock
PacketPlayOutTabComplete a id
PacketPlayOutTabComplete b suggestions
PacketPlayOutTabComplete b (LPacketDataSerializer;)V write
PacketPlayOutTabComplete b ()I getId
PacketPlayOutTabComplete c ()Lcom/mojang/brigadier/suggestion/Suggestions; getSuggestions
PacketPlayOutCommands a root
PacketPlayOutCommands b (LPacketDataSerializer;)V write
PacketPlayOutCommands c (LPacketDataSerializer;)LPacketPlayOutCommands$Entry; readNode
PacketPlayOutCommands b ()Lcom/mojang/brigadier/tree/RootCommandNode; getRoot
PacketPlayOutCommands$Entry a builder
PacketPlayOutCommands$Entry b flags
PacketPlayOutCommands$Entry c redirect
PacketPlayOutCommands$Entry d children
PacketPlayOutCommands$Entry e node
PacketPlayOutTransaction a containerId
PacketPlayOutTransaction b uid
PacketPlayOutTransaction c accepted
PacketPlayOutTransaction b (LPacketDataSerializer;)V write
PacketPlayOutTransaction b ()I getContainerId
PacketPlayOutTransaction c ()S getUid
PacketPlayOutTransaction d ()Z isAccepted
PacketPlayOutCloseWindow a containerId
PacketPlayOutCloseWindow b (LPacketDataSerializer;)V write
PacketPlayOutCloseWindow b ()I getContainerId
PacketPlayOutWindowItems a containerId
PacketPlayOutWindowItems b items
PacketPlayOutWindowItems b (LPacketDataSerializer;)V write
PacketPlayOutWindowItems b ()I getContainerId
PacketPlayOutWindowItems c ()Ljava/util/List; getItems
PacketPlayOutWindowData a containerId
PacketPlayOutWindowData b id
PacketPlayOutWindowData c value
PacketPlayOutWindowData b (LPacketDataSerializer;)V write
PacketPlayOutWindowData b ()I getContainerId
PacketPlayOutWindowData c ()I getId
PacketPlayOutWindowData d ()I getValue
PacketPlayOutSetSlot a containerId
PacketPlayOutSetSlot b slot
PacketPlayOutSetSlot c itemStack
PacketPlayOutSetSlot b (LPacketDataSerializer;)V write
PacketPlayOutSetSlot b ()I getContainerId
PacketPlayOutSetSlot c ()I getSlot
PacketPlayOutSetSlot d ()LItemStack; getItem
PacketPlayOutSetCooldown a item
PacketPlayOutSetCooldown b duration
PacketPlayOutSetCooldown b (LPacketDataSerializer;)V write
PacketPlayOutSetCooldown b ()LItem; getItem
PacketPlayOutSetCooldown c ()I getDuration
PacketPlayOutCustomPayload a BRAND
PacketPlayOutCustomPayload b DEBUG_PATHFINDING_PACKET
PacketPlayOutCustomPayload c DEBUG_NEIGHBORSUPDATE_PACKET
PacketPlayOutCustomPayload d DEBUG_CAVES_PACKET
PacketPlayOutCustomPayload e DEBUG_STRUCTURES_PACKET
PacketPlayOutCustomPayload f DEBUG_WORLDGENATTEMPT_PACKET
PacketPlayOutCustomPayload g DEBUG_POI_TICKET_COUNT_PACKET
PacketPlayOutCustomPayload h DEBUG_POI_ADDED_PACKET
PacketPlayOutCustomPayload i DEBUG_POI_REMOVED_PACKET
PacketPlayOutCustomPayload j DEBUG_VILLAGE_SECTIONS
PacketPlayOutCustomPayload k DEBUG_GOAL_SELECTOR
PacketPlayOutCustomPayload l DEBUG_BRAIN
PacketPlayOutCustomPayload m DEBUG_BEE
PacketPlayOutCustomPayload n DEBUG_HIVE
PacketPlayOutCustomPayload o DEBUG_GAME_TEST_ADD_MARKER
PacketPlayOutCustomPayload p DEBUG_GAME_TEST_CLEAR
PacketPlayOutCustomPayload q DEBUG_RAIDS
PacketPlayOutCustomPayload r identifier
PacketPlayOutCustomPayload s data
PacketPlayOutCustomPayload b (LPacketDataSerializer;)V write
PacketPlayOutCustomPayload b ()LMinecraftKey; getIdentifier
PacketPlayOutCustomPayload c ()LPacketDataSerializer; getData
PacketPlayOutCustomSoundEffect a name
PacketPlayOutCustomSoundEffect b source
PacketPlayOutCustomSoundEffect c x
PacketPlayOutCustomSoundEffect d y
PacketPlayOutCustomSoundEffect e z
PacketPlayOutCustomSoundEffect f volume
PacketPlayOutCustomSoundEffect g pitch
PacketPlayOutCustomSoundEffect b (LPacketDataSerializer;)V write
PacketPlayOutCustomSoundEffect b ()LMinecraftKey; getName
PacketPlayOutCustomSoundEffect c ()LSoundCategory; getSource
PacketPlayOutCustomSoundEffect d ()D getX
PacketPlayOutCustomSoundEffect e ()D getY
PacketPlayOutCustomSoundEffect f ()D getZ
PacketPlayOutCustomSoundEffect g ()F getVolume
PacketPlayOutCustomSoundEffect h ()F getPitch
PacketPlayOutKickDisconnect a reason
PacketPlayOutKickDisconnect b (LPacketDataSerializer;)V write
PacketPlayOutKickDisconnect b ()LIChatBaseComponent; getReason
PacketPlayOutEntityStatus a entityId
PacketPlayOutEntityStatus b eventId
PacketPlayOutEntityStatus b (LPacketDataSerializer;)V write
PacketPlayOutEntityStatus b ()B getEventId
PacketPlayOutExplosion a x
PacketPlayOutExplosion b y
PacketPlayOutExplosion c z
PacketPlayOutExplosion d power
PacketPlayOutExplosion e toBlow
PacketPlayOutExplosion f knockbackX
PacketPlayOutExplosion g knockbackY
PacketPlayOutExplosion h knockbackZ
PacketPlayOutExplosion b (LPacketDataSerializer;)V write
PacketPlayOutExplosion b ()F getKnockbackX
PacketPlayOutExplosion c ()F getKnockbackY
PacketPlayOutExplosion d ()F getKnockbackZ
PacketPlayOutExplosion e ()D getX
PacketPlayOutExplosion f ()D getY
PacketPlayOutExplosion g ()D getZ
PacketPlayOutExplosion h ()F getPower
PacketPlayOutExplosion i ()Ljava/util/List; getToBlow
PacketPlayOutUnloadChunk a x
PacketPlayOutUnloadChunk b z
PacketPlayOutUnloadChunk b (LPacketDataSerializer;)V write
PacketPlayOutUnloadChunk b ()I getX
PacketPlayOutUnloadChunk c ()I getZ
PacketPlayOutGameStateChange a EVENT_LANGUAGE_ID
PacketPlayOutGameStateChange b event
PacketPlayOutGameStateChange c param
PacketPlayOutGameStateChange b (LPacketDataSerializer;)V write
PacketPlayOutGameStateChange b ()I getEvent
PacketPlayOutGameStateChange c ()F getParam
PacketPlayOutOpenWindowHorse a containerId
PacketPlayOutOpenWindowHorse b size
PacketPlayOutOpenWindowHorse c entityId
PacketPlayOutOpenWindowHorse b (LPacketDataSerializer;)V write
PacketPlayOutOpenWindowHorse b ()I getContainerId
PacketPlayOutOpenWindowHorse c ()I getSize
PacketPlayOutOpenWindowHorse d ()I getEntityId
PacketPlayOutKeepAlive a id
PacketPlayOutKeepAlive b (LPacketDataSerializer;)V write
PacketPlayOutKeepAlive b ()J getId
PacketPlayOutMapChunk a x
PacketPlayOutMapChunk b z
PacketPlayOutMapChunk c availableSections
PacketPlayOutMapChunk d heightmaps
PacketPlayOutMapChunk e biomes
PacketPlayOutMapChunk f buffer
PacketPlayOutMapChunk g blockEntitiesTags
PacketPlayOutMapChunk h fullChunk
PacketPlayOutMapChunk b (LPacketDataSerializer;)V write
PacketPlayOutMapChunk b ()LPacketDataSerializer; getReadBuffer
PacketPlayOutMapChunk j ()Lio/netty/buffer/ByteBuf; getWriteBuffer
PacketPlayOutMapChunk c ()I getX
PacketPlayOutMapChunk d ()I getZ
PacketPlayOutMapChunk e ()I getAvailableSections
PacketPlayOutMapChunk f ()Z isFullChunk
PacketPlayOutMapChunk g ()LNBTTagCompound; getHeightmaps
PacketPlayOutMapChunk h ()Ljava/util/List; getBlockEntitiesTags
PacketPlayOutMapChunk i ()LBiomeStorage; getBiomes
PacketPlayOutWorldEvent a type
PacketPlayOutWorldEvent b pos
PacketPlayOutWorldEvent c data
PacketPlayOutWorldEvent d globalEvent
PacketPlayOutWorldEvent b (LPacketDataSerializer;)V write
PacketPlayOutWorldEvent b ()Z isGlobalEvent
PacketPlayOutWorldEvent c ()I getType
PacketPlayOutWorldEvent d ()I getData
PacketPlayOutWorldEvent e ()LBlockPosition; getPos
PacketPlayOutWorldParticles a x
PacketPlayOutWorldParticles b y
PacketPlayOutWorldParticles c z
PacketPlayOutWorldParticles d xDist
PacketPlayOutWorldParticles e yDist
PacketPlayOutWorldParticles f zDist
PacketPlayOutWorldParticles g maxSpeed
PacketPlayOutWorldParticles h count
PacketPlayOutWorldParticles i overrideLimiter
PacketPlayOutWorldParticles j particle
PacketPlayOutWorldParticles b (LPacketDataSerializer;)V write
PacketPlayOutWorldParticles b ()Z isOverrideLimiter
PacketPlayOutWorldParticles c ()D getX
PacketPlayOutWorldParticles d ()D getY
PacketPlayOutWorldParticles e ()D getZ
PacketPlayOutWorldParticles f ()F getXDist
PacketPlayOutWorldParticles g ()F getYDist
PacketPlayOutWorldParticles h ()F getZDist
PacketPlayOutWorldParticles i ()F getMaxSpeed
PacketPlayOutWorldParticles j ()I getCount
PacketPlayOutWorldParticles k ()LParticleParam; getParticle
PacketPlayOutLightUpdate a x
PacketPlayOutLightUpdate b z
PacketPlayOutLightUpdate c skyYMask
PacketPlayOutLightUpdate d blockYMask
PacketPlayOutLightUpdate e emptySkyYMask
PacketPlayOutLightUpdate f emptyBlockYMask
PacketPlayOutLightUpdate g skyUpdates
PacketPlayOutLightUpdate h blockUpdates
PacketPlayOutLightUpdate b (LPacketDataSerializer;)V write
PacketPlayOutLightUpdate b ()I getX
PacketPlayOutLightUpdate c ()I getZ
PacketPlayOutLightUpdate d ()I getSkyYMask
PacketPlayOutLightUpdate e ()I getEmptySkyYMask
PacketPlayOutLightUpdate f ()Ljava/util/List; getSkyUpdates
PacketPlayOutLightUpdate g ()I getBlockYMask
PacketPlayOutLightUpdate h ()I getEmptyBlockYMask
PacketPlayOutLightUpdate i ()Ljava/util/List; getBlockUpdates
PacketPlayOutLogin a playerId
PacketPlayOutLogin b seed
PacketPlayOutLogin c hardcore
PacketPlayOutLogin d gameType
PacketPlayOutLogin e dimension
PacketPlayOutLogin f maxPlayers
PacketPlayOutLogin g levelType
PacketPlayOutLogin h chunkRadius
PacketPlayOutLogin i reducedDebugInfo
PacketPlayOutLogin j showDeathScreen
PacketPlayOutLogin b (LPacketDataSerializer;)V write
PacketPlayOutLogin b ()I getPlayerId
PacketPlayOutLogin c ()J getSeed
PacketPlayOutLogin d ()Z isHardcore
PacketPlayOutLogin e ()LEnumGamemode; getGameType
PacketPlayOutLogin f ()LDimensionManager; getDimension
PacketPlayOutLogin g ()I getMaxPlayers
PacketPlayOutLogin h ()LWorldType; getLevelType
PacketPlayOutLogin i ()I getChunkRadius
PacketPlayOutLogin j ()Z isReducedDebugInfo
PacketPlayOutLogin k ()Z shouldShowDeathScreen
PacketPlayOutMap a mapId
PacketPlayOutMap b scale
PacketPlayOutMap c trackingPosition
PacketPlayOutMap d locked
PacketPlayOutMap e decorations
PacketPlayOutMap f startX
PacketPlayOutMap g startY
PacketPlayOutMap h width
PacketPlayOutMap i height
PacketPlayOutMap j mapColors
PacketPlayOutMap b (LPacketDataSerializer;)V write
PacketPlayOutMap b ()I getMapId
PacketPlayOutMap c ()B getScale
PacketPlayOutOpenWindowMerchant a containerId
PacketPlayOutOpenWindowMerchant b offers
PacketPlayOutOpenWindowMerchant c villagerLevel
PacketPlayOutOpenWindowMerchant d villagerXp
PacketPlayOutOpenWindowMerchant e showProgress
PacketPlayOutOpenWindowMerchant f canRestock
PacketPlayOutOpenWindowMerchant b (LPacketDataSerializer;)V write
PacketPlayOutOpenWindowMerchant b ()I getContainerId
PacketPlayOutOpenWindowMerchant c ()LMerchantRecipeList; getOffers
PacketPlayOutOpenWindowMerchant d ()I getVillagerLevel
PacketPlayOutOpenWindowMerchant e ()I getVillagerXp
PacketPlayOutOpenWindowMerchant f ()Z showProgress
PacketPlayOutOpenWindowMerchant g ()Z canRestock
PacketPlayOutEntity a entityId
PacketPlayOutEntity b xa
PacketPlayOutEntity c ya
PacketPlayOutEntity d za
PacketPlayOutEntity e yRot
PacketPlayOutEntity f xRot
PacketPlayOutEntity g onGround
PacketPlayOutEntity h hasRot
PacketPlayOutEntity i hasPos
PacketPlayOutEntity b (LPacketDataSerializer;)V write
PacketPlayOutEntity toString ()Ljava/lang/String; toString
PacketPlayOutEntity b ()S getXa
PacketPlayOutEntity c ()S getYa
PacketPlayOutEntity d ()S getZa
PacketPlayOutEntity e ()B getyRot
PacketPlayOutEntity f ()B getxRot
PacketPlayOutEntity g ()Z hasRotation
PacketPlayOutEntity h ()Z hasPosition
PacketPlayOutEntity i ()Z isOnGround
PacketPlayOutEntity$PacketPlayOutRelEntityMove b (LPacketDataSerializer;)V write
PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook b (LPacketDataSerializer;)V write
PacketPlayOutEntity$PacketPlayOutEntityLook b (LPacketDataSerializer;)V write
PacketPlayOutVehicleMove a x
PacketPlayOutVehicleMove b y
PacketPlayOutVehicleMove c z
PacketPlayOutVehicleMove d yRot
PacketPlayOutVehicleMove e xRot
PacketPlayOutVehicleMove b (LPacketDataSerializer;)V write
PacketPlayOutVehicleMove b ()D getX
PacketPlayOutVehicleMove c ()D getY
PacketPlayOutVehicleMove d ()D getZ
PacketPlayOutVehicleMove e ()F getYRot
PacketPlayOutVehicleMove f ()F getXRot
PacketPlayOutOpenBook a hand
PacketPlayOutOpenBook b (LPacketDataSerializer;)V write
PacketPlayOutOpenBook b ()LEnumHand; getHand
PacketPlayOutOpenWindow a containerId
PacketPlayOutOpenWindow b type
PacketPlayOutOpenWindow c title
PacketPlayOutOpenWindow b (LPacketDataSerializer;)V write
PacketPlayOutOpenWindow b ()I getContainerId
PacketPlayOutOpenWindow c ()LContainers; getType
PacketPlayOutOpenWindow d ()LIChatBaseComponent; getTitle
PacketPlayOutOpenSignEditor a pos
PacketPlayOutOpenSignEditor b (LPacketDataSerializer;)V write
PacketPlayOutOpenSignEditor b ()LBlockPosition; getPos
PacketPlayOutAutoRecipe a containerId
PacketPlayOutAutoRecipe b recipe
PacketPlayOutAutoRecipe b ()LMinecraftKey; getRecipe
PacketPlayOutAutoRecipe c ()I getContainerId
PacketPlayOutAutoRecipe b (LPacketDataSerializer;)V write
PacketPlayOutAbilities a invulnerable
PacketPlayOutAbilities b isFlying
PacketPlayOutAbilities c canFly
PacketPlayOutAbilities d instabuild
PacketPlayOutAbilities e flyingSpeed
PacketPlayOutAbilities f walkingSpeed
PacketPlayOutAbilities b (LPacketDataSerializer;)V write
PacketPlayOutAbilities b ()Z isInvulnerable
PacketPlayOutAbilities c ()Z isFlying
PacketPlayOutAbilities b (Z)V setFlying
PacketPlayOutAbilities d ()Z canFly
PacketPlayOutAbilities c (Z)V setCanFly
PacketPlayOutAbilities e ()Z canInstabuild
PacketPlayOutAbilities d (Z)V setInstabuild
PacketPlayOutAbilities f ()F getFlyingSpeed
PacketPlayOutAbilities g ()F getWalkingSpeed
PacketPlayOutAbilities b (F)V setWalkingSpeed
PacketPlayOutCombatEvent a event
PacketPlayOutCombatEvent b playerId
PacketPlayOutCombatEvent c killerId
PacketPlayOutCombatEvent d duration
PacketPlayOutCombatEvent e message
PacketPlayOutCombatEvent b (LPacketDataSerializer;)V write
PacketPlayOutCombatEvent$1 a $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerCombatPacket$Event
PacketPlayOutPlayerInfo a action
PacketPlayOutPlayerInfo b entries
PacketPlayOutPlayerInfo b (LPacketDataSerializer;)V write
PacketPlayOutPlayerInfo b ()Ljava/util/List; getEntries
PacketPlayOutPlayerInfo c ()LPacketPlayOutPlayerInfo$EnumPlayerInfoAction; getAction
PacketPlayOutPlayerInfo toString ()Ljava/lang/String; toString
PacketPlayOutPlayerInfo$1 a $SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerInfoPacket$Action
PacketPlayOutPlayerInfo$PlayerInfoData b latency
PacketPlayOutPlayerInfo$PlayerInfoData c gameMode
PacketPlayOutPlayerInfo$PlayerInfoData d profile
PacketPlayOutPlayerInfo$PlayerInfoData e displayName
PacketPlayOutPlayerInfo$PlayerInfoData a this$0
PacketPlayOutPlayerInfo$PlayerInfoData b ()I getLatency
PacketPlayOutPlayerInfo$PlayerInfoData c ()LEnumGamemode; getGameMode
PacketPlayOutPlayerInfo$PlayerInfoData d ()LIChatBaseComponent; getDisplayName
PacketPlayOutPlayerInfo$PlayerInfoData toString ()Ljava/lang/String; toString
PacketPlayOutLookAt a x
PacketPlayOutLookAt b y
PacketPlayOutLookAt c z
PacketPlayOutLookAt d entity
PacketPlayOutLookAt e fromAnchor
PacketPlayOutLookAt f toAnchor
PacketPlayOutLookAt g atEntity
PacketPlayOutLookAt b (LPacketDataSerializer;)V write
PacketPlayOutLookAt b ()LArgumentAnchor$Anchor; getFromAnchor
PacketPlayOutPosition a x
PacketPlayOutPosition b y
PacketPlayOutPosition c z
PacketPlayOutPosition d yRot
PacketPlayOutPosition e xRot
PacketPlayOutPosition f relativeArguments
PacketPlayOutPosition g id
PacketPlayOutPosition b (LPacketDataSerializer;)V write
PacketPlayOutPosition b ()D getX
PacketPlayOutPosition c ()D getY
PacketPlayOutPosition d ()D getZ
PacketPlayOutPosition e ()F getYRot
PacketPlayOutPosition f ()F getXRot
PacketPlayOutPosition g ()I getId
PacketPlayOutPosition h ()Ljava/util/Set; getRelativeArguments
PacketPlayOutRecipes a state
PacketPlayOutRecipes b recipes
PacketPlayOutRecipes c toHighlight
PacketPlayOutRecipes d guiOpen
PacketPlayOutRecipes e filteringCraftable
PacketPlayOutRecipes f furnaceGuiOpen
PacketPlayOutRecipes g furnaceFilteringCraftable
PacketPlayOutRecipes b (LPacketDataSerializer;)V write
PacketPlayOutRecipes b ()Ljava/util/List; getRecipes
PacketPlayOutRecipes c ()Ljava/util/List; getHighlights
PacketPlayOutRecipes d ()Z isGuiOpen
PacketPlayOutRecipes e ()Z isFilteringCraftable
PacketPlayOutRecipes f ()Z isFurnaceGuiOpen
PacketPlayOutRecipes g ()Z isFurnaceFilteringCraftable
PacketPlayOutRecipes h ()LPacketPlayOutRecipes$Action; getState
PacketPlayOutEntityDestroy a entityIds
PacketPlayOutEntityDestroy b (LPacketDataSerializer;)V write
PacketPlayOutEntityDestroy b ()[I getEntityIds
PacketPlayOutRemoveEntityEffect a entityId
PacketPlayOutRemoveEntityEffect b effect
PacketPlayOutRemoveEntityEffect b (LPacketDataSerializer;)V write
PacketPlayOutRemoveEntityEffect b ()LMobEffectList; getEffect
PacketPlayOutResourcePackSend a url
PacketPlayOutResourcePackSend b hash
PacketPlayOutResourcePackSend b (LPacketDataSerializer;)V write
PacketPlayOutResourcePackSend b ()Ljava/lang/String; getUrl
PacketPlayOutResourcePackSend c ()Ljava/lang/String; getHash
PacketPlayOutRespawn a dimension
PacketPlayOutRespawn b seed
PacketPlayOutRespawn c playerGameType
PacketPlayOutRespawn d levelType
PacketPlayOutRespawn b (LPacketDataSerializer;)V write
PacketPlayOutRespawn b ()LDimensionManager; getDimension
PacketPlayOutRespawn c ()J getSeed
PacketPlayOutRespawn d ()LEnumGamemode; getPlayerGameType
PacketPlayOutRespawn e ()LWorldType; getLevelType
PacketPlayOutEntityHeadRotation a entityId
PacketPlayOutEntityHeadRotation b yHeadRot
PacketPlayOutEntityHeadRotation b (LPacketDataSerializer;)V write
PacketPlayOutEntityHeadRotation b ()B getYHeadRot
PacketPlayOutSelectAdvancementTab a tab
PacketPlayOutSelectAdvancementTab b (LPacketDataSerializer;)V write
PacketPlayOutSelectAdvancementTab b ()LMinecraftKey; getTab
PacketPlayOutWorldBorder a type
PacketPlayOutWorldBorder b newAbsoluteMaxSize
PacketPlayOutWorldBorder c newCenterX
PacketPlayOutWorldBorder d newCenterZ
PacketPlayOutWorldBorder e newSize
PacketPlayOutWorldBorder f oldSize
PacketPlayOutWorldBorder g lerpTime
PacketPlayOutWorldBorder h warningTime
PacketPlayOutWorldBorder i warningBlocks
PacketPlayOutWorldBorder b (LPacketDataSerializer;)V write
PacketPlayOutWorldBorder$1 a $SwitchMap$net$minecraft$network$protocol$game$ClientboundSetBorderPacket$Type
PacketPlayOutCamera a cameraId
PacketPlayOutCamera b (LPacketDataSerializer;)V write
PacketPlayOutHeldItemSlot a slot
PacketPlayOutHeldItemSlot b (LPacketDataSerializer;)V write
PacketPlayOutHeldItemSlot b ()I getSlot
PacketPlayOutViewCentre a x
PacketPlayOutViewCentre b z
PacketPlayOutViewCentre b (LPacketDataSerializer;)V write
PacketPlayOutViewCentre b ()I getX
PacketPlayOutViewCentre c ()I getZ
PacketPlayOutViewDistance a radius
PacketPlayOutViewDistance b (LPacketDataSerializer;)V write
PacketPlayOutViewDistance b ()I getRadius
PacketPlayOutScoreboardDisplayObjective a slot
PacketPlayOutScoreboardDisplayObjective b objectiveName
PacketPlayOutScoreboardDisplayObjective b (LPacketDataSerializer;)V write
PacketPlayOutScoreboardDisplayObjective b ()I getSlot
PacketPlayOutScoreboardDisplayObjective c ()Ljava/lang/String; getObjectiveName
PacketPlayOutEntityMetadata a id
PacketPlayOutEntityMetadata b packedItems
PacketPlayOutEntityMetadata b (LPacketDataSerializer;)V write
PacketPlayOutEntityMetadata b ()Ljava/util/List; getUnpackedData
PacketPlayOutEntityMetadata c ()I getId
PacketPlayOutAttachEntity a sourceId
PacketPlayOutAttachEntity b destId
PacketPlayOutAttachEntity b (LPacketDataSerializer;)V write
PacketPlayOutAttachEntity b ()I getSourceId
PacketPlayOutAttachEntity c ()I getDestId
PacketPlayOutEntityVelocity a id
PacketPlayOutEntityVelocity b xa
PacketPlayOutEntityVelocity c ya
PacketPlayOutEntityVelocity d za
PacketPlayOutEntityVelocity b (LPacketDataSerializer;)V write
PacketPlayOutEntityVelocity b ()I getId
PacketPlayOutEntityVelocity c ()I getXa
PacketPlayOutEntityVelocity d ()I getYa
PacketPlayOutEntityVelocity e ()I getZa
PacketPlayOutEntityEquipment a entity
PacketPlayOutEntityEquipment b slot
PacketPlayOutEntityEquipment c itemStack
PacketPlayOutEntityEquipment b (LPacketDataSerializer;)V write
PacketPlayOutEntityEquipment b ()LItemStack; getItem
PacketPlayOutEntityEquipment c ()I getEntity
PacketPlayOutEntityEquipment d ()LEnumItemSlot; getSlot
PacketPlayOutExperience a experienceProgress
PacketPlayOutExperience b totalExperience
PacketPlayOutExperience c experienceLevel
PacketPlayOutExperience b (LPacketDataSerializer;)V write
PacketPlayOutExperience b ()F getExperienceProgress
PacketPlayOutExperience c ()I getTotalExperience
PacketPlayOutExperience d ()I getExperienceLevel
PacketPlayOutUpdateHealth a health
PacketPlayOutUpdateHealth b food
PacketPlayOutUpdateHealth c saturation
PacketPlayOutUpdateHealth b (LPacketDataSerializer;)V write
PacketPlayOutUpdateHealth b ()F getHealth
PacketPlayOutUpdateHealth c ()I getFood
PacketPlayOutUpdateHealth d ()F getSaturation
PacketPlayOutScoreboardObjective a objectiveName
PacketPlayOutScoreboardObjective b displayName
PacketPlayOutScoreboardObjective c renderType
PacketPlayOutScoreboardObjective d method
PacketPlayOutScoreboardObjective b (LPacketDataSerializer;)V write
PacketPlayOutScoreboardObjective b ()Ljava/lang/String; getObjectiveName
PacketPlayOutScoreboardObjective c ()LIChatBaseComponent; getDisplayName
PacketPlayOutScoreboardObjective d ()I getMethod
PacketPlayOutScoreboardObjective e ()LIScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
PacketPlayOutMount a vehicle
PacketPlayOutMount b passengers
PacketPlayOutMount b (LPacketDataSerializer;)V write
PacketPlayOutMount b ()[I getPassengers
PacketPlayOutMount c ()I getVehicle
PacketPlayOutScoreboardTeam a name
PacketPlayOutScoreboardTeam b displayName
PacketPlayOutScoreboardTeam c playerPrefix
PacketPlayOutScoreboardTeam d playerSuffix
PacketPlayOutScoreboardTeam e nametagVisibility
PacketPlayOutScoreboardTeam f collisionRule
PacketPlayOutScoreboardTeam g color
PacketPlayOutScoreboardTeam h players
PacketPlayOutScoreboardTeam i method
PacketPlayOutScoreboardTeam j options
PacketPlayOutScoreboardTeam b (LPacketDataSerializer;)V write
PacketPlayOutScoreboardTeam b ()Ljava/lang/String; getName
PacketPlayOutScoreboardTeam c ()LIChatBaseComponent; getDisplayName
PacketPlayOutScoreboardTeam d ()Ljava/util/Collection; getPlayers
PacketPlayOutScoreboardTeam e ()I getMethod
PacketPlayOutScoreboardTeam f ()I getOptions
PacketPlayOutScoreboardTeam g ()LEnumChatFormat; getColor
PacketPlayOutScoreboardTeam h ()Ljava/lang/String; getNametagVisibility
PacketPlayOutScoreboardTeam i ()Ljava/lang/String; getCollisionRule
PacketPlayOutScoreboardTeam j ()LIChatBaseComponent; getPlayerPrefix
PacketPlayOutScoreboardTeam k ()LIChatBaseComponent; getPlayerSuffix
PacketPlayOutScoreboardScore a owner
PacketPlayOutScoreboardScore b objectiveName
PacketPlayOutScoreboardScore c score
PacketPlayOutScoreboardScore d method
PacketPlayOutScoreboardScore b (LPacketDataSerializer;)V write
PacketPlayOutScoreboardScore b ()Ljava/lang/String; getOwner
PacketPlayOutScoreboardScore c ()Ljava/lang/String; getObjectiveName
PacketPlayOutScoreboardScore d ()I getScore
PacketPlayOutScoreboardScore e ()LScoreboardServer$Action; getMethod
PacketPlayOutUpdateTime a gameTime
PacketPlayOutUpdateTime b dayTime
PacketPlayOutUpdateTime b (LPacketDataSerializer;)V write
PacketPlayOutUpdateTime b ()J getGameTime
PacketPlayOutUpdateTime c ()J getDayTime
PacketPlayOutTitle a type
PacketPlayOutTitle b text
PacketPlayOutTitle c fadeInTime
PacketPlayOutTitle d stayTime
PacketPlayOutTitle e fadeOutTime
PacketPlayOutTitle b (LPacketDataSerializer;)V write
PacketPlayOutTitle b ()LPacketPlayOutTitle$EnumTitleAction; getType
PacketPlayOutTitle c ()LIChatBaseComponent; getText
PacketPlayOutTitle d ()I getFadeInTime
PacketPlayOutTitle e ()I getStayTime
PacketPlayOutTitle f ()I getFadeOutTime
PacketPlayOutEntitySound a sound
PacketPlayOutEntitySound b source
PacketPlayOutEntitySound c id
PacketPlayOutEntitySound d volume
PacketPlayOutEntitySound e pitch
PacketPlayOutEntitySound b (LPacketDataSerializer;)V write
PacketPlayOutEntitySound b ()LSoundEffect; getSound
PacketPlayOutEntitySound c ()LSoundCategory; getSource
PacketPlayOutEntitySound d ()I getId
PacketPlayOutEntitySound e ()F getVolume
PacketPlayOutEntitySound f ()F getPitch
PacketPlayOutNamedSoundEffect a sound
PacketPlayOutNamedSoundEffect b source
PacketPlayOutNamedSoundEffect c x
PacketPlayOutNamedSoundEffect d y
PacketPlayOutNamedSoundEffect e z
PacketPlayOutNamedSoundEffect f volume
PacketPlayOutNamedSoundEffect g pitch
PacketPlayOutNamedSoundEffect b (LPacketDataSerializer;)V write
PacketPlayOutNamedSoundEffect b ()LSoundEffect; getSound
PacketPlayOutNamedSoundEffect c ()LSoundCategory; getSource
PacketPlayOutNamedSoundEffect d ()D getX
PacketPlayOutNamedSoundEffect e ()D getY
PacketPlayOutNamedSoundEffect f ()D getZ
PacketPlayOutNamedSoundEffect g ()F getVolume
PacketPlayOutNamedSoundEffect h ()F getPitch
PacketPlayOutStopSound a name
PacketPlayOutStopSound b source
PacketPlayOutStopSound b (LPacketDataSerializer;)V write
PacketPlayOutStopSound b ()LMinecraftKey; getName
PacketPlayOutStopSound c ()LSoundCategory; getSource
PacketPlayOutNBTQuery a transactionId
PacketPlayOutNBTQuery b tag
PacketPlayOutNBTQuery b (LPacketDataSerializer;)V write
PacketPlayOutNBTQuery b ()I getTransactionId
PacketPlayOutNBTQuery c ()LNBTTagCompound; getTag
PacketPlayOutCollect a itemId
PacketPlayOutCollect b playerId
PacketPlayOutCollect c amount
PacketPlayOutCollect b (LPacketDataSerializer;)V write
PacketPlayOutCollect b ()I getItemId
PacketPlayOutCollect c ()I getPlayerId
PacketPlayOutCollect d ()I getAmount
PacketPlayOutEntityTeleport a id
PacketPlayOutEntityTeleport b x
PacketPlayOutEntityTeleport c y
PacketPlayOutEntityTeleport d z
PacketPlayOutEntityTeleport e yRot
PacketPlayOutEntityTeleport f xRot
PacketPlayOutEntityTeleport g onGround
PacketPlayOutEntityTeleport b (LPacketDataSerializer;)V write
PacketPlayOutEntityTeleport b ()I getId
PacketPlayOutEntityTeleport c ()D getX
PacketPlayOutEntityTeleport d ()D getY
PacketPlayOutEntityTeleport e ()D getZ
PacketPlayOutEntityTeleport f ()B getyRot
PacketPlayOutEntityTeleport g ()B getxRot
PacketPlayOutEntityTeleport h ()Z isOnGround
PacketPlayOutAdvancements a reset
PacketPlayOutAdvancements b added
PacketPlayOutAdvancements c removed
PacketPlayOutAdvancements d progress
PacketPlayOutAdvancements b (LPacketDataSerializer;)V write
PacketPlayOutAdvancements b ()Ljava/util/Map; getAdded
PacketPlayOutAdvancements c ()Ljava/util/Set; getRemoved
PacketPlayOutAdvancements d ()Ljava/util/Map; getProgress
PacketPlayOutAdvancements e ()Z shouldReset
PacketPlayOutUpdateAttributes a entityId
PacketPlayOutUpdateAttributes b attributes
PacketPlayOutUpdateAttributes b (LPacketDataSerializer;)V write
PacketPlayOutUpdateAttributes b ()I getEntityId
PacketPlayOutUpdateAttributes c ()Ljava/util/List; getValues
PacketPlayOutUpdateAttributes$AttributeSnapshot b name
PacketPlayOutUpdateAttributes$AttributeSnapshot c base
PacketPlayOutUpdateAttributes$AttributeSnapshot d modifiers
PacketPlayOutUpdateAttributes$AttributeSnapshot a this$0
PacketPlayOutUpdateAttributes$AttributeSnapshot b ()D getBase
PacketPlayOutUpdateAttributes$AttributeSnapshot c ()Ljava/util/Collection; getModifiers
PacketPlayOutEntityEffect a entityId
PacketPlayOutEntityEffect b effectId
PacketPlayOutEntityEffect c effectAmplifier
PacketPlayOutEntityEffect d effectDurationTicks
PacketPlayOutEntityEffect e flags
PacketPlayOutEntityEffect b (LPacketDataSerializer;)V write
PacketPlayOutEntityEffect b ()Z isSuperLongDuration
PacketPlayOutEntityEffect c ()I getEntityId
PacketPlayOutEntityEffect d ()B getEffectId
PacketPlayOutEntityEffect e ()B getEffectAmplifier
PacketPlayOutEntityEffect f ()I getEffectDurationTicks
PacketPlayOutEntityEffect g ()Z isEffectVisible
PacketPlayOutEntityEffect h ()Z isEffectAmbient
PacketPlayOutEntityEffect i ()Z effectShowsIcon
PacketPlayOutRecipeUpdate a recipes
PacketPlayOutRecipeUpdate b (LPacketDataSerializer;)V write
PacketPlayOutRecipeUpdate b ()Ljava/util/List; getRecipes
PacketPlayOutRecipeUpdate c (LPacketDataSerializer;)LIRecipe; fromNetwork
PacketPlayOutTags a tags
PacketPlayOutTags b (LPacketDataSerializer;)V write
PacketPlayOutTags b ()LTagRegistry; getTags
DebugEntityNameGenerator a NAMES_FIRST_PART
DebugEntityNameGenerator b NAMES_SECOND_PART
DebugEntityNameGenerator b (Ljava/util/UUID;)Ljava/util/Random; getRandom
PacketDebug a LOGGER
PacketDebug b (LWorldServer;LBlockPosition;)V sendPoiRemovedPacket
PacketDebug c (LWorldServer;LBlockPosition;)V sendPoiTicketCountPacket
PacketDebug d (LWorldServer;LBlockPosition;)V sendVillageSectionsPacket
PacketPlayInTeleportAccept a id
PacketPlayInTeleportAccept b (LPacketDataSerializer;)V write
PacketPlayInTeleportAccept b ()I getId
PacketPlayInTileNBTQuery a transactionId
PacketPlayInTileNBTQuery b pos
PacketPlayInTileNBTQuery b (LPacketDataSerializer;)V write
PacketPlayInTileNBTQuery b ()I getTransactionId
PacketPlayInTileNBTQuery c ()LBlockPosition; getPos
PacketPlayInDifficultyChange a difficulty
PacketPlayInDifficultyChange b (LPacketDataSerializer;)V write
PacketPlayInDifficultyChange b ()LEnumDifficulty; getDifficulty
PacketPlayInChat a message
PacketPlayInChat b (LPacketDataSerializer;)V write
PacketPlayInChat b ()Ljava/lang/String; getMessage
PacketPlayInClientCommand a action
PacketPlayInClientCommand b (LPacketDataSerializer;)V write
PacketPlayInClientCommand b ()LPacketPlayInClientCommand$EnumClientCommand; getAction
PacketPlayInTabComplete a id
PacketPlayInTabComplete b command
PacketPlayInTabComplete b (LPacketDataSerializer;)V write
PacketPlayInTabComplete b ()I getId
PacketPlayInTabComplete c ()Ljava/lang/String; getCommand
PacketPlayInTransaction a containerId
PacketPlayInTransaction b uid
PacketPlayInTransaction c accepted
PacketPlayInTransaction b (LPacketDataSerializer;)V write
PacketPlayInTransaction b ()I getContainerId
PacketPlayInTransaction c ()S getUid
PacketPlayInTransaction d ()Z isAccepted
PacketPlayInEnchantItem a containerId
PacketPlayInEnchantItem b buttonId
PacketPlayInEnchantItem b (LPacketDataSerializer;)V write
PacketPlayInEnchantItem b ()I getContainerId
PacketPlayInEnchantItem c ()I getButtonId
PacketPlayInBEdit a book
PacketPlayInBEdit b signing
PacketPlayInBEdit c hand
PacketPlayInBEdit b (LPacketDataSerializer;)V write
PacketPlayInBEdit b ()LItemStack; getBook
PacketPlayInBEdit c ()Z isSigning
PacketPlayInBEdit d ()LEnumHand; getHand
PacketPlayInEntityNBTQuery a transactionId
PacketPlayInEntityNBTQuery b entityId
PacketPlayInEntityNBTQuery b (LPacketDataSerializer;)V write
PacketPlayInEntityNBTQuery b ()I getTransactionId
PacketPlayInEntityNBTQuery c ()I getEntityId
PacketPlayInKeepAlive a id
PacketPlayInKeepAlive b (LPacketDataSerializer;)V write
PacketPlayInKeepAlive b ()J getId
PacketPlayInDifficultyLock a locked
PacketPlayInDifficultyLock b (LPacketDataSerializer;)V write
PacketPlayInDifficultyLock b ()Z isLocked
PacketPlayInFlying$PacketPlayInPosition b (LPacketDataSerializer;)V write
PacketPlayInFlying$PacketPlayInPositionLook b (LPacketDataSerializer;)V write
PacketPlayInFlying$PacketPlayInLook b (LPacketDataSerializer;)V write
PacketPlayInBoatMove a left
PacketPlayInBoatMove b right
PacketPlayInBoatMove b (LPacketDataSerializer;)V write
PacketPlayInBoatMove b ()Z getLeft
PacketPlayInBoatMove c ()Z getRight
PacketPlayInPickItem a slot
PacketPlayInPickItem b (LPacketDataSerializer;)V write
PacketPlayInPickItem b ()I getSlot
PacketPlayInAutoRecipe a containerId
PacketPlayInAutoRecipe b recipe
PacketPlayInAutoRecipe c shiftDown
PacketPlayInAutoRecipe b (LPacketDataSerializer;)V write
PacketPlayInAutoRecipe b ()I getContainerId
PacketPlayInAutoRecipe c ()LMinecraftKey; getRecipe
PacketPlayInAutoRecipe d ()Z isShiftDown
PacketPlayInBlockDig a pos
PacketPlayInBlockDig b direction
PacketPlayInBlockDig c action
PacketPlayInBlockDig b (LPacketDataSerializer;)V write
PacketPlayInBlockDig b ()LBlockPosition; getPos
PacketPlayInBlockDig c ()LEnumDirection; getDirection
PacketPlayInBlockDig d ()LPacketPlayInBlockDig$EnumPlayerDigType; getAction
PacketPlayInSteerVehicle a xxa
PacketPlayInSteerVehicle b zza
PacketPlayInSteerVehicle c isJumping
PacketPlayInSteerVehicle d isShiftKeyDown
PacketPlayInSteerVehicle b (LPacketDataSerializer;)V write
PacketPlayInSteerVehicle b ()F getXxa
PacketPlayInSteerVehicle c ()F getZza
PacketPlayInSteerVehicle d ()Z isJumping
PacketPlayInSteerVehicle e ()Z isShiftKeyDown
PacketPlayInRecipeDisplayed a purpose
PacketPlayInRecipeDisplayed b recipe
PacketPlayInRecipeDisplayed c guiOpen
PacketPlayInRecipeDisplayed d filteringCraftable
PacketPlayInRecipeDisplayed e furnaceGuiOpen
PacketPlayInRecipeDisplayed f furnaceFilteringCraftable
PacketPlayInRecipeDisplayed g blastFurnaceGuiOpen
PacketPlayInRecipeDisplayed h blastFurnaceFilteringCraftable
PacketPlayInRecipeDisplayed i smokerGuiOpen
PacketPlayInRecipeDisplayed j smokerFilteringCraftable
PacketPlayInRecipeDisplayed b (LPacketDataSerializer;)V write
PacketPlayInRecipeDisplayed b ()LPacketPlayInRecipeDisplayed$Status; getPurpose
PacketPlayInRecipeDisplayed c ()LMinecraftKey; getRecipe
PacketPlayInRecipeDisplayed d ()Z isGuiOpen
PacketPlayInRecipeDisplayed e ()Z isFilteringCraftable
PacketPlayInRecipeDisplayed f ()Z isFurnaceGuiOpen
PacketPlayInRecipeDisplayed g ()Z isFurnaceFilteringCraftable
PacketPlayInRecipeDisplayed h ()Z isBlastFurnaceGuiOpen
PacketPlayInRecipeDisplayed i ()Z isBlastFurnaceFilteringCraftable
PacketPlayInRecipeDisplayed j ()Z isSmokerGuiOpen
PacketPlayInRecipeDisplayed k ()Z isSmokerFilteringCraftable
PacketPlayInItemName a name
PacketPlayInItemName b (LPacketDataSerializer;)V write
PacketPlayInItemName b ()Ljava/lang/String; getName
PacketPlayInAdvancements a action
PacketPlayInAdvancements b tab
PacketPlayInAdvancements b ()LPacketPlayInAdvancements; closedScreen
PacketPlayInAdvancements b (LPacketDataSerializer;)V write
PacketPlayInAdvancements c ()LPacketPlayInAdvancements$Status; getAction
PacketPlayInAdvancements d ()LMinecraftKey; getTab
PacketPlayInTrSel a item
PacketPlayInTrSel b (LPacketDataSerializer;)V write
PacketPlayInTrSel b ()I getItem
PacketPlayInBeacon a primary
PacketPlayInBeacon b secondary
PacketPlayInBeacon b (LPacketDataSerializer;)V write
PacketPlayInBeacon b ()I getPrimary
PacketPlayInBeacon c ()I getSecondary
PacketPlayInSetCommandBlock a pos
PacketPlayInSetCommandBlock b command
PacketPlayInSetCommandBlock c trackOutput
PacketPlayInSetCommandBlock d conditional
PacketPlayInSetCommandBlock e automatic
PacketPlayInSetCommandBlock f mode
PacketPlayInSetCommandBlock b (LPacketDataSerializer;)V write
PacketPlayInSetCommandBlock b ()LBlockPosition; getPos
PacketPlayInSetCommandBlock c ()Ljava/lang/String; getCommand
PacketPlayInSetCommandBlock d ()Z isTrackOutput
PacketPlayInSetCommandBlock e ()Z isConditional
PacketPlayInSetCommandBlock f ()Z isAutomatic
PacketPlayInSetCommandBlock g ()LTileEntityCommand$Type; getMode
PacketPlayInSetCommandMinecart a entity
PacketPlayInSetCommandMinecart b command
PacketPlayInSetCommandMinecart c trackOutput
PacketPlayInSetCommandMinecart b (LPacketDataSerializer;)V write
PacketPlayInSetCommandMinecart b ()Ljava/lang/String; getCommand
PacketPlayInSetCommandMinecart c ()Z isTrackOutput
PacketPlayInSetJigsaw a pos
PacketPlayInSetJigsaw b attachementType
PacketPlayInSetJigsaw c targetPool
PacketPlayInSetJigsaw d finalState
PacketPlayInSetJigsaw b (LPacketDataSerializer;)V write
PacketPlayInSetJigsaw b ()LBlockPosition; getPos
PacketPlayInSetJigsaw c ()LMinecraftKey; getTargetPool
PacketPlayInSetJigsaw d ()LMinecraftKey; getAttachementType
PacketPlayInSetJigsaw e ()Ljava/lang/String; getFinalState
PacketPlayInStruct a pos
PacketPlayInStruct b updateType
PacketPlayInStruct c mode
PacketPlayInStruct d name
PacketPlayInStruct e offset
PacketPlayInStruct f size
PacketPlayInStruct g mirror
PacketPlayInStruct h rotation
PacketPlayInStruct i data
PacketPlayInStruct j ignoreEntities
PacketPlayInStruct k showAir
PacketPlayInStruct l showBoundingBox
PacketPlayInStruct m integrity
PacketPlayInStruct n seed
PacketPlayInStruct b (LPacketDataSerializer;)V write
PacketPlayInStruct b ()LBlockPosition; getPos
PacketPlayInStruct c ()LTileEntityStructure$UpdateType; getUpdateType
PacketPlayInStruct d ()LBlockPropertyStructureMode; getMode
PacketPlayInStruct e ()Ljava/lang/String; getName
PacketPlayInStruct f ()LBlockPosition; getOffset
PacketPlayInStruct g ()LBlockPosition; getSize
PacketPlayInStruct h ()LEnumBlockMirror; getMirror
PacketPlayInStruct i ()LEnumBlockRotation; getRotation
PacketPlayInStruct j ()Ljava/lang/String; getData
PacketPlayInStruct k ()Z isIgnoreEntities
PacketPlayInStruct l ()Z isShowAir
PacketPlayInStruct m ()Z isShowBoundingBox
PacketPlayInStruct n ()F getIntegrity
PacketPlayInStruct o ()J getSeed
PacketPlayInUpdateSign a pos
PacketPlayInUpdateSign b lines
PacketPlayInUpdateSign b (LPacketDataSerializer;)V write
PacketPlayInUpdateSign b ()LBlockPosition; getPos
PacketPlayInUpdateSign c ()[Ljava/lang/String; getLines
PacketPlayInArmAnimation a hand
PacketPlayInArmAnimation b (LPacketDataSerializer;)V write
PacketPlayInArmAnimation b ()LEnumHand; getHand
PacketPlayInSpectate a uuid
PacketPlayInSpectate b (LPacketDataSerializer;)V write
PacketPlayInUseItem a blockHit
PacketPlayInUseItem b hand
PacketPlayInUseItem b (LPacketDataSerializer;)V write
PacketPlayInUseItem b ()LEnumHand; getHand
PacketPlayInUseItem c ()LMovingObjectPositionBlock; getHitResult
PacketPlayInBlockPlace a hand
PacketPlayInBlockPlace b (LPacketDataSerializer;)V write
PacketPlayInBlockPlace b ()LEnumHand; getHand
PacketLoginOutCustomPayload a transactionId
PacketLoginOutCustomPayload b identifier
PacketLoginOutCustomPayload c data
PacketLoginOutCustomPayload b (LPacketDataSerializer;)V write
PacketLoginOutCustomPayload b ()I getTransactionId
PacketLoginOutCustomPayload c ()LMinecraftKey; getIdentifier
PacketLoginOutCustomPayload d ()LPacketDataSerializer; getData
PacketLoginOutSuccess a gameProfile
PacketLoginOutSuccess b (LPacketDataSerializer;)V write
PacketLoginOutSuccess b ()Lcom/mojang/authlib/GameProfile; getGameProfile
PacketLoginOutEncryptionBegin a serverId
PacketLoginOutEncryptionBegin b publicKey
PacketLoginOutEncryptionBegin c nonce
PacketLoginOutEncryptionBegin b (LPacketDataSerializer;)V write
PacketLoginOutEncryptionBegin b ()Ljava/lang/String; getServerId
PacketLoginOutEncryptionBegin c ()Ljava/security/PublicKey; getPublicKey
PacketLoginOutEncryptionBegin d ()[B getNonce
PacketLoginOutSetCompression a compressionThreshold
PacketLoginOutSetCompression b (LPacketDataSerializer;)V write
PacketLoginOutSetCompression b ()I getCompressionThreshold
PacketLoginOutDisconnect a reason
PacketLoginOutDisconnect b (LPacketDataSerializer;)V write
PacketLoginOutDisconnect b ()LIChatBaseComponent; getReason
PacketLoginInCustomPayload a transactionId
PacketLoginInCustomPayload b data
PacketLoginInCustomPayload b (LPacketDataSerializer;)V write
PacketLoginInCustomPayload b ()I getTransactionId
PacketLoginInCustomPayload c ()LPacketDataSerializer; getData
PacketLoginInStart a gameProfile
PacketLoginInStart b (LPacketDataSerializer;)V write
PacketLoginInStart b ()Lcom/mojang/authlib/GameProfile; getGameProfile
PacketStatusOutPong a time
PacketStatusOutPong b (LPacketDataSerializer;)V write
PacketStatusOutPong b ()J getTime
PacketStatusOutServerInfo a GSON
PacketStatusOutServerInfo b status
PacketStatusOutServerInfo b (LPacketDataSerializer;)V write
PacketStatusOutServerInfo b ()LServerPing; getStatus
ServerPing$ServerPingPlayerSample a maxPlayers
ServerPing$ServerPingPlayerSample b numPlayers
ServerPing$ServerPingPlayerSample c sample
ServerPing$ServerPingPlayerSample b ()I getNumPlayers
ServerPing$ServerPingPlayerSample c ()[Lcom/mojang/authlib/GameProfile; getSample
ServerPing$ServerPingPlayerSample$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
ServerPing$ServerPingPlayerSample$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ServerPing$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
ServerPing$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ServerPing$ServerData$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
ServerPing$ServerData$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
PacketStatusInPing a time
PacketStatusInPing b (LPacketDataSerializer;)V write
PacketStatusInPing b ()J getTime
PacketStatusInStart b (LPacketDataSerializer;)V write
DataWatcherObject a id
DataWatcherObject b serializer
DataWatcherObject b ()LDataWatcherSerializer; getSerializer
DataWatcherObject equals (Ljava/lang/Object;)Z equals
DataWatcherObject hashCode ()I hashCode
DataWatcherObject toString ()Ljava/lang/String; toString
DataWatcherRegistry t SERIALIZERS
DataWatcherRegistry a BYTE
DataWatcherRegistry b INT
DataWatcherRegistry c FLOAT
DataWatcherRegistry d STRING
DataWatcherRegistry e COMPONENT
DataWatcherRegistry f OPTIONAL_COMPONENT
DataWatcherRegistry g ITEM_STACK
DataWatcherRegistry h BLOCK_STATE
DataWatcherRegistry i BOOLEAN
DataWatcherRegistry j PARTICLE
DataWatcherRegistry k ROTATIONS
DataWatcherRegistry l BLOCK_POS
DataWatcherRegistry m OPTIONAL_BLOCK_POS
DataWatcherRegistry n DIRECTION
DataWatcherRegistry o OPTIONAL_UUID
DataWatcherRegistry p COMPOUND_TAG
DataWatcherRegistry q VILLAGER_DATA
DataWatcherRegistry r OPTIONAL_UNSIGNED_INT
DataWatcherRegistry s POSE
DataWatcherRegistry b (LDataWatcherSerializer;)I getSerializedId
DataWatcherRegistry$1 b (LPacketDataSerializer;)Ljava/lang/Byte; read
DataWatcherRegistry$10 b (LPacketDataSerializer;)LParticleParam; read
DataWatcherRegistry$11 b (LPacketDataSerializer;)LVector3f; read
DataWatcherRegistry$12 b (LPacketDataSerializer;)LBlockPosition; read
DataWatcherRegistry$13 b (LPacketDataSerializer;)Ljava/util/Optional; read
DataWatcherRegistry$14 b (LPacketDataSerializer;)LEnumDirection; read
DataWatcherRegistry$15 b (LPacketDataSerializer;)Ljava/util/Optional; read
DataWatcherRegistry$16 b (LPacketDataSerializer;)LNBTTagCompound; read
DataWatcherRegistry$17 b (LPacketDataSerializer;)LVillagerData; read
DataWatcherRegistry$18 b (LPacketDataSerializer;)Ljava/util/OptionalInt; read
DataWatcherRegistry$19 b (LPacketDataSerializer;)LEntityPose; read
DataWatcherRegistry$2 b (LPacketDataSerializer;)Ljava/lang/Integer; read
DataWatcherRegistry$3 b (LPacketDataSerializer;)Ljava/lang/Float; read
DataWatcherRegistry$4 b (LPacketDataSerializer;)Ljava/lang/String; read
DataWatcherRegistry$5 b (LPacketDataSerializer;)LIChatBaseComponent; read
DataWatcherRegistry$6 b (LPacketDataSerializer;)Ljava/util/Optional; read
DataWatcherRegistry$7 b (LPacketDataSerializer;)LItemStack; read
DataWatcherRegistry$8 b (LPacketDataSerializer;)Ljava/util/Optional; read
DataWatcherRegistry$9 b (LPacketDataSerializer;)Ljava/lang/Boolean; read
DataWatcher$Item a accessor
DataWatcher$Item b value
DataWatcher$Item c dirty
DataWatcher$Item b ()Ljava/lang/Object; getValue
DataWatcher$Item c ()Z isDirty
DataWatcher$Item d ()LDataWatcher$Item; copy
DataWatcher$Item b (LDataWatcher$Item;)Ljava/lang/Object; access$100
AutoRecipe a LOGGER
AutoRecipe b stackedContents
AutoRecipe c inventory
AutoRecipe d menu
AutoRecipe b ()Z testClearGrid
AutoRecipe c ()I getAmountOfFreeSlotsInInventory
AutoRecipeFurnace e recipeMatchesPlaced
MinecraftKey$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
MinecraftKey$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
ChainedJsonException a entries
ChainedJsonException b message
ChainedJsonException b (Ljava/lang/String;)V setFilenameAndFlush
ChainedJsonException getMessage ()Ljava/lang/String; getMessage
ChainedJsonException$Entry a filename
ChainedJsonException$Entry b jsonKeys
ChainedJsonException$Entry b ()Ljava/lang/String; getJsonKeys
ChainedJsonException$Entry toString ()Ljava/lang/String; toString
ChainedJsonException$Entry b (LChainedJsonException$Entry;Ljava/lang/String;)Ljava/lang/String; access$202
ConsoleInputSource b (Ljava/lang/String;)V warn
EULA a LOGGER
EULA b file
EULA c agreed
EULA b ()Z readFile
EULA c ()V saveDefaults
RedirectStream a LOGGER
RedirectStream b name
RedirectStream println (Ljava/lang/String;)V println
RedirectStream println (Ljava/lang/Object;)V println
net/minecraft/server/MinecraftServer$1 b timeStamp
net/minecraft/server/MinecraftServer$1 a this$0
net/minecraft/server/MinecraftServer$1 b (LIChatBaseComponent;)V progressStart
net/minecraft/server/MinecraftServer$1 c (LIChatBaseComponent;)V progressStage
net/minecraft/server/MinecraftServer$2 a val$server
net/minecraft/server/MinecraftServer$2 run ()V run
net/minecraft/server/MinecraftServer$3 a val$entries
net/minecraft/server/MinecraftServer$3 b val$gameRules
net/minecraft/server/MinecraftServer$3 c this$0
CustomFunctionData$QueuedCommand a manager
CustomFunctionData$QueuedCommand b sender
CustomFunctionData$QueuedCommand c entry
CustomFunctionData$QueuedCommand toString ()Ljava/lang/String; toString
TickTask a tick
TickTask b runnable
TickTask run ()V run
CommandAdvancement a SUGGEST_ADVANCEMENTS
CommandAdvancement b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
CommandAdvancement c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
CommandAdvancement d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
CommandAdvancement e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
CommandAdvancement f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
CommandAdvancement g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandAdvancement h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandAdvancement i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandAdvancement j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandAdvancement k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandAdvancement b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$3
CommandAdvancement l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandAdvancement c (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$0
CommandBanIp a IP_ADDRESS_PATTERN
CommandBanIp b ERROR_INVALID_IP
CommandBanIp c ERROR_ALREADY_BANNED
CommandBanIp b (LCommandListenerWrapper;Ljava/lang/String;LIChatBaseComponent;)I banIp
CommandBanIp b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandBanList b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandBanList c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandBan a ERROR_ALREADY_BANNED
CommandBan b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandBossBar b ERROR_ALREADY_EXISTS
CommandBossBar c ERROR_DOESNT_EXIST
CommandBossBar d ERROR_NO_PLAYER_CHANGE
CommandBossBar e ERROR_NO_NAME_CHANGE
CommandBossBar f ERROR_NO_COLOR_CHANGE
CommandBossBar g ERROR_NO_STYLE_CHANGE
CommandBossBar h ERROR_NO_VALUE_CHANGE
CommandBossBar i ERROR_NO_MAX_CHANGE
CommandBossBar j ERROR_ALREADY_HIDDEN
CommandBossBar k ERROR_ALREADY_VISIBLE
CommandBossBar a SUGGEST_BOSS_BAR
CommandBossBar b (LCommandListenerWrapper;LBossBattleCustom;)I getMax
CommandBossBar c (LCommandListenerWrapper;LBossBattleCustom;)I getVisible
CommandBossBar d (LCommandListenerWrapper;LBossBattleCustom;)I getPlayers
CommandBossBar b (LCommandListenerWrapper;LBossBattleCustom;I)I setMax
CommandBossBar e (LCommandListenerWrapper;LBossBattleCustom;)I removeBar
CommandBossBar b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$28
CommandBossBar c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
CommandBossBar d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
CommandBossBar e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
CommandBossBar f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
CommandBossBar g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
CommandBossBar h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
CommandBossBar i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
CommandBossBar j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
CommandBossBar k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
CommandBossBar l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
CommandBossBar m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
CommandBossBar n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
CommandBossBar o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
CommandBossBar p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
CommandBossBar q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
CommandBossBar r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
CommandBossBar s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
CommandBossBar t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
CommandBossBar u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
CommandBossBar v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandBossBar w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandBossBar x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandBossBar y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandBossBar z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandBossBar b (LCommandListenerWrapper;)Z lambda$register$3
CommandBossBar b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
CommandClear a ERROR_SINGLE
CommandClear b ERROR_MULTIPLE
CommandClear b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandClear c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandClear d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandClear b (LItemStack;)Z lambda$null$3
CommandClear b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
CommandClone b ERROR_OVERLAP
CommandClone c ERROR_AREA_TOO_LARGE
CommandClone d ERROR_FAILED
CommandClone a FILTER_AIR
CommandClone b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
CommandClone c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
CommandClone d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
CommandClone e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
CommandClone f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
CommandClone g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
CommandClone h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
CommandClone i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
CommandClone j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
CommandClone b (LShapeDetectorBlock;)Z lambda$null$9
CommandClone k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandClone c (LShapeDetectorBlock;)Z lambda$null$7
CommandClone l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandClone d (LShapeDetectorBlock;)Z lambda$null$5
CommandClone m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandClone e (LShapeDetectorBlock;)Z lambda$null$3
CommandClone f (LShapeDetectorBlock;)Z lambda$static$1
CommandClone$CommandCloneStoredTileEntity a pos
CommandClone$CommandCloneStoredTileEntity b state
CommandClone$CommandCloneStoredTileEntity c tag
CommandDatapack a ERROR_UNKNOWN_PACK
CommandDatapack b ERROR_PACK_ALREADY_ENABLED
CommandDatapack c ERROR_PACK_ALREADY_DISABLED
CommandDatapack d SELECTED_PACKS
CommandDatapack e AVAILABLE_PACKS
CommandDatapack b (LCommandListenerWrapper;)I listAvailablePacks
CommandDatapack c (LCommandListenerWrapper;)I listEnabledPacks
CommandDatapack b (LResourcePackLoader;)LIChatBaseComponent; lambda$listAvailablePacks$22
CommandDatapack b (LWorldData;LResourcePackLoader;)V lambda$enablePack$20
CommandDatapack b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
CommandDatapack c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
CommandDatapack d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
CommandDatapack e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
CommandDatapack f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
CommandDatapack g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
CommandDatapack h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
CommandDatapack b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;LResourcePackLoader;)V lambda$null$9
CommandDatapack i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandDatapack b (Ljava/util/List;LResourcePackLoader;)V lambda$null$7
CommandDatapack c (LResourcePackLoader;)LResourcePackLoader; lambda$null$6
CommandDatapack d (LCommandListenerWrapper;)Z lambda$register$5
CommandDatapack b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$static$3
CommandDatapack b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
CommandDatapack c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
CommandDatapack$Inserter apply (Ljava/util/List;LResourcePackLoader;)V apply
CommandDeop a ERROR_NOT_OP
CommandDebug a LOGGER
CommandDebug b ERROR_NOT_RUNNING
CommandDebug c ERROR_ALREADY_RUNNING
CommandDebug d ZIP_FS_PROVIDER
CommandDebug b (LCommandListenerWrapper;)I stop
CommandDebug c (LCommandListenerWrapper;)I report
CommandDebug b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandDebug c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandDebug d (LCommandListenerWrapper;)Z lambda$register$1
DebugPathCommand a ERROR_NOT_MOB
DebugPathCommand b ERROR_NO_PATH
DebugPathCommand c ERROR_NOT_COMPLETE
CommandDifficulty a ERROR_ALREADY_DIFFICULT
CommandEffect a ERROR_GIVE_FAILED
CommandEffect b ERROR_CLEAR_EVERYTHING_FAILED
CommandEffect c ERROR_CLEAR_SPECIFIC_FAILED
CommandEffect b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandEffect c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandEffect d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandEffect e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandEffect f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandEffect g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandEnchant a ERROR_NOT_LIVING_ENTITY
CommandEnchant b ERROR_NO_ITEM
CommandEnchant c ERROR_INCOMPATIBLE
CommandEnchant d ERROR_LEVEL_TOO_HIGH
CommandEnchant e ERROR_NOTHING_HAPPENED
CommandEnchant b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandEnchant b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
CommandEnchant c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
CommandExecute a ERROR_AREA_TOO_LARGE
CommandExecute b ERROR_CONDITIONAL_FAILED
CommandExecute c ERROR_CONDITIONAL_FAILED_COUNT
CommandExecute d CALLBACK_CHAINER
CommandExecute e SUGGEST_PREDICATE
CommandExecute b (Lcom/mojang/brigadier/context/CommandContext;Z)I checkUnlessRegions
CommandExecute c (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; checkRegions
CommandExecute b (ZLcom/mojang/brigadier/context/CommandContext;)I lambda$addIfBlocksConditional$60
CommandExecute b (ZLCommandExecute$CommandPredicate;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditional$57
CommandExecute b (LCommandExecute$CommandNumericPredicate;Lcom/mojang/brigadier/context/CommandContext;)I lambda$createNumericConditionalHandler$55
CommandExecute b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$addConditionals$50
CommandExecute c (ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$addConditionals$49
CommandExecute c (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$48
CommandExecute d (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$47
CommandExecute e (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$45
CommandExecute b (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$44
CommandExecute f (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$43
CommandExecute c (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$42
CommandExecute g (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$41
CommandExecute d (Ljava/lang/Integer;Ljava/lang/Integer;)Z lambda$null$40
CommandExecute h (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$39
CommandExecute i (Lcom/mojang/brigadier/context/CommandContext;)Z lambda$addConditionals$38
CommandExecute b (LCommandData$DataProvider;ZLcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$null$30
CommandExecute b (Lcom/mojang/brigadier/context/CommandContext;I)LNBTBase; lambda$null$29
CommandExecute c (LCommandData$DataProvider;ZLcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$null$28
CommandExecute c (Lcom/mojang/brigadier/context/CommandContext;I)LNBTBase; lambda$null$27
CommandExecute d (LCommandData$DataProvider;ZLcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$null$26
CommandExecute d (Lcom/mojang/brigadier/context/CommandContext;I)LNBTBase; lambda$null$25
CommandExecute e (LCommandData$DataProvider;ZLcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$null$24
CommandExecute e (Lcom/mojang/brigadier/context/CommandContext;I)LNBTBase; lambda$null$23
CommandExecute f (LCommandData$DataProvider;ZLcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$null$22
CommandExecute f (Lcom/mojang/brigadier/context/CommandContext;I)LNBTBase; lambda$null$21
CommandExecute d (ZLcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$wrapStores$20
CommandExecute e (ZLcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$wrapStores$19
CommandExecute f (ZLcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$wrapStores$18
CommandExecute j (Lcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$register$17
CommandExecute k (Lcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$register$16
CommandExecute l (Lcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$register$15
CommandExecute m (Lcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$register$14
CommandExecute n (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$13
CommandExecute o (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$12
CommandExecute p (Lcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$register$11
CommandExecute q (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$10
CommandExecute r (Lcom/mojang/brigadier/context/CommandContext;)LCommandListenerWrapper; lambda$register$9
CommandExecute s (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$8
CommandExecute t (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; lambda$register$7
CommandExecute b (LCommandListenerWrapper;)Z lambda$register$5
CommandExecute$CommandNumericPredicate test (Lcom/mojang/brigadier/context/CommandContext;)I test
CommandExecute$CommandPredicate test (Lcom/mojang/brigadier/context/CommandContext;)Z test
CommandXp a ERROR_SET_POINTS_INVALID
CommandXp b (LCommandListenerWrapper;Ljava/util/Collection;ILCommandXp$Unit;)I setExperience
CommandXp b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandXp c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandXp d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandXp e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandXp f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandXp g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandXp h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandXp b (LCommandListenerWrapper;)Z lambda$register$0
CommandFill a ERROR_AREA_TOO_LARGE
CommandFill b HOLLOW_CORE
CommandFill c ERROR_FAILED
CommandFill b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandFill c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandFill d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandFill e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandFill f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandFill g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandForceload a ERROR_TOO_MANY_CHUNKS
CommandForceload b ERROR_NOT_TICKING
CommandForceload c ERROR_ALL_ADDED
CommandForceload d ERROR_NONE_REMOVED
CommandForceload b (LCommandListenerWrapper;)I removeAll
CommandForceload b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandForceload c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandForceload d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandForceload e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandForceload f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandForceload g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandForceload c (LCommandListenerWrapper;)Z lambda$register$2
CommandForceload b (Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
CommandFunction a SUGGEST_FUNCTION
CommandGamemode b (LEnumGamemode;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandGamerule b (Lcom/mojang/brigadier/context/CommandContext;LGameRules$GameRuleKey;)I setRule
CommandGamerule b (LCommandListenerWrapper;LGameRules$GameRuleKey;)I queryRule
CommandGamerule$1 a val$base
CommandGamerule$1 b (LGameRules$GameRuleKey;Lcom/mojang/brigadier/context/CommandContext;)I lambda$visit$0
CommandGive b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandHelp a ERROR_FAILED
CommandHelp b (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
CommandKick b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandKill b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandList b (LCommandListenerWrapper;)I listPlayersWithUuids
CommandList b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
LocateBiomeCommand a ERROR_INVALID_BIOME
LocateBiomeCommand b ERROR_BIOME_NOT_FOUND
LocateBiomeCommand b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
CommandLocate a ERROR_FAILED
CommandLocate b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
CommandLocate c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
CommandLocate d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
CommandLocate e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
CommandLocate f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
CommandLocate g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
CommandLocate h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
CommandLocate i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandLocate j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandLocate k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandLocate l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandLocate m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandLocate n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandLocate o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandLocate p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandLoot a SUGGEST_LOOT_TABLE
CommandLoot b ERROR_NO_HELD_ITEMS
CommandLoot c ERROR_NO_LOOT_TABLE
CommandLoot b (LCommandListenerWrapper;Ljava/util/List;)V lambda$drop$25
CommandLoot b (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;LCommandLoot$Callback;)I lambda$addTargets$20
CommandLoot c (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;LCommandLoot$Callback;)I lambda$addTargets$19
CommandLoot d (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;LCommandLoot$Callback;)I lambda$addTargets$18
CommandLoot e (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;LCommandLoot$Callback;)I lambda$addTargets$17
CommandLoot f (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;LCommandLoot$Callback;)I lambda$addTargets$16
CommandLoot g (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;LCommandLoot$Callback;)I lambda$addTargets$15
CommandLoot b (LCommandLoot$DropConsumer;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$12
CommandLoot c (LCommandLoot$DropConsumer;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$11
CommandLoot d (LCommandLoot$DropConsumer;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$10
CommandLoot e (LCommandLoot$DropConsumer;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$9
CommandLoot f (LCommandLoot$DropConsumer;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$8
CommandLoot g (LCommandLoot$DropConsumer;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$7
CommandLoot h (LCommandLoot$DropConsumer;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$6
CommandLoot i (LCommandLoot$DropConsumer;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$5
CommandLoot j (LCommandLoot$DropConsumer;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$4
CommandLoot b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
CommandLoot$Callback accept (Ljava/util/List;)V accept
CommandLoot$DropConsumer accept (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;LCommandLoot$Callback;)I accept
CommandLoot$TailProvider construct (Lcom/mojang/brigadier/builder/ArgumentBuilder;LCommandLoot$DropConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; construct
CommandOp a ERROR_ALREADY_OP
CommandPardon a ERROR_NOT_BANNED
CommandPardonIP a ERROR_INVALID
CommandPardonIP b ERROR_NOT_BANNED
CommandParticle a ERROR_FAILED
CommandParticle b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandParticle c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandParticle d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandParticle e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandParticle f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandParticle g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandPlaySound a ERROR_TOO_FAR
CommandPlaySound b (LSoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$4
CommandPlaySound c (LSoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$3
CommandPlaySound d (LSoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$2
CommandPlaySound e (LSoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$source$1
CommandPublish a ERROR_FAILED
CommandPublish b ERROR_ALREADY_PUBLISHED
CommandPublish b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
RaidCommand b (LCommandListenerWrapper;)I spawnLeader
RaidCommand b (LCommandListenerWrapper;I)I start
RaidCommand c (LCommandListenerWrapper;)I stop
RaidCommand d (LCommandListenerWrapper;)I check
RaidCommand b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
RaidCommand c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
RaidCommand d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
RaidCommand e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
RaidCommand f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
RaidCommand g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
RaidCommand e (LCommandListenerWrapper;)Z lambda$register$0
CommandRecipe a ERROR_GIVE_FAILED
CommandRecipe b ERROR_TAKE_FAILED
CommandRecipe b (LCommandListenerWrapper;Ljava/util/Collection;Ljava/util/Collection;)I takeRecipes
CommandRecipe b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandRecipe c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandRecipe d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandReplaceItem a ERROR_NOT_A_CONTAINER
CommandReplaceItem b ERROR_INAPPLICABLE_SLOT
CommandReplaceItem c ERROR_ENTITY_SLOT
CommandReplaceItem b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandReplaceItem c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandReplaceItem d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandSaveAll a ERROR_FAILED
CommandSaveAll b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandSaveOff a ERROR_ALREADY_OFF
CommandSaveOn a ERROR_ALREADY_ON
CommandSchedule a ERROR_SAME_TICK
CommandSchedule b ERROR_CANT_REMOVE
CommandSchedule c SUGGEST_SCHEDULE
CommandSchedule b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandSchedule c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandSchedule d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandScoreboard a ERROR_OBJECTIVE_ALREADY_EXISTS
CommandScoreboard b ERROR_DISPLAY_SLOT_ALREADY_EMPTY
CommandScoreboard c ERROR_DISPLAY_SLOT_ALREADY_SET
CommandScoreboard d ERROR_TRIGGER_ALREADY_ENABLED
CommandScoreboard e ERROR_NOT_TRIGGER
CommandScoreboard f ERROR_NO_VALUE
CommandScoreboard b (LCommandListenerWrapper;Ljava/util/Collection;LScoreboardObjective;)I resetScore
CommandScoreboard b (LCommandListenerWrapper;Ljava/util/Collection;LScoreboardObjective;I)I addScore
CommandScoreboard c (LCommandListenerWrapper;Ljava/util/Collection;LScoreboardObjective;I)I removeScore
CommandScoreboard b (LCommandListenerWrapper;)I listObjectives
CommandScoreboard b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
CommandScoreboard c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
CommandScoreboard d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
CommandScoreboard e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
CommandScoreboard f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
CommandScoreboard g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
CommandScoreboard h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
CommandScoreboard i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
CommandScoreboard j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
CommandScoreboard k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandScoreboard l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandScoreboard m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandScoreboard n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandScoreboard o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandScoreboard p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandScoreboard q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandScoreboard c (LCommandListenerWrapper;)Z lambda$register$1
CommandSetBlock a ERROR_FAILED
CommandSetBlock b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandSetBlock c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandSetBlock d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandSetBlock$Filter filter (LStructureBoundingBox;LBlockPosition;LArgumentTileLocation;LWorldServer;)LArgumentTileLocation; filter
CommandSpawnpoint b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandSpawnpoint c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandSetWorldSpawn b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandSpectate a ERROR_SELF
CommandSpectate b ERROR_NOT_SPECTATOR
CommandSpectate b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandSpectate c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandSpreadPlayers a ERROR_FAILED_TO_SPREAD_TEAMS
CommandSpreadPlayers b ERROR_FAILED_TO_SPREAD_ENTITIES
CommandSpreadPlayers b (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
CommandSpreadPlayers$Position a x
CommandSpreadPlayers$Position b z
CommandSpreadPlayers$Position b ()F getLength
CommandSpreadPlayers$Position b (LCommandSpreadPlayers$Position;)V moveAway
CommandSpreadPlayers$Position b (LIBlockAccess;)Z isSafe
CommandSpreadPlayers$Position c (LCommandSpreadPlayers$Position;)D access$000
CommandSpreadPlayers$Position d (LCommandSpreadPlayers$Position;)D access$100
CommandSpreadPlayers$Position b (LCommandSpreadPlayers$Position;D)D access$102
CommandStopSound b (LSoundCategory;Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandStopSound b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$0
CommandSummon a ERROR_FAILED
CommandSummon b INVALID_POSITION
CommandSummon b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandSummon c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandTag a ERROR_ADD_FAILED
CommandTag b ERROR_REMOVE_FAILED
CommandTag b (LCommandListenerWrapper;Ljava/util/Collection;Ljava/lang/String;)I removeTag
CommandTag b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandTag c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandTeam a ERROR_TEAM_ALREADY_EXISTS
CommandTeam b ERROR_TEAM_NAME_TOO_LONG
CommandTeam c ERROR_TEAM_ALREADY_EMPTY
CommandTeam d ERROR_TEAM_ALREADY_NAME
CommandTeam e ERROR_TEAM_ALREADY_COLOR
CommandTeam f ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
CommandTeam g ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
CommandTeam h ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
CommandTeam i ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
CommandTeam j ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
CommandTeam k ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
CommandTeam l ERROR_TEAM_COLLISION_UNCHANGED
CommandTeam b (LCommandListenerWrapper;LScoreboardTeam;LScoreboardTeamBase$EnumNameTagVisibility;)I setDeathMessageVisibility
CommandTeam b (LCommandListenerWrapper;LScoreboardTeam;Z)I setFriendlyFire
CommandTeam b (LCommandListenerWrapper;LScoreboardTeam;)I deleteTeam
CommandTeam c (LCommandListenerWrapper;LScoreboardTeam;)I listMembers
CommandTeam b (LCommandListenerWrapper;LScoreboardTeam;LIChatBaseComponent;)I setPrefix
CommandTeam c (LCommandListenerWrapper;LScoreboardTeam;LIChatBaseComponent;)I setSuffix
CommandTeam b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$27
CommandTeam c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$26
CommandTeam d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$25
CommandTeam e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$24
CommandTeam f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$23
CommandTeam g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$22
CommandTeam h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$21
CommandTeam i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$20
CommandTeam j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$19
CommandTeam k (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$18
CommandTeam l (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$17
CommandTeam m (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$16
CommandTeam n (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$15
CommandTeam o (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$14
CommandTeam p (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$13
CommandTeam q (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$12
CommandTeam r (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$11
CommandTeam s (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$10
CommandTeam t (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
CommandTeam u (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandTeam v (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandTeam w (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandTeam x (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandTeam y (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandTeam z (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandTeam A (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandTeam b (LCommandListenerWrapper;)Z lambda$register$1
CommandTeamMsg a ERROR_NOT_ON_TEAM
CommandTeleport a INVALID_POSITION
CommandTeleport b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandTeleport c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandTeleport d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandTeleport e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandTeleport f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandTeleport g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandTeleport h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandTeleport b (LCommandListenerWrapper;)Z lambda$register$0
CommandTeleport$LookAt a position
CommandTeleport$LookAt b entity
CommandTeleport$LookAt c anchor
CommandTime c (LCommandListenerWrapper;I)I queryTime
CommandTime b (LCommandListenerWrapper;I)I addTime
CommandTime b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandTime c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandTime d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandTime e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandTime f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandTime g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandTime h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandTime i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandTitle b (LCommandListenerWrapper;Ljava/util/Collection;)I resetTitle
CommandTitle b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandTitle c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandTitle d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandTitle e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandTitle f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandTrigger a ERROR_NOT_PRIMED
CommandTrigger b ERROR_INVALID_OBJECTIVE
CommandTrigger b (LCommandListenerWrapper;LScoreboardScore;I)I setValue
CommandTrigger b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandTrigger c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandWeather b (LCommandListenerWrapper;I)I setRain
CommandWeather c (LCommandListenerWrapper;I)I setThunder
CommandWeather b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandWeather c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandWeather d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandWeather e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandWeather f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandWhitelist a ERROR_ALREADY_ENABLED
CommandWhitelist b ERROR_ALREADY_DISABLED
CommandWhitelist c ERROR_ALREADY_WHITELISTED
CommandWhitelist d ERROR_NOT_WHITELISTED
CommandWhitelist b (LCommandListenerWrapper;Ljava/util/Collection;)I removePlayers
CommandWhitelist b (LCommandListenerWrapper;)I enableWhitelist
CommandWhitelist c (LCommandListenerWrapper;)I disableWhitelist
CommandWhitelist d (LCommandListenerWrapper;)I showList
CommandWhitelist b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
CommandWhitelist c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandWhitelist b (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; lambda$register$6
CommandWhitelist d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandWhitelist e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandWhitelist f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandWhitelist e (LCommandListenerWrapper;)Z lambda$register$0
CommandWorldBorder a ERROR_SAME_CENTER
CommandWorldBorder b ERROR_SAME_SIZE
CommandWorldBorder c ERROR_TOO_SMALL
CommandWorldBorder d ERROR_TOO_BIG
CommandWorldBorder e ERROR_SAME_WARNING_TIME
CommandWorldBorder f ERROR_SAME_WARNING_DISTANCE
CommandWorldBorder g ERROR_SAME_DAMAGE_BUFFER
CommandWorldBorder h ERROR_SAME_DAMAGE_AMOUNT
CommandWorldBorder b (LCommandListenerWrapper;F)I setDamageAmount
CommandWorldBorder b (LCommandListenerWrapper;I)I setWarningDistance
CommandWorldBorder b (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$9
CommandWorldBorder c (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$8
CommandWorldBorder d (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$7
CommandWorldBorder e (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$6
CommandWorldBorder f (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$5
CommandWorldBorder g (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$4
CommandWorldBorder h (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$3
CommandWorldBorder i (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$2
CommandWorldBorder j (Lcom/mojang/brigadier/context/CommandContext;)I lambda$register$1
CommandWorldBorder b (LCommandListenerWrapper;)Z lambda$register$0
CommandDataAccessorTile b ERROR_NOT_A_BLOCK_ENTITY
CommandDataAccessorTile a PROVIDER
CommandDataAccessorTile c entity
CommandDataAccessorTile d pos
CommandDataAccessorTile b ()LIChatBaseComponent; getModifiedSuccess
CommandDataAccessorTile c ()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType; access$000
CommandDataAccessorTile$1 a val$argPrefix
CommandDataAccessor b ()LIChatBaseComponent; getModifiedSuccess
CommandData d ERROR_MERGE_UNCHANGED
CommandData e ERROR_GET_NOT_NUMBER
CommandData f ERROR_GET_NON_EXISTENT
CommandData g ERROR_MULTIPLE_TAGS
CommandData h ERROR_EXPECTED_LIST
CommandData i ERROR_EXPECTED_OBJECT
CommandData j ERROR_INVALID_INDEX
CommandData a ALL_PROVIDERS
CommandData b TARGET_PROVIDERS
CommandData c SOURCE_PROVIDERS
CommandData b (LCommandListenerWrapper;LCommandDataAccessor;LArgumentNBTKey$NbtPath;)I getData
CommandData b (LCommandData$DataProvider;LCommandData$DataProvider;LCommandData$DataManipulator;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$22
CommandData b (Lcom/mojang/brigadier/context/CommandContext;LNBTTagCompound;LArgumentNBTKey$NbtPath;Ljava/util/List;)I lambda$null$19
CommandData c (Lcom/mojang/brigadier/context/CommandContext;LNBTTagCompound;LArgumentNBTKey$NbtPath;Ljava/util/List;)I lambda$null$18
CommandData d (Lcom/mojang/brigadier/context/CommandContext;LNBTTagCompound;LArgumentNBTKey$NbtPath;Ljava/util/List;)I lambda$null$17
CommandData e (Lcom/mojang/brigadier/context/CommandContext;LNBTTagCompound;LArgumentNBTKey$NbtPath;Ljava/util/List;)I lambda$null$16
CommandData b (LCommandData$DataProvider;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$13
CommandData b (LCommandData$DataProvider;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$12
CommandData c (LCommandData$DataProvider;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$11
CommandData d (LCommandData$DataProvider;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$10
CommandData c (LCommandData$DataProvider;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; lambda$register$9
CommandData e (LCommandData$DataProvider;Lcom/mojang/brigadier/context/CommandContext;)I lambda$null$8
CommandData b (Ljava/util/function/Function;)LCommandData$DataProvider; lambda$static$5
CommandData b (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$3
CommandData c (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$2
CommandData d (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$1
CommandData e (Ljava/lang/Object;)Lcom/mojang/brigadier/Message; lambda$static$0
CommandData$DataManipulator modify (Lcom/mojang/brigadier/context/CommandContext;LNBTTagCompound;LArgumentNBTKey$NbtPath;Ljava/util/List;)I modify
CommandData$DataManipulatorDecorator create (LCommandData$DataManipulator;)Lcom/mojang/brigadier/builder/ArgumentBuilder; create
CommandDataAccessorEntity b ERROR_NO_PLAYERS
CommandDataAccessorEntity a PROVIDER
CommandDataAccessorEntity c entity
CommandDataAccessorEntity b ()LIChatBaseComponent; getModifiedSuccess
CommandDataAccessorEntity$1 a val$arg
CommandDataStorage b SUGGEST_STORAGE
CommandDataStorage a PROVIDER
CommandDataStorage c storage
CommandDataStorage d id
CommandDataStorage b (Lcom/mojang/brigadier/context/CommandContext;)LPersistentCommandStorage; getGlobalTags
CommandDataStorage b ()LIChatBaseComponent; getModifiedSuccess
CommandDataStorage c ()Lcom/mojang/brigadier/suggestion/SuggestionProvider; access$200
CommandDataStorage$1 a val$arg
DedicatedServer$1 a this$0
DedicatedServer$1 run ()V run
DedicatedServer$2 a this$0
DedicatedServer$2 run ()V run
ThreadWatchdog a LOGGER
ThreadWatchdog b server
ThreadWatchdog c maxTickTime
ThreadWatchdog run ()V run
ThreadWatchdog$1 a this$0
ThreadWatchdog$1 run ()V run
ServerGUI a MONOSPACED
ServerGUI b LOGGER
ServerGUI c server
ServerGUI d logAppenderThread
ServerGUI e finalizers
ServerGUI f isClosing
ServerGUI c ()Ljavax/swing/JComponent; buildInfoPanel
ServerGUI d ()Ljavax/swing/JComponent; buildPlayerPanel
ServerGUI e ()Ljavax/swing/JComponent; buildChatPanel
ServerGUI b ()V close
ServerGUI f ()V runFinalizers
ServerGUI b (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V lambda$print$2
ServerGUI b (LServerGUI;)V access$100
ServerGUI$1 a val$gui
ServerGUI$1 b val$frame
ServerGUI$1 c val$server
ServerGUI$1 windowClosing (Ljava/awt/event/WindowEvent;)V windowClosing
ServerGUI$2 a this$0
ServerGUI$2 focusGained (Ljava/awt/event/FocusEvent;)V focusGained
GuiStatsComponent a DECIMAL_FORMAT
GuiStatsComponent b values
GuiStatsComponent c vp
GuiStatsComponent d msgs
GuiStatsComponent e server
GuiStatsComponent f timer
GuiStatsComponent b ()V tick
GuiStatsComponent paint (Ljava/awt/Graphics;)V paint
BlockDestructionProgress a id
BlockDestructionProgress b pos
BlockDestructionProgress c progress
BlockDestructionProgress d updatedRenderTick
BlockDestructionProgress b ()LBlockPosition; getPos
BlockDestructionProgress c ()I getProgress
BlockDestructionProgress b (I)V updateTick
BlockDestructionProgress d ()I getUpdatedRenderTick
BlockDestructionProgress equals (Ljava/lang/Object;)Z equals
BlockDestructionProgress hashCode ()I hashCode
BlockDestructionProgress compareTo (Ljava/lang/Object;)I compareTo
PlayerChunk$1 a this$0
PlayerChunk$1 toString ()Ljava/lang/String; toString
PlayerChunk$Failure b UNLOADED
PlayerChunk$ChunkLoadingFailure$1 toString ()Ljava/lang/String; toString
PlayerChunkMap$1 a val$k
PlayerChunkMap$1 c this$0
PlayerChunkMap$1 toString ()Ljava/lang/String; toString
PlayerChunkMap$2 a val$startX
PlayerChunkMap$2 c val$finalI
PlayerChunkMap$2 d val$range
PlayerChunkMap$2 e val$startZ
PlayerChunkMap$2 f val$either
PlayerChunkMap$2 g this$0
PlayerChunkMap$2 toString ()Ljava/lang/String; toString
PlayerChunkMap$DistanceManager a this$0
PlayerChunkMap$DistanceManager b (J)LPlayerChunk; getChunk
ChunkTaskQueue a PRIORITY_LEVEL_COUNT
ChunkTaskQueue b taskQueue
ChunkTaskQueue c firstQueue
ChunkTaskQueue d name
ChunkTaskQueue e acquired
ChunkTaskQueue f maxTasks
ChunkTaskQueue toString ()Ljava/lang/String; toString
ChunkTaskQueue b ()Lit/unimi/dsi/fastutil/longs/LongSet; getAcquired
ChunkTaskQueue b (J)Lcom/mojang/datafixers/util/Either; lambda$null$5
ChunkTaskQueue c (J)V lambda$acquire$4
ChunkTaskQueue d (J)Ljava/util/List; lambda$submit$2
ChunkTaskQueue e (J)Ljava/util/List; lambda$resortChunkTasks$1
ChunkTaskQueueSorter a LOGGER
ChunkTaskQueueSorter b queues
ChunkTaskQueueSorter c sleeping
ChunkTaskQueueSorter d mailbox
ChunkTaskQueueSorter b (LMailbox;)LChunkTaskQueue; getQueue
ChunkTaskQueueSorter close ()V close
ChunkTaskQueueSorter b (LChunkTaskQueue;LMailbox;)V lambda$pollTask$16
ChunkTaskQueueSorter b (LMailbox;LMailbox;)V lambda$null$7
ChunkTaskQueueSorter b (Ljava/lang/Runnable;LMailbox;)V lambda$null$1
ChunkTaskQueueSorter$Message a task
ChunkTaskQueueSorter$Message b pos
ChunkTaskQueueSorter$Message c level
ChunkTaskQueueSorter$Message b (LChunkTaskQueueSorter$Message;)J access$600
ChunkTaskQueueSorter$Message c (LChunkTaskQueueSorter$Message;)Ljava/util/function/IntSupplier; access$700
ChunkTaskQueueSorter$Release a task
ChunkTaskQueueSorter$Release b pos
ChunkTaskQueueSorter$Release c clearQueue
ChunkTaskQueueSorter$Release b (LChunkTaskQueueSorter$Release;)Ljava/lang/Runnable; access$300
ChunkTaskQueueSorter$Release c (LChunkTaskQueueSorter$Release;)Z access$400
ChunkMap b (JJI)I computeLevelFromNeighbor
ChunkMap b (J)I getLevelFromSource
ChunkMap b (JIZ)V update
BlockPosition2D a x
BlockPosition2D b z
BlockPosition2D b ()J toLong
BlockPosition2D toString ()Ljava/lang/String; toString
BlockPosition2D hashCode ()I hashCode
BlockPosition2D equals (Ljava/lang/Object;)Z equals
DemoPlayerInteractManager c displayedIntro
DemoPlayerInteractManager d demoHasEnded
DemoPlayerInteractManager e demoEndedReminder
DemoPlayerInteractManager f gameModeTicks
DemoPlayerInteractManager e ()V outputDemoReminder
ChunkMapDistance$ChunkTicketTracker a this$0
ChunkMapDistance$ChunkTicketTracker b (J)I getLevelFromSource
ChunkMapDistance$ChunkTicketTracker c (J)I getLevel
ChunkMapDistance$FixedPlayerDistanceChunkTracker a chunks
ChunkMapDistance$FixedPlayerDistanceChunkTracker b maxDistance
ChunkMapDistance$FixedPlayerDistanceChunkTracker c this$0
ChunkMapDistance$FixedPlayerDistanceChunkTracker c (J)I getLevel
ChunkMapDistance$FixedPlayerDistanceChunkTracker b (J)I getLevelFromSource
ChunkMapDistance$FixedPlayerDistanceChunkTracker d (J)Z havePlayer
ChunkMapDistance$PlayerTicketTracker e viewDistance
ChunkMapDistance$PlayerTicketTracker f queueLevels
ChunkMapDistance$PlayerTicketTracker g toUpdate
ChunkMapDistance$PlayerTicketTracker d this$0
ChunkMapDistance$PlayerTicketTracker c (I)Z haveTicketFor
ChunkMapDistance$PlayerTicketTracker b (JI)V lambda$runAllUpdates$7
ChunkMapDistance$PlayerTicketTracker d (J)I lambda$runAllUpdates$6
ChunkMapDistance$PlayerTicketTracker b (JLTicket;)V lambda$null$4
ChunkMapDistance$PlayerTicketTracker d (I)I lambda$onLevelChange$3
ChunkMapDistance$PlayerTicketTracker c (JLTicket;)V lambda$onLevelChange$2
ChunkMapDistance$PlayerTicketTracker d (JLTicket;)V lambda$null$1
ChunkMapDistance$PlayerTicketTracker d ()V lambda$null$0
FeatureSimulator a minPos
FeatureSimulator b maxPos
FeatureSimulator b (LBlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
FeatureSimulator toString ()Ljava/lang/String; toString
PlayerMap a players
PlayerMap b (LEntityPlayer;)V unIgnorePlayer
PlayerMap c (LEntityPlayer;)Z ignoredOrUnknown
PlayerMap d (LEntityPlayer;)Z ignored
LightEngineGraphSection b (JJI)I computeLevelFromNeighbor
LightEngineGraphSection b (J)I getLevelFromSource
LightEngineGraphSection b (JIZ)V update
ChunkProviderServer$MainThreadExecutor a this$0
ChunkProviderServer$MainThreadExecutor e (Ljava/lang/Runnable;)Ljava/lang/Runnable; wrapRunnable
ChunkProviderServer$MainThreadExecutor d (Ljava/lang/Runnable;)Z shouldRun
ChunkProviderServer$MainThreadExecutor ax ()Z scheduleExecutables
ChunkProviderServer$MainThreadExecutor ay ()Ljava/lang/Thread; getRunningThread
ChunkProviderServer$MainThreadExecutor c (Ljava/lang/Runnable;)V doRunTask
ChunkProviderServer$MainThreadExecutor w ()Z pollTask
RegionLimitedWorldAccess a LOGGER
RegionLimitedWorldAccess b cache
RegionLimitedWorldAccess c x
RegionLimitedWorldAccess d z
RegionLimitedWorldAccess e size
RegionLimitedWorldAccess f level
RegionLimitedWorldAccess g seed
RegionLimitedWorldAccess h seaLevel
RegionLimitedWorldAccess i levelData
RegionLimitedWorldAccess j random
RegionLimitedWorldAccess k dimension
RegionLimitedWorldAccess l settings
RegionLimitedWorldAccess m blockTicks
RegionLimitedWorldAccess n liquidTicks
RegionLimitedWorldAccess o biomeManager
RegionLimitedWorldAccess b ()I getCenterZ
RegionLimitedWorldAccess b (II)Z hasChunk
RegionLimitedWorldAccess d_ (LBlockPosition;)LIBlockData; getBlockState
RegionLimitedWorldAccess b (LBlockPosition;)LFluid; getFluidState
RegionLimitedWorldAccess c ()I getSkyDarken
RegionLimitedWorldAccess d ()LBiomeManager; getBiomeManager
RegionLimitedWorldAccess e ()LLightEngine; getLightEngine
RegionLimitedWorldAccess c (LBlockPosition;)LTileEntity; getBlockEntity
RegionLimitedWorldAccess e (LBlockPosition;)V markPosForPostprocessing
RegionLimitedWorldAccess c (LEntity;)Z addFreshEntity
RegionLimitedWorldAccess s_ ()LWorldBorder; getWorldBorder
RegionLimitedWorldAccess n_ ()Z isClientSide
RegionLimitedWorldAccess h ()LWorldServer; getLevel
RegionLimitedWorldAccess r_ ()LWorldData; getLevelData
RegionLimitedWorldAccess d (LBlockPosition;)LDifficultyDamageScaler; getCurrentDifficultyAt
RegionLimitedWorldAccess o ()Lnet/minecraft/server/MinecraftServer; getServer
RegionLimitedWorldAccess D ()LIChunkProvider; getChunkSource
RegionLimitedWorldAccess p_ ()J getSeed
RegionLimitedWorldAccess F ()LTickList; getBlockTicks
RegionLimitedWorldAccess E ()LTickList; getLiquidTicks
RegionLimitedWorldAccess o_ ()I getSeaLevel
RegionLimitedWorldAccess l ()LGeneratorSettingsDefault; getSettings
RegionLimitedWorldAccess t_ ()Ljava/util/Random; getRandom
RegionLimitedWorldAccess q_ ()LBlockPosition; getSharedSpawnPos
RegionLimitedWorldAccess p ()LWorldProvider; getDimension
RegionLimitedWorldAccess b (LBlockPosition;Ljava/util/function/Predicate;)Z isFluidAtPosition
RegionLimitedWorldAccess z ()Ljava/util/List; players
RegionLimitedWorldAccess q ()LWorld; getLevel
RegionLimitedWorldAccess i (LBlockPosition;)LTickList; lambda$new$1
RegionLimitedWorldAccess j (LBlockPosition;)LTickList; lambda$new$0
TickListWorldGen a index
TickListWorldGen b (LBlockPosition;Ljava/lang/Object;)Z willTickThisTick
WorldLoadListener b ()V stop
WorldLoadListenerFactory create (I)LWorldLoadListener; create
WorldLoadListenerLogger a LOGGER
WorldLoadListenerLogger b maxCount
WorldLoadListenerLogger c count
WorldLoadListenerLogger d startTime
WorldLoadListenerLogger e nextTickTime
WorldLoadListenerLogger b ()V stop
WorldLoadListenerLogger c ()I getProgress
ProcessorChunkProgressListener a delegate
ProcessorChunkProgressListener b mailbox
ProcessorChunkProgressListener b ()V stop
ProcessorChunkProgressListener b (LChunkCoordIntPair;LChunkStatus;)V lambda$onStatusChange$1
ProcessorChunkProgressListener b (LChunkCoordIntPair;)V lambda$updateSpawnPos$0
StoringChunkProgressListener a delegate
StoringChunkProgressListener b statuses
StoringChunkProgressListener c spawnPos
StoringChunkProgressListener d fullDiameter
StoringChunkProgressListener e radius
StoringChunkProgressListener f diameter
StoringChunkProgressListener g started
StoringChunkProgressListener b ()V stop
StoringChunkProgressListener c ()I getFullDiameter
StoringChunkProgressListener d ()I getDiameter
StoringChunkProgressListener e ()I getProgress
LegacyPingHandler a LOGGER
LegacyPingHandler b serverConnectionListener
LegacyPingHandler channelRead (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead
MemoryServerHandshakePacketListenerImpl a server
MemoryServerHandshakePacketListenerImpl b connection
ServerConnection$1 a this$0
ServerConnection$1 initChannel (Lio/netty/channel/Channel;)V initChannel
ServerConnection$2 a this$0
ServerConnection$2 initChannel (Lio/netty/channel/Channel;)V initChannel
ServerConnection$LatencySimulator a TIMER
ServerConnection$LatencySimulator b delay
ServerConnection$LatencySimulator channelRead (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V channelRead
PlayerConnection$1 a $SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
PlayerConnection$1 b $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
PlayerConnection$1 c $SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
PlayerConnection$1 d $SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
HandshakeListener a server
HandshakeListener b connection
HandshakeListener$1 a $SwitchMap$net$minecraft$network$ConnectionProtocol
LoginListener$1 a this$0
LoginListener$1 run ()V run
ResourcePackAbstract b LOGGER
ResourcePackAbstract a file
ResourcePackAbstract c (LEnumResourcePackType;LMinecraftKey;)Ljava/lang/String; getPathFromLocation
ResourcePackAbstract b (LEnumResourcePackType;LMinecraftKey;)Z hasResource
ResourcePackAbstract b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
ResourcePackAbstract c (Ljava/lang/String;)Z hasResource
ResourcePackAbstract d (Ljava/lang/String;)V logWarning
ResourcePackFile b SPLITTER
ResourcePackFile c zipFile
ResourcePackFile b ()Ljava/util/zip/ZipFile; getOrCreateZipFile
ResourcePackFile c (Ljava/lang/String;)Z hasResource
ResourcePackFile finalize ()V finalize
ResourcePackFile close ()V close
ResourcePackFolder b LOGGER
ResourcePackFolder c ON_WINDOWS
ResourcePackFolder d BACKSLASH_MATCHER
ResourcePackFolder c (Ljava/lang/String;)Z hasResource
ResourcePackFolder e (Ljava/lang/String;)Ljava/io/File; getFile
ResourcePackFolder close ()V close
IResourcePack b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
IResourcePack b (LEnumResourcePackType;LMinecraftKey;)Z hasResource
ResourcePackVanilla a generatedDir
ResourcePackVanilla d LOGGER
ResourcePackVanilla b clientObject
ResourcePackVanilla e JAR_FILESYSTEM_BY_TYPE
ResourcePackVanilla c namespaces
ResourcePackVanilla b (Ljava/lang/String;)Ljava/io/InputStream; getRootResource
ResourcePackVanilla c (LEnumResourcePackType;LMinecraftKey;)Ljava/io/InputStream; getResourceAsStream
ResourcePackVanilla d (LEnumResourcePackType;LMinecraftKey;)Ljava/lang/String; createPath
ResourcePackVanilla b (LEnumResourcePackType;LMinecraftKey;)Z hasResource
ResourcePackVanilla close ()V close
ResourcePackInfo a SERIALIZER
ResourcePackInfo b description
ResourcePackInfo c packFormat
ResourcePackInfo b ()I getPackFormat
ResourcePackInfoDeserializer b (Lcom/google/gson/JsonObject;)LResourcePackInfo; fromJson
ResourcePackRepository a sources
ResourcePackRepository b available
ResourcePackRepository c selected
ResourcePackRepository d constructor
ResourcePackRepository e ()V sortAvailable
ResourcePackRepository b ()Ljava/util/Collection; getAvailable
ResourcePackRepository c ()Ljava/util/Collection; getUnselected
ResourcePackRepository d ()Ljava/util/Collection; getSelected
ResourcePackRepository close ()V close
ResourcePackSourceVanilla a vanillaPack
ResourcePackLoader a LOGGER
ResourcePackLoader b BROKEN_ASSETS_FALLBACK
ResourcePackLoader c id
ResourcePackLoader d supplier
ResourcePackLoader e title
ResourcePackLoader f description
ResourcePackLoader g compatibility
ResourcePackLoader h defaultPosition
ResourcePackLoader i required
ResourcePackLoader j fixedPosition
ResourcePackLoader b ()LIChatBaseComponent; getDescription
ResourcePackLoader c ()LEnumResourcePackVersion; getCompatibility
ResourcePackLoader d ()LIResourcePack; open
ResourcePackLoader e ()Ljava/lang/String; getId
ResourcePackLoader f ()Z isRequired
ResourcePackLoader g ()Z isFixedPosition
ResourcePackLoader h ()LResourcePackLoader$Position; getDefaultPosition
ResourcePackLoader equals (Ljava/lang/Object;)Z equals
ResourcePackLoader hashCode ()I hashCode
ResourcePackLoader close ()V close
ResourcePackLoader$UnopenedPackConstructor create (Ljava/lang/String;ZLjava/util/function/Supplier;LIResourcePack;LResourcePackInfo;LResourcePackLoader$Position;)LResourcePackLoader; create
ResourceManagerFallback b LOGGER
ResourceManagerFallback a fallbacks
ResourceManagerFallback c type
ResourceManagerFallback d namespace
ResourceManagerFallback b (LMinecraftKey;)Z hasResource
ResourceManagerFallback e (LMinecraftKey;)V validateLocation
ResourceManagerFallback f (LMinecraftKey;)Z isValidLocation
ResourceManagerFallback c (LMinecraftKey;)Ljava/util/List; getResources
ResourceManagerFallback d (LMinecraftKey;)LMinecraftKey; getMetadataLocation
ResourceManagerFallback b ()Lorg/apache/logging/log4j/Logger; access$000
ResourceManagerFallback$LeakedResourceWarningInputStream a message
ResourceManagerFallback$LeakedResourceWarningInputStream b closed
ResourceManagerFallback$LeakedResourceWarningInputStream close ()V close
ResourceManagerFallback$LeakedResourceWarningInputStream finalize ()V finalize
IReloadListener i ()Ljava/lang/String; getName
ReloadableProfiled d LOGGER
ReloadableProfiled e total
ReloadableProfiled b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V lambda$null$3
ReloadableProfiled b (Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V lambda$null$2
ReloadableProfiled f ()I lambda$null$1
ReloadableProfiled g ()I lambda$null$0
ReloadableProfiled$State a name
ReloadableProfiled$State b preparationResult
ReloadableProfiled$State c reloadResult
ReloadableProfiled$State d preparationNanos
ReloadableProfiled$State e reloadNanos
ReloadableProfiled$State b (LReloadableProfiled$State;)LMethodProfilerResults; access$100
ReloadableProfiled$State c (LReloadableProfiled$State;)Ljava/util/concurrent/atomic/AtomicLong; access$200
ReloadableProfiled$State d (LReloadableProfiled$State;)Ljava/util/concurrent/atomic/AtomicLong; access$300
ReloadableProfiled$State e (LReloadableProfiled$State;)Ljava/lang/String; access$400
IReloadable b ()F getActualProgress
IReloadable c ()Z isApplying
IReloadable d ()Z isDone
IReloadable e ()V checkExceptions
IResource b ()Ljava/io/InputStream; getInputStream
IResource c ()Z hasMetadata
IResource d ()Ljava/lang/String; getSourceName
IResourceManager b (LMinecraftKey;)Z hasResource
IResourceManager c (LMinecraftKey;)Ljava/util/List; getResources
IResourcePackListener b (LIResourceManager;)V lambda$reload$0
ResourceDataJson a LOGGER
ResourceDataJson b PATH_SUFFIX_LENGTH
ResourceDataJson c gson
ResourceDataJson d directory
ResourceDataJson b (LIResourceManager;LGameProfilerFiller;)Ljava/lang/Object; prepare
ResourceDataAbstract b (LIResourceManager;LGameProfilerFiller;)Ljava/lang/Object; prepare
Reloadable a resourceManager
Reloadable b allPreparations
Reloadable c allDone
Reloadable d preparingListeners
Reloadable e listenerCount
Reloadable f startedReloads
Reloadable g finishedReloads
Reloadable h startedTaskCounter
Reloadable i doneTaskCounter
Reloadable b ()F getActualProgress
Reloadable c ()Z isApplying
Reloadable d ()Z isDone
Reloadable e ()V checkExceptions
Reloadable b (Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V lambda$new$2
Reloadable b (Ljava/lang/Runnable;)V lambda$null$1
Reloadable$1 a val$mainThreadExecutor
Reloadable$1 b val$listener
Reloadable$1 c val$previousTask
Reloadable$1 d this$0
Reloadable$StateFactory create (LIReloadListener$PreparationBarrier;LIResourceManager;LIReloadListener;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; create
ResourceManager a LOGGER
ResourceManager b namespacedPacks
ResourceManager c listeners
ResourceManager d recentlyRegistered
ResourceManager e namespaces
ResourceManager f type
ResourceManager g mainThread
ResourceManager b (LMinecraftKey;)Z hasResource
ResourceManager c (LMinecraftKey;)Ljava/util/List; getResources
ResourceManager b ()V clear
ResourceManager b (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)LIReloadable; createReload
ResourceManager$FailingReloadInstance a exception
ResourceManager$FailingReloadInstance b failedFuture
ResourceManager$FailingReloadInstance b ()F getActualProgress
ResourceManager$FailingReloadInstance c ()Z isApplying
ResourceManager$FailingReloadInstance d ()Z isDone
ResourceManager$FailingReloadInstance e ()V checkExceptions
ResourceManager$ResourcePackLoadingFailure a pack
Resource b LOGGER
Resource a IO_EXECUTOR
Resource c sourceName
Resource d location
Resource e resourceStream
Resource f metadataStream
Resource g triedMetadata
Resource h metadata
Resource b ()Ljava/io/InputStream; getInputStream
Resource c ()Z hasMetadata
Resource d ()Ljava/lang/String; getSourceName
Resource equals (Ljava/lang/Object;)Z equals
Resource hashCode ()I hashCode
Resource close ()V close
UserCache$1 a val$result
UserCache$1 onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
UserCache$1 onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
UserCache$UserCacheEntry b profile
UserCache$UserCacheEntry c expirationDate
UserCache$UserCacheEntry a this$0
UserCache$UserCacheEntry b ()Ljava/util/Date; getExpirationDate
UserCache$BanEntrySerializer a this$0
UserCache$BanEntrySerializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
UserCache$BanEntrySerializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
IpBanEntry e ()LIChatBaseComponent; getDisplayName
IpBanEntry b (Lcom/google/gson/JsonObject;)Ljava/lang/String; createIpInfo
NameReferencingFileConverter$1 a val$server
NameReferencingFileConverter$1 b val$userMap
NameReferencingFileConverter$1 c val$bans
NameReferencingFileConverter$1 onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
NameReferencingFileConverter$1 onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
NameReferencingFileConverter$2 a val$server
NameReferencingFileConverter$2 b val$opsList
NameReferencingFileConverter$2 onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
NameReferencingFileConverter$2 onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
NameReferencingFileConverter$3 a val$server
NameReferencingFileConverter$3 b val$whitelist
NameReferencingFileConverter$3 onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
NameReferencingFileConverter$3 onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
NameReferencingFileConverter$4 a val$server
NameReferencingFileConverter$4 b val$profiles
NameReferencingFileConverter$4 onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
NameReferencingFileConverter$4 onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
NameReferencingFileConverter$5 a val$server
NameReferencingFileConverter$5 b val$worldNewPlayerDirectory
NameReferencingFileConverter$5 c val$unknownPlayerDirectory
NameReferencingFileConverter$5 d val$worldPlayerDirectory
NameReferencingFileConverter$5 e val$names
NameReferencingFileConverter$5 onProfileLookupSucceeded (Lcom/mojang/authlib/GameProfile;)V onProfileLookupSucceeded
NameReferencingFileConverter$5 onProfileLookupFailed (Lcom/mojang/authlib/GameProfile;Ljava/lang/Exception;)V onProfileLookupFailed
PlayerList$1 a this$0
PlayerList$1 b (LWorldBorder;I)V onBorderSetWarningBlocks
PlayerList$1 b (LWorldBorder;D)V onBorderSetDamagePerBlock
PlayerList$1 c (LWorldBorder;D)V onBorderSetDamageSafeZOne
OpList b (Lcom/mojang/authlib/GameProfile;)Z canBypassPlayerLimit
OpList c (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; getKeyForUser
OpListEntry a level
OpListEntry b bypassesPlayerLimit
OpListEntry b ()Z getBypassesPlayerLimit
OpListEntry b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
GameProfileBanEntry e ()LIChatBaseComponent; getDisplayName
GameProfileBanEntry b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
WhiteListEntry b (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; createGameProfile
RemoteStatusReply a outputStream
RemoteStatusReply b dataOutputStream
RemoteStatusReply b (I)V writeInt
RemoteStatusReply b ()V reset
StatusChallengeUtils a HEX_CHAR
StatusChallengeUtils b ([BII)I intFromByteArray
StatusChallengeUtils c ([BII)I intFromNetworkByteArray
RemoteConnectionThread h LOGGER
RemoteConnectionThread i UNIQUE_THREAD_ID
RemoteConnectionThread a running
RemoteConnectionThread b serverInterface
RemoteConnectionThread c name
RemoteConnectionThread d thread
RemoteConnectionThread e maxStopWait
RemoteConnectionThread f datagramSockets
RemoteConnectionThread g serverSockets
RemoteConnectionThread run ()V run
RemoteConnectionThread b ()V stop
RemoteConnectionThread c ()Z isRunning
RemoteConnectionThread b (Ljava/lang/String;)V info
RemoteConnectionThread c (Ljava/lang/String;)V warn
RemoteConnectionThread d (Ljava/lang/String;)V error
RemoteConnectionThread d ()I currentPlayerCount
RemoteConnectionThread b (Ljava/net/DatagramSocket;)Z closeSocket
RemoteConnectionThread b (Ljava/net/ServerSocket;)Z closeSocket
RemoteConnectionThread e ()V closeSockets
RemoteStatusListener h lastChallengeCheck
RemoteStatusListener i port
RemoteStatusListener j serverPort
RemoteStatusListener k maxPlayers
RemoteStatusListener l serverName
RemoteStatusListener m worldName
RemoteStatusListener n socket
RemoteStatusListener o buffer
RemoteStatusListener p request
RemoteStatusListener q idents
RemoteStatusListener r hostIp
RemoteStatusListener s serverIp
RemoteStatusListener t validChallenges
RemoteStatusListener u lastChallengeClean
RemoteStatusListener v rulesResponse
RemoteStatusListener w lastRulesResponse
RemoteStatusListener b (Ljava/net/DatagramPacket;)[B buildRuleResponse
RemoteStatusListener c (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; validChallenge
RemoteStatusListener d (Ljava/net/DatagramPacket;)V sendChallenge
RemoteStatusListener f ()V pruneChallenges
RemoteStatusListener run ()V run
RemoteStatusListener g ()Z initSocket
RemoteControlSession h LOGGER
RemoteControlSession i authed
RemoteControlSession j client
RemoteControlSession k buf
RemoteControlSession l rconPassword
RemoteControlSession run ()V run
RemoteControlSession f ()V sendAuthFailure
RemoteControlSession b ()V stop
RemoteControlSession g ()V closeSocket
RemoteControlListener h port
RemoteControlListener i serverIp
RemoteControlListener j socket
RemoteControlListener k rconPassword
RemoteControlListener l clients
RemoteControlListener f ()V initClients
RemoteControlListener g ()V clearClients
RemoteControlListener run ()V run
RemoteControlListener b ()V stop
SoundEffect a location
RecipeBook a known
RecipeBook b highlight
RecipeBook c guiOpen
RecipeBook d filteringCraftable
RecipeBook e furnaceGuiOpen
RecipeBook f furnaceFilteringCraftable
RecipeBook g blastingFurnaceGuiOpen
RecipeBook h blastingFurnaceFilteringCraftable
RecipeBook i smokerGuiOpen
RecipeBook j smokerFilteringCraftable
RecipeBook b (LIRecipe;)Z contains
RecipeBook b (LMinecraftKey;)Z contains
RecipeBook c (LIRecipe;)V remove
RecipeBook c (LMinecraftKey;)V remove
RecipeBook d (LIRecipe;)Z willHighlight
RecipeBook e (LIRecipe;)V removeHighlight
RecipeBook f (LIRecipe;)V addHighlight
RecipeBook d (LMinecraftKey;)V addHighlight
RecipeBook b ()Z isFilteringCraftable
RecipeBook b (Z)V setFilteringCraftable
RecipeBook c ()Z isFurnaceGuiOpen
RecipeBook c (Z)V setFurnaceGuiOpen
RecipeBook d ()Z isFurnaceFilteringCraftable
RecipeBook d (Z)V setFurnaceFilteringCraftable
RecipeBook e ()Z isBlastingFurnaceGuiOpen
RecipeBook e (Z)V setBlastingFurnaceGuiOpen
RecipeBook f ()Z isBlastingFurnaceFilteringCraftable
RecipeBook f (Z)V setBlastingFurnaceFilteringCraftable
RecipeBook g ()Z isSmokerGuiOpen
RecipeBook g (Z)V setSmokerGuiOpen
RecipeBook h ()Z isSmokerFilteringCraftable
RecipeBook h (Z)V setSmokerFilteringCraftable
ServerStatisticManager b LOGGER
ServerStatisticManager c server
ServerStatisticManager d file
ServerStatisticManager e dirty
ServerStatisticManager f lastStatRequest
ServerStatisticManager d ()Ljava/util/Set; getDirty
ServerStatisticManager b ()Ljava/lang/String; toJson
ServerStatisticManager b (LStatistic;)LMinecraftKey; getKey
ServerStatisticManager c ()V markAllDirty
ServerStatisticManager b (Ljava/lang/String;)V lambda$null$1
TagsBlock$Wrapper a check
TagsBlock$Wrapper b actual
TagsBlock$Wrapper b ()Ljava/util/Collection; getSource
TagsEntity$Wrapper a check
TagsEntity$Wrapper b actual
TagsEntity$Wrapper b ()Ljava/util/Collection; getSource
TagsFluid$Wrapper a check
TagsFluid$Wrapper b actual
TagsFluid$Wrapper b ()Ljava/util/Collection; getSource
TagsItem$Wrapper a check
TagsItem$Wrapper b actual
TagsItem$Wrapper b ()Ljava/util/Collection; getSource
TagsServer a registry
TagsServer b (LPacketDataSerializer;)V loadFromNetwork
Tag$Builder a values
Tag$Builder b ordered
Tag$Builder b (LMinecraftKey;)LTag; build
Tag$Builder c (LMinecraftKey;)Lcom/google/gson/JsonParseException; lambda$addFromJson$0
Tag$TagEntry a id
Tag$TagEntry b tag
Tag$ValuesEntry a values
Tags a LOGGER
Tags b GSON
Tags c PATH_SUFFIX_LENGTH
Tags d tags
Tags e idToValue
Tags f directory
Tags g ordered
Tags h name
Tags b (LMinecraftKey;)LTag; getTagOrEmpty
Tags c (LMinecraftKey;)Z hasTag
Tags b (Ljava/util/Map;)V replace
Tags b ()Ljava/util/Map; getAllTags
Tags d (LMinecraftKey;)LTag$Builder; lambda$null$2
TagRegistry$Preparations a blocks
TagRegistry$Preparations b items
TagRegistry$Preparations c fluids
TagRegistry$Preparations d entityTypes
DataBits a data
DataBits b bits
DataBits c mask
DataBits d size
DataBits b (II)V set
DataBits b ()I getSize
DataBits c ()I getBits
EntitySlice a byClass
EntitySlice b baseClass
EntitySlice c allInstances
EntitySlice add (Ljava/lang/Object;)Z add
EntitySlice remove (Ljava/lang/Object;)Z remove
EntitySlice contains (Ljava/lang/Object;)Z contains
EntitySlice iterator ()Ljava/util/Iterator; iterator
EntitySlice size ()I size
EntitySlice b (Ljava/lang/Class;)Ljava/util/List; lambda$find$0
CSVWriter a output
CSVWriter b columnCount
CSVWriter$Builder a headers
CubicSampler a GAUSSIAN_SAMPLE_KERNEL
CubicSampler$Vec3Fetcher fetch (III)LVec3D; fetch
DynamicDeserializer a LOGGER
DynamicDeserializer deserialize (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/Object; deserialize
CircularTimer a loggedTimes
CircularTimer b logStart
CircularTimer c logLength
CircularTimer d logEnd
CircularTimer b ()I getLogEnd
CircularTimer b (I)I wrapIndex
CircularTimer c ()[J getLog
ChatDeserializer a GSON
ChatDeserializer b (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isNumberValue
ChatDeserializer b (Lcom/google/gson/JsonElement;)Z isNumberValue
ChatDeserializer c (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isBooleanValue
ChatDeserializer c (Lcom/google/gson/JsonElement;)Z isBooleanValue
ChatDeserializer d (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isArrayNode
ChatDeserializer e (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isObjectNode
ChatDeserializer f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidPrimitive
ChatDeserializer g (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z isValidNode
ChatDeserializer h (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; getAsString
ChatDeserializer b (Lcom/google/gson/JsonElement;Ljava/lang/String;)LItem; convertToItem
ChatDeserializer i (Lcom/google/gson/JsonObject;Ljava/lang/String;)LItem; getAsItem
ChatDeserializer c (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z convertToBoolean
ChatDeserializer j (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z getAsBoolean
ChatDeserializer d (Lcom/google/gson/JsonElement;Ljava/lang/String;)D convertToDouble
ChatDeserializer k (Lcom/google/gson/JsonObject;Ljava/lang/String;)D getAsDouble
ChatDeserializer e (Lcom/google/gson/JsonElement;Ljava/lang/String;)F convertToFloat
ChatDeserializer l (Lcom/google/gson/JsonObject;Ljava/lang/String;)F getAsFloat
ChatDeserializer f (Lcom/google/gson/JsonElement;Ljava/lang/String;)J convertToLong
ChatDeserializer m (Lcom/google/gson/JsonObject;Ljava/lang/String;)J getAsLong
ChatDeserializer g (Lcom/google/gson/JsonElement;Ljava/lang/String;)I convertToInt
ChatDeserializer n (Lcom/google/gson/JsonObject;Ljava/lang/String;)I getAsInt
ChatDeserializer h (Lcom/google/gson/JsonElement;Ljava/lang/String;)B convertToByte
ChatDeserializer o (Lcom/google/gson/JsonObject;Ljava/lang/String;)B getAsByte
ChatDeserializer i (Lcom/google/gson/JsonElement;Ljava/lang/String;)C convertToCharacter
ChatDeserializer p (Lcom/google/gson/JsonObject;Ljava/lang/String;)C getAsCharacter
ChatDeserializer j (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; convertToBigDecimal
ChatDeserializer q (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; getAsBigDecimal
ChatDeserializer k (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; convertToBigInteger
ChatDeserializer r (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; getAsBigInteger
ChatDeserializer l (Lcom/google/gson/JsonElement;Ljava/lang/String;)S convertToShort
ChatDeserializer s (Lcom/google/gson/JsonObject;Ljava/lang/String;)S getAsShort
ChatDeserializer m (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; convertToJsonObject
ChatDeserializer t (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; getAsJsonObject
ChatDeserializer n (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; convertToJsonArray
ChatDeserializer u (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; getAsJsonArray
ChatDeserializer d (Lcom/google/gson/JsonElement;)Ljava/lang/String; getType
HttpUtilities b LOGGER
HttpUtilities a DOWNLOAD_EXECUTOR
InsensitiveStringMap a map
InsensitiveStringMap size ()I size
InsensitiveStringMap isEmpty ()Z isEmpty
InsensitiveStringMap containsKey (Ljava/lang/Object;)Z containsKey
InsensitiveStringMap containsValue (Ljava/lang/Object;)Z containsValue
InsensitiveStringMap get (Ljava/lang/Object;)Ljava/lang/Object; get
InsensitiveStringMap remove (Ljava/lang/Object;)Ljava/lang/Object; remove
InsensitiveStringMap putAll (Ljava/util/Map;)V putAll
InsensitiveStringMap clear ()V clear
InsensitiveStringMap keySet ()Ljava/util/Set; keySet
InsensitiveStringMap values ()Ljava/util/Collection; values
InsensitiveStringMap entrySet ()Ljava/util/Set; entrySet
InsensitiveStringMap put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; put
IntRange a minInclusive
IntRange b maxInclusive
IntRange toString ()Ljava/lang/String; toString
LazyInitVar a factory
LazyInitVar b value
LimitedCapacityList a items
LimitedCapacityList b clazz
LimitedCapacityList c locks
LimitedCapacityList d size
LimitedCapacityList e head
LimitedCapacityList b ()I getMaxSize
LimitedCapacityList c ()[Ljava/lang/Object; getItems
ChatTypeAdapterFactory create (Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter; create
ChatTypeAdapterFactory$1 a val$lowercaseToConstant
ChatTypeAdapterFactory$1 b this$0
ChatTypeAdapterFactory$1 write (Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V write
ChatTypeAdapterFactory$1 read (Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object; read
IProgressUpdate b (LIChatBaseComponent;)V progressStart
IProgressUpdate c (LIChatBaseComponent;)V progressStage
StreamAccumulator a cache
StreamAccumulator b source
StreamAccumulator b (LStreamAccumulator;)Ljava/util/Spliterator; access$100
StreamAccumulator$1 b index
StreamAccumulator$1 a this$0
StreamAccumulator$1 tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
SmoothDouble a targetValue
SmoothDouble b remainingValue
SmoothDouble c lastAmount
ArraySetSorted a comparator
ArraySetSorted b contents
ArraySetSorted c size
ArraySetSorted c (Ljava/lang/Object;)I findIndex
ArraySetSorted b (I)I getInsertionPosition
ArraySetSorted add (Ljava/lang/Object;)Z add
ArraySetSorted c (I)V grow
ArraySetSorted d (I)V removeInternal
ArraySetSorted e (I)Ljava/lang/Object; getInternal
ArraySetSorted remove (Ljava/lang/Object;)Z remove
ArraySetSorted b (Ljava/lang/Object;)Ljava/lang/Object; get
ArraySetSorted b ()Ljava/lang/Object; first
ArraySetSorted c ()Ljava/lang/Object; last
ArraySetSorted contains (Ljava/lang/Object;)Z contains
ArraySetSorted iterator ()Ljava/util/Iterator; iterator
ArraySetSorted size ()I size
ArraySetSorted toArray ()[Ljava/lang/Object; toArray
ArraySetSorted toArray ([Ljava/lang/Object;)[Ljava/lang/Object; toArray
ArraySetSorted clear ()V clear
ArraySetSorted equals (Ljava/lang/Object;)Z equals
ArraySetSorted b (LArraySetSorted;)[Ljava/lang/Object; access$100
ArraySetSorted$ArrayIterator b index
ArraySetSorted$ArrayIterator c last
ArraySetSorted$ArrayIterator a this$0
ArraySetSorted$ArrayIterator hasNext ()Z hasNext
ArraySetSorted$ArrayIterator next ()Ljava/lang/Object; next
ArraySetSorted$ArrayIterator remove ()V remove
UtilColor a STRIP_COLOR_PATTERN
UtilColor b (Ljava/lang/String;)Z isNullOrEmpty
Tuple a a
Tuple b b
Tuple b ()Ljava/lang/Object; getB
Tuple b (Ljava/lang/Object;)V setB
WeightedRandom$WeightedRandomChoice a weight
DataConverterRegistry a SAME
DataConverterRegistry b SAME_NAMESPACED
DataConverterRegistry c DATA_FIXER
DataConverterRegistry b ()Lcom/mojang/datafixers/DataFixer; createFixerUpper
DataConverterRegistry b (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$29
DataConverterRegistry c (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$28
DataConverterRegistry d (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$27
DataConverterRegistry e (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$26
DataConverterRegistry f (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$25
DataConverterRegistry g (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$24
DataConverterRegistry h (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$23
DataConverterRegistry i (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$22
DataConverterRegistry j (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$21
DataConverterRegistry k (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$20
DataConverterRegistry l (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$19
DataConverterRegistry m (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$18
DataConverterRegistry n (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$17
DataConverterRegistry o (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$16
DataConverterRegistry p (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$15
DataConverterRegistry q (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$14
DataConverterRegistry r (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$13
DataConverterRegistry s (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$12
DataConverterRegistry t (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$11
DataConverterRegistry u (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$10
DataConverterRegistry v (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$9
DataConverterRegistry w (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$8
DataConverterRegistry x (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$7
DataConverterRegistry y (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$6
DataConverterRegistry z (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$5
DataConverterRegistry A (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$4
DataConverterRegistry B (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$3
DataConverterRegistry C (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$2
DataConverterRegistry D (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$1
DataConverterRegistry E (Ljava/lang/String;)Ljava/lang/String; lambda$addFixers$0
DataConverterOminousBannerRename makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
AbstractUUIDFix a LOGGER
AbstractUUIDFix b typeReference
AbstractUUIDFix b (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDMLTag
AbstractUUIDFix c (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; replaceUUIDLeastMost
AbstractUUIDFix d (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; createUUIDFromLongs
AbstractUUIDFix b (Lcom/mojang/datafixers/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$replaceUUIDString$1
DataConverterAddChoices a name
DataConverterAddChoices b type
DataConverterAddChoices makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterAdvancement a RENAMES
DataConverterAdvancementBase a name
DataConverterAdvancementBase b renamer
DataConverterAdvancementBase makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterBedBlock makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterBedItem makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterBiome a BIOMES
DataConverterBannerColour b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixTag$4
DataConverterBannerColour c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
DataConverterBannerColour d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
DataConverterBannerColour e (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixTag$0
DataConverterPiston b ()Ljava/lang/IllegalStateException; lambda$fix$0
DataConverterCustomNameTile makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterTileEntity a ID_MAP
DataConverterTileEntity makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterSignText a GSON
DataConverterSignText$1 deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
BlockEntityUUIDFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
BlockEntityUUIDFix b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateSkull
BlockEntityUUIDFix c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateConduit
BlockEntityUUIDFix d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updateSkull$1
DataConverterBlockName makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterBlockRename a name
DataConverterBlockRename makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterBlockRename$1 a val$fixBlock
DataConverterFlattenState makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterLeavesBiome makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterChunkLightRemove makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
ChunkConverterPalette a LOGGER
ChunkConverterPalette b VIRTUAL
ChunkConverterPalette c FIX
ChunkConverterPalette d PUMPKIN
ChunkConverterPalette e SNOWY_PODZOL
ChunkConverterPalette f SNOWY_GRASS
ChunkConverterPalette g SNOWY_MYCELIUM
ChunkConverterPalette h UPPER_SUNFLOWER
ChunkConverterPalette i UPPER_LILAC
ChunkConverterPalette j UPPER_TALL_GRASS
ChunkConverterPalette k UPPER_LARGE_FERN
ChunkConverterPalette l UPPER_ROSE_BUSH
ChunkConverterPalette m UPPER_PEONY
ChunkConverterPalette n FLOWER_POT_MAP
ChunkConverterPalette o SKULL_MAP
ChunkConverterPalette p DOOR_MAP
ChunkConverterPalette q NOTE_BLOCK_MAP
ChunkConverterPalette r DYE_COLOR_MAP
ChunkConverterPalette s BED_BLOCK_MAP
ChunkConverterPalette t BANNER_BLOCK_MAP
ChunkConverterPalette u AIR
ChunkConverterPalette b (Ljava/util/Map;ILjava/lang/String;)V addBanners
ChunkConverterPalette b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; fix
ChunkConverterPalette makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
ChunkConverterPalette b (Ljava/util/HashMap;)V lambda$static$5
ChunkConverterPalette c (Ljava/util/HashMap;)V lambda$static$3
ChunkConverterPalette d (Ljava/util/HashMap;)V lambda$static$2
ChunkConverterPalette e (Ljava/util/HashMap;)V lambda$static$1
ChunkConverterPalette f (Ljava/util/HashMap;)V lambda$static$0
ChunkConverterPalette b ()Ljava/util/BitSet; access$100
ChunkConverterPalette c ()Ljava/util/BitSet; access$200
ChunkConverterPalette d ()Lcom/mojang/datafixers/Dynamic; access$400
ChunkConverterPalette e ()Lcom/mojang/datafixers/Dynamic; access$500
ChunkConverterPalette f ()Lcom/mojang/datafixers/Dynamic; access$600
ChunkConverterPalette g ()Ljava/util/Map; access$700
ChunkConverterPalette h ()Ljava/util/Map; access$800
ChunkConverterPalette i ()Ljava/util/Map; access$900
ChunkConverterPalette j ()Lcom/mojang/datafixers/Dynamic; access$1000
ChunkConverterPalette k ()Ljava/util/Map; access$1100
ChunkConverterPalette l ()Ljava/util/Map; access$1200
ChunkConverterPalette m ()Ljava/util/Map; access$1300
ChunkConverterPalette n ()Lcom/mojang/datafixers/Dynamic; access$1400
ChunkConverterPalette o ()Lcom/mojang/datafixers/Dynamic; access$1500
ChunkConverterPalette p ()Lcom/mojang/datafixers/Dynamic; access$1600
ChunkConverterPalette q ()Lcom/mojang/datafixers/Dynamic; access$1700
ChunkConverterPalette r ()Lcom/mojang/datafixers/Dynamic; access$1800
ChunkConverterPalette s ()Lcom/mojang/datafixers/Dynamic; access$1900
ChunkConverterPalette t ()Lorg/apache/logging/log4j/Logger; access$2100
ChunkConverterPalette$1 a $SwitchMap$net$minecraft$util$datafix$fixes$ChunkPalettedStorageFix$Direction$Axis
ChunkConverterPalette$DataLayer a data
ChunkConverterPalette$DataLayer b (I)I getPosition
ChunkConverterPalette$Section b palette
ChunkConverterPalette$Section c listTag
ChunkConverterPalette$Section d section
ChunkConverterPalette$Section e hasData
ChunkConverterPalette$Section f toFix
ChunkConverterPalette$Section g update
ChunkConverterPalette$Section a y
ChunkConverterPalette$Section h seen
ChunkConverterPalette$Section i buffer
ChunkConverterPalette$Section b (I)I upgrade
ChunkConverterPalette$Section b (Ljava/nio/ByteBuffer;)LChunkConverterPalette$DataLayer; lambda$upgrade$0
ChunkConverterPalette$Section b (LChunkConverterPalette$Section;)Lit/unimi/dsi/fastutil/ints/IntList; access$2000
ChunkConverterPalette$UpgradeChunk a sides
ChunkConverterPalette$UpgradeChunk b sections
ChunkConverterPalette$UpgradeChunk c level
ChunkConverterPalette$UpgradeChunk d x
ChunkConverterPalette$UpgradeChunk e z
ChunkConverterPalette$UpgradeChunk f blockEntities
ChunkConverterPalette$UpgradeChunk b (I)Lcom/mojang/datafixers/Dynamic; getBlockEntity
ChunkConverterPalette$UpgradeChunk c (I)Lcom/mojang/datafixers/Dynamic; removeBlockEntity
ChunkConverterPalette$UpgradeChunk d (I)LChunkConverterPalette$Section; getSection
ChunkConverterPalette$UpgradeChunk b (Ljava/util/stream/Stream;)V lambda$new$1
ChunkConverterPalette$UpgradeChunk b (Lcom/mojang/datafixers/Dynamic;)V lambda$null$0
DataConverterChunkStatus makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterChunkStatus2 a RENAMES_AND_DOWNGRADES
DataConverterChunkStatus2 makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterChunkStructuresTemplateRename a RENAMES
DataConverterChunkStructuresTemplateRename makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterProtoChunk makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterDye a RENAMED_IDS
DataConverterEntityBlockState a MAP
DataConverterEntityBlockState makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterEntityBlockState b (Ljava/lang/Integer;)Ljava/lang/Integer; lambda$null$6
DataConverterEntityBlockState b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$4
DataConverterEntityBlockState c (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
DataConverterEntityBlockState d (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$1
DataConverterEntityCodSalmon a RENAMED_IDS
DataConverterEntityCodSalmon b RENAMED_EGG_IDS
DataConverterCustomNameEntity makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterEquipment makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterHealth a ENTITIES
DataConverterHealth makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterEntity a ID_MAP
DataConverterEntity makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterMinecart a MINECART_BY_ID
DataConverterMinecart makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterHanging a DIRECTIONS
DataConverterHanging makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterHanging b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$makeRule$2
DataConverterHanging b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
DataConverterHanging b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
DataConverterPainting a MAP
EntityProjectileOwnerFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
EntityProjectileOwnerFix b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateOwnerLlamaSpit
EntityProjectileOwnerFix c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateItemPotion
EntityProjectileOwnerFix d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateOwnerThrowable
DataConverterEntityPufferfish a RENAMED_IDS
DataConverterEntityRavagerRename a RENAMED_IDS
DataConverterDropChances makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterDropChances b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
DataConverterDropChances c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
DataConverterEntityName a name
DataConverterEntityName makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterRiding makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterRiding b ()Ljava/lang/IllegalStateException; lambda$null$3
DataConverterRiding c ()Ljava/lang/IllegalStateException; lambda$null$1
DataConverterRiding d ()Ljava/lang/IllegalStateException; lambda$null$0
DataConverterUUID makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterEntityRename a RENAMED_IDS
DataConverterEntityRename b RENAMED_BLOCKS
DataConverterEntityRename c RENAMED_ITEMS
EntityUUIDFix c ABSTRACT_HORSES
EntityUUIDFix d TAMEABLE_ANIMALS
EntityUUIDFix e ANIMALS
EntityUUIDFix f MOBS
EntityUUIDFix g LIVING_ENTITIES
EntityUUIDFix h PROJECTILES
EntityUUIDFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
EntityUUIDFix b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updatePiglin
EntityUUIDFix c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateEvokerFangs
EntityUUIDFix d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateZombieVillager
EntityUUIDFix e (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateAreaEffectCloud
EntityUUIDFix f (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateShulkerBullet
EntityUUIDFix g (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateItem
EntityUUIDFix h (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateFox
EntityUUIDFix i (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateHurtBy
EntityUUIDFix j (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateAnimalOwner
EntityUUIDFix k (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateAnimal
EntityUUIDFix l (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateMob
EntityUUIDFix m (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateLivingEntity
EntityUUIDFix n (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateProjectile
EntityUUIDFix o (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateEntityUUID
EntityUUIDFix b (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updateLivingEntity$13
EntityUUIDFix p (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$12
EntityUUIDFix c (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$11
EntityUUIDFix q (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$10
EntityUUIDFix r (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updateMob$9
EntityUUIDFix d (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updateFox$8
EntityUUIDFix e (Lcom/mojang/datafixers/Dynamic;Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updateFox$7
EntityUUIDFix s (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$6
EntityUUIDFix t (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$5
EntityUUIDFix u (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updatePiglin$4
EntityUUIDFix v (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$3
EntityUUIDFix w (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
EntityUUIDFix x (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
DataConverterWolf b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixTag$0
DataConverterZombie a RANDOM
EntityZombifiedPiglinRenameFix a RENAMED_IDS
DataConverterPOIRebuild makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterPOIRebuild b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$cap$4
DataConverterPOIRebuild c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
DataConverterPOIRebuild b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
FurnaceRecipeFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
FurnaceRecipeFix b (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$2
FurnaceRecipeFix c (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
FurnaceRecipeFix d (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$0
DataConverterHeightmapRenaming makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterIglooMetadataRemoval makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterIglooMetadataRemoval b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; removeIglooPieces
DataConverterIglooMetadataRemoval c (Lcom/mojang/datafixers/Dynamic;)Z isIglooPiece
DataConverterIglooMetadataRemoval d (Lcom/mojang/datafixers/Dynamic;)Z lambda$null$1
DataConverterIglooMetadataRemoval b (Ljava/util/stream/Stream;)Ljava/lang/Boolean; lambda$fixTag$0
DataConverterBanner makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterCustomNameItem makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterItemLoreComponentize makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterItemLoreComponentize b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
DataConverterItemLoreComponentize c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
DataConverterItemLoreComponentize d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
DataConverterPotionId a POTIONS
DataConverterPotionId makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterItemName a name
DataConverterItemName makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterItemName$1 a val$fixItem
DataConverterShulkerBoxItem a NAMES_BY_COLOR
DataConverterShulkerBoxItem makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterItemStackEnchantment a MAP
DataConverterItemStackEnchantment makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterItemStackEnchantment b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixTag$7
DataConverterItemStackEnchantment c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$5
DataConverterItemStackEnchantment b (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; lambda$fixTag$4
DataConverterItemStackEnchantment d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$3
DataConverterMap makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterFlattenSpawnEgg a MAP
DataConverterFlattenSpawnEgg makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterFlatten a MAP
DataConverterFlatten b IDS
DataConverterFlatten c DAMAGE_IDS
DataConverterFlatten makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
ItemStackUUIDFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
ItemStackUUIDFix b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
ItemStackUUIDFix c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
DataConverterPotionWater makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterBook makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterBook b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
DataConverterLeaves a DIRECTIONS
DataConverterLeaves b LEAVES
DataConverterLeaves c LOGS
DataConverterLeaves makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterLeaves b (I)I getY
DataConverterLeaves c (I)I getZ
DataConverterLeaves b ()Ljava/util/Set; access$100
DataConverterLeaves$LeavesSection e leaveIds
DataConverterLeaves$LeavesSection f logIds
DataConverterLeaves$LeavesSection g stateToIdMap
DataConverterLeaves$LeavesSection b (I)Z isLeaf
DataConverterLeaves$LeavesSection d (I)I getDistance
DataConverterLeaves$Section e blockStateType
DataConverterLeaves$Section a paletteFinder
DataConverterLeaves$Section b palette
DataConverterLeaves$Section c index
DataConverterLeaves$Section d storage
DataConverterLeaves$Section b ()Z isSkippable
DataConverterLeaves$Section c (I)I getBlock
DataConverterLeaves$Section c ()I getIndex
DataConverterLeaves$Section b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; lambda$write$2
DataConverterLeaves$Section c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$write$1
DataConverterLevelDataGeneratorOptions a MAP
DataConverterLevelDataGeneratorOptions makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterLevelDataGeneratorOptions b (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
DataConverterLevelDataGeneratorOptions b (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$4
DataConverterWorldGenSettings a SPLITTER
DataConverterWorldGenSettings b LAYER_SPLITTER
DataConverterWorldGenSettings c OLD_AMOUNT_SPLITTER
DataConverterWorldGenSettings d AMOUNT_SPLITTER
DataConverterWorldGenSettings e BLOCK_SPLITTER
DataConverterWorldGenSettings makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterWorldGenSettings b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fix$1
LevelUUIDFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
LevelUUIDFix b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateWanderingTrader
LevelUUIDFix c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateDragonFight
LevelUUIDFix d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateCustomBossEvents
LevelUUIDFix e (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updateCustomBossEvents$12
LevelUUIDFix f (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$10
LevelUUIDFix g (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$8
LevelUUIDFix h (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$7
LevelUUIDFix i (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updateDragonFight$6
LevelUUIDFix b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$5
LevelUUIDFix j (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$4
LevelUUIDFix k (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$3
LevelUUIDFix b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
LevelUUIDFix l (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
DataConverterMapId makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
MemoryExpiryDataFix b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateBrain
MemoryExpiryDataFix c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateMemories
MemoryExpiryDataFix d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; wrapMemoryValue
DataConverterMobSpawner makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterMobSpawner b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fix$0
DataConverterNamedEntity a name
DataConverterNamedEntity b entityName
DataConverterNamedEntity c type
DataConverterNamedEntity makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterNewVillage makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterNewVillage b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$11
DataConverterNewVillage c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$7
DataConverterNewVillage d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$6
DataConverterNewVillage b (Lcom/mojang/datafixers/util/Pair;)Z lambda$null$0
DataConverterObjectiveDisplayName makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterObjectiveRenderType makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterOptionsAddTextBackground makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterVBO makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterKeybind a MAP
DataConverterKeybind makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterKeybind2 makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterLang makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
PlayerUUIDFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
PlayerUUIDFix b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$1
PlayerUUIDFix b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
DataConverterPOIRename makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterPOIRename b (Lcom/mojang/datafixers/Dynamic;)Ljava/util/Optional; renameRecords
DataConverterPOIRename c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$7
DataConverterPOIRename d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$6
DataConverterPOIRename e (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$cap$5
DataConverterPOIRename f (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$3
DataConverterPOIRename g (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
DataConverterPOIRename b (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; lambda$null$0
DataConverterRecipes a RECIPES
DataConverterRecipeBase a name
DataConverterRecipeBase b renamer
DataConverterRecipeBase makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterRecipeRename a RECIPES
RenameBiomesFix a name
RenameBiomesFix b biomes
RenameBiomesFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterCoralFan a RENAMED_IDS
DataConverterCoral a RENAMED_IDS
DataConverterPOI makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
SavedDataUUIDFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
SavedDataUUIDFix b (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$null$6
SavedDataUUIDFix b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$5
SavedDataUUIDFix c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$4
SavedDataUUIDFix d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$3
SavedDataUUIDFix e (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$2
SavedDataUUIDFix f (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$1
SavedDataUUIDFix g (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$0
DataConverterVillage makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterVillage b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateChildren
DataConverterVillage c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateSingleField
DataConverterVillage d (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; updateDoubleField
DataConverterVillage e (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$updateChildren$0
DataConverterEntityRenameAbstract a name
DataConverterEntityRenameAbstract makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterStatistic a SKIP
DataConverterStatistic b CUSTOM_MAP
DataConverterStatistic c ITEM_KEYS
DataConverterStatistic d ENTITY_KEYS
DataConverterStatistic e ENTITIES
DataConverterStatistic makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterStatistic b (Ljava/lang/String;)Ljava/lang/String; upgradeBlock
DataConverterStructureReference makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterStructureReference b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$setCountToAtLeastOne$2
DataConverterSwimStats makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterTeamDisplayName makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterTrappedChest a LOGGER
DataConverterTrappedChest makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterTrappedChest$TrappedChestSection e chestIds
DataConverterVillagerLevelXp a LEVEL_XP_THRESHOLDS
DataConverterVillagerLevelXp makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterVillagerLevelXp b (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; addXpFromLevel
DataConverterVillagerLevelXp b (ILcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$addLevel$5
DataConverterVillagerLevelXp c (ILcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$null$4
DataConverterVillagerLevelXp b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional; lambda$null$0
DataConverterVillagerTrade b (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; lambda$fix$0
WallPropertyFix a WALL_BLOCKS
WallPropertyFix makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
WallPropertyFix b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$upgradeBlockStateTag$2
WallPropertyFix c (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/Dynamic; lambda$fixWallProperty$1
DataConverterShoulderEntity a name
DataConverterShoulderEntity b type
DataConverterShoulderEntity makeRule ()Lcom/mojang/datafixers/TypeRewriteRule; makeRule
DataConverterSchemaNamed getChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; getChoiceType
DataConverterSchemaV100 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV100 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV100 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$4
DataConverterSchemaV100 b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
DataConverterSchemaV100 c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
DataConverterSchemaV100 c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
DataConverterSchemaV102 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV1022 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV1022 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
DataConverterSchemaV106 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV107 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1125 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1125 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV1125 b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
DataConverterSchemaV135 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV135 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
DataConverterSchemaV143 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1451 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1451_1 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV1451_2 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1451_3 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1451_3 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
DataConverterSchemaV1451_3 c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
DataConverterSchemaV1451_3 d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
DataConverterSchemaV1451_3 e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
DataConverterSchemaV1451_3 f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
DataConverterSchemaV1451_3 g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
DataConverterSchemaV1451_3 h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
DataConverterSchemaV1451_3 i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
DataConverterSchemaV1451_3 j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
DataConverterSchemaV1451_3 k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
DataConverterSchemaV1451_4 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV1451_5 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1451_6 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV1451_7 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV1460 b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
DataConverterSchemaV1460 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1460 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1460 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV1460 b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$44
DataConverterSchemaV1460 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$42
DataConverterSchemaV1460 c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$41
DataConverterSchemaV1460 d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$40
DataConverterSchemaV1460 e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$38
DataConverterSchemaV1460 c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$37
DataConverterSchemaV1460 d ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$36
DataConverterSchemaV1460 f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$35
DataConverterSchemaV1460 g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$34
DataConverterSchemaV1460 h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$33
DataConverterSchemaV1460 i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
DataConverterSchemaV1460 b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
DataConverterSchemaV1460 j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
DataConverterSchemaV1460 k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
DataConverterSchemaV1460 e ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$27
DataConverterSchemaV1460 b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$25
DataConverterSchemaV1460 c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$24
DataConverterSchemaV1460 d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$23
DataConverterSchemaV1460 e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
DataConverterSchemaV1460 f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
DataConverterSchemaV1460 g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
DataConverterSchemaV1460 h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
DataConverterSchemaV1460 i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
DataConverterSchemaV1460 j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
DataConverterSchemaV1460 k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
DataConverterSchemaV1460 l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
DataConverterSchemaV1460 m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
DataConverterSchemaV1460 n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
DataConverterSchemaV1460 o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
DataConverterSchemaV1460 p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
DataConverterSchemaV1460 q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
DataConverterSchemaV1460 r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
DataConverterSchemaV1460 s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
DataConverterSchemaV1460 t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
DataConverterSchemaV1460 u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
DataConverterSchemaV1460 v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
DataConverterSchemaV1460 w (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
DataConverterSchemaV1460 x (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
DataConverterSchemaV1460 y (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
DataConverterSchemaV1460 l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$1
DataConverterSchemaV1460 m (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
DataConverterSchemaV1466 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV1466 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1466 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$0
DataConverterSchemaV1470 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1481 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1483 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1486 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1510 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1800 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1801 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1904 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1906 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1909 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1920 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV1928 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1928 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
DataConverterSchemaV1929 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV1929 b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
DataConverterSchemaV1931 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV2100 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV2100 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV2100 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
V2501 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
V2501 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
V2501 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$1
V2501 c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerFurnace$0
V2502 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
V2505 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
V2509 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV501 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV700 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV701 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV702 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV703 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV703 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
DataConverterSchemaV703 c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
DataConverterSchemaV703 d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$1
DataConverterSchemaV703 e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$0
DataConverterSchemaV704 a ITEM_TO_BLOCKENTITY
DataConverterSchemaV704 b ADD_NAMES
DataConverterSchemaV704 getChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; getChoiceType
DataConverterSchemaV704 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV704 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV704 b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$2
DataConverterSchemaV704 c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$1
DataConverterSchemaV704 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$0
DataConverterSchemaV704$1 apply (Lcom/mojang/datafixers/types/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
DataConverterSchemaV705 a ADD_NAMES
DataConverterSchemaV705 b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
DataConverterSchemaV705 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV705 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV705 b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$22
DataConverterSchemaV705 c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$21
DataConverterSchemaV705 d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$20
DataConverterSchemaV705 e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$19
DataConverterSchemaV705 f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
DataConverterSchemaV705 g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
DataConverterSchemaV705 h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
DataConverterSchemaV705 i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
DataConverterSchemaV705 j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
DataConverterSchemaV705 k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
DataConverterSchemaV705 l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
DataConverterSchemaV705 m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
DataConverterSchemaV705 n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
DataConverterSchemaV705 o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
DataConverterSchemaV705 p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
DataConverterSchemaV705 q (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
DataConverterSchemaV705 r (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
DataConverterSchemaV705 s (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
DataConverterSchemaV705 t (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
DataConverterSchemaV705 u (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$3
DataConverterSchemaV705 v (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$2
DataConverterSchemaV705 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
DataConverterSchemaV705 c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
DataConverterSchemaV705$1 apply (Lcom/mojang/datafixers/types/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
DataConverterSchemaV808 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV99 b LOGGER
DataConverterSchemaV99 c ITEM_TO_BLOCKENTITY
DataConverterSchemaV99 a ADD_NAMES
DataConverterSchemaV99 b (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerThrowableProjectile
DataConverterSchemaV99 c (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerMinecart
DataConverterSchemaV99 d (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V registerInventory
DataConverterSchemaV99 registerEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerEntities
DataConverterSchemaV99 registerBlockEntities (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; registerBlockEntities
DataConverterSchemaV99 registerTypes (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V registerTypes
DataConverterSchemaV99 b (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$31
DataConverterSchemaV99 b ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$30
DataConverterSchemaV99 c ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$29
DataConverterSchemaV99 c (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$28
DataConverterSchemaV99 d ()Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$26
DataConverterSchemaV99 d (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$25
DataConverterSchemaV99 b (Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$24
DataConverterSchemaV99 e (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$23
DataConverterSchemaV99 f (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerTypes$22
DataConverterSchemaV99 b (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$20
DataConverterSchemaV99 c (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerBlockEntities$19
DataConverterSchemaV99 d (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$18
DataConverterSchemaV99 e (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$17
DataConverterSchemaV99 f (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$16
DataConverterSchemaV99 g (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$15
DataConverterSchemaV99 g (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$14
DataConverterSchemaV99 h (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$13
DataConverterSchemaV99 h (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$12
DataConverterSchemaV99 i (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$11
DataConverterSchemaV99 j (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$10
DataConverterSchemaV99 k (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$9
DataConverterSchemaV99 l (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$8
DataConverterSchemaV99 m (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$7
DataConverterSchemaV99 n (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$6
DataConverterSchemaV99 o (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$5
DataConverterSchemaV99 p (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerEntities$4
DataConverterSchemaV99 i (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerInventory$3
DataConverterSchemaV99 j (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMinecart$2
DataConverterSchemaV99 k (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerThrowableProjectile$1
DataConverterSchemaV99 l (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; lambda$registerMob$0
DataConverterSchemaV99$1 apply (Lcom/mojang/datafixers/types/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object; apply
MethodProfiler a WARNING_TIME_NANOS
MethodProfiler b LOGGER
MethodProfiler c paths
MethodProfiler d startTimes
MethodProfiler e entries
MethodProfiler f getTickTime
MethodProfiler g getRealTime
MethodProfiler h startTimeNano
MethodProfiler i startTimeTicks
MethodProfiler j path
MethodProfiler k started
MethodProfiler l currentEntry
MethodProfiler m warn
MethodProfiler b ()V endTick
MethodProfiler c ()V pop
MethodProfiler b (Ljava/lang/String;)V popPush
MethodProfiler b (Ljava/util/function/Supplier;)V popPush
MethodProfiler e ()LMethodProfiler$PathEntry; getCurrentEntry
MethodProfiler c (Ljava/lang/String;)V incrementCounter
MethodProfiler c (Ljava/util/function/Supplier;)V incrementCounter
MethodProfiler d ()LMethodProfilerResults; getResults
MethodProfiler d (Ljava/lang/String;)LMethodProfiler$PathEntry; lambda$getCurrentEntry$3
MethodProfiler f ()Ljava/lang/Object; lambda$pop$1
MethodProfiler g ()Ljava/lang/Object; lambda$endTick$0
MethodProfiler$PathEntry a duration
MethodProfiler$PathEntry b count
MethodProfiler$PathEntry c counters
MethodProfiler$PathEntry b ()J getCount
MethodProfiler$PathEntry c ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
MethodProfiler$PathEntry b (LMethodProfiler$PathEntry;)J access$100
MethodProfiler$PathEntry b (LMethodProfiler$PathEntry;J)J access$102
MethodProfiler$PathEntry c (LMethodProfiler$PathEntry;)Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap; access$200
ContinuousProfiler a realTime
ContinuousProfiler b tickCount
ContinuousProfiler c profiler
ContinuousProfiler b ()V disable
ContinuousProfiler c ()V enable
ContinuousProfiler d ()LGameProfilerFiller; getFiller
ContinuousProfiler e ()LMethodProfilerResults; getResults
MethodProfilerResultsEmpty a EMPTY
MethodProfilerResultsEmpty b ()I getStartTimeTicks
MethodProfilerResultsEmpty c ()J getEndTimeNano
MethodProfilerResultsEmpty d ()I getEndTimeTicks
MethodProfilerResultsEmpty e ()Ljava/lang/String; getProfilerResults
MethodProfilerResultsFilled a LOGGER
MethodProfilerResultsFilled b EMPTY
MethodProfilerResultsFilled c SPLITTER
MethodProfilerResultsFilled d COUNTER_ENTRY_COMPARATOR
MethodProfilerResultsFilled e entries
MethodProfilerResultsFilled f startTimeNano
MethodProfilerResultsFilled g startTimeTicks
MethodProfilerResultsFilled h endTimeNano
MethodProfilerResultsFilled i endTimeTicks
MethodProfilerResultsFilled j tickDuration
MethodProfilerResultsFilled c (Ljava/lang/String;)LMethodProfilerResult; getEntry
MethodProfilerResultsFilled h ()Ljava/util/Map; getCounterValues
MethodProfilerResultsFilled b ()I getStartTimeTicks
MethodProfilerResultsFilled c ()J getEndTimeNano
MethodProfilerResultsFilled d ()I getEndTimeTicks
MethodProfilerResultsFilled e ()Ljava/lang/String; getProfilerResults
MethodProfilerResultsFilled i ()Ljava/lang/String; getComment
MethodProfilerResultsFilled f ()I getTickDuration
MethodProfilerResultsFilled d (Ljava/lang/String;)LMethodProfilerResultsFilled$CounterCollector; lambda$null$1
MethodProfilerResultsFilled$1 b ()J getCount
MethodProfilerResultsFilled$1 c ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
MethodProfilerResultsFilled$CounterCollector a selfValue
MethodProfilerResultsFilled$CounterCollector b totalValue
MethodProfilerResultsFilled$CounterCollector c children
MethodProfilerResultsFilled$CounterCollector b (LMethodProfilerResultsFilled$CounterCollector;)J access$100
MethodProfilerResultsFilled$CounterCollector c (LMethodProfilerResultsFilled$CounterCollector;)Ljava/util/Map; access$200
GameProfilerDisabled a INSTANCE
GameProfilerDisabled b ()V endTick
GameProfilerDisabled c ()V pop
GameProfilerDisabled b (Ljava/lang/String;)V popPush
GameProfilerDisabled b (Ljava/util/function/Supplier;)V popPush
GameProfilerDisabled c (Ljava/lang/String;)V incrementCounter
GameProfilerDisabled c (Ljava/util/function/Supplier;)V incrementCounter
GameProfilerDisabled d ()LMethodProfilerResults; getResults
GameProfilerFillerActive d ()LMethodProfilerResults; getResults
MethodProfilerResults b ()I getStartTimeTicks
MethodProfilerResults c ()J getEndTimeNano
MethodProfilerResults d ()I getEndTimeTicks
MethodProfilerResults g ()J getNanoDuration
MethodProfilerResults f ()I getTickDuration
MethodProfilerResults e ()Ljava/lang/String; getProfilerResults
MethodProfilerResults b (Ljava/lang/String;)Ljava/lang/String; demanglePath
GameProfilerFiller$1 a val$first
GameProfilerFiller$1 b val$second
GameProfilerFiller$1 b ()V endTick
GameProfilerFiller$1 c ()V pop
GameProfilerFiller$1 b (Ljava/lang/String;)V popPush
GameProfilerFiller$1 b (Ljava/util/function/Supplier;)V popPush
GameProfilerFiller$1 c (Ljava/lang/String;)V incrementCounter
GameProfilerFiller$1 c (Ljava/util/function/Supplier;)V incrementCounter
MethodProfilerResult b ()J getCount
MethodProfilerResult c ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; getCounters
MethodProfilerResultsField a percentage
MethodProfilerResultsField b globalPercentage
MethodProfilerResultsField c count
MethodProfilerResultsField d name
MethodProfilerResultsField compareTo (Ljava/lang/Object;)I compareTo
SingleTickProfiler a LOGGER
SingleTickProfiler b realTime
SingleTickProfiler c saveThreshold
SingleTickProfiler d tick
SingleTickProfiler e location
SingleTickProfiler f profiler
SingleTickProfiler b ()V endTick
SingleTickProfiler c ()I lambda$startTick$0
NamedThreadFactory a LOGGER
NamedThreadFactory b group
NamedThreadFactory c threadNumber
NamedThreadFactory d namePrefix
NamedThreadFactory newThread (Ljava/lang/Runnable;)Ljava/lang/Thread; newThread
Mailbox bk ()Ljava/lang/String; name
Mailbox close ()V close
Mailbox$1 a val$name
Mailbox$1 b val$tell
Mailbox$1 bk ()Ljava/lang/String; name
Mailbox$1 toString ()Ljava/lang/String; toString
ThreadedMailbox b LOGGER
ThreadedMailbox c status
ThreadedMailbox a queue
ThreadedMailbox d dispatcher
ThreadedMailbox e name
ThreadedMailbox b ()V setAsIdle
ThreadedMailbox c ()Z canBeScheduled
ThreadedMailbox close ()V close
ThreadedMailbox d ()Z shouldProcess
ThreadedMailbox e ()Z pollTask
ThreadedMailbox run ()V run
ThreadedMailbox f ()V registerForExecution
ThreadedMailbox toString ()Ljava/lang/String; toString
ThreadedMailbox bk ()Ljava/lang/String; name
PairedQueue b ()Z isEmpty
PairedQueue$FixedPriorityQueue a queueList
PairedQueue$FixedPriorityQueue c ()Ljava/lang/Runnable; pop
PairedQueue$FixedPriorityQueue b ()Z isEmpty
PairedQueue$IntRunnable a priority
PairedQueue$IntRunnable b task
PairedQueue$IntRunnable run ()V run
PairedQueue$QueueStrictQueue a queue
PairedQueue$QueueStrictQueue b ()Z isEmpty
WorldUpgrader a LOGGER
WorldUpgrader b THREAD_FACTORY
WorldUpgrader c levelName
WorldUpgrader d eraseCache
WorldUpgrader e levelStorage
WorldUpgrader f thread
WorldUpgrader g pathToWorld
WorldUpgrader h running
WorldUpgrader i finished
WorldUpgrader j progress
WorldUpgrader k totalChunks
WorldUpgrader l converted
WorldUpgrader m skipped
WorldUpgrader n progressMap
WorldUpgrader o status
WorldUpgrader p REGEX
WorldUpgrader q overworldDataStorage
WorldUpgrader i ()V work
WorldUpgrader b (LDimensionManager;)Ljava/util/List; getAllChunkPos
WorldUpgrader b ()Z isFinished
WorldUpgrader c ()F getProgress
WorldUpgrader d ()I getTotalChunks
WorldUpgrader e ()I getConverted
WorldUpgrader f ()I getSkipped
WorldUpgrader g ()LIChatBaseComponent; getStatus
WorldUpgrader h ()Ljava/lang/String; getLevelName
WorldUpgrader j ()LWorldPersistentData; lambda$work$1
ContainerUtil b (LNBTTagCompound;LNonNullList;)V loadAllItems
DifficultyDamageScaler a base
DifficultyDamageScaler b effectiveDifficulty
DifficultyDamageScaler b ()F getEffectiveDifficulty
DifficultyDamageScaler c ()Z isHard
DifficultyDamageScaler d ()F getSpecialMultiplier
TileInventory a title
TileInventory b menuConstructor
TileInventory d ()LIChatBaseComponent; getDisplayName
TileInventory createMenu (ILPlayerInventory;LEntityHuman;)LContainer; createMenu
MojangStatisticsGenerator a fixedData
MojangStatisticsGenerator b dynamicData
MojangStatisticsGenerator c token
MojangStatisticsGenerator d url
MojangStatisticsGenerator e populator
MojangStatisticsGenerator f timer
MojangStatisticsGenerator g lock
MojangStatisticsGenerator h startupTime
MojangStatisticsGenerator i started
MojangStatisticsGenerator j count
MojangStatisticsGenerator h ()V populateFixedData
MojangStatisticsGenerator i ()V setJvmArgs
MojangStatisticsGenerator b ()V prepare
MojangStatisticsGenerator b (Ljava/lang/String;Ljava/lang/Object;)V setFixedData
MojangStatisticsGenerator c ()Ljava/util/Map; getValues
MojangStatisticsGenerator d ()Z isStarted
MojangStatisticsGenerator e ()V interrupt
MojangStatisticsGenerator f ()Ljava/lang/String; getToken
MojangStatisticsGenerator g ()J getStartupTime
MojangStatisticsGenerator b (LMojangStatisticsGenerator;)Ljava/lang/Object; access$100
MojangStatisticsGenerator c (LMojangStatisticsGenerator;)Ljava/util/Map; access$200
MojangStatisticsGenerator d (LMojangStatisticsGenerator;)I access$300
MojangStatisticsGenerator e (LMojangStatisticsGenerator;)Ljava/util/Map; access$400
MojangStatisticsGenerator f (LMojangStatisticsGenerator;)I access$308
MojangStatisticsGenerator g (LMojangStatisticsGenerator;)Ljava/lang/String; access$500
MojangStatisticsGenerator h (LMojangStatisticsGenerator;)Ljava/net/URL; access$600
MojangStatisticsGenerator$1 a this$0
MojangStatisticsGenerator$1 run ()V run
IMojangStatistics b (LMojangStatisticsGenerator;)V populateSnooperInitial
IMojangStatistics W ()Z isSnooperEnabled
CombatEntry a source
CombatEntry b time
CombatEntry c damage
CombatEntry d health
CombatEntry e location
CombatEntry f fallDistance
CombatEntry b ()I getTime
CombatEntry c ()F getDamage
CombatEntry d ()F getHealthBeforeDamage
CombatEntry e ()F getHealthAfterDamage
CombatEntry f ()Z isCombatRelated
CombatEntry g ()Ljava/lang/String; getLocation
CombatEntry h ()LIChatBaseComponent; getAttackerName
CombatEntry i ()LEntity; getAttacker
CombatEntry j ()F getFallDistance
DamageSourceNetherBed d (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
MobEffectAbsorption b (LEntityLiving;LAttributeMapBase;I)V addAttributeModifiers
MobEffectAttackDamage a multiplier
MobEffectUtil b (LEntityLiving;)I getDigSpeedAmplification
MobEffectUtil c (LEntityLiving;)Z hasWaterBreathing
EntityAgeable$AgableMobGroupData a groupSize
EntityAgeable$AgableMobGroupData b shouldSpawnBaby
EntityAgeable$AgableMobGroupData c babySpawnChance
EntityAgeable$AgableMobGroupData b ()V increaseGroupSizeByOne
EntityAgeable$AgableMobGroupData c ()Z isShouldSpawnBaby
EntityAgeable$AgableMobGroupData d ()F getBabySpawnChance
Entity$1 a $SwitchMap$net$minecraft$world$level$block$Rotation
Entity$1 b $SwitchMap$net$minecraft$world$level$block$Mirror
Entity$MoveCallback accept (LEntity;DDD)V accept
IEntitySelector a ENTITY_STILL_ALIVE
IEntitySelector b LIVING_ENTITY_STILL_ALIVE
IEntitySelector c ENTITY_NOT_BEING_RIDDEN
IEntitySelector d CONTAINER_ENTITY_SELECTOR
IEntitySelector e NO_CREATIVE_OR_SPECTATOR
IEntitySelector f ATTACK_ALLOWED
IEntitySelector g NO_SPECTATORS
IEntitySelector b (LEntity;)Ljava/util/function/Predicate; notRiding
IEntitySelector c (LEntity;)Z lambda$static$4
IEntitySelector d (LEntity;)Z lambda$static$3
IEntitySelector e (LEntity;)Z lambda$static$2
IEntitySelector f (LEntity;)Z lambda$static$1
IEntitySelector g (LEntity;)Z lambda$static$0
IEntitySelector$EntitySelectorEquipable a itemStack
IEntitySelector$EntitySelectorEquipable test (Ljava/lang/Object;)Z test
EntityTypes$Builder a factory
EntityTypes$Builder b category
EntityTypes$Builder c serialize
EntityTypes$Builder d summon
EntityTypes$Builder e fireImmune
EntityTypes$Builder f canSpawnFarFromPlayer
EntityTypes$Builder g instantDespawnDistance
EntityTypes$Builder h noDespawnDistance
EntityTypes$Builder i dimensions
EntityTypes$Builder b ()LEntityTypes$Builder; noSave
EntityTypes$Builder c ()LEntityTypes$Builder; fireImmune
EntityTypes$Builder d ()LEntityTypes$Builder; canSpawnFarFromPlayer
EntityTypes$Builder b (I)LEntityTypes$Builder; noDespawnDistance
EntityTypes$EntityFactory create (LEntityTypes;LWorld;)LEntity; create
EntityFlying b (FF)Z causeFallDamage
EntityFlying e (LVec3D;)V travel
EntityFlying y_ ()Z onClimbable
EntityLiving$1 a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
EntityLiving$1 b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
EntityInsentient$1 a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
EntityInsentient$1 b $SwitchMap$net$minecraft$world$entity$EquipmentSlot
OwnableEntity C_ ()Ljava/util/UUID; getOwnerUUID
OwnableEntity D_ ()LEntity; getOwner
EntityCreature f (LBlockPosition;)F getWalkTargetValue
EntityCreature ev ()Z isPathFinding
EntityCreature eo ()V tickLeash
EntityCreature ew ()D followLeashSpeed
EntityCreature t (F)V onLeashDistance
IJumpable a_ (I)V onPlayerJump
IJumpable G_ ()Z canJump
IJumpable H_ ()F getJumpRidingScale
IJumpable a_ (F)V setJumpRidingScale
IJumpable b (I)V handleStartJump
IJumpable c ()V handleStopJump
PowerableMob J_ ()Z isPowered
EntityPositionTypes a DATA_BY_TYPE
EntityPositionTypes b (LEntityTypes;)LHeightMap$Type; getHeightmapType
EntityPositionTypes$Data a heightMap
EntityPositionTypes$Data b placement
EntityPositionTypes$Data c predicate
EntityPositionTypes$Data b (LEntityPositionTypes$Data;)LHeightMap$Type; access$100
EntityPositionTypes$Data c (LEntityPositionTypes$Data;)LEntityPositionTypes$SpawnPredicate; access$200
EntityPositionTypes$SpawnPredicate test (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z test
AttributeBase a parent
AttributeBase b name
AttributeBase c defaultValue
AttributeBase d syncable
AttributeBase b ()D getDefaultValue
AttributeBase c ()Z isClientSyncable
AttributeBase d ()LIAttribute; getParentAttribute
AttributeBase hashCode ()I hashCode
AttributeBase equals (Ljava/lang/Object;)Z equals
AttributeMapBase a attributesByObject
AttributeMapBase b attributesByName
AttributeMapBase c descendantsByParent
AttributeMapBase b (LIAttribute;)LAttributeInstance; registerAttribute
AttributeMapBase c (LIAttribute;)LAttributeInstance; createAttributeInstance
AttributeMapBase b (Lcom/google/common/collect/Multimap;)V addAttributeModifiers
AttributeMapBase d (LIAttribute;)Ljava/util/Collection; getDescendants
AttributeModifiable a attributeMap
AttributeModifiable b attribute
AttributeModifiable c modifiers
AttributeModifiable d modifiersByName
AttributeModifiable e modifierById
AttributeModifiable f baseValue
AttributeModifiable g dirty
AttributeModifiable h cachedValue
AttributeModifiable b ()D getBaseValue
AttributeModifiable c ()Ljava/util/Set; getModifiers
AttributeModifiable b (LAttributeModifier;)V addModifier
AttributeModifiable f ()V setDirty
AttributeModifiable c (LAttributeModifier;)V removeModifier
AttributeModifiable b (Ljava/lang/String;)V removeModifiers
AttributeModifiable b (Ljava/util/UUID;)V removeModifier
AttributeModifiable d ()V removeModifiers
AttributeModifiable e ()D getValue
AttributeModifiable g ()D calculateValue
AttributeModifiable b (LAttributeModifier$Operation;)Ljava/util/Collection; getAppliedModifiers
AttributeModifiable c (Ljava/lang/String;)Ljava/util/Set; lambda$addModifier$0
BehaviorFindPosition b poiType
BehaviorFindPosition c memoryType
BehaviorFindPosition d onlyIfAdult
BehaviorFindPosition e lastUpdate
BehaviorFindPosition f batchCache
BehaviorFindPosition g triedCount
AnimalMakeLove b partnerType
AnimalMakeLove c speedModifier
AnimalMakeLove d spawnChildAtTime
AnimalMakeLove b (LWorldServer;LEntityAnimal;J)Z canStillUse
AnimalMakeLove c (LWorldServer;LEntityAnimal;J)V tick
AnimalMakeLove d (LWorldServer;LEntityAnimal;J)V stop
AnimalMakeLove b (LEntityAnimal;)Z hasBreedTargetOfRightType
AnimalMakeLove c (LEntityAnimal;)Ljava/util/Optional; findValidBreedPartner
AnimalMakeLove b (LWorldServer;LEntityLiving;J)Z canStillUse
AnimalMakeLove c (LWorldServer;LEntityLiving;J)V stop
AnimalMakeLove d (LWorldServer;LEntityLiving;J)V tick
AnimalMakeLove b (LEntityLiving;)Z lambda$findValidBreedPartner$0
BackUpIfTooClose b tooCloseDistance
BackUpIfTooClose c strafeSpeed
BackUpIfTooClose b (LEntityInsentient;)Z isTargetTooClose
BackUpIfTooClose c (LEntityInsentient;)LEntityLiving; getTarget
BecomePassiveIfMemoryPresent b pacifyDuration
Behavior a entryCondition
Behavior b status
Behavior c endTimestamp
Behavior d minDuration
Behavior e maxDuration
Behavior e (LWorldServer;LEntityLiving;J)Z tryStart
Behavior f (LWorldServer;LEntityLiving;J)V tickOrStop
Behavior d (LWorldServer;LEntityLiving;J)V tick
Behavior g (LWorldServer;LEntityLiving;J)V doStop
Behavior c (LWorldServer;LEntityLiving;J)V stop
Behavior b (LWorldServer;LEntityLiving;J)Z canStillUse
Behavior toString ()Ljava/lang/String; toString
BehaviorUtil d (LEntityLiving;LEntityLiving;)V lookAtEachOther
BehaviorUtil b (LEntityLiving;LEntityLiving;F)V setWalkAndLookTargetMemoriesToEachOther
BehaviorUtil b (LEntityLiving;LEntityLiving;)Z isWithinMeleeAttackRange
BehaviorUtil c (LEntityLiving;LEntityLiving;)Z canSee
BehaviorUtil b (LBehaviorController;LEntityLiving;)Z lambda$targetIsValid$2
BehaviorTarget a pos
BehaviorTarget b lookAt
BehaviorTarget b ()LVec3D; getLookAtPos
BehaviorTarget toString ()Ljava/lang/String; toString
BehaviorCelebrate b currentRaid
BehaviorCelebrate b (LWorldServer;LEntityVillager;J)V stop
BehaviorCelebrate c (LWorldServer;LEntityVillager;J)V tick
BehaviorCelebrate b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorCelebrate c (LWorldServer;LEntityLiving;J)V stop
BehaviorCelebrate d (LWorldServer;LEntityLiving;J)V tick
CopyMemoryWithExpiry b predicate
CopyMemoryWithExpiry c sourceMemory
CopyMemoryWithExpiry d targetMemory
CopyMemoryWithExpiry e durationOfCopy
CrossbowAttack b attackDelay
CrossbowAttack c crossbowState
CrossbowAttack b (LWorldServer;LEntityInsentient;J)V tick
CrossbowAttack c (LWorldServer;LEntityInsentient;J)V stop
CrossbowAttack b (LEntityInsentient;LEntityLiving;)V lookAtTarget
CrossbowAttack b (LWorldServer;LEntityLiving;J)Z canStillUse
CrossbowAttack c (LWorldServer;LEntityLiving;J)V stop
CrossbowAttack d (LWorldServer;LEntityLiving;J)V tick
CrossbowAttack$CrossbowState a UNCHARGED
CrossbowAttack$CrossbowState b CHARGING
CrossbowAttack$CrossbowState c CHARGED
CrossbowAttack$CrossbowState d READY_TO_ATTACK
CrossbowAttack$CrossbowState e $VALUES
CrossbowAttack$CrossbowState values ()[LCrossbowAttack$CrossbowState; values
CrossbowAttack$CrossbowState valueOf (Ljava/lang/String;)LCrossbowAttack$CrossbowState; valueOf
DismountOrSkipMounting b maxWalkDistToRideTarget
DismountOrSkipMounting c dontRideIf
BehaviorNop b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorPositionEntity a entity
BehaviorPositionEntity b ()LVec3D; getLookAtPos
BehaviorPositionEntity c ()LEntity; getEntity
BehaviorPositionEntity toString ()Ljava/lang/String; toString
EraseMemoryIf b predicate
EraseMemoryIf c memoryType
BehaviorGate b exitErasedMemories
BehaviorGate c orderPolicy
BehaviorGate d runningPolicy
BehaviorGate e behaviors
BehaviorGate b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorGate d (LWorldServer;LEntityLiving;J)V tick
BehaviorGate c (LWorldServer;LEntityLiving;J)V stop
BehaviorGate toString ()Ljava/lang/String; toString
BehaviorGate b (LBehavior;)Z lambda$stop$5
BehaviorGate b (LWorldServer;LEntityLiving;JLBehavior;)V lambda$tick$4
BehaviorGate c (LBehavior;)Z lambda$tick$3
BehaviorGate c (LWorldServer;LEntityLiving;JLBehavior;)Z lambda$canStillUse$2
BehaviorGate d (LBehavior;)Z lambda$canStillUse$1
BehaviorVillageHeroGift b gifts
BehaviorVillageHeroGift c timeUntilNextGift
BehaviorVillageHeroGift d giftGivenDuringThisRun
BehaviorVillageHeroGift e timeSinceStart
BehaviorVillageHeroGift b (LWorldServer;LEntityVillager;J)Z canStillUse
BehaviorVillageHeroGift c (LWorldServer;LEntityVillager;J)V tick
BehaviorVillageHeroGift d (LWorldServer;LEntityVillager;J)V stop
BehaviorVillageHeroGift b (LEntityVillager;)Z isHeroVisible
BehaviorVillageHeroGift c (LEntityVillager;)Ljava/util/Optional; getNearestTargetableHero
BehaviorVillageHeroGift b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorVillageHeroGift c (LWorldServer;LEntityLiving;J)V stop
BehaviorVillageHeroGift d (LWorldServer;LEntityLiving;J)V tick
GoToCelebrateLocation b closeEnoughDist
GoToCelebrateLocation c speedModifier
BehaviorNearestVillage b speedModifier
BehaviorNearestVillage c closeEnoughDistance
GoToWantedItem b predicate
GoToWantedItem c maxDistToWalk
GoToWantedItem d speedModifier
GoToWantedItem b (LEntityLiving;)Z lambda$new$0
BehaviorFarm b aboveFarmlandPos
BehaviorFarm c canPlantStuff
BehaviorFarm d wantsToReapStuff
BehaviorFarm e nextOkStartTime
BehaviorFarm f timeWorkedSoFar
BehaviorFarm g validFarmlandAroundVillager
BehaviorFarm b (LWorldServer;LEntityVillager;J)V stop
BehaviorFarm c (LWorldServer;LEntityVillager;J)V tick
BehaviorFarm d (LWorldServer;LEntityVillager;J)Z canStillUse
BehaviorFarm b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorFarm c (LWorldServer;LEntityLiving;J)V stop
BehaviorFarm d (LWorldServer;LEntityLiving;J)V tick
BehaviorStrollInside b speedModifier
BehaviorStrollInside b (LWorldServer;LEntityCreature;LBlockPosition;)Z lambda$start$1
BehaviorInteract b maxDist
BehaviorInteract c speedModifier
BehaviorInteract d type
BehaviorInteract e interactionRangeSqr
BehaviorInteract f targetFilter
BehaviorInteract g selfFilter
BehaviorInteract h memory
BehaviorInteract b (LEntityLiving;)Z isTargetValid
BehaviorInteract c (LEntityLiving;)LEntityLiving; lambda$null$4
BehaviorInteract d (LEntityLiving;)Z lambda$null$3
BehaviorInteract e (LEntityLiving;)Z lambda$of$2
BehaviorInteract f (LEntityLiving;)Z lambda$of$1
BehaviorInteract g (LEntityLiving;)Z lambda$of$0
BehaviorBedJump b speedModifier
BehaviorBedJump c targetBed
BehaviorBedJump d remainingTimeToReachBed
BehaviorBedJump e remainingJumps
BehaviorBedJump f remainingCooldownUntilNextJump
BehaviorBedJump b (LWorldServer;LEntityInsentient;J)V stop
BehaviorBedJump c (LWorldServer;LEntityInsentient;J)Z canStillUse
BehaviorBedJump d (LWorldServer;LEntityInsentient;J)V tick
BehaviorBedJump b (LWorldServer;LEntityInsentient;)Z nearBed
BehaviorBedJump c (LWorldServer;LEntityInsentient;)Z onOrOverBed
BehaviorBedJump d (LWorldServer;LEntityInsentient;)Z onBedSurface
BehaviorBedJump e (LWorldServer;LEntityInsentient;)Z tiredOfWalking
BehaviorBedJump f (LWorldServer;LEntityInsentient;)Z tiredOfJumping
BehaviorBedJump b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorBedJump c (LWorldServer;LEntityLiving;J)V stop
BehaviorBedJump d (LWorldServer;LEntityLiving;J)V tick
BehaviorHome b speedModifier
BehaviorHome c radius
BehaviorHome d closeEnoughDist
BehaviorHome e currentPos
BehaviorHome b (LBlockPosition;)Z lambda$checkExtraStartConditions$1
BehaviorHome b (LPointOfInterestType;)Z lambda$checkExtraStartConditions$0
BehaviorInteractPlayer b speedModifier
BehaviorInteractPlayer b (LWorldServer;LEntityVillager;J)V start
BehaviorInteractPlayer c (LWorldServer;LEntityVillager;J)V stop
BehaviorInteractPlayer d (LWorldServer;LEntityVillager;J)V tick
BehaviorInteractPlayer b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorInteractPlayer c (LWorldServer;LEntityLiving;J)V stop
BehaviorInteractPlayer d (LWorldServer;LEntityLiving;J)V tick
BehaviorLook b (LWorldServer;LEntityInsentient;J)V stop
BehaviorLook c (LWorldServer;LEntityInsentient;J)V tick
BehaviorLook b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorLook c (LWorldServer;LEntityLiving;J)V stop
BehaviorLook d (LWorldServer;LEntityLiving;J)V tick
BehaviorLook b (LEntityInsentient;LBehaviorPosition;)Z lambda$canStillUse$0
MeleeAttack b cooldownBetweenAttacks
MeleeAttack b (LEntityInsentient;)LEntityLiving; getAttackTarget
Mount b speedModifier
Mount b (LEntityLiving;)LEntity; getRidableEntity
BehaviorOutside b speedModifier
BehaviorOutside b (LWorldServer;LEntityLiving;)LVec3D; getOutdoorPosition
BehavorMove b path
BehavorMove c lastTargetPos
BehavorMove d speedModifier
BehavorMove e remainingDelay
BehavorMove b (LWorldServer;LEntityInsentient;J)V stop
BehavorMove c (LWorldServer;LEntityInsentient;J)V start
BehavorMove d (LWorldServer;LEntityInsentient;J)V tick
BehavorMove b (LWorldServer;LEntityLiving;J)Z canStillUse
BehavorMove c (LWorldServer;LEntityLiving;J)V stop
BehavorMove d (LWorldServer;LEntityLiving;J)V tick
BehaviorPlay b (LEntityCreature;)Ljava/util/Optional; findSomeoneBeingChased
BehaviorPlay c (LEntityCreature;)Ljava/util/Map; checkHowManyChasersEachFriendHas
BehaviorPlay d (LEntityCreature;)Ljava/util/List; getFriendsNearby
BehaviorPlay b (LEntityLiving;)LEntityLiving; seeIfSomeoneIsChasingMe
BehaviorPlay c (LEntityLiving;)Z isChasingSomeone
BehaviorPlay e (LEntityCreature;)Z hasFriendsNearby
BehaviorPlay b (LEntityLiving;LEntityLiving;)Z lambda$isFriendChasingMe$5
BehaviorPlay c (LEntityLiving;LEntityLiving;)Z lambda$seeIfSomeoneIsChasingMe$4
BehaviorPlay b (LEntityCreature;LEntityLiving;)V lambda$start$0
BehaviorPosition b ()LVec3D; getLookAtPos
RandomStroll b speedModifier
RandomStroll c maxHorizontalDistance
RandomStroll d maxVerticalDistance
RunIf b predicate
RunIf c wrappedBehavior
RunIf d checkWhileRunningAlso
RunIf b (LWorldServer;LEntityLiving;J)Z canStillUse
RunIf d (LWorldServer;LEntityLiving;J)V tick
RunIf c (LWorldServer;LEntityLiving;J)V stop
RunIf toString ()Ljava/lang/String; toString
RunSometimes b resetTicks
RunSometimes c wasRunning
RunSometimes d interval
RunSometimes e wrappedBehavior
RunSometimes f ticksUntilNextStart
RunSometimes b (LWorldServer;LEntityLiving;J)Z canStillUse
RunSometimes d (LWorldServer;LEntityLiving;J)V tick
RunSometimes c (LWorldServer;LEntityLiving;J)V stop
RunSometimes toString ()Ljava/lang/String; toString
BehaviorWalkHome b speedModifier
BehaviorWalkHome c batchCache
BehaviorWalkHome d triedCount
BehaviorWalkHome e lastUpdate
BehaviorLookTarget b predicate
BehaviorLookTarget c maxDistSqr
BehaviorHide b closeEnoughDist
BehaviorHide c stayHiddenTicks
BehaviorHide d ticksHidden
BehaviorLookInteract b type
BehaviorLookInteract c interactionRangeSqr
BehaviorLookInteract d targetFilter
BehaviorLookInteract e selfFilter
BehaviorLookInteract b (LEntityLiving;)Ljava/util/List; getVisibleEntities
BehaviorLookInteract c (LEntityLiving;)Z lambda$new$1
BehaviorLookInteract d (LEntityLiving;)Z lambda$new$0
BehaviorWalkAwayEntity b walkAwayFromMemory
BehaviorWalkAwayEntity c speedModifier
BehaviorWalkAwayEntity d desiredDistance
BehaviorWalkAwayEntity e toPosition
BehaviorWalkAwayEntity b (LMemoryModuleType;FIZ)LBehaviorWalkAwayEntity; entity
BehaviorWalkAwayEntity b (LEntityCreature;)Z alreadyWalkingAwayFromPos
SetWalkTargetFromAttackTargetIfTargetOutOfReach b speedModifier
BehaviorWalkAwayBlock b memoryType
BehaviorWalkAwayBlock c speedModifier
BehaviorWalkAwayBlock d closeEnoughDist
BehaviorWalkAwayBlock e tooFarDistance
BehaviorWalkAwayBlock f tooLongUnreachableDuration
BehaviorWalkAwayBlock b (LWorldServer;LEntityVillager;LGlobalPos;)Z closeEnough
BehaviorLookWalk b speedModifier
BehaviorLookWalk c closeEnoughDistance
BehaviorTradePlayer b playerItemStack
BehaviorTradePlayer c displayItems
BehaviorTradePlayer d cycleCounter
BehaviorTradePlayer e displayIndex
BehaviorTradePlayer f lookTime
BehaviorTradePlayer b (LWorldServer;LEntityVillager;J)V start
BehaviorTradePlayer c (LWorldServer;LEntityVillager;J)V tick
BehaviorTradePlayer d (LWorldServer;LEntityVillager;J)V stop
BehaviorTradePlayer b (LEntityVillager;)V updateDisplayItems
BehaviorTradePlayer c (LEntityVillager;)LEntityLiving; lookAtTarget
BehaviorTradePlayer d (LEntityVillager;)V displayCyclingItems
BehaviorTradePlayer b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorTradePlayer c (LWorldServer;LEntityLiving;J)V stop
BehaviorTradePlayer d (LWorldServer;LEntityLiving;J)V tick
BehaviorSleep b nextOkStartTime
BehaviorSleep b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorSleep c (LWorldServer;LEntityLiving;J)V stop
BehaviorBell b (LEntityLiving;)Z lambda$checkExtraStartConditions$0
StartAttacking b canAttackPredicate
StartAttacking c targetFinderFunction
StartAttacking b (LEntityInsentient;LEntityLiving;)V lambda$start$1
StartCelebratingIfTargetDead b celebrateDuration
StopAttackingIfTargetInvalid b stopAttackingWhen
StopAttackingIfTargetInvalid b (LEntityInsentient;)LEntityLiving; getAttackTarget
StopAttackingIfTargetInvalid c (LEntityInsentient;)Z isCurrentTargetDeadOrRemoved
StopAttackingIfTargetInvalid d (LEntityInsentient;)V clearAttackTarget
StopAttackingIfTargetInvalid b (LEntityLiving;)Z lambda$new$0
BehaviorStrollPosition b memoryType
BehaviorStrollPosition c nextOkStartTime
BehaviorStrollPosition d maxDistanceFromPoi
BehaviorStrollPlace b memoryType
BehaviorStrollPlace c closeEnoughDist
BehaviorStrollPlace d maxDistanceFromPoi
BehaviorStrollPlace e nextOkStartTime
BehaviorStrollPlaceList b strollToMemoryType
BehaviorStrollPlaceList c mustBeCloseToMemoryType
BehaviorStrollPlaceList d speedModifier
BehaviorStrollPlaceList e closeEnoughDist
BehaviorStrollPlaceList f maxDistanceFromPoi
BehaviorStrollPlaceList g nextOkStartTime
BehaviorStrollPlaceList h targetPos
BehaviorSwim b height
BehaviorSwim c chance
BehaviorSwim b (LWorldServer;LEntityInsentient;J)V tick
BehaviorSwim b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorSwim d (LWorldServer;LEntityLiving;J)V tick
BehaviorTradeVillager b trades
BehaviorTradeVillager b (LWorldServer;LEntityVillager;J)V start
BehaviorTradeVillager c (LWorldServer;LEntityVillager;J)V tick
BehaviorTradeVillager d (LWorldServer;LEntityVillager;J)V stop
BehaviorTradeVillager b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorTradeVillager c (LWorldServer;LEntityLiving;J)V stop
BehaviorTradeVillager d (LWorldServer;LEntityLiving;J)V tick
BehaviorPositionValidate b memoryType
BehaviorPositionValidate c poiPredicate
BehaviorStrollRandom b speedModifier
BehaviorStrollRandom c maxXyDist
BehaviorStrollRandom d maxYDist
BehaviorStrollRandom b (LVec3D;)LMemoryTarget; lambda$setTargetedPos$0
Behaviors b (LVillagerProfession;F)Lcom/google/common/collect/ImmutableList; getWorkPackage
Behaviors c (LVillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRestPackage
Behaviors d (LVillagerProfession;F)Lcom/google/common/collect/ImmutableList; getMeetPackage
Behaviors e (LVillagerProfession;F)Lcom/google/common/collect/ImmutableList; getIdlePackage
Behaviors f (LVillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPanicPackage
Behaviors g (LVillagerProfession;F)Lcom/google/common/collect/ImmutableList; getPreRaidPackage
Behaviors h (LVillagerProfession;F)Lcom/google/common/collect/ImmutableList; getRaidPackage
Behaviors i (LVillagerProfession;F)Lcom/google/common/collect/ImmutableList; getHidePackage
Behaviors b ()Lcom/mojang/datafixers/util/Pair; getMinimalLookBehavior
BehaviorMakeLove b birthTimestamp
BehaviorMakeLove b (LWorldServer;LEntityVillager;J)V start
BehaviorMakeLove c (LWorldServer;LEntityVillager;J)V tick
BehaviorMakeLove d (LWorldServer;LEntityVillager;J)V stop
BehaviorMakeLove b (LWorldServer;LEntityVillager;)Ljava/util/Optional; takeVacantBed
BehaviorMakeLove b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorMakeLove c (LWorldServer;LEntityLiving;J)V stop
BehaviorMakeLove d (LWorldServer;LEntityLiving;J)V tick
BehaviorMakeLove b (LEntityVillager;LBlockPosition;)Z lambda$takeVacantBed$1
BehaviorPanic b (LWorldServer;LEntityVillager;J)V start
BehaviorPanic c (LWorldServer;LEntityVillager;J)V tick
BehaviorPanic b (LEntityLiving;)Z isHurt
BehaviorPanic b (LWorldServer;LEntityLiving;J)Z canStillUse
BehaviorPanic d (LWorldServer;LEntityLiving;J)V tick
WeightedList a entries
WeightedList b random
WeightedList b ()Ljava/util/stream/Stream; stream
WeightedList c ()Ljava/util/stream/Stream; streamEntries
WeightedList d ()Ljava/lang/Object; getOne
WeightedList b (Ljava/util/Random;)Ljava/lang/Object; getOne
WeightedList toString ()Ljava/lang/String; toString
WeightedList$WeightedEntry b data
WeightedList$WeightedEntry c weight
WeightedList$WeightedEntry d randWeight
WeightedList$WeightedEntry a this$0
WeightedList$WeightedEntry c ()D getRandWeight
WeightedList$WeightedEntry b ()I getWeight
WeightedList$WeightedEntry toString ()Ljava/lang/String; toString
BehaviorWork b lastCheck
EntityAIBodyControl a mob
EntityAIBodyControl b headStableTime
EntityAIBodyControl c lastStableYHeadRot
EntityAIBodyControl b ()V rotateBodyIfNecessary
EntityAIBodyControl c ()V rotateHeadIfNecessary
EntityAIBodyControl d ()V rotateHeadTowardsFront
EntityAIBodyControl e ()Z notCarryingMobPassengers
EntityAIBodyControl f ()Z isMoving
ControllerLookDolphin h maxYRotFromCenter
ControllerMoveFlying i maxTurn
ControllerMoveFlying j hoversInPlace
ControllerLook a mob
ControllerLook b yMaxRotSpeed
ControllerLook c xMaxRotAngle
ControllerLook d hasWanted
ControllerLook e wantedX
ControllerLook f wantedY
ControllerLook g wantedZ
ControllerLook b ()Z resetXRotOnTick
ControllerLook c ()Z isHasWanted
ControllerLook d ()D getWantedX
ControllerLook e ()D getWantedY
ControllerLook f ()D getWantedZ
ControllerLook g ()F getXRotD
ControllerLook h ()F getYRotD
ControllerLook b (LEntity;)D getWantedY
ControllerMove a mob
ControllerMove b wantedX
ControllerMove c wantedY
ControllerMove d wantedZ
ControllerMove e speedModifier
ControllerMove f strafeForwards
ControllerMove g strafeRight
ControllerMove h operation
ControllerMove b ()Z hasWanted
ControllerMove c ()D getSpeedModifier
ControllerMove b (FF)Z isWalkable
ControllerMove d ()D getWantedX
ControllerMove e ()D getWantedY
ControllerMove f ()D getWantedZ
PathfinderGoalAvoidTarget a mob
PathfinderGoalAvoidTarget i walkSpeedModifier
PathfinderGoalAvoidTarget j sprintSpeedModifier
PathfinderGoalAvoidTarget b toAvoid
PathfinderGoalAvoidTarget c maxDist
PathfinderGoalAvoidTarget d path
PathfinderGoalAvoidTarget e pathNav
PathfinderGoalAvoidTarget f avoidClass
PathfinderGoalAvoidTarget g avoidPredicate
PathfinderGoalAvoidTarget h predicateOnAvoidEntity
PathfinderGoalAvoidTarget k avoidEntityTargeting
PathfinderGoalAvoidTarget b ()Z canContinueToUse
PathfinderGoalAvoidTarget c ()V start
PathfinderGoalAvoidTarget d ()V stop
PathfinderGoalAvoidTarget e ()V tick
PathfinderGoalAvoidTarget b (LEntityLiving;)Z lambda$new$0
PathfinderGoalBeg a wolf
PathfinderGoalBeg b player
PathfinderGoalBeg c level
PathfinderGoalBeg d lookDistance
PathfinderGoalBeg e lookTime
PathfinderGoalBeg f begTargeting
PathfinderGoalBeg b ()Z canContinueToUse
PathfinderGoalBeg c ()V start
PathfinderGoalBeg d ()V stop
PathfinderGoalBeg e ()V tick
PathfinderGoalBreakDoor g validDifficulties
PathfinderGoalBreakDoor a breakTime
PathfinderGoalBreakDoor b lastBreakProgress
PathfinderGoalBreakDoor c doorBreakTime
PathfinderGoalBreakDoor f ()I getDoorBreakTime
PathfinderGoalBreakDoor c ()V start
PathfinderGoalBreakDoor b ()Z canContinueToUse
PathfinderGoalBreakDoor d ()V stop
PathfinderGoalBreakDoor e ()V tick
PathfinderGoalBreath a mob
PathfinderGoalBreath b ()Z canContinueToUse
PathfinderGoalBreath E_ ()Z isInterruptable
PathfinderGoalBreath c ()V start
PathfinderGoalBreath g ()V findAirPosition
PathfinderGoalBreath e ()V tick
PathfinderGoalCatSitOnBed g cat
PathfinderGoalCatSitOnBed c ()V start
PathfinderGoalCatSitOnBed d ()V stop
PathfinderGoalCatSitOnBed e ()V tick
PathfinderGoalJumpOnBlock g cat
PathfinderGoalJumpOnBlock c ()V start
PathfinderGoalJumpOnBlock d ()V stop
PathfinderGoalJumpOnBlock e ()V tick
PathfinderGoalWaterJump a STEPS_TO_CHECK
PathfinderGoalWaterJump b dolphin
PathfinderGoalWaterJump c interval
PathfinderGoalWaterJump d breached
PathfinderGoalWaterJump b (LBlockPosition;III)Z surfaceIsClear
PathfinderGoalWaterJump b ()Z canContinueToUse
PathfinderGoalWaterJump E_ ()Z isInterruptable
PathfinderGoalWaterJump c ()V start
PathfinderGoalWaterJump d ()V stop
PathfinderGoalWaterJump e ()V tick
PathfinderGoalEatTile a IS_TALL_GRASS
PathfinderGoalEatTile b mob
PathfinderGoalEatTile c level
PathfinderGoalEatTile d eatAnimationTick
PathfinderGoalEatTile c ()V start
PathfinderGoalEatTile d ()V stop
PathfinderGoalEatTile b ()Z canContinueToUse
PathfinderGoalEatTile g ()I getEatAnimationTick
PathfinderGoalEatTile e ()V tick
PathfinderGoalFleeSun a mob
PathfinderGoalFleeSun b wantedX
PathfinderGoalFleeSun c wantedY
PathfinderGoalFleeSun d wantedZ
PathfinderGoalFleeSun e speedModifier
PathfinderGoalFleeSun f level
PathfinderGoalFleeSun g ()Z setWantedPos
PathfinderGoalFleeSun b ()Z canContinueToUse
PathfinderGoalFleeSun c ()V start
PathfinderGoalFleeSun h ()LVec3D; getHidePos
PathfinderGoalFloat a mob
PathfinderGoalFloat e ()V tick
PathfinderGoalFollowBoat a timeToRecalcPath
PathfinderGoalFollowBoat b mob
PathfinderGoalFollowBoat c following
PathfinderGoalFollowBoat d currentGoal
PathfinderGoalFollowBoat E_ ()Z isInterruptable
PathfinderGoalFollowBoat b ()Z canContinueToUse
PathfinderGoalFollowBoat c ()V start
PathfinderGoalFollowBoat d ()V stop
PathfinderGoalFollowBoat e ()V tick
PathfinderGoalFishSchool a mob
PathfinderGoalFishSchool b timeToRecalcPath
PathfinderGoalFishSchool c nextStartTick
PathfinderGoalFishSchool b ()Z canContinueToUse
PathfinderGoalFishSchool c ()V start
PathfinderGoalFishSchool d ()V stop
PathfinderGoalFishSchool e ()V tick
PathfinderGoalFishSchool b (LEntityFishSchool;)Z lambda$canUse$1
PathfinderGoalFishSchool c (LEntityFishSchool;)Z lambda$canUse$0
PathfinderGoalFollowEntity a mob
PathfinderGoalFollowEntity b followPredicate
PathfinderGoalFollowEntity c followingMob
PathfinderGoalFollowEntity d speedModifier
PathfinderGoalFollowEntity e navigation
PathfinderGoalFollowEntity f timeToRecalcPath
PathfinderGoalFollowEntity g stopDistance
PathfinderGoalFollowEntity h oldWaterCost
PathfinderGoalFollowEntity i areaSize
PathfinderGoalFollowEntity b ()Z canContinueToUse
PathfinderGoalFollowEntity c ()V start
PathfinderGoalFollowEntity d ()V stop
PathfinderGoalFollowEntity e ()V tick
PathfinderGoalFollowOwner a tamable
PathfinderGoalFollowOwner b owner
PathfinderGoalFollowOwner c level
PathfinderGoalFollowOwner d speedModifier
PathfinderGoalFollowOwner e navigation
PathfinderGoalFollowOwner f timeToRecalcPath
PathfinderGoalFollowOwner g stopDistance
PathfinderGoalFollowOwner h startDistance
PathfinderGoalFollowOwner i oldWaterCost
PathfinderGoalFollowOwner j canFly
PathfinderGoalFollowOwner b ()Z canContinueToUse
PathfinderGoalFollowOwner c ()V start
PathfinderGoalFollowOwner d ()V stop
PathfinderGoalFollowOwner e ()V tick
PathfinderGoalFollowOwner g ()V teleportToOwner
PathfinderGoalFollowParent a animal
PathfinderGoalFollowParent b parent
PathfinderGoalFollowParent c speedModifier
PathfinderGoalFollowParent d timeToRecalcPath
PathfinderGoalFollowParent b ()Z canContinueToUse
PathfinderGoalFollowParent c ()V start
PathfinderGoalFollowParent d ()V stop
PathfinderGoalFollowParent e ()V tick
PathfinderGoal a flags
PathfinderGoal b ()Z canContinueToUse
PathfinderGoal E_ ()Z isInterruptable
PathfinderGoal c ()V start
PathfinderGoal d ()V stop
PathfinderGoal e ()V tick
PathfinderGoal toString ()Ljava/lang/String; toString
PathfinderGoal i ()Ljava/util/EnumSet; getFlags
PathfinderGoalSelector$2 g ()Z isRunning
PathfinderGoalPerch a entity
PathfinderGoalPerch b owner
PathfinderGoalPerch c isSittingOnShoulder
PathfinderGoalPerch E_ ()Z isInterruptable
PathfinderGoalPerch c ()V start
PathfinderGoalPerch e ()V tick
PathfinderGoalLeapAtTarget a mob
PathfinderGoalLeapAtTarget b target
PathfinderGoalLeapAtTarget c yd
PathfinderGoalLeapAtTarget b ()Z canContinueToUse
PathfinderGoalLeapAtTarget c ()V start
PathfinderGoalLlamaFollow a llama
PathfinderGoalLlamaFollow b speedModifier
PathfinderGoalLlamaFollow c distCheckCounter
PathfinderGoalLlamaFollow b ()Z canContinueToUse
PathfinderGoalLlamaFollow d ()V stop
PathfinderGoalLlamaFollow e ()V tick
PathfinderGoalLookAtPlayer a mob
PathfinderGoalLookAtPlayer b lookAt
PathfinderGoalLookAtPlayer c lookDistance
PathfinderGoalLookAtPlayer g lookTime
PathfinderGoalLookAtPlayer d probability
PathfinderGoalLookAtPlayer e lookAtType
PathfinderGoalLookAtPlayer f lookAtContext
PathfinderGoalLookAtPlayer b ()Z canContinueToUse
PathfinderGoalLookAtPlayer c ()V start
PathfinderGoalLookAtPlayer d ()V stop
PathfinderGoalLookAtPlayer e ()V tick
PathfinderGoalLookAtTradingPlayer g villager
PathfinderGoalMeleeAttack a mob
PathfinderGoalMeleeAttack b attackTime
PathfinderGoalMeleeAttack d speedModifier
PathfinderGoalMeleeAttack e trackTarget
PathfinderGoalMeleeAttack f path
PathfinderGoalMeleeAttack g timeToRecalcPath
PathfinderGoalMeleeAttack h pathedTargetX
PathfinderGoalMeleeAttack i pathedTargetY
PathfinderGoalMeleeAttack j pathedTargetZ
PathfinderGoalMeleeAttack c attackInterval
PathfinderGoalMeleeAttack k lastUpdate
PathfinderGoalMeleeAttack b ()Z canContinueToUse
PathfinderGoalMeleeAttack c ()V start
PathfinderGoalMeleeAttack d ()V stop
PathfinderGoalMeleeAttack e ()V tick
PathfinderGoalStrollVillage g ()LVec3D; getPosition
MoveIndoorsGoal a mob
MoveIndoorsGoal b insideX
MoveIndoorsGoal c insideZ
MoveIndoorsGoal g ()Z isInside
MoveIndoorsGoal b ()Z canContinueToUse
MoveIndoorsGoal c ()V start
MoveIndoorsGoal d ()V stop
PathfinderGoalMoveThroughVillage a mob
PathfinderGoalMoveThroughVillage b speedModifier
PathfinderGoalMoveThroughVillage c path
PathfinderGoalMoveThroughVillage d poiPos
PathfinderGoalMoveThroughVillage e onlyAtNight
PathfinderGoalMoveThroughVillage f visited
PathfinderGoalMoveThroughVillage g distanceToPoi
PathfinderGoalMoveThroughVillage h canDealWithDoors
PathfinderGoalMoveThroughVillage b ()Z canContinueToUse
PathfinderGoalMoveThroughVillage c ()V start
PathfinderGoalMoveThroughVillage d ()V stop
PathfinderGoalMoveThroughVillage g ()V updateVisited
PathfinderGoalGotoTarget a mob
PathfinderGoalGotoTarget b speedModifier
PathfinderGoalGotoTarget c nextStartTick
PathfinderGoalGotoTarget d tryTicks
PathfinderGoalGotoTarget g maxStayTicks
PathfinderGoalGotoTarget e blockPos
PathfinderGoalGotoTarget h reachedTarget
PathfinderGoalGotoTarget i searchRange
PathfinderGoalGotoTarget j verticalSearchRange
PathfinderGoalGotoTarget f verticalSearchStart
PathfinderGoalGotoTarget b ()Z canContinueToUse
PathfinderGoalGotoTarget c ()V start
PathfinderGoalGotoTarget g ()V moveMobToBlock
PathfinderGoalGotoTarget h ()D acceptedDistance
PathfinderGoalGotoTarget e ()V tick
PathfinderGoalGotoTarget j ()Z shouldRecalculatePath
PathfinderGoalGotoTarget k ()Z isReachedTarget
PathfinderGoalGotoTarget l ()Z findNearestBlock
PathfinderGoalMoveTowardsRestriction a mob
PathfinderGoalMoveTowardsRestriction b wantedX
PathfinderGoalMoveTowardsRestriction c wantedY
PathfinderGoalMoveTowardsRestriction d wantedZ
PathfinderGoalMoveTowardsRestriction e speedModifier
PathfinderGoalMoveTowardsRestriction b ()Z canContinueToUse
PathfinderGoalMoveTowardsRestriction c ()V start
PathfinderGoalMoveTowardsTarget a mob
PathfinderGoalMoveTowardsTarget b target
PathfinderGoalMoveTowardsTarget c wantedX
PathfinderGoalMoveTowardsTarget d wantedY
PathfinderGoalMoveTowardsTarget e wantedZ
PathfinderGoalMoveTowardsTarget f speedModifier
PathfinderGoalMoveTowardsTarget g within
PathfinderGoalMoveTowardsTarget b ()Z canContinueToUse
PathfinderGoalMoveTowardsTarget d ()V stop
PathfinderGoalMoveTowardsTarget c ()V start
PathfinderGoalOcelotAttack a level
PathfinderGoalOcelotAttack b mob
PathfinderGoalOcelotAttack c target
PathfinderGoalOcelotAttack d attackTime
PathfinderGoalOcelotAttack b ()Z canContinueToUse
PathfinderGoalOcelotAttack d ()V stop
PathfinderGoalOcelotAttack e ()V tick
PathfinderGoalOfferFlower a OFFER_TARGER_CONTEXT
PathfinderGoalOfferFlower b golem
PathfinderGoalOfferFlower c villager
PathfinderGoalOfferFlower d tick
PathfinderGoalOfferFlower b ()Z canContinueToUse
PathfinderGoalOfferFlower c ()V start
PathfinderGoalOfferFlower d ()V stop
PathfinderGoalOfferFlower e ()V tick
PathfinderGoalDoorOpen a closeDoor
PathfinderGoalDoorOpen b forgetTime
PathfinderGoalDoorOpen b ()Z canContinueToUse
PathfinderGoalDoorOpen c ()V start
PathfinderGoalDoorOpen d ()V stop
PathfinderGoalDoorOpen e ()V tick
PathfinderGoalPanic a mob
PathfinderGoalPanic b speedModifier
PathfinderGoalPanic c posX
PathfinderGoalPanic d posY
PathfinderGoalPanic e posZ
PathfinderGoalPanic g ()Z findRandomPosition
PathfinderGoalPanic c ()V start
PathfinderGoalPanic b ()Z canContinueToUse
PathfinderGoalRaid a mob
PathfinderGoalRaid b ()Z canContinueToUse
PathfinderGoalRaid e ()V tick
PlayGoal a mob
PlayGoal b followFriend
PlayGoal c speedModifier
PlayGoal d playTime
PlayGoal b ()Z canContinueToUse
PlayGoal c ()V start
PlayGoal d ()V stop
PlayGoal e ()V tick
PathfinderGoalRandomLookaround a mob
PathfinderGoalRandomLookaround b relX
PathfinderGoalRandomLookaround c relZ
PathfinderGoalRandomLookaround d lookTime
PathfinderGoalRandomLookaround b ()Z canContinueToUse
PathfinderGoalRandomLookaround c ()V start
PathfinderGoalRandomLookaround e ()V tick
PathfinderGoalRandomSwim g ()LVec3D; getPosition
PathfinderGoalArrowAttack a mob
PathfinderGoalArrowAttack b rangedAttackMob
PathfinderGoalArrowAttack c target
PathfinderGoalArrowAttack d attackTime
PathfinderGoalArrowAttack e speedModifier
PathfinderGoalArrowAttack f seeTime
PathfinderGoalArrowAttack g attackIntervalMin
PathfinderGoalArrowAttack h attackIntervalMax
PathfinderGoalArrowAttack i attackRadius
PathfinderGoalArrowAttack j attackRadiusSqr
PathfinderGoalArrowAttack b ()Z canContinueToUse
PathfinderGoalArrowAttack d ()V stop
PathfinderGoalArrowAttack e ()V tick
PathfinderGoalBowShoot a mob
PathfinderGoalBowShoot b speedModifier
PathfinderGoalBowShoot c attackIntervalMin
PathfinderGoalBowShoot d attackRadiusSqr
PathfinderGoalBowShoot e attackTime
PathfinderGoalBowShoot f seeTime
PathfinderGoalBowShoot g strafingClockwise
PathfinderGoalBowShoot h strafingBackwards
PathfinderGoalBowShoot i strafingTime
PathfinderGoalBowShoot g ()Z isHoldingBow
PathfinderGoalBowShoot b ()Z canContinueToUse
PathfinderGoalBowShoot c ()V start
PathfinderGoalBowShoot d ()V stop
PathfinderGoalBowShoot e ()V tick
PathfinderGoalCrossbowAttack a mob
PathfinderGoalCrossbowAttack b crossbowState
PathfinderGoalCrossbowAttack c speedModifier
PathfinderGoalCrossbowAttack d attackRadiusSqr
PathfinderGoalCrossbowAttack e seeTime
PathfinderGoalCrossbowAttack f attackDelay
PathfinderGoalCrossbowAttack g ()Z isHoldingCrossbow
PathfinderGoalCrossbowAttack b ()Z canContinueToUse
PathfinderGoalCrossbowAttack h ()Z isValidTarget
PathfinderGoalCrossbowAttack d ()V stop
PathfinderGoalCrossbowAttack e ()V tick
PathfinderGoalCrossbowAttack j ()Z canRun
PathfinderGoalRestrictSun a mob
PathfinderGoalRestrictSun c ()V start
PathfinderGoalRestrictSun d ()V stop
PathfinderGoalNearestVillage a mob
PathfinderGoalNearestVillage b interval
PathfinderGoalNearestVillage c wantedPos
PathfinderGoalNearestVillage b ()Z canContinueToUse
PathfinderGoalNearestVillage e ()V tick
PathfinderGoalNearestVillage g ()V moveRandomly
PathfinderGoalSwell a creeper
PathfinderGoalSwell b target
PathfinderGoalSwell c ()V start
PathfinderGoalSwell d ()V stop
PathfinderGoalSwell e ()V tick
TakeFlowerGoal a villager
TakeFlowerGoal b golem
TakeFlowerGoal c pickupTick
TakeFlowerGoal d takeFlower
TakeFlowerGoal b ()Z canContinueToUse
TakeFlowerGoal c ()V start
TakeFlowerGoal d ()V stop
TakeFlowerGoal e ()V tick
PathfinderGoalTradeWithPlayer a mob
PathfinderGoalTradeWithPlayer c ()V start
PathfinderGoalTradeWithPlayer d ()V stop
PathfinderGoalWater a mob
PathfinderGoalWater c ()V start
PathfinderGoalUseItem a mob
PathfinderGoalUseItem b item
PathfinderGoalUseItem c canUseSelector
PathfinderGoalUseItem d finishUsingSound
PathfinderGoalUseItem b ()Z canContinueToUse
PathfinderGoalUseItem c ()V start
PathfinderGoalUseItem d ()V stop
PathfinderGoalRandomFly g ()LVec3D; getPosition
PathfinderGoalRandomFly j ()LVec3D; getTreePos
PathfinderGoalRandomStrollLand h probability
PathfinderGoalRandomStrollLand g ()LVec3D; getPosition
PathfinderGoalWrapped a goal
PathfinderGoalWrapped b priority
PathfinderGoalWrapped c isRunning
PathfinderGoalWrapped b ()Z canContinueToUse
PathfinderGoalWrapped E_ ()Z isInterruptable
PathfinderGoalWrapped c ()V start
PathfinderGoalWrapped d ()V stop
PathfinderGoalWrapped e ()V tick
PathfinderGoalWrapped i ()Ljava/util/EnumSet; getFlags
PathfinderGoalWrapped g ()Z isRunning
PathfinderGoalWrapped h ()I getPriority
PathfinderGoalWrapped j ()LPathfinderGoal; getGoal
PathfinderGoalWrapped equals (Ljava/lang/Object;)Z equals
PathfinderGoalWrapped hashCode ()I hashCode
PathfinderGoalZombieAttack d zombie
PathfinderGoalZombieAttack e raiseArmTicks
PathfinderGoalZombieAttack c ()V start
PathfinderGoalZombieAttack d ()V stop
PathfinderGoalZombieAttack e ()V tick
PathfinderGoalDefendVillage a golem
PathfinderGoalDefendVillage b potentialTarget
PathfinderGoalDefendVillage c attackTargeting
PathfinderGoalDefendVillage c ()V start
PathfinderGoalHurtByTarget a HURT_BY_TARGETING
PathfinderGoalHurtByTarget b alertSameType
PathfinderGoalHurtByTarget c timestamp
PathfinderGoalHurtByTarget d toIgnoreDamage
PathfinderGoalHurtByTarget i toIgnoreAlert
PathfinderGoalHurtByTarget c ()V start
PathfinderGoalHurtByTarget g ()V alertOthers
PathfinderGoalNearestAttackableTarget a targetType
PathfinderGoalNearestAttackableTarget b randomInterval
PathfinderGoalNearestAttackableTarget c target
PathfinderGoalNearestAttackableTarget d targetConditions
PathfinderGoalNearestAttackableTarget g ()V findTarget
PathfinderGoalNearestAttackableTarget c ()V start
PathfinderGoalNearestAttackableTargetWitch i canAttack
PathfinderGoalNearestHealableRaider i cooldown
PathfinderGoalNearestHealableRaider h ()I getCooldown
PathfinderGoalNearestHealableRaider j ()V decrementCooldown
PathfinderGoalNearestHealableRaider c ()V start
PathfinderGoalRandomTargetNonTamed i tamableMob
PathfinderGoalRandomTargetNonTamed b ()Z canContinueToUse
PathfinderGoalOwnerHurtByTarget a tameAnimal
PathfinderGoalOwnerHurtByTarget b ownerLastHurtBy
PathfinderGoalOwnerHurtByTarget c timestamp
PathfinderGoalOwnerHurtByTarget c ()V start
PathfinderGoalOwnerHurtTarget a tameAnimal
PathfinderGoalOwnerHurtTarget b ownerLastHurt
PathfinderGoalOwnerHurtTarget c timestamp
PathfinderGoalOwnerHurtTarget c ()V start
PathfinderGoalTarget e mob
PathfinderGoalTarget f mustSee
PathfinderGoalTarget a mustReach
PathfinderGoalTarget b reachCache
PathfinderGoalTarget c reachCacheTime
PathfinderGoalTarget d unseenTicks
PathfinderGoalTarget g targetMob
PathfinderGoalTarget h unseenMemoryTicks
PathfinderGoalTarget b ()Z canContinueToUse
PathfinderGoalTarget k ()D getFollowDistance
PathfinderGoalTarget c ()V start
PathfinderGoalTarget d ()V stop
Reputation a gossips
Reputation b ()V decay
Reputation c ()Ljava/util/stream/Stream; unpack
Reputation b (Ljava/util/UUID;LReputationType;I)V remove
Reputation b (LReputation$GossipEntry;)V lambda$transferFrom$3
Reputation b (Ljava/util/UUID;)LReputation$EntityGossips; lambda$getOrCreate$2
Reputation$EntityGossips a entries
Reputation$EntityGossips b ()Z isEmpty
Reputation$EntityGossips b (LReputationType;)V remove
Reputation$GossipEntry a target
Reputation$GossipEntry b type
Reputation$GossipEntry c value
Reputation$GossipEntry toString ()Ljava/lang/String; toString
ExpirableValue a value
ExpirableValue b timeToLive
ExpirableValue b ()J getTimeToLive
ExpirableValue c ()Ljava/lang/Object; getValue
ExpirableValue d ()Z hasExpired
ExpirableValue toString ()Ljava/lang/String; toString
ExpirableValue e ()Z canExpire
MemoryTarget a target
MemoryTarget b speedModifier
MemoryTarget c closeEnoughDist
MemoryTarget b ()F getSpeedModifier
MemoryTarget c ()I getCloseEnoughDist
NavigationFlying b ()LVec3D; getTempMobPos
NavigationFlying c ()V tick
NavigationFlying d ()Z canPassDoors
NavigationFlying b (Z)V setCanPassDoors
NavigationFlying e ()Z canOpenDoors
Navigation p avoidSun
Navigation b ()LVec3D; getTempMobPos
Navigation t ()I getSurfaceY
Navigation F_ ()V trimPath
Navigation b (IIIIIILVec3D;DD)Z canWalkAbove
Navigation e ()Z canPassDoors
Navigation b (Z)V setCanPassDoors
Navigation f ()Z canOpenDoors
Navigation c (Z)V setAvoidSun
NavigationAbstract a mob
NavigationAbstract b level
NavigationAbstract c path
NavigationAbstract d speedModifier
NavigationAbstract p followRange
NavigationAbstract e tick
NavigationAbstract f lastStuckCheck
NavigationAbstract g lastStuckCheckPos
NavigationAbstract h timeoutCachedNode
NavigationAbstract i timeoutTimer
NavigationAbstract j lastTimeoutCheck
NavigationAbstract k timeoutLimit
NavigationAbstract l maxDistanceToWaypoint
NavigationAbstract m hasDelayedRecomputation
NavigationAbstract n timeLastRecompute
NavigationAbstract o nodeEvaluator
NavigationAbstract q targetPos
NavigationAbstract r reachRange
NavigationAbstract s maxVisitedNodesMultiplier
NavigationAbstract t pathFinder
NavigationAbstract g ()V resetMaxVisitedNodesMultiplier
NavigationAbstract h ()LBlockPosition; getTargetPos
NavigationAbstract i ()Z hasDelayedRecomputation
NavigationAbstract j ()V recomputePath
NavigationAbstract k ()LPathEntity; getPath
NavigationAbstract c ()V tick
NavigationAbstract l ()V updatePath
NavigationAbstract e ()V resetStuckTimeout
NavigationAbstract m ()Z isDone
NavigationAbstract n ()Z isInProgress
NavigationAbstract o ()V stop
NavigationAbstract b ()LVec3D; getTempMobPos
NavigationAbstract p ()Z isInLiquid
NavigationAbstract F_ ()V trimPath
NavigationAbstract q ()LPathfinderAbstract; getNodeEvaluator
NavigationAbstract d (Z)V setCanFloat
NavigationAbstract r ()Z canFloat
NavigationAbstract b (LBlockPosition;)V recomputePath
NavigationAbstract s ()F getMaxDistanceToWaypoint
NavigationSpider p pathToPosition
NavigationSpider c ()V tick
NavigationGuardian p allowBreaching
NavigationGuardian b ()LVec3D; getTempMobPos
NavigationGuardian c ()V tick
NavigationGuardian l ()V updatePath
NavigationGuardian d (Z)V setCanFloat
HoglinSpecificSensor b (LWorldServer;LHoglin;)Ljava/util/Optional; findNearestRepellent
SensorNearestBed a batchCache
SensorNearestBed b triedCount
SensorNearestBed c lastUpdate
NearestItemSensor b (LEntityInsentient;LEntityItem;)Z lambda$doTick$1
SensorNearestLivingEntities a TARGETING
SensorNearestLivingEntities b (LEntityLiving;LEntityLiving;)Z lambda$doTick$0
PiglinSpecificSensor c (LWorldServer;LEntityLiving;)Ljava/util/Optional; findNearestRepellent
EntitySenses a mob
EntitySenses b seen
EntitySenses c unseen
Sensor a RANDOM
Sensor b scanRate
Sensor c timeToTick
Sensor b (LWorldServer;LEntityLiving;)V tick
SensorType a DUMMY
SensorType b NEAREST_ITEMS
SensorType c NEAREST_LIVING_ENTITIES
SensorType d NEAREST_PLAYERS
SensorType e INTERACTABLE_DOORS
SensorType f NEAREST_BED
SensorType g HURT_BY
SensorType h VILLAGER_HOSTILES
SensorType i VILLAGER_BABIES
SensorType j SECONDARY_POIS
SensorType k GOLEM_LAST_SEEN
SensorType l PIGLIN_SPECIFIC_SENSOR
SensorType m HOGLIN_SPECIFIC_SENSOR
SensorType n factory
SensorVillagerBabies b (LEntityLiving;)Z isVillagerBaby
SensorVillagerBabies c (LEntityLiving;)Ljava/util/List; getVisibleEntities
SensorVillagerHostiles a ACCEPTABLE_DISTANCE_FROM_HOSTILES
SensorVillagerHostiles b (LEntityLiving;)Ljava/util/Optional; getVisibleEntities
SensorVillagerHostiles c (LEntityLiving;)Z isHostile
SensorVillagerHostiles b (LEntityLiving;LEntityLiving;LEntityLiving;)I lambda$null$1
SensorVillagerHostiles b (LEntityLiving;LEntityLiving;)Z lambda$null$0
PathfinderTargetCondition a DEFAULT
PathfinderTargetCondition b range
PathfinderTargetCondition c allowInvulnerable
PathfinderTargetCondition d allowSameTeam
PathfinderTargetCondition e allowUnseeable
PathfinderTargetCondition f allowNonAttackable
PathfinderTargetCondition g testInvisible
PathfinderTargetCondition h selector
PathfinderTargetCondition b ()LPathfinderTargetCondition; allowSameTeam
PathfinderTargetCondition c ()LPathfinderTargetCondition; allowUnseeable
PathfinderTargetCondition d ()LPathfinderTargetCondition; allowNonAttackable
PathfinderTargetCondition e ()LPathfinderTargetCondition; ignoreInvisibilityTesting
RandomPositionGenerator b (LEntityCreature;II)LVec3D; getLandPos
RandomPositionGenerator b (LEntityCreature;IIILVec3D;D)LVec3D; getAirPosTowards
RandomPositionGenerator b (LEntityCreature;IILVec3D;)LVec3D; getPosAvoid
RandomPositionGenerator c (LEntityCreature;IILVec3D;)LVec3D; getLandPosAvoid
ReputationEvent a ZOMBIE_VILLAGER_CURED
ReputationEvent b GOLEM_KILLED
ReputationEvent c VILLAGER_HURT
ReputationEvent d VILLAGER_KILLED
ReputationEvent e TRADE
ReputationEvent$1 f val$name
ReputationEvent$1 toString ()Ljava/lang/String; toString
VillageSiege a hasSetupSiege
VillageSiege b siegeState
VillageSiege c zombiesToSpawn
VillageSiege d nextSpawnTime
VillageSiege e spawnX
VillageSiege f spawnY
VillageSiege g spawnZ
VillageSiege b (LWorldServer;)V trySpawn
VillagePlace a distanceTracker
VillagePlace b loadedChunks
VillagePlace b (Ljava/util/function/Predicate;LBlockPosition;ILVillagePlace$Occupancy;)Ljava/util/stream/Stream; getInSquare
VillagePlace c (Ljava/util/function/Predicate;LBlockPosition;ILVillagePlace$Occupancy;)Ljava/util/stream/Stream; getInRange
VillagePlace b (Ljava/util/function/Predicate;Ljava/util/function/Predicate;LBlockPosition;ILVillagePlace$Occupancy;)Ljava/util/Optional; find
VillagePlace d (Ljava/util/function/Predicate;LBlockPosition;ILVillagePlace$Occupancy;)Ljava/util/Optional; findClosest
VillagePlace b (LBlockPosition;)Z release
VillagePlace c (LBlockPosition;)Ljava/util/Optional; getType
VillagePlace d (LBlockPosition;)I getFreeTickets
VillagePlace f (J)Z isVillageCenter
VillagePlace b (J)V onSectionLoad
VillagePlace b (LChunkCoordIntPair;)Z lambda$ensureLoadedAndValid$18
VillagePlace b (Lcom/mojang/datafixers/util/Pair;)Z lambda$ensureLoadedAndValid$16
VillagePlace c (LSectionPosition;)Lcom/mojang/datafixers/util/Pair; lambda$ensureLoadedAndValid$15
VillagePlace b (LChunkSection;LSectionPosition;Ljava/util/function/BiConsumer;)V lambda$null$10
VillagePlace b (Ljava/util/function/Predicate;LVillagePlaceRecord;)Z lambda$take$5
VillagePlace$DistanceTracker b levels
VillagePlace$DistanceTracker a this$0
VillagePlace$DistanceTracker b (J)I getLevelFromSource
VillagePlace$DistanceTracker c (J)I getLevel
VillagePlaceRecord a pos
VillagePlaceRecord b poiType
VillagePlaceRecord c freeTickets
VillagePlaceRecord d setDirty
VillagePlaceRecord b ()Z acquireTicket
VillagePlaceRecord c ()Z releaseTicket
VillagePlaceRecord d ()Z hasSpace
VillagePlaceRecord e ()Z isOccupied
VillagePlaceRecord f ()LBlockPosition; getPos
VillagePlaceRecord g ()LPointOfInterestType; getPoiType
VillagePlaceRecord equals (Ljava/lang/Object;)Z equals
VillagePlaceRecord hashCode ()I hashCode
VillagePlaceSection a LOGGER
VillagePlaceSection b records
VillagePlaceSection c byType
VillagePlaceSection d setDirty
VillagePlaceSection e isValid
VillagePlaceSection b (LBlockPosition;)I getFreeTickets
VillagePlaceSection c (LBlockPosition;)Z release
VillagePlaceSection d (LBlockPosition;)Ljava/util/Optional; getType
VillagePlaceSection b ()V clear
VillagePlaceSection e (LBlockPosition;)Ljava/lang/Object; lambda$add$4
VillagePlaceSection b (LPointOfInterestType;)Ljava/lang/Object; lambda$add$3
PointOfInterestType v ALL_JOBS
PointOfInterestType a ALL
PointOfInterestType w BEDS
PointOfInterestType x TYPE_BY_STATE
PointOfInterestType b UNEMPLOYED
PointOfInterestType c ARMORER
PointOfInterestType d BUTCHER
PointOfInterestType e CARTOGRAPHER
PointOfInterestType f CLERIC
PointOfInterestType g FARMER
PointOfInterestType h FISHERMAN
PointOfInterestType i FLETCHER
PointOfInterestType j LEATHERWORKER
PointOfInterestType k LIBRARIAN
PointOfInterestType l MASON
PointOfInterestType m NITWIT
PointOfInterestType n SHEPHERD
PointOfInterestType o TOOLSMITH
PointOfInterestType p WEAPONSMITH
PointOfInterestType q HOME
PointOfInterestType r MEETING
PointOfInterestType s BEEHIVE
PointOfInterestType t BEE_NEST
PointOfInterestType u NETHER_PORTAL
PointOfInterestType y name
PointOfInterestType z matchingStates
PointOfInterestType A maxTickets
PointOfInterestType B predicate
PointOfInterestType C validRange
PointOfInterestType b ()I getMaxTickets
PointOfInterestType c ()Ljava/util/function/Predicate; getPredicate
PointOfInterestType d ()I getValidRange
PointOfInterestType toString ()Ljava/lang/String; toString
PointOfInterestType b (LIBlockData;)Ljava/util/Optional; forState
PointOfInterestType e ()Ljava/util/stream/Stream; allPoiStates
PointOfInterestType b (LPointOfInterestType;)Z lambda$new$4
PointOfInterestType c (LIBlockData;)Z lambda$static$3
PointOfInterestType b (LBlock;)Ljava/util/stream/Stream; lambda$static$2
PointOfInterestType c (LPointOfInterestType;)Z lambda$static$1
PointOfInterestType d (LPointOfInterestType;)Z lambda$static$0
EntityFish$FishMoveControl i fish
EntityFish$FishSwimGoal h fish
EntityGolem b (FF)Z causeFallDamage
EntityGolem H ()LSoundEffect; getAmbientSound
EntityGolem e (LDamageSource;)LSoundEffect; getHurtSound
EntityGolem dd ()LSoundEffect; getDeathSound
EntityGolem B ()I getAmbientSoundInterval
EntityGolem h (D)Z removeWhenFarAway
EntityFishSchool b leader
EntityFishSchool c schoolSize
EntityFishSchool o ()V registerGoals
EntityFishSchool ee ()I getMaxSpawnClusterSize
EntityFishSchool ey ()I getMaxSchoolSize
EntityFishSchool m ()Z canRandomSwim
EntityFishSchool ez ()Z isFollower
EntityFishSchool eA ()V stopFollowing
EntityFishSchool eF ()V addFollower
EntityFishSchool eG ()V removeFollower
EntityFishSchool eB ()Z canBeFollowed
EntityFishSchool h ()V tick
EntityFishSchool eC ()Z hasFollowers
EntityFishSchool eD ()Z inRangeOfLeader
EntityFishSchool eE ()V pathToLeader
EntityFishSchool b (LEntityFishSchool;)V lambda$addFollowers$1
EntityFishSchool c (LEntityFishSchool;)Z lambda$addFollowers$0
EntityFishSchool$SchoolSpawnGroupData a leader
EntityBee$1 p this$0
EntityBee$1 c ()V tick
EntityBee$BaseBeeGoal a this$0
EntityBee$BaseBeeGoal g ()Z canBeeUse
EntityBee$BaseBeeGoal h ()Z canBeeContinueToUse
EntityBee$BaseBeeGoal b ()Z canContinueToUse
EntityBee$BeeAttackGoal d this$0
EntityBee$BeeAttackGoal b ()Z canContinueToUse
EntityBee$BeeBecomeAngryTargetGoal b ()Z canContinueToUse
EntityBee$BeeBecomeAngryTargetGoal h ()Z beeCanTarget
EntityBee$BeeEnterHiveGoal b this$0
EntityBee$BeeEnterHiveGoal g ()Z canBeeUse
EntityBee$BeeEnterHiveGoal h ()Z canBeeContinueToUse
EntityBee$BeeEnterHiveGoal c ()V start
EntityBee$BeeGoToHiveGoal c travellingTicks
EntityBee$BeeGoToHiveGoal d blacklistedTargets
EntityBee$BeeGoToHiveGoal e lastPath
EntityBee$BeeGoToHiveGoal f ticksStuck
EntityBee$BeeGoToHiveGoal b this$0
EntityBee$BeeGoToHiveGoal g ()Z canBeeUse
EntityBee$BeeGoToHiveGoal h ()Z canBeeContinueToUse
EntityBee$BeeGoToHiveGoal c ()V start
EntityBee$BeeGoToHiveGoal d ()V stop
EntityBee$BeeGoToHiveGoal e ()V tick
EntityBee$BeeGoToHiveGoal b (LBlockPosition;)Z isTargetBlacklisted
EntityBee$BeeGoToHiveGoal c (LBlockPosition;)V blacklistTarget
EntityBee$BeeGoToHiveGoal j ()V clearBlacklist
EntityBee$BeeGoToHiveGoal k ()V dropAndBlacklistHive
EntityBee$BeeGoToHiveGoal l ()V dropHive
EntityBee$BeeGoToHiveGoal d (LBlockPosition;)Z hasReachedTarget
EntityBee$BeeGoToHiveGoal b ()Z canContinueToUse
EntityBee$BeeGoToHiveGoal b (LEntityBee$BeeGoToHiveGoal;)Ljava/util/List; access$500
EntityBee$BeeGoToHiveGoal c (LEntityBee$BeeGoToHiveGoal;)V access$5000
EntityBee$BeeGoToKnownFlowerGoal c travellingTicks
EntityBee$BeeGoToKnownFlowerGoal b this$0
EntityBee$BeeGoToKnownFlowerGoal g ()Z canBeeUse
EntityBee$BeeGoToKnownFlowerGoal h ()Z canBeeContinueToUse
EntityBee$BeeGoToKnownFlowerGoal c ()V start
EntityBee$BeeGoToKnownFlowerGoal d ()V stop
EntityBee$BeeGoToKnownFlowerGoal e ()V tick
EntityBee$BeeGoToKnownFlowerGoal j ()Z wantsToGoToKnownFlower
EntityBee$BeeGoToKnownFlowerGoal b ()Z canContinueToUse
EntityBee$BeeGrowCropGoal b this$0
EntityBee$BeeGrowCropGoal g ()Z canBeeUse
EntityBee$BeeGrowCropGoal h ()Z canBeeContinueToUse
EntityBee$BeeGrowCropGoal e ()V tick
EntityBee$BeeHurtByOtherGoal a this$0
EntityBee$BeeLocateHiveGoal b this$0
EntityBee$BeeLocateHiveGoal g ()Z canBeeUse
EntityBee$BeeLocateHiveGoal h ()Z canBeeContinueToUse
EntityBee$BeeLocateHiveGoal c ()V start
EntityBee$BeeLocateHiveGoal j ()Ljava/util/List; findNearbyHivesWithSpace
EntityBee$BeeLookControl h this$0
EntityBee$BeeLookControl b ()Z resetXRotOnTick
EntityBee$BeePollinateGoal c VALID_POLLINATION_BLOCKS
EntityBee$BeePollinateGoal d successfulPollinatingTicks
EntityBee$BeePollinateGoal e lastSoundPlayedTick
EntityBee$BeePollinateGoal f pollinating
EntityBee$BeePollinateGoal g hoverPos
EntityBee$BeePollinateGoal h pollinatingTicks
EntityBee$BeePollinateGoal b this$0
EntityBee$BeePollinateGoal g ()Z canBeeUse
EntityBee$BeePollinateGoal h ()Z canBeeContinueToUse
EntityBee$BeePollinateGoal j ()Z hasPollinatedLongEnough
EntityBee$BeePollinateGoal k ()Z isPollinating
EntityBee$BeePollinateGoal l ()V stopPollinating
EntityBee$BeePollinateGoal c ()V start
EntityBee$BeePollinateGoal d ()V stop
EntityBee$BeePollinateGoal e ()V tick
EntityBee$BeePollinateGoal m ()V setWantedPos
EntityBee$BeePollinateGoal n ()F getOffset
EntityBee$BeePollinateGoal o ()Ljava/util/Optional; findNearbyFlower
EntityBee$BeePollinateGoal b (LEntityBee$BeePollinateGoal;)V access$800
EntityBee$BeeWanderGoal a this$0
EntityBee$BeeWanderGoal b ()Z canContinueToUse
EntityBee$BeeWanderGoal c ()V start
EntityBee$BeeWanderGoal g ()LVec3D; findPos
EntityCat$CatAvoidEntityGoal i cat
EntityCat$CatAvoidEntityGoal b ()Z canContinueToUse
EntityCat$CatRelaxOnOwnerGoal a cat
EntityCat$CatRelaxOnOwnerGoal b ownerPlayer
EntityCat$CatRelaxOnOwnerGoal c goalPos
EntityCat$CatRelaxOnOwnerGoal d onBedTicks
EntityCat$CatRelaxOnOwnerGoal g ()Z spaceIsOccupied
EntityCat$CatRelaxOnOwnerGoal b ()Z canContinueToUse
EntityCat$CatRelaxOnOwnerGoal c ()V start
EntityCat$CatRelaxOnOwnerGoal d ()V stop
EntityCat$CatRelaxOnOwnerGoal h ()V giveMorningGift
EntityCat$CatRelaxOnOwnerGoal e ()V tick
EntityCod k ()LItemStack; getBucketItemStack
EntityCod H ()LSoundEffect; getAmbientSound
EntityCod dd ()LSoundEffect; getDeathSound
EntityCod e (LDamageSource;)LSoundEffect; getHurtSound
EntityCod ex ()LSoundEffect; getFlopSound
EntityCow o ()V registerGoals
EntityCow cF ()V registerAttributes
EntityCow H ()LSoundEffect; getAmbientSound
EntityCow e (LDamageSource;)LSoundEffect; getHurtSound
EntityCow dd ()LSoundEffect; getDeathSound
EntityCow dt ()F getSoundVolume
EntityCow b (LEntityHuman;LEnumHand;)Z mobInteract
EntityCow b (LEntityAgeable;)LEntityCow; getBreedOffspring
EntityCow b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityDolphin c TREASURE_POS
EntityDolphin d GOT_FISH
EntityDolphin bv MOISTNESS_LEVEL
EntityDolphin bw SWIM_WITH_PLAYER_TARGETING
EntityDolphin b ALLOWED_ITEMS
EntityDolphin cG ()Z canBreatheUnderwater
EntityDolphin g (LBlockPosition;)V setTreasurePos
EntityDolphin k ()LBlockPosition; getTreasurePos
EntityDolphin m ()Z gotFish
EntityDolphin t (Z)V setGotFish
EntityDolphin ex ()I getMoistnessLevel
EntityDolphin b (I)V setMoisntessLevel
EntityDolphin w_ ()V defineSynchedData
EntityDolphin b (LNBTTagCompound;)V addAdditionalSaveData
EntityDolphin o ()V registerGoals
EntityDolphin cF ()V registerAttributes
EntityDolphin b (LWorld;)LNavigationAbstract; createNavigation
EntityDolphin B (LEntity;)Z doHurtTarget
EntityDolphin bC ()I getMaxAirSupply
EntityDolphin m (I)I increaseAirSupply
EntityDolphin b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityDolphin N ()I getMaxHeadXRot
EntityDolphin ec ()I getMaxHeadYRot
EntityDolphin n (LEntity;)Z canRide
EntityDolphin e (LItemStack;)Z canTakeItem
EntityDolphin h ()V tick
EntityDolphin b (LEntityHuman;LEnumHand;)Z mobInteract
EntityDolphin b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkDolphinSpawnRules
EntityDolphin e (LDamageSource;)LSoundEffect; getHurtSound
EntityDolphin dd ()LSoundEffect; getDeathSound
EntityDolphin H ()LSoundEffect; getAmbientSound
EntityDolphin ar ()LSoundEffect; getSwimSplashSound
EntityDolphin aq ()LSoundEffect; getSwimSound
EntityDolphin ey ()Z closeToNextPos
EntityDolphin e (LVec3D;)V travel
EntityDolphin b (LEntityItem;)Z lambda$static$0
EntityDolphin b (LEntityDolphin;)Ljava/util/Random; access$200
EntityDolphin c (LEntityDolphin;)Ljava/util/Random; access$300
EntityDolphin ez ()LPathfinderTargetCondition; access$400
EntityDolphin$DolphinMoveControl i dolphin
EntityDolphin$DolphinSwimToTreasureGoal a dolphin
EntityDolphin$DolphinSwimToTreasureGoal b stuck
EntityDolphin$DolphinSwimToTreasureGoal E_ ()Z isInterruptable
EntityDolphin$DolphinSwimToTreasureGoal b ()Z canContinueToUse
EntityDolphin$DolphinSwimToTreasureGoal c ()V start
EntityDolphin$DolphinSwimToTreasureGoal d ()V stop
EntityDolphin$DolphinSwimToTreasureGoal e ()V tick
EntityDolphin$DolphinSwimWithPlayerGoal a dolphin
EntityDolphin$DolphinSwimWithPlayerGoal b speedModifier
EntityDolphin$DolphinSwimWithPlayerGoal c player
EntityDolphin$DolphinSwimWithPlayerGoal b ()Z canContinueToUse
EntityDolphin$DolphinSwimWithPlayerGoal c ()V start
EntityDolphin$DolphinSwimWithPlayerGoal d ()V stop
EntityDolphin$DolphinSwimWithPlayerGoal e ()V tick
EntityDolphin$PlayWithItemsGoal b cooldown
EntityDolphin$PlayWithItemsGoal a this$0
EntityDolphin$PlayWithItemsGoal c ()V start
EntityDolphin$PlayWithItemsGoal d ()V stop
EntityDolphin$PlayWithItemsGoal e ()V tick
EntityBird eM ()Z isFlying
EntityFox$DefendTrustedTargetGoal j trustedLastHurtBy
EntityFox$DefendTrustedTargetGoal k trustedLastHurt
EntityFox$DefendTrustedTargetGoal l timestamp
EntityFox$DefendTrustedTargetGoal i this$0
EntityFox$DefendTrustedTargetGoal c ()V start
EntityFox$FaceplantGoal a countdown
EntityFox$FaceplantGoal b this$0
EntityFox$FaceplantGoal b ()Z canContinueToUse
EntityFox$FaceplantGoal c ()V start
EntityFox$FaceplantGoal d ()V stop
EntityFox$FaceplantGoal e ()V tick
EntityFox$FoxAlertableEntitiesSelector a this$0
EntityFox$FoxAlertableEntitiesSelector test (Ljava/lang/Object;)Z test
EntityFox$FoxBehaviorGoal b alertableTargeting
EntityFox$FoxBehaviorGoal a this$0
EntityFox$FoxBehaviorGoal g ()Z hasShelter
EntityFox$FoxBehaviorGoal h ()Z alertable
EntityFox$FoxBreedGoal d this$0
EntityFox$FoxBreedGoal c ()V start
EntityFox$FoxBreedGoal g ()V breed
EntityFox$FoxEatBerriesGoal g ticksWaited
EntityFox$FoxEatBerriesGoal h this$0
EntityFox$FoxEatBerriesGoal h ()D acceptedDistance
EntityFox$FoxEatBerriesGoal j ()Z shouldRecalculatePath
EntityFox$FoxEatBerriesGoal e ()V tick
EntityFox$FoxEatBerriesGoal m ()V onReachedTarget
EntityFox$FoxEatBerriesGoal c ()V start
EntityFox$FoxFloatGoal a this$0
EntityFox$FoxFloatGoal c ()V start
EntityFox$FoxFollowParentGoal b fox
EntityFox$FoxFollowParentGoal a this$0
EntityFox$FoxFollowParentGoal b ()Z canContinueToUse
EntityFox$FoxFollowParentGoal c ()V start
EntityFox$FoxGroupData a type
EntityFox$FoxLookAtPlayerGoal g this$0
EntityFox$FoxLookAtPlayerGoal b ()Z canContinueToUse
EntityFox$FoxLookControl h this$0
EntityFox$FoxLookControl b ()Z resetXRotOnTick
EntityFox$FoxMeleeAttackGoal d this$0
EntityFox$FoxMeleeAttackGoal c ()V start
EntityFox$FoxMoveControl i this$0
EntityFox$FoxPanicGoal f this$0
EntityFox$FoxPounceGoal a this$0
EntityFox$FoxPounceGoal b ()Z canContinueToUse
EntityFox$FoxPounceGoal E_ ()Z isInterruptable
EntityFox$FoxPounceGoal c ()V start
EntityFox$FoxPounceGoal d ()V stop
EntityFox$FoxPounceGoal e ()V tick
EntityFox$FoxSearchForItemsGoal a this$0
EntityFox$FoxSearchForItemsGoal e ()V tick
EntityFox$FoxSearchForItemsGoal c ()V start
EntityFox$FoxStrollThroughVillageGoal a this$0
EntityFox$FoxStrollThroughVillageGoal c ()V start
EntityFox$FoxStrollThroughVillageGoal b ()Z canContinueToUse
EntityFox$FoxStrollThroughVillageGoal g ()Z canFoxMove
EntityFox$PerchAndSearchGoal c relX
EntityFox$PerchAndSearchGoal d relZ
EntityFox$PerchAndSearchGoal e lookTime
EntityFox$PerchAndSearchGoal f looksRemaining
EntityFox$PerchAndSearchGoal b this$0
EntityFox$PerchAndSearchGoal b ()Z canContinueToUse
EntityFox$PerchAndSearchGoal c ()V start
EntityFox$PerchAndSearchGoal d ()V stop
EntityFox$PerchAndSearchGoal e ()V tick
EntityFox$PerchAndSearchGoal j ()V resetLook
EntityFox$SeekShelterGoal c interval
EntityFox$SeekShelterGoal b this$0
EntityFox$SeekShelterGoal c ()V start
EntityFox$SleepGoal c countdown
EntityFox$SleepGoal b this$0
EntityFox$SleepGoal b ()Z canContinueToUse
EntityFox$SleepGoal j ()Z canSleep
EntityFox$SleepGoal d ()V stop
EntityFox$SleepGoal c ()V start
EntityFox$StalkPreyGoal a this$0
EntityFox$StalkPreyGoal c ()V start
EntityFox$StalkPreyGoal d ()V stop
EntityFox$StalkPreyGoal e ()V tick
EntityOcelot$OcelotAvoidEntityGoal i ocelot
EntityOcelot$OcelotAvoidEntityGoal b ()Z canContinueToUse
EntityOcelot$OcelotTemptGoal c ocelot
EntityOcelot$OcelotTemptGoal g ()Z canScare
EntityPanda$PandaAttackGoal d panda
EntityPanda$PandaAvoidGoal i panda
EntityPanda$PandaBreedGoal e panda
EntityPanda$PandaBreedGoal f unhappyCooldown
EntityPanda$PandaBreedGoal d this$0
EntityPanda$PandaBreedGoal h ()Z canFindBamboo
EntityPanda$PandaHurtByTargetGoal a panda
EntityPanda$PandaHurtByTargetGoal b ()Z canContinueToUse
EntityPanda$PandaLieOnBackGoal a panda
EntityPanda$PandaLieOnBackGoal b cooldown
EntityPanda$PandaLieOnBackGoal b ()Z canContinueToUse
EntityPanda$PandaLieOnBackGoal c ()V start
EntityPanda$PandaLieOnBackGoal d ()V stop
EntityPanda$PandaLookAtPlayerGoal g panda
EntityPanda$PandaLookAtPlayerGoal b ()Z canContinueToUse
EntityPanda$PandaLookAtPlayerGoal e ()V tick
EntityPanda$PandaMoveControl i panda
EntityPanda$PandaPanicGoal f panda
EntityPanda$PandaPanicGoal b ()Z canContinueToUse
EntityPanda$PandaRollGoal a panda
EntityPanda$PandaRollGoal b ()Z canContinueToUse
EntityPanda$PandaRollGoal c ()V start
EntityPanda$PandaRollGoal E_ ()Z isInterruptable
EntityPanda$PandaSitGoal b cooldown
EntityPanda$PandaSitGoal a this$0
EntityPanda$PandaSitGoal b ()Z canContinueToUse
EntityPanda$PandaSitGoal e ()V tick
EntityPanda$PandaSitGoal c ()V start
EntityPanda$PandaSitGoal d ()V stop
EntityPanda$PandaSneezeGoal a panda
EntityPanda$PandaSneezeGoal b ()Z canContinueToUse
EntityPanda$PandaSneezeGoal c ()V start
EntityParrot$1 test (Ljava/lang/Object;)Z test
EntityPolarBear bv DATA_STANDING_ID
EntityPolarBear bw clientSideStandAnimationO
EntityPolarBear bx clientSideStandAnimation
EntityPolarBear by warningSoundTicks
EntityPolarBear k (LItemStack;)Z isFood
EntityPolarBear o ()V registerGoals
EntityPolarBear cF ()V registerAttributes
EntityPolarBear c (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkPolarBearSpawnRules
EntityPolarBear H ()LSoundEffect; getAmbientSound
EntityPolarBear e (LDamageSource;)LSoundEffect; getHurtSound
EntityPolarBear dd ()LSoundEffect; getDeathSound
EntityPolarBear ex ()V playWarningSound
EntityPolarBear w_ ()V defineSynchedData
EntityPolarBear h ()V tick
EntityPolarBear B (LEntity;)Z doHurtTarget
EntityPolarBear ey ()Z isStanding
EntityPolarBear t (Z)V setStanding
EntityPolarBear u (F)F getStandingAnimationScale
EntityPolarBear dz ()F getWaterSlowDown
EntityPolarBear$PolarBearAttackPlayersGoal i this$0
EntityPolarBear$PolarBearAttackPlayersGoal k ()D getFollowDistance
EntityPolarBear$PolarBearHurtByTargetGoal a this$0
EntityPolarBear$PolarBearHurtByTargetGoal c ()V start
EntityPolarBear$PolarBearMeleeAttackGoal d this$0
EntityPolarBear$PolarBearMeleeAttackGoal d ()V stop
EntityPolarBear$PolarBearPanicGoal f this$0
EntityPufferFish$PufferfishPuffGoal a fish
EntityPufferFish$PufferfishPuffGoal c ()V start
EntityPufferFish$PufferfishPuffGoal d ()V stop
EntityPufferFish$PufferfishPuffGoal b ()Z canContinueToUse
EntityRabbit$PathfinderGoalRabbitAvoidTarget i rabbit
EntityRabbit$GroupDataRabbit a rabbitType
EntityRabbit$ControllerJumpRabbit c rabbit
EntityRabbit$ControllerJumpRabbit d canJump
EntityRabbit$ControllerJumpRabbit b this$0
EntityRabbit$ControllerJumpRabbit c ()Z wantJump
EntityRabbit$ControllerJumpRabbit d ()Z canJump
EntityRabbit$ControllerJumpRabbit b ()V tick
EntityRabbit$ControllerMoveRabbit i rabbit
EntityRabbit$ControllerMoveRabbit j nextJumpSpeed
EntityRabbit$PathfinderGoalRabbitPanic f rabbit
EntityRabbit$PathfinderGoalRabbitPanic e ()V tick
EntitySalmon ey ()I getMaxSchoolSize
EntitySalmon k ()LItemStack; getBucketItemStack
EntitySalmon H ()LSoundEffect; getAmbientSound
EntitySalmon dd ()LSoundEffect; getDeathSound
EntitySalmon e (LDamageSource;)LSoundEffect; getHurtSound
EntitySalmon ex ()LSoundEffect; getFlopSound
EntitySheep$2 a $SwitchMap$net$minecraft$world$item$DyeColor
EntityPerchable bx rideCooldownCounter
EntityPerchable d (LEntityPlayer;)Z setEntityOnShoulder
EntityPerchable h ()V tick
EntityPerchable eJ ()Z canSitOnShoulder
EntitySquid b xBodyRot
EntitySquid c xBodyRotO
EntitySquid d zBodyRot
EntitySquid bv zBodyRotO
EntitySquid bw tentacleMovement
EntitySquid bx oldTentacleMovement
EntitySquid by tentacleAngle
EntitySquid bz oldTentacleAngle
EntitySquid bA speed
EntitySquid bB tentacleSpeed
EntitySquid bC rotateSpeed
EntitySquid bD tx
EntitySquid bE ty
EntitySquid bF tz
EntitySquid o ()V registerGoals
EntitySquid cF ()V registerAttributes
EntitySquid b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntitySquid H ()LSoundEffect; getAmbientSound
EntitySquid e (LDamageSource;)LSoundEffect; getHurtSound
EntitySquid dd ()LSoundEffect; getDeathSound
EntitySquid dt ()F getSoundVolume
EntitySquid ax ()Z isMovementNoisy
EntitySquid l ()V aiStep
EntitySquid f (LVec3D;)LVec3D; rotateVector
EntitySquid m ()V spawnInk
EntitySquid e (LVec3D;)V travel
EntitySquid b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkSquidSpawnRules
EntitySquid k ()Z hasMovementVector
EntitySquid$SquidFleeGoal b fleeTicks
EntitySquid$SquidFleeGoal a this$0
EntitySquid$SquidFleeGoal c ()V start
EntitySquid$SquidFleeGoal e ()V tick
EntitySquid$PathfinderGoalSquid b squid
EntitySquid$PathfinderGoalSquid a this$0
EntitySquid$PathfinderGoalSquid e ()V tick
EntityTropicalFish$TropicalFishGroupData b base
EntityTropicalFish$TropicalFishGroupData c pattern
EntityTropicalFish$TropicalFishGroupData d baseColor
EntityTropicalFish$TropicalFishGroupData e patternColor
EntityTropicalFish$TropicalFishGroupData b (LEntityTropicalFish$TropicalFishGroupData;)I access$100
EntityTropicalFish$TropicalFishGroupData c (LEntityTropicalFish$TropicalFishGroupData;)I access$200
EntityTropicalFish$TropicalFishGroupData d (LEntityTropicalFish$TropicalFishGroupData;)I access$300
EntityTurtle bw HOME_POS
EntityTurtle bx HAS_EGG
EntityTurtle by LAYING_EGG
EntityTurtle bz TRAVEL_POS
EntityTurtle bA GOING_HOME
EntityTurtle bB TRAVELLING
EntityTurtle bC layEggCounter
EntityTurtle bv BABY_ON_LAND_SELECTOR
EntityTurtle g (LBlockPosition;)V setHomePos
EntityTurtle ez ()LBlockPosition; getHomePos
EntityTurtle h (LBlockPosition;)V setTravelPos
EntityTurtle eA ()LBlockPosition; getTravelPos
EntityTurtle ex ()Z hasEgg
EntityTurtle t (Z)V setHasEgg
EntityTurtle ey ()Z isLayingEgg
EntityTurtle u (Z)V setLayingEgg
EntityTurtle eB ()Z isGoingHome
EntityTurtle v (Z)V setGoingHome
EntityTurtle eG ()Z isTravelling
EntityTurtle w (Z)V setTravelling
EntityTurtle w_ ()V defineSynchedData
EntityTurtle b (LNBTTagCompound;)V addAdditionalSaveData
EntityTurtle c (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkTurtleSpawnRules
EntityTurtle o ()V registerGoals
EntityTurtle cF ()V registerAttributes
EntityTurtle bS ()Z isPushedByFluid
EntityTurtle cG ()Z canBreatheUnderwater
EntityTurtle dp ()LEnumMonsterType; getMobType
EntityTurtle B ()I getAmbientSoundInterval
EntityTurtle H ()LSoundEffect; getAmbientSound
EntityTurtle d (F)V playSwimSound
EntityTurtle aq ()LSoundEffect; getSwimSound
EntityTurtle e (LDamageSource;)LSoundEffect; getHurtSound
EntityTurtle dd ()LSoundEffect; getDeathSound
EntityTurtle eC ()Z canFallInLove
EntityTurtle ao ()F nextStep
EntityTurtle cI ()F getScale
EntityTurtle b (LWorld;)LNavigationAbstract; createNavigation
EntityTurtle k (LItemStack;)Z isFood
EntityTurtle l ()V aiStep
EntityTurtle m ()V ageBoundaryReached
EntityTurtle e (LVec3D;)V travel
EntityTurtle j (LEntityLiving;)Z lambda$static$0
EntityTurtle b (LEntityTurtle;)Ljava/util/Random; access$300
EntityTurtle c (LEntityTurtle;)LBlockPosition; access$600
EntityTurtle d (LEntityTurtle;)LBlockPosition; access$700
EntityTurtle b (LEntityTurtle;Z)V access$800
EntityTurtle c (LEntityTurtle;Z)V access$900
EntityTurtle e (LEntityTurtle;)I access$1000
EntityTurtle d (LEntityTurtle;Z)V access$1100
EntityTurtle f (LEntityTurtle;)Ljava/util/Random; access$1200
EntityTurtle g (LEntityTurtle;)I access$1008
EntityTurtle h (LEntityTurtle;)Z access$1300
EntityTurtle i (LEntityTurtle;)Z access$1400
EntityTurtle$TurtleBreedGoal d turtle
EntityTurtle$TurtleBreedGoal g ()V breed
EntityTurtle$TurtleGoHomeGoal a turtle
EntityTurtle$TurtleGoHomeGoal b speedModifier
EntityTurtle$TurtleGoHomeGoal c stuck
EntityTurtle$TurtleGoHomeGoal d closeToHomeTryTicks
EntityTurtle$TurtleGoHomeGoal c ()V start
EntityTurtle$TurtleGoHomeGoal d ()V stop
EntityTurtle$TurtleGoHomeGoal b ()Z canContinueToUse
EntityTurtle$TurtleGoHomeGoal e ()V tick
EntityTurtle$TurtleGoToWaterGoal g turtle
EntityTurtle$TurtleGoToWaterGoal b ()Z canContinueToUse
EntityTurtle$TurtleGoToWaterGoal j ()Z shouldRecalculatePath
EntityTurtle$TurtleLayEggGoal g turtle
EntityTurtle$TurtleLayEggGoal b ()Z canContinueToUse
EntityTurtle$TurtleLayEggGoal e ()V tick
EntityTurtle$TurtleMoveControl i turtle
EntityTurtle$TurtleMoveControl g ()V updateSpeed
EntityTurtle$TurtleRandomStrollGoal h turtle
EntityTurtle$TurtleTemptGoal a TEMPT_TARGETING
EntityTurtle$TurtleTemptGoal b turtle
EntityTurtle$TurtleTemptGoal c speedModifier
EntityTurtle$TurtleTemptGoal d player
EntityTurtle$TurtleTemptGoal e calmDown
EntityTurtle$TurtleTemptGoal f items
EntityTurtle$TurtleTemptGoal b ()Z canContinueToUse
EntityTurtle$TurtleTemptGoal d ()V stop
EntityTurtle$TurtleTemptGoal e ()V tick
EntityTurtle$TurtleTravelGoal a turtle
EntityTurtle$TurtleTravelGoal b speedModifier
EntityTurtle$TurtleTravelGoal c stuck
EntityTurtle$TurtleTravelGoal c ()V start
EntityTurtle$TurtleTravelGoal e ()V tick
EntityTurtle$TurtleTravelGoal b ()Z canContinueToUse
EntityTurtle$TurtleTravelGoal d ()V stop
EntityWaterAnimal cG ()Z canBreatheUnderwater
EntityWaterAnimal dp ()LEnumMonsterType; getMobType
EntityWaterAnimal B ()I getAmbientSoundInterval
EntityWaterAnimal d (LEntityHuman;)I getExperienceReward
EntityWaterAnimal ad ()V baseTick
EntityWaterAnimal bS ()Z isPushedByFluid
EntityWolf$WolfAvoidEntityGoal j wolf
EntityWolf$WolfAvoidEntityGoal i this$0
EntityWolf$WolfAvoidEntityGoal c ()V start
EntityWolf$WolfAvoidEntityGoal e ()V tick
EntityHorseDonkey H ()LSoundEffect; getAmbientSound
EntityHorseDonkey dd ()LSoundEffect; getDeathSound
EntityHorseDonkey e (LDamageSource;)LSoundEffect; getHurtSound
EntityHorse$HorseGroupData a variant
EntityLlama$LlamaAttackWolfGoal k ()D getFollowDistance
EntityLlama$LlamaAttackWolfGoal b (LEntityLiving;)Z lambda$new$0
EntityLlama$LlamaGroupData a variant
EntityLlama$LlamaHurtByTargetGoal b ()Z canContinueToUse
EntityHorseMule H ()LSoundEffect; getAmbientSound
EntityHorseMule dd ()LSoundEffect; getDeathSound
EntityHorseMule e (LDamageSource;)LSoundEffect; getHurtSound
EntityHorseMule eA ()V playChestEquipsSound
EntityHorseSkeleton bE skeletonTrapGoal
EntityHorseSkeleton bF isTrap
EntityHorseSkeleton bG trapTime
EntityHorseSkeleton cF ()V registerAttributes
EntityHorseSkeleton eG ()V addBehaviourGoals
EntityHorseSkeleton H ()LSoundEffect; getAmbientSound
EntityHorseSkeleton dd ()LSoundEffect; getDeathSound
EntityHorseSkeleton e (LDamageSource;)LSoundEffect; getHurtSound
EntityHorseSkeleton aq ()LSoundEffect; getSwimSound
EntityHorseSkeleton d (F)V playSwimSound
EntityHorseSkeleton eX ()V playJumpSound
EntityHorseSkeleton dp ()LEnumMonsterType; getMobType
EntityHorseSkeleton aY ()D getRideHeight
EntityHorseSkeleton l ()V aiStep
EntityHorseSkeleton b (LNBTTagCompound;)V addAdditionalSaveData
EntityHorseSkeleton bo ()Z rideableUnderWater
EntityHorseSkeleton dz ()F getWaterSlowDown
EntityHorseSkeleton ex ()Z isTrap
EntityHorseSkeleton t (Z)V setTrap
EntityHorseSkeleton b (LEntityHuman;LEnumHand;)Z mobInteract
PathfinderGoalHorseTrap a horse
PathfinderGoalHorseTrap e ()V tick
EntityLlamaTrader bE despawnDelay
EntityLlamaTrader fd ()Z isTraderLlama
EntityLlamaTrader fh ()LEntityLlama; makeBabyLlama
EntityLlamaTrader b (LNBTTagCompound;)V addAdditionalSaveData
EntityLlamaTrader o ()V registerGoals
EntityLlamaTrader x (I)V setDespawnDelay
EntityLlamaTrader g (LEntityHuman;)V doPlayerRide
EntityLlamaTrader l ()V aiStep
EntityLlamaTrader fm ()V maybeDespawn
EntityLlamaTrader fn ()Z canDespawn
EntityLlamaTrader fo ()Z isLeashedToWanderingTrader
EntityLlamaTrader fp ()Z isLeashedToSomethingOtherThanTheWanderingTrader
EntityLlamaTrader$TraderLlamaDefendWanderingTraderGoal b llama
EntityLlamaTrader$TraderLlamaDefendWanderingTraderGoal c ownerLastHurtBy
EntityLlamaTrader$TraderLlamaDefendWanderingTraderGoal d timestamp
EntityLlamaTrader$TraderLlamaDefendWanderingTraderGoal a this$0
EntityLlamaTrader$TraderLlamaDefendWanderingTraderGoal c ()V start
EntityHorseZombie cF ()V registerAttributes
EntityHorseZombie dp ()LEnumMonsterType; getMobType
EntityHorseZombie H ()LSoundEffect; getAmbientSound
EntityHorseZombie dd ()LSoundEffect; getDeathSound
EntityHorseZombie e (LDamageSource;)LSoundEffect; getHurtSound
EntityHorseZombie b (LEntityHuman;LEnumHand;)Z mobInteract
EntityHorseZombie eG ()V addBehaviourGoals
BossMob dk ()F getMaxHealth
BossMob cY ()F getHealth
BossMob d ()LIChatBaseComponent; getDisplayName
AbstractDragonController a dragon
AbstractDragonController b ()V doClientTick
AbstractDragonController c ()V doServerTick
AbstractDragonController d ()V begin
AbstractDragonController e ()V end
AbstractDragonController f ()F getFlySpeed
AbstractDragonController g ()LVec3D; getFlyTargetLocation
AbstractDragonController h ()F getTurnSpeed
DragonControllerCharge b LOGGER
DragonControllerCharge c targetLocation
DragonControllerCharge d timeSinceCharge
DragonControllerCharge c ()V doServerTick
DragonControllerCharge d ()V begin
DragonControllerCharge f ()F getFlySpeed
DragonControllerCharge g ()LVec3D; getFlyTargetLocation
DragonControllerCharge i ()LDragonControllerPhase; getPhase
DragonControllerDying b targetLocation
DragonControllerDying c time
DragonControllerDying b ()V doClientTick
DragonControllerDying c ()V doServerTick
DragonControllerDying d ()V begin
DragonControllerDying f ()F getFlySpeed
DragonControllerDying g ()LVec3D; getFlyTargetLocation
DragonControllerDying i ()LDragonControllerPhase; getPhase
DragonControllerHold b NEW_TARGET_TARGETING
DragonControllerHold c currentPath
DragonControllerHold d targetLocation
DragonControllerHold e clockwise
DragonControllerHold i ()LDragonControllerPhase; getPhase
DragonControllerHold c ()V doServerTick
DragonControllerHold d ()V begin
DragonControllerHold g ()LVec3D; getFlyTargetLocation
DragonControllerHold j ()V findNewTarget
DragonControllerHold k ()V navigateToNextPathNode
DragonControllerHover b targetLocation
DragonControllerHover c ()V doServerTick
DragonControllerHover d ()V begin
DragonControllerHover f ()F getFlySpeed
DragonControllerHover g ()LVec3D; getFlyTargetLocation
DragonControllerHover i ()LDragonControllerPhase; getPhase
DragonControllerLandingFly b NEAR_EGG_TARGETING
DragonControllerLandingFly c currentPath
DragonControllerLandingFly d targetLocation
DragonControllerLandingFly i ()LDragonControllerPhase; getPhase
DragonControllerLandingFly d ()V begin
DragonControllerLandingFly c ()V doServerTick
DragonControllerLandingFly g ()LVec3D; getFlyTargetLocation
DragonControllerLandingFly j ()V findNewTarget
DragonControllerLandingFly k ()V navigateToNextPathNode
DragonControllerLanding b targetLocation
DragonControllerLanding b ()V doClientTick
DragonControllerLanding c ()V doServerTick
DragonControllerLanding f ()F getFlySpeed
DragonControllerLanding h ()F getTurnSpeed
DragonControllerLanding d ()V begin
DragonControllerLanding g ()LVec3D; getFlyTargetLocation
DragonControllerLanding i ()LDragonControllerPhase; getPhase
DragonControllerLandedAttack b attackingTicks
DragonControllerLandedAttack b ()V doClientTick
DragonControllerLandedAttack c ()V doServerTick
DragonControllerLandedAttack d ()V begin
DragonControllerLandedAttack i ()LDragonControllerPhase; getPhase
DragonControllerLandedFlame b flameTicks
DragonControllerLandedFlame c flameCount
DragonControllerLandedFlame d flame
DragonControllerLandedFlame b ()V doClientTick
DragonControllerLandedFlame c ()V doServerTick
DragonControllerLandedFlame d ()V begin
DragonControllerLandedFlame e ()V end
DragonControllerLandedFlame i ()LDragonControllerPhase; getPhase
DragonControllerLandedFlame j ()V resetFlameCount
DragonControllerLandedSearch b CHARGE_TARGETING
DragonControllerLandedSearch c scanTargeting
DragonControllerLandedSearch d scanningTime
DragonControllerLandedSearch c ()V doServerTick
DragonControllerLandedSearch d ()V begin
DragonControllerLandedSearch i ()LDragonControllerPhase; getPhase
DragonControllerStrafe b LOGGER
DragonControllerStrafe c fireballCharge
DragonControllerStrafe d currentPath
DragonControllerStrafe e targetLocation
DragonControllerStrafe f attackTarget
DragonControllerStrafe g holdingPatternClockwise
DragonControllerStrafe c ()V doServerTick
DragonControllerStrafe j ()V findNewTarget
DragonControllerStrafe k ()V navigateToNextPathNode
DragonControllerStrafe d ()V begin
DragonControllerStrafe g ()LVec3D; getFlyTargetLocation
DragonControllerStrafe i ()LDragonControllerPhase; getPhase
DragonControllerFly b firstTick
DragonControllerFly c currentPath
DragonControllerFly d targetLocation
DragonControllerFly c ()V doServerTick
DragonControllerFly d ()V begin
DragonControllerFly j ()V findNewTarget
DragonControllerFly k ()V navigateToNextPathNode
DragonControllerFly g ()LVec3D; getFlyTargetLocation
DragonControllerFly i ()LDragonControllerPhase; getPhase
EntityWither$WitherDoNothingGoal a this$0
EntityArmorStand$1 a $SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
EntityHanging$1 a $SwitchMap$net$minecraft$world$level$block$Rotation
EntityItemFrame$1 a $SwitchMap$net$minecraft$core$Direction$Axis
EntityLeash d (DDD)V setPos
EntityLeash f ()V recalculateBoundingBox
EntityLeash k ()I getWidth
EntityLeash l ()I getHeight
EntityLeash b (LNBTTagCompound;)V addAdditionalSaveData
EntityLeash i ()Z survives
EntityLeash m ()V playPlacementSound
EntityLeash O ()LPacket; getAddEntityPacket
EntityIllagerAbstract o ()V registerGoals
EntityIllagerAbstract dp ()LEnumMonsterType; getMobType
EntityIllagerAbstract k ()LEntityIllagerAbstract$IllagerArmPose; getArmPose
EntityIllagerAbstract$IllagerArmPose a CROSSED
EntityIllagerAbstract$IllagerArmPose b ATTACKING
EntityIllagerAbstract$IllagerArmPose c SPELLCASTING
EntityIllagerAbstract$IllagerArmPose d BOW_AND_ARROW
EntityIllagerAbstract$IllagerArmPose e CROSSBOW_HOLD
EntityIllagerAbstract$IllagerArmPose f CROSSBOW_CHARGE
EntityIllagerAbstract$IllagerArmPose g CELEBRATING
EntityIllagerAbstract$IllagerArmPose h NEUTRAL
EntityIllagerAbstract$IllagerArmPose i $VALUES
EntityIllagerAbstract$IllagerArmPose values ()[LEntityIllagerAbstract$IllagerArmPose; values
EntityIllagerAbstract$IllagerArmPose valueOf (Ljava/lang/String;)LEntityIllagerAbstract$IllagerArmPose; valueOf
EntityIllagerAbstract$RaiderOpenDoorGoal a this$0
EntitySkeletonAbstract b bowGoal
EntitySkeletonAbstract c meleeGoal
EntitySkeletonAbstract o ()V registerGoals
EntitySkeletonAbstract cF ()V registerAttributes
EntitySkeletonAbstract k ()LSoundEffect; getStepSound
EntitySkeletonAbstract dp ()LEnumMonsterType; getMobType
EntitySkeletonAbstract l ()V aiStep
EntitySkeletonAbstract aW ()V rideTick
EntitySkeletonAbstract m ()V reassessWeaponGoal
EntitySkeletonAbstract b (LItemStack;F)LEntityArrow; getArrow
EntitySkeletonAbstract b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntitySkeletonAbstract aX ()D getRidingHeight
EntitySkeletonAbstract$1 d this$0
EntitySkeletonAbstract$1 d ()V stop
EntitySkeletonAbstract$1 c ()V start
EntityBlaze b allowedHeightOffset
EntityBlaze c nextHeightOffsetChangeTick
EntityBlaze d DATA_FLAGS_ID
EntityBlaze o ()V registerGoals
EntityBlaze cF ()V registerAttributes
EntityBlaze w_ ()V defineSynchedData
EntityBlaze H ()LSoundEffect; getAmbientSound
EntityBlaze e (LDamageSource;)LSoundEffect; getHurtSound
EntityBlaze dd ()LSoundEffect; getDeathSound
EntityBlaze aO ()F getBrightness
EntityBlaze l ()V aiStep
EntityBlaze M ()V customServerAiStep
EntityBlaze b (FF)Z causeFallDamage
EntityBlaze bl ()Z isOnFire
EntityBlaze k ()Z isCharged
EntityBlaze t (Z)V setCharged
EntityBlaze$PathfinderGoalBlazeFireball a blaze
EntityBlaze$PathfinderGoalBlazeFireball b attackStep
EntityBlaze$PathfinderGoalBlazeFireball c attackTime
EntityBlaze$PathfinderGoalBlazeFireball d lastSeen
EntityBlaze$PathfinderGoalBlazeFireball c ()V start
EntityBlaze$PathfinderGoalBlazeFireball d ()V stop
EntityBlaze$PathfinderGoalBlazeFireball e ()V tick
EntityBlaze$PathfinderGoalBlazeFireball g ()D getFollowDistance
EntityCaveSpider cF ()V registerAttributes
EntityCaveSpider B (LEntity;)Z doHurtTarget
EntityCaveSpider b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityDrowned$DrownedAttackGoal d drowned
EntityDrowned$DrownedAttackGoal b ()Z canContinueToUse
EntityDrowned$DrownedGoToBeachGoal g drowned
EntityDrowned$DrownedGoToBeachGoal b ()Z canContinueToUse
EntityDrowned$DrownedGoToBeachGoal c ()V start
EntityDrowned$DrownedGoToBeachGoal d ()V stop
EntityDrowned$DrownedGoToWaterGoal a mob
EntityDrowned$DrownedGoToWaterGoal b wantedX
EntityDrowned$DrownedGoToWaterGoal c wantedY
EntityDrowned$DrownedGoToWaterGoal d wantedZ
EntityDrowned$DrownedGoToWaterGoal e speedModifier
EntityDrowned$DrownedGoToWaterGoal f level
EntityDrowned$DrownedGoToWaterGoal b ()Z canContinueToUse
EntityDrowned$DrownedGoToWaterGoal c ()V start
EntityDrowned$DrownedGoToWaterGoal g ()LVec3D; getWaterPos
EntityDrowned$DrownedMoveControl i drowned
EntityDrowned$DrownedSwimUpGoal a drowned
EntityDrowned$DrownedSwimUpGoal b speedModifier
EntityDrowned$DrownedSwimUpGoal c seaLevel
EntityDrowned$DrownedSwimUpGoal d stuck
EntityDrowned$DrownedSwimUpGoal b ()Z canContinueToUse
EntityDrowned$DrownedSwimUpGoal e ()V tick
EntityDrowned$DrownedSwimUpGoal c ()V start
EntityDrowned$DrownedSwimUpGoal d ()V stop
EntityDrowned$DrownedTridentAttackGoal a drowned
EntityDrowned$DrownedTridentAttackGoal c ()V start
EntityDrowned$DrownedTridentAttackGoal d ()V stop
EntityGuardianElder b ELDER_SIZE_SCALE
EntityGuardianElder cF ()V registerAttributes
EntityGuardianElder k ()I getAttackDuration
EntityGuardianElder m ()V setGhost
EntityGuardianElder H ()LSoundEffect; getAmbientSound
EntityGuardianElder e (LDamageSource;)LSoundEffect; getHurtSound
EntityGuardianElder dd ()LSoundEffect; getDeathSound
EntityGuardianElder ex ()LSoundEffect; getFlopSound
EntityGuardianElder M ()V customServerAiStep
EntityGuardianElder d (LEntityPlayer;)Z lambda$customServerAiStep$0
EntityEnderman$EndermanFreezeWhenLookedAt a enderman
EntityEnderman$EndermanFreezeWhenLookedAt b target
EntityEnderman$EndermanFreezeWhenLookedAt c ()V start
EntityEnderman$EndermanFreezeWhenLookedAt e ()V tick
EntityEnderman$PathfinderGoalEndermanPlaceBlock a enderman
EntityEnderman$PathfinderGoalEndermanPlaceBlock e ()V tick
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget i enderman
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget j pendingTarget
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget k aggroTime
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget l teleportTime
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget m startAggroTargetConditions
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget n continueAggroTargetConditions
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget c ()V start
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget d ()V stop
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget b ()Z canContinueToUse
EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget e ()V tick
EntityEvoker bv wololoTarget
EntityEvoker o ()V registerGoals
EntityEvoker cF ()V registerAttributes
EntityEvoker w_ ()V defineSynchedData
EntityEvoker m ()LSoundEffect; getCelebrateSound
EntityEvoker b (LNBTTagCompound;)V addAdditionalSaveData
EntityEvoker M ()V customServerAiStep
EntityEvoker r (LEntity;)Z isAlliedTo
EntityEvoker H ()LSoundEffect; getAmbientSound
EntityEvoker dd ()LSoundEffect; getDeathSound
EntityEvoker e (LDamageSource;)LSoundEffect; getHurtSound
EntityEvoker eQ ()LEntitySheep; getWololoTarget
EntityEvoker ex ()LSoundEffect; getCastingSoundEvent
EntityEvoker b (LEntityEvoker;)Ljava/util/Random; access$400
EntityEvoker c (LEntityEvoker;)Ljava/util/Random; access$500
EntityEvoker d (LEntityEvoker;)Ljava/util/Random; access$600
EntityEvoker e (LEntityEvoker;)Ljava/util/Random; access$700
EntityEvoker f (LEntityEvoker;)Ljava/util/Random; access$800
EntityEvoker$EvokerAttackSpellGoal a this$0
EntityEvoker$EvokerAttackSpellGoal g ()I getCastingTime
EntityEvoker$EvokerAttackSpellGoal h ()I getCastingInterval
EntityEvoker$EvokerAttackSpellGoal j ()V performSpellCasting
EntityEvoker$EvokerAttackSpellGoal k ()LSoundEffect; getSpellPrepareSound
EntityEvoker$EvokerAttackSpellGoal l ()LEntityIllagerWizard$Spell; getSpell
EntityEvoker$EvokerCastingSpellGoal a this$0
EntityEvoker$EvokerCastingSpellGoal e ()V tick
EntityEvoker$EvokerSummonSpellGoal e vexCountTargeting
EntityEvoker$EvokerSummonSpellGoal a this$0
EntityEvoker$EvokerSummonSpellGoal g ()I getCastingTime
EntityEvoker$EvokerSummonSpellGoal h ()I getCastingInterval
EntityEvoker$EvokerSummonSpellGoal j ()V performSpellCasting
EntityEvoker$EvokerSummonSpellGoal k ()LSoundEffect; getSpellPrepareSound
EntityEvoker$EvokerSummonSpellGoal l ()LEntityIllagerWizard$Spell; getSpell
EntityEvoker$EvokerWololoSpellGoal e wololoTargeting
EntityEvoker$EvokerWololoSpellGoal a this$0
EntityEvoker$EvokerWololoSpellGoal b ()Z canContinueToUse
EntityEvoker$EvokerWololoSpellGoal d ()V stop
EntityEvoker$EvokerWololoSpellGoal j ()V performSpellCasting
EntityEvoker$EvokerWololoSpellGoal m ()I getCastWarmupTime
EntityEvoker$EvokerWololoSpellGoal g ()I getCastingTime
EntityEvoker$EvokerWololoSpellGoal h ()I getCastingInterval
EntityEvoker$EvokerWololoSpellGoal k ()LSoundEffect; getSpellPrepareSound
EntityEvoker$EvokerWololoSpellGoal l ()LEntityIllagerWizard$Spell; getSpell
EntityEvoker$EvokerWololoSpellGoal e ()V tick
EntityEvoker$EvokerWololoSpellGoal c ()V start
EntityGhast$PathfinderGoalGhastMoveTowardsTarget a ghast
EntityGhast$PathfinderGoalGhastMoveTowardsTarget e ()V tick
EntityGhast$ControllerGhast i ghast
EntityGhast$ControllerGhast j floatDuration
EntityGhast$PathfinderGoalGhastIdleMove a ghast
EntityGhast$PathfinderGoalGhastIdleMove b ()Z canContinueToUse
EntityGhast$PathfinderGoalGhastIdleMove c ()V start
EntityGiantZombie b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityGiantZombie cF ()V registerAttributes
EntityGuardian$PathfinderGoalGuardianAttack a guardian
EntityGuardian$PathfinderGoalGuardianAttack b attackTime
EntityGuardian$PathfinderGoalGuardianAttack c elder
EntityGuardian$PathfinderGoalGuardianAttack b ()Z canContinueToUse
EntityGuardian$PathfinderGoalGuardianAttack c ()V start
EntityGuardian$PathfinderGoalGuardianAttack d ()V stop
EntityGuardian$PathfinderGoalGuardianAttack e ()V tick
EntityGuardian$EntitySelectorGuardianTargetHumanSquid a guardian
EntityGuardian$EntitySelectorGuardianTargetHumanSquid test (Ljava/lang/Object;)Z test
EntityGuardian$ControllerMoveGuardian i guardian
EntityZombieHusk b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkHuskSpawnRules
EntityZombieHusk K_ ()Z isSunSensitive
EntityZombieHusk H ()LSoundEffect; getAmbientSound
EntityZombieHusk e (LDamageSource;)LSoundEffect; getHurtSound
EntityZombieHusk dd ()LSoundEffect; getDeathSound
EntityZombieHusk ex ()LSoundEffect; getStepSound
EntityZombieHusk B (LEntity;)Z doHurtTarget
EntityZombieHusk ez ()Z convertsInWater
EntityZombieHusk eB ()V doUnderWaterConversion
EntityZombieHusk ey ()LItemStack; getSkull
EntityIllagerIllusioner bv clientSideIllusionTicks
EntityIllagerIllusioner bw clientSideIllusionOffsets
EntityIllagerIllusioner o ()V registerGoals
EntityIllagerIllusioner cF ()V registerAttributes
EntityIllagerIllusioner w_ ()V defineSynchedData
EntityIllagerIllusioner ca ()LAxisAlignedBB; getBoundingBoxForCulling
EntityIllagerIllusioner l ()V aiStep
EntityIllagerIllusioner m ()LSoundEffect; getCelebrateSound
EntityIllagerIllusioner u (F)[LVec3D; getIllusionOffsets
EntityIllagerIllusioner r (LEntity;)Z isAlliedTo
EntityIllagerIllusioner H ()LSoundEffect; getAmbientSound
EntityIllagerIllusioner dd ()LSoundEffect; getDeathSound
EntityIllagerIllusioner e (LDamageSource;)LSoundEffect; getHurtSound
EntityIllagerIllusioner ex ()LSoundEffect; getCastingSoundEvent
EntityIllagerIllusioner k ()LEntityIllagerAbstract$IllagerArmPose; getArmPose
EntityIllagerIllusioner$IllusionerBlindnessSpellGoal e lastTargetId
EntityIllagerIllusioner$IllusionerBlindnessSpellGoal a this$0
EntityIllagerIllusioner$IllusionerBlindnessSpellGoal c ()V start
EntityIllagerIllusioner$IllusionerBlindnessSpellGoal g ()I getCastingTime
EntityIllagerIllusioner$IllusionerBlindnessSpellGoal h ()I getCastingInterval
EntityIllagerIllusioner$IllusionerBlindnessSpellGoal j ()V performSpellCasting
EntityIllagerIllusioner$IllusionerBlindnessSpellGoal k ()LSoundEffect; getSpellPrepareSound
EntityIllagerIllusioner$IllusionerBlindnessSpellGoal l ()LEntityIllagerWizard$Spell; getSpell
EntityIllagerIllusioner$IllusionerMirrorSpellGoal a this$0
EntityIllagerIllusioner$IllusionerMirrorSpellGoal g ()I getCastingTime
EntityIllagerIllusioner$IllusionerMirrorSpellGoal h ()I getCastingInterval
EntityIllagerIllusioner$IllusionerMirrorSpellGoal j ()V performSpellCasting
EntityIllagerIllusioner$IllusionerMirrorSpellGoal k ()LSoundEffect; getSpellPrepareSound
EntityIllagerIllusioner$IllusionerMirrorSpellGoal l ()LEntityIllagerWizard$Spell; getSpell
EntityMagmaCube cF ()V registerAttributes
EntityMagmaCube b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkMagmaCubeSpawnRules
EntityMagmaCube aO ()F getBrightness
EntityMagmaCube k ()LParticleParam; getParticleType
EntityMagmaCube I ()LMinecraftKey; getDefaultLootTable
EntityMagmaCube bl ()Z isOnFire
EntityMagmaCube m ()I getJumpDelay
EntityMagmaCube ev ()V decreaseSquish
EntityMagmaCube dx ()V jumpFromGround
EntityMagmaCube b (LTag;)V jumpInLiquid
EntityMagmaCube b (FF)Z causeFallDamage
EntityMagmaCube ew ()Z isDealsDamage
EntityMagmaCube ex ()F getAttackDamage
EntityMagmaCube e (LDamageSource;)LSoundEffect; getHurtSound
EntityMagmaCube dd ()LSoundEffect; getDeathSound
EntityMagmaCube ey ()LSoundEffect; getSquishSound
EntityMagmaCube ez ()LSoundEffect; getJumpSound
EntityMonsterPatrolling$LongDistancePatrolGoal a mob
EntityMonsterPatrolling$LongDistancePatrolGoal b speedModifier
EntityMonsterPatrolling$LongDistancePatrolGoal c leaderSpeedModifier
EntityMonsterPatrolling$LongDistancePatrolGoal d cooldownUntil
EntityMonsterPatrolling$LongDistancePatrolGoal c ()V start
EntityMonsterPatrolling$LongDistancePatrolGoal d ()V stop
EntityMonsterPatrolling$LongDistancePatrolGoal e ()V tick
EntityMonsterPatrolling$LongDistancePatrolGoal g ()Ljava/util/List; findPatrolCompanions
EntityMonsterPatrolling$LongDistancePatrolGoal h ()Z moveRandomly
EntityPhantom$PhantomAttackPlayerTargetGoal b attackTargeting
EntityPhantom$PhantomAttackPlayerTargetGoal c nextScanTick
EntityPhantom$PhantomAttackPlayerTargetGoal a this$0
EntityPhantom$PhantomAttackPlayerTargetGoal b ()Z canContinueToUse
EntityPhantom$PhantomAttackStrategyGoal b nextSweepTick
EntityPhantom$PhantomAttackStrategyGoal a this$0
EntityPhantom$PhantomAttackStrategyGoal c ()V start
EntityPhantom$PhantomAttackStrategyGoal d ()V stop
EntityPhantom$PhantomAttackStrategyGoal e ()V tick
EntityPhantom$PhantomAttackStrategyGoal g ()V setAnchorAboveTarget
EntityPhantom$PhantomBodyRotationControl a this$0
EntityPhantom$PhantomCircleAroundAnchorGoal c angle
EntityPhantom$PhantomCircleAroundAnchorGoal d distance
EntityPhantom$PhantomCircleAroundAnchorGoal e height
EntityPhantom$PhantomCircleAroundAnchorGoal f clockwise
EntityPhantom$PhantomCircleAroundAnchorGoal a this$0
EntityPhantom$PhantomCircleAroundAnchorGoal c ()V start
EntityPhantom$PhantomCircleAroundAnchorGoal e ()V tick
EntityPhantom$PhantomCircleAroundAnchorGoal h ()V selectNext
EntityPhantom$PhantomLookControl h this$0
EntityPhantom$PhantomMoveControl j speed
EntityPhantom$PhantomMoveControl i this$0
EntityPhantom$PhantomMoveTargetGoal b this$0
EntityPhantom$PhantomMoveTargetGoal g ()Z touchingTarget
EntityPhantom$PhantomSweepAttackGoal a this$0
EntityPhantom$PhantomSweepAttackGoal b ()Z canContinueToUse
EntityPhantom$PhantomSweepAttackGoal c ()V start
EntityPhantom$PhantomSweepAttackGoal d ()V stop
EntityPhantom$PhantomSweepAttackGoal e ()V tick
EntityRavager b NO_RAVAGER_AND_ALIVE
EntityRavager bv attackTick
EntityRavager bw stunnedTick
EntityRavager bx roarTick
EntityRavager o ()V registerGoals
EntityRavager G ()V updateControlFlags
EntityRavager cF ()V registerAttributes
EntityRavager b (LNBTTagCompound;)V addAdditionalSaveData
EntityRavager m ()LSoundEffect; getCelebrateSound
EntityRavager b (LWorld;)LNavigationAbstract; createNavigation
EntityRavager ec ()I getMaxHeadYRot
EntityRavager aY ()D getRideHeight
EntityRavager ef ()Z canBeControlledByRider
EntityRavager ch ()LEntity; getControllingPassenger
EntityRavager l ()V aiStep
EntityRavager eH ()V stunEffect
EntityRavager dv ()Z isImmobile
EntityRavager D (LEntity;)Z canSee
EntityRavager f (LEntityLiving;)V blockedByShield
EntityRavager eI ()V roar
EntityRavager k ()I getAttackTick
EntityRavager ex ()I getStunnedTick
EntityRavager eG ()I getRoarTick
EntityRavager B (LEntity;)Z doHurtTarget
EntityRavager H ()LSoundEffect; getAmbientSound
EntityRavager e (LDamageSource;)LSoundEffect; getHurtSound
EntityRavager dd ()LSoundEffect; getDeathSound
EntityRavager ey ()Z canBeLeader
EntityRavager b (LEntity;)Z lambda$static$0
EntityRavager$RavagerMeleeAttackGoal d this$0
EntityShulker$ShulkerAttackGoal b attackTime
EntityShulker$ShulkerAttackGoal a this$0
EntityShulker$ShulkerAttackGoal c ()V start
EntityShulker$ShulkerAttackGoal d ()V stop
EntityShulker$ShulkerAttackGoal e ()V tick
EntityShulker$ShulkerBodyRotationControl a this$0
EntityShulker$ShulkerDefenseAttackGoal b (LEntityLiving;)Z lambda$new$0
EntityShulker$ShulkerNearestAttackGoal i this$0
EntityShulker$ShulkerPeekGoal b peekTime
EntityShulker$ShulkerPeekGoal a this$0
EntityShulker$ShulkerPeekGoal b ()Z canContinueToUse
EntityShulker$ShulkerPeekGoal c ()V start
EntityShulker$ShulkerPeekGoal d ()V stop
EntityShulker$ShulkerPeekGoal e ()V tick
EntitySilverfish b friendsGoal
EntitySilverfish o ()V registerGoals
EntitySilverfish aX ()D getRidingHeight
EntitySilverfish b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntitySilverfish cF ()V registerAttributes
EntitySilverfish ax ()Z isMovementNoisy
EntitySilverfish H ()LSoundEffect; getAmbientSound
EntitySilverfish e (LDamageSource;)LSoundEffect; getHurtSound
EntitySilverfish dd ()LSoundEffect; getDeathSound
EntitySilverfish h ()V tick
EntitySilverfish l (F)V setYBodyRot
EntitySilverfish b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkSliverfishSpawnRules
EntitySilverfish dp ()LEnumMonsterType; getMobType
EntitySilverfish$PathfinderGoalSilverfishHideInBlock h selectedDirection
EntitySilverfish$PathfinderGoalSilverfishHideInBlock i doMerge
EntitySilverfish$PathfinderGoalSilverfishHideInBlock b ()Z canContinueToUse
EntitySilverfish$PathfinderGoalSilverfishHideInBlock c ()V start
EntitySkeleton H ()LSoundEffect; getAmbientSound
EntitySkeleton e (LDamageSource;)LSoundEffect; getHurtSound
EntitySkeleton dd ()LSoundEffect; getDeathSound
EntitySkeleton k ()LSoundEffect; getStepSound
EntitySlime$PathfinderGoalSlimeNearestPlayer a slime
EntitySlime$PathfinderGoalSlimeNearestPlayer b growTiredTimer
EntitySlime$PathfinderGoalSlimeNearestPlayer c ()V start
EntitySlime$PathfinderGoalSlimeNearestPlayer b ()Z canContinueToUse
EntitySlime$PathfinderGoalSlimeNearestPlayer e ()V tick
EntitySlime$PathfinderGoalSlimeRandomJump a slime
EntitySlime$PathfinderGoalSlimeRandomJump e ()V tick
EntitySlime$PathfinderGoalSlimeIdle a slime
EntitySlime$PathfinderGoalSlimeIdle e ()V tick
EntitySlime$ControllerMoveSlime i yRot
EntitySlime$ControllerMoveSlime j jumpDelay
EntitySlime$ControllerMoveSlime k slime
EntitySlime$ControllerMoveSlime l isAggressive
EntitySlime$PathfinderGoalSlimeRandomDirection a slime
EntitySlime$PathfinderGoalSlimeRandomDirection b chosenDegrees
EntitySlime$PathfinderGoalSlimeRandomDirection c nextRandomizeTime
EntitySlime$PathfinderGoalSlimeRandomDirection e ()V tick
EntityIllagerWizard$SpellcasterCastingSpellGoal b this$0
EntityIllagerWizard$SpellcasterCastingSpellGoal c ()V start
EntityIllagerWizard$SpellcasterCastingSpellGoal d ()V stop
EntityIllagerWizard$SpellcasterCastingSpellGoal e ()V tick
EntityIllagerWizard$SpellcasterUseSpellGoal b attackWarmupDelay
EntityIllagerWizard$SpellcasterUseSpellGoal c nextAttackTickCount
EntityIllagerWizard$SpellcasterUseSpellGoal d this$0
EntityIllagerWizard$SpellcasterUseSpellGoal b ()Z canContinueToUse
EntityIllagerWizard$SpellcasterUseSpellGoal c ()V start
EntityIllagerWizard$SpellcasterUseSpellGoal e ()V tick
EntityIllagerWizard$SpellcasterUseSpellGoal j ()V performSpellCasting
EntityIllagerWizard$SpellcasterUseSpellGoal m ()I getCastWarmupTime
EntityIllagerWizard$SpellcasterUseSpellGoal g ()I getCastingTime
EntityIllagerWizard$SpellcasterUseSpellGoal h ()I getCastingInterval
EntityIllagerWizard$SpellcasterUseSpellGoal k ()LSoundEffect; getSpellPrepareSound
EntityIllagerWizard$SpellcasterUseSpellGoal l ()LEntityIllagerWizard$Spell; getSpell
EntitySpider b DATA_FLAGS_ID
EntitySpider o ()V registerGoals
EntitySpider aY ()D getRideHeight
EntitySpider b (LWorld;)LNavigationAbstract; createNavigation
EntitySpider w_ ()V defineSynchedData
EntitySpider h ()V tick
EntitySpider cF ()V registerAttributes
EntitySpider H ()LSoundEffect; getAmbientSound
EntitySpider e (LDamageSource;)LSoundEffect; getHurtSound
EntitySpider dd ()LSoundEffect; getDeathSound
EntitySpider y_ ()Z onClimbable
EntitySpider dp ()LEnumMonsterType; getMobType
EntitySpider d (LMobEffect;)Z canBeAffected
EntitySpider k ()Z isClimbing
EntitySpider t (Z)V setClimbing
EntitySpider b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntitySpider$PathfinderGoalSpiderMeleeAttack b ()Z canContinueToUse
EntitySpider$GroupDataSpider a effect
EntitySkeletonStray b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkStraySpawnRules
EntitySkeletonStray H ()LSoundEffect; getAmbientSound
EntitySkeletonStray e (LDamageSource;)LSoundEffect; getHurtSound
EntitySkeletonStray dd ()LSoundEffect; getDeathSound
EntitySkeletonStray k ()LSoundEffect; getStepSound
EntitySkeletonStray b (LItemStack;F)LEntityArrow; getArrow
EntityVex$VexChargeAttackGoal a this$0
EntityVex$VexChargeAttackGoal b ()Z canContinueToUse
EntityVex$VexChargeAttackGoal c ()V start
EntityVex$VexChargeAttackGoal d ()V stop
EntityVex$VexChargeAttackGoal e ()V tick
EntityVex$VexCopyOwnerTargetGoal b copyOwnerTargeting
EntityVex$VexCopyOwnerTargetGoal a this$0
EntityVex$VexCopyOwnerTargetGoal c ()V start
EntityVex$VexMoveControl i this$0
EntityVex$VexRandomMoveGoal a this$0
EntityVex$VexRandomMoveGoal b ()Z canContinueToUse
EntityVex$VexRandomMoveGoal e ()V tick
EntityVindicator b DOOR_BREAKING_PREDICATE
EntityVindicator bv isJohnny
EntityVindicator o ()V registerGoals
EntityVindicator M ()V customServerAiStep
EntityVindicator cF ()V registerAttributes
EntityVindicator b (LNBTTagCompound;)V addAdditionalSaveData
EntityVindicator k ()LEntityIllagerAbstract$IllagerArmPose; getArmPose
EntityVindicator m ()LSoundEffect; getCelebrateSound
EntityVindicator r (LEntity;)Z isAlliedTo
EntityVindicator b (LIChatBaseComponent;)V setCustomName
EntityVindicator H ()LSoundEffect; getAmbientSound
EntityVindicator dd ()LSoundEffect; getDeathSound
EntityVindicator e (LDamageSource;)LSoundEffect; getHurtSound
EntityVindicator ex ()Ljava/util/function/Predicate; access$000
EntityVindicator b (LEntityVindicator;)Z access$200
EntityVindicator$VindicatorBreakDoorGoal b ()Z canContinueToUse
EntityVindicator$VindicatorBreakDoorGoal c ()V start
EntityVindicator$VindicatorJohnnyAttackGoal c ()V start
EntityVindicator$VindicatorMeleeAttackGoal d this$0
EntityWitch b SPEED_MODIFIER_DRINKING_UUID
EntityWitch bv SPEED_MODIFIER_DRINKING
EntityWitch bw DATA_USING_ITEM
EntityWitch bx usingTime
EntityWitch by healRaidersGoal
EntityWitch bz attackPlayersGoal
EntityWitch o ()V registerGoals
EntityWitch w_ ()V defineSynchedData
EntityWitch H ()LSoundEffect; getAmbientSound
EntityWitch e (LDamageSource;)LSoundEffect; getHurtSound
EntityWitch dd ()LSoundEffect; getDeathSound
EntityWitch v (Z)V setUsingItem
EntityWitch k ()Z isDrinkingPotion
EntityWitch cF ()V registerAttributes
EntityWitch l ()V aiStep
EntityWitch m ()LSoundEffect; getCelebrateSound
EntityWitch d (LDamageSource;F)F getDamageAfterMagicAbsorb
EntityWitch b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntityWitch ey ()Z canBeLeader
EntityWitch j (LEntityLiving;)Z lambda$registerGoals$0
EntitySkeletonWither o ()V registerGoals
EntitySkeletonWither H ()LSoundEffect; getAmbientSound
EntitySkeletonWither e (LDamageSource;)LSoundEffect; getHurtSound
EntitySkeletonWither dd ()LSoundEffect; getDeathSound
EntitySkeletonWither k ()LSoundEffect; getStepSound
EntitySkeletonWither b (LDifficultyDamageScaler;)V populateDefaultEquipmentEnchantments
EntitySkeletonWither b (LEntityPose;LEntitySize;)F getStandingEyeHeight
EntitySkeletonWither B (LEntity;)Z doHurtTarget
EntitySkeletonWither b (LItemStack;F)LEntityArrow; getArrow
EntitySkeletonWither d (LMobEffect;)Z canBeAffected
EntityZombie$ZombieAttackTurtleEggGoal g this$0
EntityZombie$ZombieAttackTurtleEggGoal h ()D acceptedDistance
EntityZombie$GroupDataZombie a isBaby
Hoglin bx LOGGER
Hoglin by attackAnimationRemainingTicks
Hoglin bz createCounter
Hoglin bA dieCounter
Hoglin bB killedByPiglinCounter
Hoglin bC removeCounter
Hoglin bv SENSOR_TYPES
Hoglin bw MEMORY_TYPES
Hoglin aa ()V remove
Hoglin cF ()V registerAttributes
Hoglin eG ()F getAttackDamage
Hoglin B (LEntity;)Z doHurtTarget
Hoglin j (LEntityLiving;)V throwTarget
Hoglin f (LEntityLiving;)V blockedByShield
Hoglin cE ()LBehaviorController; getBrain
Hoglin M ()V customServerAiStep
Hoglin l ()V aiStep
Hoglin c (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkHoglinSpawnRules
Hoglin h (D)Z removeWhenFarAway
Hoglin b (LEntityHuman;LEnumHand;)Z mobInteract
Hoglin ex ()I getAttackAnimationRemainingTicks
Hoglin cK ()Z shouldDropExperience
Hoglin d (LEntityHuman;)I getExperienceReward
Hoglin k (LItemStack;)Z isFood
Hoglin ey ()Z isAdult
Hoglin ez ()F getMovementSpeed
Hoglin eC ()Z canFallInLove
Hoglin cp ()LSoundCategory; getSoundSource
Hoglin H ()LSoundEffect; getAmbientSound
Hoglin e (LDamageSource;)LSoundEffect; getHurtSound
Hoglin dd ()LSoundEffect; getDeathSound
Hoglin aq ()LSoundEffect; getSwimSound
Hoglin ar ()LSoundEffect; getSwimSplashSound
Hoglin D ()V playAmbientSound
Hoglin eA ()V playAngrySound
Hoglin eB ()V playRetreatSound
Hoglin L ()V sendDebugPackets
HoglinAi a RETREAT_DURATION
HoglinAi b (LHoglin;LBehaviorController;)V initIdleActivity
HoglinAi c (LHoglin;LBehaviorController;)V initFightActivity
HoglinAi d (LHoglin;LBehaviorController;)V initRetreatActivity
HoglinAi c (LHoglin;LEntityLiving;)V broadcastRetreat
HoglinAi d (LHoglin;LEntityLiving;)V retreatFromNearestTarget
HoglinAi e (LHoglin;LEntityLiving;)V setAvoidTarget
HoglinAi e (LHoglin;)Ljava/util/Optional; findNearestValidAttackTarget
HoglinAi f (LHoglin;)Z wantsToStopFleeing
HoglinAi g (LHoglin;)Z piglinsOutnumberHoglins
HoglinAi b (LHoglin;LEntityLiving;)V wasHurtBy
HoglinAi f (LHoglin;LEntityLiving;)V maybeRetaliate
HoglinAi g (LHoglin;LEntityLiving;)V setAttackTarget
HoglinAi h (LHoglin;LEntityLiving;)V broadcastAttackTarget
HoglinAi i (LHoglin;LEntityLiving;)V setAttackTargetIfCloserThanCurrent
HoglinAi h (LHoglin;)V playActivitySound
HoglinAi b (LHoglin;)V maybePlayActivitySound
HoglinAi i (LHoglin;)Ljava/util/List; getVisibleAdultHoglins
HoglinAi j (LHoglin;)Z isBreeding
HoglinAi c (LHoglin;)Z isPacified
HoglinAi d (LHoglin;)Z isIdle
HoglinAi b (LEntityLiving;LHoglin;)V lambda$broadcastRetreat$0
Piglin d LOGGER
Piglin bv DATA_BABY_ID
Piglin bw DATA_IMMUNE_TO_ZOMBIFICATION
Piglin bx DATA_IS_CHARGING_CROSSBOW
Piglin by SPEED_MODIFIER_BABY_UUID
Piglin bz SPEED_MODIFIER_BABY
Piglin bA timeInOverworld
Piglin bB inventory
Piglin bC createCounter
Piglin bD dieCounter
Piglin bE killedByHoglinCounter
Piglin bF removeCounter
Piglin b SENSOR_TYPES
Piglin c MEMORY_TYPES
Piglin aa ()V remove
Piglin b (LNBTTagCompound;)V addAdditionalSaveData
Piglin M_ ()LIInventory; getInventory
Piglin k (LItemStack;)LItemStack; addToInventory
Piglin w_ ()V defineSynchedData
Piglin cF ()V registerAttributes
Piglin b (LEntityTypes;LGeneratorAccess;LEnumMobSpawn;LBlockPosition;Ljava/util/Random;)Z checkPiglinSpawnRules
Piglin K ()Z shouldDespawnInPeaceful
Piglin h (D)Z removeWhenFarAway
Piglin d (LEnumItemSlot;LItemStack;)V maybeWearArmor
Piglin cE ()LBehaviorController; getBrain
Piglin b (LEntityHuman;LEnumHand;)Z mobInteract
Piglin b (LEntityPose;LEntitySize;)F getStandingEyeHeight
Piglin x_ ()Z isBaby
Piglin m ()Z isAdult
Piglin t (Z)V setImmuneToZombification
Piglin eG ()Z isImmuneToZombification
Piglin ex ()Z isConverting
Piglin M ()V customServerAiStep
Piglin d (LEntityHuman;)I getExperienceReward
Piglin z ()LEntityLiving; getTarget
Piglin eH ()LItemStack; createSpawnWeapon
Piglin eI ()Z isChargingCrossbow
Piglin b (Z)V setChargingCrossbow
Piglin L_ ()V onCrossbowAttackPerformed
Piglin ey ()LPiglin$PiglinArmPose; getArmPose
Piglin l (LItemStack;)V holdInMainHand
Piglin m (LItemStack;)V holdInOffHand
Piglin i (LItemStack;)Z wantsToPickUp
Piglin n (LItemStack;)Z canReplaceCurrentItem
Piglin ez ()F getMovementSpeed
Piglin b (LEntity;I)LEntity; getTopPassenger
Piglin H ()LSoundEffect; getAmbientSound
Piglin e (LDamageSource;)LSoundEffect; getHurtSound
Piglin dd ()LSoundEffect; getDeathSound
Piglin eA ()V playAdmiringSound
Piglin D ()V playAmbientSound
Piglin eB ()V playAngrySound
Piglin eD ()V playCelebrateSound
Piglin eE ()V playRetreatSound
Piglin eF ()V playJealousSound
Piglin eJ ()V playConvertedSound
Piglin L ()V sendDebugPackets
Piglin$PiglinArmPose a CROSSBOW_HOLD
Piglin$PiglinArmPose b CROSSBOW_CHARGE
Piglin$PiglinArmPose c ADMIRING_ITEM
Piglin$PiglinArmPose d DEFAULT
Piglin$PiglinArmPose e $VALUES
Piglin$PiglinArmPose values ()[LPiglin$PiglinArmPose; values
Piglin$PiglinArmPose valueOf (Ljava/lang/String;)LPiglin$PiglinArmPose; valueOf
PiglinAi a RANDOM_STROLL_INTERVAL_WHEN_ADMIRING
PiglinAi b TIME_BETWEEN_HUNTS
PiglinAi c RIDE_START_INTERVAL
PiglinAi d RIDE_DURATION
PiglinAi e RETREAT_DURATION
PiglinAi f FOOD_ITEMS
PiglinAi g LOVED_ITEMS_IN_ADDITION_TO_GOLD_TIER_AND_GOLD_MATERIAL
PiglinAi b (LPiglin;LBehaviorController;)V initIdleActivity
PiglinAi c (LPiglin;LBehaviorController;)V initFightActivity
PiglinAi d (LPiglin;LBehaviorController;)V initCelebrateActivity
PiglinAi e (LPiglin;LBehaviorController;)V initAdmireItemActivity
PiglinAi f (LPiglin;LBehaviorController;)V initRetreatActivity
PiglinAi g (LPiglin;LBehaviorController;)V initRideHoglinActivity
PiglinAi b ()LBehaviorGateSingle; createIdleMovementBehaviors
PiglinAi c ()LBehavior; admireHeldItem
PiglinAi d ()LBehaviorWalkAwayEntity; avoidRepellent
PiglinAi e ()LBehaviorWalkAwayEntity; avoidZombifiedPiglin
PiglinAi b (LPiglin;)V updateActivity
PiglinAi c (LPiglin;)V cancelAdmiring
PiglinAi b (LPiglin;LItemStack;)V putInInventory
PiglinAi c (LPiglin;LItemStack;)V throwItem
PiglinAi d (LPiglin;LItemStack;)V throwItemTowardRandomPos
PiglinAi i (LPiglin;)LItemStack; getBarterResponseItem
PiglinAi d (LPiglin;LEntityLiving;)Z isNearestValidAttackTarget
PiglinAi j (LPiglin;)Ljava/util/Optional; findNearestValidAttackTarget
PiglinAi e (LPiglin;LEntityLiving;)V maybeRetaliate
PiglinAi k (LPiglin;)V playActivitySound
PiglinAi d (LPiglin;)V maybePlayActivitySound
PiglinAi e (LPiglin;)Z hasAnyoneNearbyHuntedRecently
PiglinAi l (LPiglin;)Ljava/util/List; getVisibleAdultPiglins
PiglinAi m (LPiglin;)V stopWalking
PiglinAi f ()LRunSometimes; babySometimesRideBabyHoglin
PiglinAi b (LPiglin;LEntityLiving;)V broadcastAngerTarget
PiglinAi f (LPiglin;)V broadcastDontKillAnyMoreHoglinsForAWhile
PiglinAi c (LPiglin;LEntityLiving;)V setAngerTarget
PiglinAi f (LPiglin;LEntityLiving;)V setAngerTargetIfCloserThanCurrent
PiglinAi n (LPiglin;)Ljava/util/Optional; getAngerTarget
PiglinAi g (LPiglin;LEntityLiving;)V broadcastRetreat
PiglinAi h (LPiglin;LEntityLiving;)V retreatFromNearestTarget
PiglinAi o (LPiglin;)Z wantsToStopFleeing
PiglinAi p (LPiglin;)Z piglinsEqualOrOutnumberHoglins
PiglinAi q (LPiglin;)Z hoglinsOutnumberPiglins
PiglinAi i (LPiglin;LEntityLiving;)V setAvoidTargetAndDontHuntForAWhile
PiglinAi g (LPiglin;)V dontKillAnyMoreHoglinsForAWhile
PiglinAi r (LPiglin;)Z seesPlayerHoldingWantedItem
PiglinAi s (LPiglin;)V eat
PiglinAi t (LPiglin;)LVec3D; getRandomNearbyPos
PiglinAi u (LPiglin;)Z hasEatenRecently
PiglinAi h (LPiglin;)Z isIdle
PiglinAi c (LEntityLiving;)Z hasCrossbow
PiglinAi d (LEntityLiving;)V admireGoldItem
PiglinAi v (LPiglin;)Z isAdmiringItem
PiglinAi b (LItem;)Z isBarterCurrency
PiglinAi c (LItem;)Z isFood
PiglinAi e (LEntityLiving;)Z isAttackAllowed
PiglinAi w (LPiglin;)Z seesRepellent
PiglinAi x (LPiglin;)Z seesZombifiedPiglin
PiglinAi f (LEntityLiving;)Z seesPlayerHoldingLovedItem
PiglinAi g (LEntityLiving;)Z doesntSeeAnyPlayerHoldingLovedItem
PiglinAi b (LEntityLiving;)Z isPlayerHoldingLovedItem
PiglinAi y (LPiglin;)Z isAdmiringDisabled
PiglinAi h (LEntityLiving;)Z wasHurtRecently
PiglinAi z (LPiglin;)Z isHoldingItemInOffHand
PiglinAi A (LPiglin;)Z isNotHoldingLovedItemInOffHand
PiglinAi b (LEntityLiving;LPiglin;)V lambda$broadcastAngerTarget$6
PiglinAi B (LPiglin;)Z lambda$hasAnyoneNearbyHuntedRecently$5
PiglinAi b (LEntityHuman;LPiglin;)Z lambda$angerNearbyPiglinsThatSee$2
PiglinAi j (LPiglin;LEntityLiving;)Z lambda$initFightActivity$0
StartAdmiringItemIfSeen b admireDuration
StopAdmiringIfItemTooFarAway b maxDistanceToItem
MobSpawnerCat a nextTick
MerchantWrapper a container
MerchantWrapper b source
MerchantWrapper c offers
MerchantWrapper d xp
MerchantWrapper ez ()LEntityHuman; getTradingPlayer
MerchantWrapper e (LEntityHuman;)V setTradingPlayer
MerchantWrapper eB ()LMerchantRecipeList; getOffers
MerchantWrapper k (LItemStack;)V notifyTradeUpdated
MerchantWrapper eI ()LWorld; getLevel
MerchantWrapper ey ()I getVillagerXp
MerchantWrapper t (I)V overrideXp
MerchantWrapper eC ()Z showProgressBar
MerchantWrapper eD ()LSoundEffect; getNotifyTradeSound
InventoryCarrier M_ ()LIInventory; getInventory
VillagerTrades a TRADES
VillagerTrades b WANDERING_TRADER_TRADES
VillagerTrades$DyedArmorForEmeralds a item
VillagerTrades$DyedArmorForEmeralds b value
VillagerTrades$DyedArmorForEmeralds c maxUses
VillagerTrades$DyedArmorForEmeralds d villagerXp
VillagerTrades$EmeraldForItems a item
VillagerTrades$EmeraldForItems b cost
VillagerTrades$EmeraldForItems c maxUses
VillagerTrades$EmeraldForItems d villagerXp
VillagerTrades$EmeraldForItems e priceMultiplier
VillagerTrades$EmeraldsForVillagerTypeItem a trades
VillagerTrades$EmeraldsForVillagerTypeItem b cost
VillagerTrades$EmeraldsForVillagerTypeItem c maxUses
VillagerTrades$EmeraldsForVillagerTypeItem d villagerXp
VillagerTrades$EnchantBookForEmeralds a villagerXp
VillagerTrades$EnchantedItemForEmeralds a itemStack
VillagerTrades$EnchantedItemForEmeralds b baseEmeraldCost
VillagerTrades$EnchantedItemForEmeralds c maxUses
VillagerTrades$EnchantedItemForEmeralds d villagerXp
VillagerTrades$EnchantedItemForEmeralds e priceMultiplier
VillagerTrades$ItemsAndEmeraldsToItems a fromItem
VillagerTrades$ItemsAndEmeraldsToItems b fromCount
VillagerTrades$ItemsAndEmeraldsToItems c emeraldCost
VillagerTrades$ItemsAndEmeraldsToItems d toItem
VillagerTrades$ItemsAndEmeraldsToItems e toCount
VillagerTrades$ItemsAndEmeraldsToItems f maxUses
VillagerTrades$ItemsAndEmeraldsToItems g villagerXp
VillagerTrades$ItemsAndEmeraldsToItems h priceMultiplier
VillagerTrades$ItemsForEmeralds a itemStack
VillagerTrades$ItemsForEmeralds b emeraldCost
VillagerTrades$ItemsForEmeralds c numberOfItems
VillagerTrades$ItemsForEmeralds d maxUses
VillagerTrades$ItemsForEmeralds e villagerXp
VillagerTrades$ItemsForEmeralds f priceMultiplier
VillagerTrades$SuspisciousStewForEmerald a effect
VillagerTrades$SuspisciousStewForEmerald b duration
VillagerTrades$SuspisciousStewForEmerald c xp
VillagerTrades$SuspisciousStewForEmerald d priceMultiplier
VillagerTrades$TippedArrowForItemsAndEmeralds a toItem
VillagerTrades$TippedArrowForItemsAndEmeralds b toCount
VillagerTrades$TippedArrowForItemsAndEmeralds c emeraldCost
VillagerTrades$TippedArrowForItemsAndEmeralds d maxUses
VillagerTrades$TippedArrowForItemsAndEmeralds e villagerXp
VillagerTrades$TippedArrowForItemsAndEmeralds f fromItem
VillagerTrades$TippedArrowForItemsAndEmeralds g fromCount
VillagerTrades$TippedArrowForItemsAndEmeralds h priceMultiplier
VillagerTrades$TreasureMapForEmeralds a emeraldCost
VillagerTrades$TreasureMapForEmeralds b destination
VillagerTrades$TreasureMapForEmeralds c destinationType
VillagerTrades$TreasureMapForEmeralds d maxUses
VillagerTrades$TreasureMapForEmeralds e villagerXp
VillagerType$1 i val$name
VillagerType$1 toString ()Ljava/lang/String; toString
EntityVillagerTrader bw wanderTarget
EntityVillagerTrader bx despawnDelay
EntityVillagerTrader o ()V registerGoals
EntityVillagerTrader eC ()Z showProgressBar
EntityVillagerTrader b (LEntityHuman;LEnumHand;)Z mobInteract
EntityVillagerTrader eJ ()V updateTrades
EntityVillagerTrader b (LNBTTagCompound;)V addAdditionalSaveData
EntityVillagerTrader h (D)Z removeWhenFarAway
EntityVillagerTrader b (LMerchantRecipe;)V rewardTradeXp
EntityVillagerTrader H ()LSoundEffect; getAmbientSound
EntityVillagerTrader e (LDamageSource;)LSoundEffect; getHurtSound
EntityVillagerTrader dd ()LSoundEffect; getDeathSound
EntityVillagerTrader c (LItemStack;)LSoundEffect; getDrinkingSound
EntityVillagerTrader t (Z)LSoundEffect; getTradeUpdatedSound
EntityVillagerTrader eD ()LSoundEffect; getNotifyTradeSound
EntityVillagerTrader u (I)V setDespawnDelay
EntityVillagerTrader eG ()I getDespawnDelay
EntityVillagerTrader l ()V aiStep
EntityVillagerTrader eL ()V maybeDespawn
EntityVillagerTrader g (LBlockPosition;)V setWanderTarget
EntityVillagerTrader eM ()LBlockPosition; getWanderTarget
EntityVillagerTrader f (LEntityVillagerTrader;)Z lambda$registerGoals$1
EntityVillagerTrader g (LEntityVillagerTrader;)Z lambda$registerGoals$0
EntityVillagerTrader b (LEntityVillagerTrader;)LBlockPosition; access$100
EntityVillagerTrader c (LEntityVillagerTrader;)LNavigationAbstract; access$200
EntityVillagerTrader d (LEntityVillagerTrader;)LNavigationAbstract; access$300
EntityVillagerTrader e (LEntityVillagerTrader;)LNavigationAbstract; access$400
EntityVillagerTrader$WanderToPositionGoal a trader
EntityVillagerTrader$WanderToPositionGoal b stopDistance
EntityVillagerTrader$WanderToPositionGoal c speedModifier
EntityVillagerTrader$WanderToPositionGoal d this$0
EntityVillagerTrader$WanderToPositionGoal d ()V stop
EntityVillagerTrader$WanderToPositionGoal e ()V tick
MobSpawnerTrader a random
MobSpawnerTrader b level
MobSpawnerTrader c tickDelay
MobSpawnerTrader d spawnDelay
MobSpawnerTrader e spawnChance
MobSpawnerTrader b ()Z spawn
MobSpawnerTrader b (LBlockPosition;)Z lambda$spawn$0
EntityHuman$1 a $SwitchMap$net$minecraft$world$entity$Pose
PlayerModelPart a CAPE
PlayerModelPart b JACKET
PlayerModelPart c LEFT_SLEEVE
PlayerModelPart d RIGHT_SLEEVE
PlayerModelPart e LEFT_PANTS_LEG
PlayerModelPart f RIGHT_PANTS_LEG
PlayerModelPart g HAT
PlayerModelPart h bit
PlayerModelPart i mask
PlayerModelPart j id
PlayerModelPart k name
PlayerModelPart l $VALUES
PlayerModelPart values ()[LPlayerModelPart; values
PlayerModelPart valueOf (Ljava/lang/String;)LPlayerModelPart; valueOf
PlayerModelPart b ()I getBit
PlayerModelPart c ()Ljava/lang/String; getId
PlayerModelPart d ()LIChatBaseComponent; getName
AutoRecipeStackManager a contents
AutoRecipeStackManager b (LItemStack;)V accountStack
AutoRecipeStackManager c (LItemStack;)I getStackingIndex
AutoRecipeStackManager b (I)Z has
AutoRecipeStackManager b (II)V put
AutoRecipeStackManager b (LIRecipe;Lit/unimi/dsi/fastutil/ints/IntList;)I getBiggestCraftableStack
AutoRecipeStackManager b (LAutoRecipeStackManager;II)V access$100
AutoRecipeStackManager$RecipePicker b recipe
AutoRecipeStackManager$RecipePicker c ingredients
AutoRecipeStackManager$RecipePicker d ingredientCount
AutoRecipeStackManager$RecipePicker e items
AutoRecipeStackManager$RecipePicker f itemCount
AutoRecipeStackManager$RecipePicker g data
AutoRecipeStackManager$RecipePicker h path
AutoRecipeStackManager$RecipePicker a this$0
AutoRecipeStackManager$RecipePicker b (I)Z isSatisfied
AutoRecipeStackManager$RecipePicker c (I)V setSatisfied
AutoRecipeStackManager$RecipePicker d (I)I getSatisfiedIndex
AutoRecipeStackManager$RecipePicker b (ZII)Z hasResidual
AutoRecipeStackManager$RecipePicker c (ZII)V toggleResidual
AutoRecipeStackManager$RecipePicker d (ZII)I getIndex
AutoRecipeStackManager$RecipePicker b (ZI)Z hasVisited
AutoRecipeStackManager$RecipePicker c (ZI)I getVisitedIndex
AutoRecipeStackManager$RecipePicker b (ILit/unimi/dsi/fastutil/ints/IntList;)I tryPickAll
AutoRecipeStackManager$RecipePicker b ()I getMinIngredientCount
EntityDragonFireball aQ ()Z isPickable
EntityDragonFireball i ()LParticleParam; getTrailParticle
EntityDragonFireball O_ ()Z shouldBurn
EntityFireballFireball e DATA_ITEM_STACK
EntityFireballFireball b (LItemStack;)V setItem
EntityFireballFireball l ()LItemStack; getItemRaw
EntityFireballFireball f ()LItemStack; getItem
EntityFireballFireball w_ ()V defineSynchedData
EntityFireballFireball b (LNBTTagCompound;)V addAdditionalSaveData
EntityFireballFireball c (LItemStack;)V lambda$setItem$0
ItemSupplier f ()LItemStack; getItem
EntitySmallFireball aQ ()Z isPickable
EntitySnowball i ()LItem; getDefaultItem
EntitySnowball m ()LParticleParam; getParticle
EntityEgg i ()LItem; getDefaultItem
EntityEnderPearl c originalOwner
EntityEnderPearl i ()LItem; getDefaultItem
EntityEnderPearl h ()V tick
EntityThrownExpBottle i ()LItem; getDefaultItem
EntityThrownExpBottle l ()F getGravity
Raid$1 a $SwitchMap$net$minecraft$world$entity$raid$Raid$RaiderType
Raid$1 b $SwitchMap$net$minecraft$world$Difficulty
EntityRaider$HoldGroundAttackGoal c mob
EntityRaider$HoldGroundAttackGoal d hostileRadiusSqr
EntityRaider$HoldGroundAttackGoal a shoutTargeting
EntityRaider$HoldGroundAttackGoal b this$0
EntityRaider$HoldGroundAttackGoal c ()V start
EntityRaider$HoldGroundAttackGoal d ()V stop
EntityRaider$HoldGroundAttackGoal e ()V tick
EntityRaider$ObtainRaidLeaderBannerGoal b mob
EntityRaider$ObtainRaidLeaderBannerGoal a this$0
EntityRaider$ObtainRaidLeaderBannerGoal e ()V tick
EntityRaider$RaiderCelebration b mob
EntityRaider$RaiderCelebration a this$0
EntityRaider$RaiderCelebration c ()V start
EntityRaider$RaiderCelebration d ()V stop
EntityRaider$RaiderCelebration e ()V tick
EntityRaider$RaiderMoveThroughVillageGoal a raider
EntityRaider$RaiderMoveThroughVillageGoal b speedModifier
EntityRaider$RaiderMoveThroughVillageGoal c poiPos
EntityRaider$RaiderMoveThroughVillageGoal d visited
EntityRaider$RaiderMoveThroughVillageGoal e distanceToPoi
EntityRaider$RaiderMoveThroughVillageGoal f stuck
EntityRaider$RaiderMoveThroughVillageGoal g ()Z isValidRaid
EntityRaider$RaiderMoveThroughVillageGoal h ()Z hasSuitablePoi
EntityRaider$RaiderMoveThroughVillageGoal b ()Z canContinueToUse
EntityRaider$RaiderMoveThroughVillageGoal d ()V stop
EntityRaider$RaiderMoveThroughVillageGoal c ()V start
EntityRaider$RaiderMoveThroughVillageGoal e ()V tick
EntityRaider$RaiderMoveThroughVillageGoal j ()V updateVisited
ActivityFrame a timeStamp
ActivityFrame b value
ActivityFrame b ()F getValue
ScheduleBuilder a schedule
ScheduleBuilder b transitions
ScheduleBuilder$ActivityTransition a time
ScheduleBuilder$ActivityTransition b activity
ScheduleBuilder$ActivityTransition b ()LActivity; getActivity
ScheduleActivity a keyframes
ScheduleActivity b previousIndex
ScheduleActivity b ()V sortAndDeduplicateKeyframes
EntityMinecartAbstract$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
EntityBoat$1 a $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
EntityBoat$1 b $SwitchMap$net$minecraft$world$entity$vehicle$Boat$Status
EntityMinecartRideable o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartChest Q_ ()I getContainerSize
EntityMinecartChest o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartChest q ()LIBlockData; getDefaultDisplayBlockState
EntityMinecartChest s ()I getDefaultDisplayOffset
EntityMinecartCommandBlock$MinecartCommandBase b this$0
EntityMinecartCommandBlock$MinecartCommandBase d ()LWorldServer; getLevel
EntityMinecartCommandBlock$MinecartCommandBase e ()V onUpdated
EntityMinecartCommandBlock$MinecartCommandBase f ()LVec3D; getPosition
EntityMinecartCommandBlock$MinecartCommandBase g ()LEntityMinecartCommandBlock; getMinecart
EntityMinecartCommandBlock$MinecartCommandBase h ()LCommandListenerWrapper; createCommandSourceStack
EntityMinecartFurnace d DATA_ID_FUEL
EntityMinecartFurnace e fuel
EntityMinecartFurnace b xPush
EntityMinecartFurnace c zPush
EntityMinecartFurnace f INGREDIENT
EntityMinecartFurnace o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartFurnace w_ ()V defineSynchedData
EntityMinecartFurnace h ()V tick
EntityMinecartFurnace f ()D getMaxSpeed
EntityMinecartFurnace b (LBlockPosition;LIBlockData;)V moveAlongTrack
EntityMinecartFurnace k ()V applyNaturalSlowdown
EntityMinecartFurnace b (LNBTTagCompound;)V addAdditionalSaveData
EntityMinecartFurnace v ()Z hasFuel
EntityMinecartFurnace o (Z)V setHasFuel
EntityMinecartFurnace q ()LIBlockData; getDefaultDisplayBlockState
EntityMinecartMobSpawner b spawner
EntityMinecartMobSpawner o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartMobSpawner q ()LIBlockData; getDefaultDisplayBlockState
EntityMinecartMobSpawner b (LNBTTagCompound;)V addAdditionalSaveData
EntityMinecartMobSpawner h ()V tick
EntityMinecartMobSpawner v ()LMobSpawnerAbstract; getSpawner
EntityMinecartMobSpawner cf ()Z onlyOpCanSetNbt
EntityMinecartMobSpawner$1 a this$0
EntityMinecartMobSpawner$1 b ()LBlockPosition; getPos
EntityMinecartTNT b fuse
EntityMinecartTNT o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartTNT q ()LIBlockData; getDefaultDisplayBlockState
EntityMinecartTNT h ()V tick
EntityMinecartTNT h (D)V explode
EntityMinecartTNT b (FF)Z causeFallDamage
EntityMinecartTNT v ()V primeFuse
EntityMinecartTNT w ()I getFuse
EntityMinecartTNT z ()Z isPrimed
EntityMinecartTNT b (LNBTTagCompound;)V addAdditionalSaveData
FoodInfo$Builder a nutrition
FoodInfo$Builder b saturationModifier
FoodInfo$Builder c isMeat
FoodInfo$Builder d canAlwaysEat
FoodInfo$Builder e fastFood
FoodInfo$Builder f effects
FoodInfo$Builder b ()LFoodInfo$Builder; alwaysEat
FoodInfo$Builder c ()LFoodInfo$Builder; fast
FoodInfo$Builder d ()LFoodInfo; build
Foods a APPLE
Foods b BAKED_POTATO
Foods c BEEF
Foods d BEETROOT
Foods e BEETROOT_SOUP
Foods f BREAD
Foods g CARROT
Foods h CHICKEN
Foods i CHORUS_FRUIT
Foods j COD
Foods k COOKED_BEEF
Foods l COOKED_CHICKEN
Foods m COOKED_COD
Foods n COOKED_MUTTON
Foods o COOKED_PORKCHOP
Foods p COOKED_RABBIT
Foods q COOKED_SALMON
Foods r COOKIE
Foods s DRIED_KELP
Foods t ENCHANTED_GOLDEN_APPLE
Foods u GOLDEN_APPLE
Foods v GOLDEN_CARROT
Foods w HONEY_BOTTLE
Foods x MELON_SLICE
Foods y MUSHROOM_STEW
Foods z MUTTON
Foods A POISONOUS_POTATO
Foods B PORKCHOP
Foods C POTATO
Foods D PUFFERFISH
Foods E PUMPKIN_PIE
Foods F RABBIT
Foods G RABBIT_STEW
Foods H ROTTEN_FLESH
Foods I SALMON
Foods J SPIDER_EYE
Foods K SUSPICIOUS_STEW
Foods L SWEET_BERRIES
Foods M TROPICAL_FISH
ContainerAnvil$1 a $SwitchMap$net$minecraft$world$item$enchantment$Enchantment$Rarity
ContainerBeacon$1 a this$0
ContainerBeacon$1 b (ILItemStack;)Z canPlaceItem
ContainerBeacon$1 N_ ()I getMaxStackSize
ContainerBeacon$SlotBeacon a this$0
ContainerBrewingStand$FuelSlot a_ (LItemStack;)Z mayPlaceItem
ContainerBrewingStand$SlotPotionBottle b_ (LItemStack;)Z mayPlaceItem
ContainerCartography$1 a this$0
ContainerCartography$1 e ()V setChanged
ContainerCartography$2 a this$0
ContainerCartography$2 e ()V setChanged
ContainerCartography$3 a this$0
ContainerCartography$4 a this$0
ContainerCartography$5 a val$access
ContainerCartography$5 b this$0
ContainerAccess$2 b val$level
ContainerAccess$2 c val$pos
ContainerProperty$1 a val$container
ContainerProperty$1 b val$dataId
ContainerProperty$1 b ()I get
ContainerProperty$2 a val$storage
ContainerProperty$2 b val$index
ContainerProperty$2 b ()I get
ContainerProperty$3 a value
ContainerProperty$3 b ()I get
ContainerEnchantTable$1 a this$0
ContainerEnchantTable$1 e ()V setChanged
ContainerEnchantTable$2 a this$0
ContainerEnchantTable$3 a this$0
SlotFurnaceFuel a menu
SlotFurnaceFuel b (LItemStack;)I getMaxStackSize
SlotFurnaceFuel c_ (LItemStack;)Z isBucket
SlotFurnaceResult a player
SlotFurnaceResult b removeCount
SlotFurnaceResult c (LItemStack;)V checkTakeAchievements
ContainerGrindstone$1 a this$0
ContainerGrindstone$1 e ()V setChanged
ContainerGrindstone$2 a this$0
ContainerGrindstone$3 a this$0
ContainerGrindstone$4 a val$access
ContainerGrindstone$4 b this$0
ContainerGrindstone$4 e (LItemStack;)I getExperienceFromItem
ContainerHorse c horseContainer
ContainerHorse d horse
ContainerHorse b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerHorse b (LEntityHuman;)V removed
ContainerHorse e ()LIInventory; getContainer
ContainerHorse$1 a val$horse
ContainerHorse$1 b this$0
ContainerHorse$1 b ()Z isActive
ContainerHorse$2 a val$horse
ContainerHorse$2 b this$0
ContainerHorse$2 b ()Z isActive
ContainerPlayer$1 a val$slot
ContainerPlayer$1 b this$0
ContainerPlayer$1 c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
ContainerPlayer$2 a this$0
ContainerPlayer$2 c ()Lcom/mojang/datafixers/util/Pair; getNoItemIcon
ItemCombinerMenu c resultSlots
ItemCombinerMenu d inputSlots
ItemCombinerMenu e access
ItemCombinerMenu f player
ItemCombinerMenu b (LEntityHuman;Z)Z mayPickup
ItemCombinerMenu e ()V createResult
ItemCombinerMenu b (LEntityHuman;)V removed
ItemCombinerMenu b (LEntityHuman;I)LItemStack; quickMoveStack
ItemCombinerMenu b (LEntityHuman;LWorld;LBlockPosition;)V lambda$removed$0
ItemCombinerMenu$1 a this$0
ItemCombinerMenu$1 e ()V setChanged
ItemCombinerMenu$2 a this$0
ContainerLectern$1 a this$0
ContainerLectern$1 d ()V setChanged
ContainerLoom$1 a this$0
ContainerLoom$1 e ()V setChanged
ContainerLoom$2 a this$0
ContainerLoom$2 e ()V setChanged
ContainerLoom$3 a this$0
ContainerLoom$4 a this$0
ContainerLoom$5 a this$0
ContainerLoom$6 a val$access
ContainerLoom$6 b this$0
ITileEntityContainer createMenu (ILPlayerInventory;LEntityHuman;)LContainer; createMenu
Containers$Supplier create (ILPlayerInventory;)LContainer; create
SlotMerchantResult a slots
SlotMerchantResult b player
SlotMerchantResult g removeCount
SlotMerchantResult h merchant
SlotMerchantResult c (LItemStack;)V checkTakeAchievements
InventoryEnderChest a activeChest
InventoryEnderChest g ()LNBTTagList; createTag
InventoryEnderChest a_ (LEntityHuman;)V startOpen
InventoryEnderChest b_ (LEntityHuman;)V stopOpen
ContainerRecipeBook e ()V clearCraftingContent
ContainerRecipeBook f ()I getResultSlotIndex
ContainerRecipeBook g ()I getGridWidth
ContainerRecipeBook h ()I getGridHeight
ContainerRecipeBook i ()I getSize
RecipeHolder ac_ ()LIRecipe; getRecipeUsed
RecipeHolder b (LEntityHuman;)V awardAndReset
SlotResult a craftSlots
SlotResult b player
SlotResult g removeCount
SlotResult b (I)V onSwapCraft
SlotResult c (LItemStack;)V checkTakeAchievements
ContainerShulkerBox c container
ContainerShulkerBox b (LEntityHuman;I)LItemStack; quickMoveStack
ContainerShulkerBox b (LEntityHuman;)V removed
ContainerProperties a ints
SmithingMenu g DIAMOND_TO_NETHERITE
SmithingMenu b (LEntityHuman;Z)Z mayPickup
SmithingMenu e ()V createResult
ContainerStonecutter$1 a this$0
ContainerStonecutter$1 e ()V setChanged
ContainerStonecutter$2 a val$access
ContainerStonecutter$2 b this$0
ItemAir a block
ItemArmor l ARMOR_MODIFIER_UUID_PER_SLOT
ItemArmor a DISPENSE_ITEM_BEHAVIOR
ItemArmor b slot
ItemArmor c defense
ItemArmor d toughness
ItemArmor e knockbackResistance
ItemArmor f material
ItemArmor b ()LEnumItemSlot; getSlot
ItemArmor c ()I getEnchantmentValue
ItemArmor S_ ()LArmorMaterial; getMaterial
ItemArmor e ()I getDefense
ArmorMaterial b (LEnumItemSlot;)I getDefenseForSlot
ArmorMaterial b ()LSoundEffect; getEquipSound
ArmorMaterial c ()LRecipeItemStack; getRepairIngredient
ArmorMaterial d ()Ljava/lang/String; getName
ArmorMaterial e ()F getToughness
ArmorMaterial f ()F getKnockbackResistance
ItemAxe e DIGGABLE_MATERIALS
ItemAxe f OTHER_DIGGABLE_BLOCKS
ItemAxe a STRIPABLES
ItemBanner b ()LEnumColor; getColor
ItemBannerPattern a bannerPattern
ItemBannerPattern b ()LEnumBannerPatternType; getBannerPattern
ItemBannerPattern d ()LIChatBaseComponent; getDisplayName
BlockActionContext g relativePos
BlockActionContext a replaceClicked
BlockActionContext b ()Z canPlace
BlockActionContext c ()Z replacingClickedOnBlock
BlockActionContext d ()LEnumDirection; getNearestLookingDirection
BlockActionContext e ()[LEnumDirection; getNearestLookingDirections
ItemBoat a ENTITY_PREDICATE
ItemBoat b type
ItemBook g_ (LItemStack;)Z isEnchantable
ItemBook c ()I getEnchantmentValue
ItemBow f_ (LItemStack;)I getUseDuration
ItemBow e_ (LItemStack;)LEnumAnimation; getUseAnimation
ItemBow b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
ItemBow d ()I getDefaultProjectileRange
ItemBow b (LItemStack;LWorld;LEntityLiving;)F lambda$new$1
ItemBow c (LItemStack;LWorld;LEntityLiving;)F lambda$new$0
ItemClock$1 b rotation
ItemClock$1 c rota
ItemClock$1 d lastUpdateTick
ItemClock$1 a this$0
ItemClock$1 call (LItemStack;LWorld;LEntityLiving;)F call
ItemCompass$1 b rotation
ItemCompass$1 c rota
ItemCompass$1 d lastUpdateTick
ItemCompass$1 a this$0
ItemCompass$1 call (LItemStack;LWorld;LEntityLiving;)F call
ItemWorldMapBase T_ ()Z isComplex
CreativeModeTab a TABS
CreativeModeTab b TAB_BUILDING_BLOCKS
CreativeModeTab c TAB_DECORATIONS
CreativeModeTab d TAB_REDSTONE
CreativeModeTab e TAB_TRANSPORTATION
CreativeModeTab f TAB_MISC
CreativeModeTab g TAB_SEARCH
CreativeModeTab h TAB_FOOD
CreativeModeTab i TAB_TOOLS
CreativeModeTab j TAB_COMBAT
CreativeModeTab k TAB_BREWING
CreativeModeTab l TAB_MATERIALS
CreativeModeTab m TAB_HOTBAR
CreativeModeTab n TAB_INVENTORY
CreativeModeTab o id
CreativeModeTab p langId
CreativeModeTab q recipeFolderName
CreativeModeTab r backgroundSuffix
CreativeModeTab s canScroll
CreativeModeTab t showTitle
CreativeModeTab u enchantmentCategories
CreativeModeTab v iconItemStack
CreativeModeTab b ()Ljava/lang/String; getLangId
CreativeModeTab c ()Ljava/lang/String; getRecipeFolderName
CreativeModeTab d ()Ljava/lang/String; getName
CreativeModeTab e ()LItemStack; getIconItem
CreativeModeTab f ()LItemStack; makeIcon
CreativeModeTab g ()Ljava/lang/String; getBackgroundSuffix
CreativeModeTab b (Ljava/lang/String;)LCreativeModeTab; setRecipeFolderName
CreativeModeTab h ()Z showTitle
CreativeModeTab i ()LCreativeModeTab; hideTitle
CreativeModeTab j ()Z canScroll
CreativeModeTab k ()LCreativeModeTab; hideScroll
CreativeModeTab l ()I getColumn
CreativeModeTab m ()Z isTopRow
CreativeModeTab n ()Z isAlignedRight
CreativeModeTab o ()[LEnchantmentSlotType; getEnchantmentCategories
CreativeModeTab$1 f ()LItemStack; makeIcon
CreativeModeTab$10 f ()LItemStack; makeIcon
CreativeModeTab$11 f ()LItemStack; makeIcon
CreativeModeTab$11 n ()Z isAlignedRight
CreativeModeTab$12 f ()LItemStack; makeIcon
CreativeModeTab$2 f ()LItemStack; makeIcon
CreativeModeTab$3 f ()LItemStack; makeIcon
CreativeModeTab$4 f ()LItemStack; makeIcon
CreativeModeTab$5 f ()LItemStack; makeIcon
CreativeModeTab$6 f ()LItemStack; makeIcon
CreativeModeTab$7 f ()LItemStack; makeIcon
CreativeModeTab$8 f ()LItemStack; makeIcon
CreativeModeTab$9 f ()LItemStack; makeIcon
ItemCrossbow c startSoundPlayed
ItemCrossbow d midLoadSoundPlayed
ItemCrossbow e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
ItemCrossbow b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
ItemCrossbow d (LItemStack;)Z isCharged
ItemCrossbow b (LItemStack;LItemStack;)V addChargedProjectile
ItemCrossbow j (LItemStack;)Ljava/util/List; getChargedProjectiles
ItemCrossbow k (LItemStack;)V clearChargedProjectiles
ItemCrossbow f_ (LItemStack;)I getUseDuration
ItemCrossbow e (LItemStack;)I getChargeDuration
ItemCrossbow e_ (LItemStack;)LEnumAnimation; getUseAnimation
ItemCrossbow l (LItemStack;)F getShootingPower
ItemCrossbow d ()I getDefaultProjectileRange
ItemCrossbow b (LItemStack;LWorld;LEntityLiving;)F lambda$new$3
ItemCrossbow c (LItemStack;LWorld;LEntityLiving;)F lambda$new$2
ItemCrossbow d (LItemStack;LWorld;LEntityLiving;)F lambda$new$1
ItemCrossbow e (LItemStack;LWorld;LEntityLiving;)F lambda$new$0
ItemDebugStick d_ (LItemStack;)Z isFoil
ItemTool a blocks
ItemTool b speed
ItemTool c attackDamageBaseline
ItemTool d attackSpeedBaseline
ItemTool b (LEntityLiving;)V lambda$hurtEnemy$0
BlockActionContextDirectional g direction
BlockActionContextDirectional b ()Z canPlace
BlockActionContextDirectional c ()Z replacingClickedOnBlock
BlockActionContextDirectional d ()LEnumDirection; getNearestLookingDirection
BlockActionContextDirectional e ()[LEnumDirection; getNearestLookingDirections
BlockActionContextDirectional f ()LEnumDirection; getHorizontalDirection
BlockActionContextDirectional g ()Z isSecondaryUseActive
BlockActionContextDirectional h ()F getRotation
BlockActionContextDirectional$1 a $SwitchMap$net$minecraft$core$Direction
ItemDye a ITEM_BY_COLOR
ItemDye b dyeColor
ItemDye d ()LEnumColor; getDyeColor
IDyeable b (LItemStack;)I getColor
IDyeable c (LItemStack;)V clearColor
ItemElytra e (LItemStack;)Z isFlyEnabled
ItemElytra b (LItemStack;LWorld;LEntityLiving;)F lambda$new$0
ItemEnchantedBook d_ (LItemStack;)Z isFoil
ItemEnchantedBook g_ (LItemStack;)Z isEnchantable
ItemEnchantedBook e (LItemStack;)LNBTTagList; getEnchantments
ItemGoldenAppleEnchanted d_ (LItemStack;)Z isFoil
ItemEndCrystal d_ (LItemStack;)Z isFoil
ItemExpBottle d_ (LItemStack;)Z isFoil
ItemFishBucket a type
ItemFishBucket b (LWorld;LItemStack;LBlockPosition;)V spawn
ItemFishingRod c ()I getEnchantmentValue
ItemFishingRod b (LItemStack;LWorld;LEntityLiving;)F lambda$new$0
ItemFlintAndSteel b (LItemActionContext;LEntityHuman;)V lambda$useOn$0
ItemRestricted c (LBlockActionContext;)LIBlockData; getPlacementState
ItemHanging a type
ItemHoe e DIGGABLES
ItemHoe a TILLABLES
ItemHoneyBottle f_ (LItemStack;)I getUseDuration
ItemHoneyBottle e_ (LItemStack;)LEnumAnimation; getUseAnimation
ItemHoneyBottle W_ ()LSoundEffect; getDrinkingSound
ItemHoneyBottle U_ ()LSoundEffect; getEatingSound
ItemHorseArmor a protection
ItemHorseArmor b texture
ItemHorseArmor f ()LMinecraftKey; getTexture
ItemHorseArmor g ()I getProtection
Item$1 a $SwitchMap$net$minecraft$world$item$Rarity
Item$Info a maxStackSize
Item$Info b maxDamage
Item$Info c craftingRemainingItem
Item$Info d category
Item$Info e rarity
Item$Info f foodProperties
Item$Info g isFireResistant
Item$Info b (I)LItem$Info; defaultDurability
Item$Info c (I)LItem$Info; durability
Item$Info b (LItem$Info;)LEnumItemRarity; access$100
Item$Info c (LItem$Info;)LItem; access$200
Item$Info d (LItem$Info;)I access$300
Item$Info e (LItem$Info;)I access$400
Item$Info f (LItem$Info;)LFoodInfo; access$500
Item$Info g (LItem$Info;)Z access$600
IDynamicTexture call (LItemStack;LWorld;LEntityLiving;)F call
ItemKnowledgeBook a LOGGER
ItemMilkBucket f_ (LItemStack;)I getUseDuration
ItemMilkBucket e_ (LItemStack;)LEnumAnimation; getUseAnimation
ItemMinecart a DISPENSE_ITEM_BEHAVIOR
ItemMinecart b type
ItemMinecart$1 b defaultDispenseItemBehavior
ItemPickaxe a DIGGABLES
ItemPickaxe b (LIBlockData;)Z canDestroySpecial
ItemSkullPlayer g (LItemStack;)LIChatBaseComponent; getName
ItemPotion s ()LItemStack; getDefaultInstance
ItemPotion f_ (LItemStack;)I getUseDuration
ItemPotion e_ (LItemStack;)LEnumAnimation; getUseAnimation
ItemPotion f (LItemStack;)Ljava/lang/String; getDescriptionId
ItemPotion d_ (LItemStack;)Z isFoil
ItemProjectileWeapon a ARROW_ONLY
ItemProjectileWeapon b ARROW_OR_FIREWORK
ItemProjectileWeapon e ()Ljava/util/function/Predicate; getSupportedHeldProjectiles
ItemProjectileWeapon b ()Ljava/util/function/Predicate; getAllSupportedProjectiles
ItemProjectileWeapon c ()I getEnchantmentValue
ItemProjectileWeapon d ()I getDefaultProjectileRange
ItemProjectileWeapon e (LItemStack;)Z lambda$static$1
ItemProjectileWeapon j (LItemStack;)Z lambda$static$0
ItemProjectileWeapon$Type a BOW
ItemProjectileWeapon$Type b CROSSBOW
ItemProjectileWeapon$Type c $VALUES
ItemProjectileWeapon$Type values ()[LItemProjectileWeapon$Type; values
ItemProjectileWeapon$Type valueOf (Ljava/lang/String;)LItemProjectileWeapon$Type; valueOf
ItemRecord a BY_NAME
ItemRecord b analogOutput
ItemRecord c sound
ItemRecord f ()I getAnalogOutput
ItemRecord g ()LIChatBaseComponent; getDisplayName
ItemRecord w ()LSoundEffect; getSound
ItemScaffolding b (LBlockActionContext;)LBlockActionContext; updatePlacementContext
ItemScaffolding V_ ()Z mustSurvive
ItemCooldownPlayer a player
ItemCooldownPlayer b (LItem;I)V onCooldownStarted
ItemCooldownPlayer c (LItem;)V onCooldownEnded
ItemShears b (LIBlockData;)Z canDestroySpecial
ItemShield f (LItemStack;)Ljava/lang/String; getDescriptionId
ItemShield e_ (LItemStack;)LEnumAnimation; getUseAnimation
ItemShield f_ (LItemStack;)I getUseDuration
ItemShield e (LItemStack;)LEnumColor; getColor
ItemShield b (LItemStack;LWorld;LEntityLiving;)F lambda$new$0
ItemSpade e DIGGABLES
ItemSpade a FLATTENABLES
ItemSpade b (LIBlockData;)Z canDestroySpecial
ItemNetherStar d_ (LItemStack;)Z isFoil
ItemMonsterEgg a BY_ID
ItemMonsterEgg b color1
ItemMonsterEgg c color2
ItemMonsterEgg d defaultType
ItemMonsterEgg f ()Ljava/lang/Iterable; eggs
ItemMonsterEgg b (LNBTTagCompound;)LEntityTypes; getType
ItemSword a attackDamage
ItemSword b attackSpeed
ItemSword f ()F getDamage
ItemSword b (LIBlockData;)Z canDestroySpecial
ItemSword b (LEntityLiving;)V lambda$hurtEnemy$0
ToolMaterial b ()F getSpeed
ToolMaterial c ()F getAttackDamageBonus
ToolMaterial d ()I getLevel
ToolMaterial e ()I getEnchantmentValue
ToolMaterial f ()LRecipeItemStack; getRepairIngredient
ItemToolMaterial a tier
ItemToolMaterial g ()LToolMaterial; getTier
ItemToolMaterial c ()I getEnchantmentValue
ItemTippedArrow s ()LItemStack; getDefaultInstance
ItemTippedArrow f (LItemStack;)Ljava/lang/String; getDescriptionId
TooltipFlag$Default a NORMAL
TooltipFlag$Default b ADVANCED
TooltipFlag$Default c advanced
TooltipFlag$Default d $VALUES
TooltipFlag$Default values ()[LTooltipFlag$Default; values
TooltipFlag$Default valueOf (Ljava/lang/String;)LTooltipFlag$Default; valueOf
ItemTrident e_ (LItemStack;)LEnumAnimation; getUseAnimation
ItemTrident f_ (LItemStack;)I getUseDuration
ItemTrident c ()I getEnchantmentValue
ItemTrident b (LEntityLiving;)V lambda$hurtEnemy$2
ItemTrident b (LItemStack;LWorld;LEntityLiving;)F lambda$new$0
ItemBookAndQuill b (LNBTTagCompound;)Z makeSureTagIsValid
ItemWrittenBook b (LNBTTagCompound;)Z makeSureTagIsValid
ItemWrittenBook e (LItemStack;)I getGeneration
ItemWrittenBook j (LItemStack;)I getPageCount
ItemWrittenBook g (LItemStack;)LIChatBaseComponent; getName
ItemWrittenBook d_ (LItemStack;)Z isFoil
PotionRegistry a name
PotionRegistry b effects
PotionRegistry b (Ljava/lang/String;)Ljava/lang/String; getName
PotionRegistry b ()Z hasInstantEffects
PotionBrewer a POTION_MIXES
PotionBrewer b CONTAINER_MIXES
PotionBrewer c ALLOWED_CONTAINERS
PotionBrewer d ALLOWED_CONTAINER
PotionBrewer b (LItemStack;)Z isContainerIngredient
PotionBrewer c (LItemStack;)Z isPotionIngredient
PotionBrewer b (LItemStack;LItemStack;)Z hasContainerMix
PotionBrewer c (LItemStack;LItemStack;)Z hasPotionMix
PotionBrewer d (LItemStack;LItemStack;)LItemStack; mix
PotionBrewer d (LItemStack;)Z lambda$static$0
PotionBrewer$PredicatedCombination a from
PotionBrewer$PredicatedCombination b ingredient
PotionBrewer$PredicatedCombination c to
PotionBrewer$PredicatedCombination b (LPotionBrewer$PredicatedCombination;)Ljava/lang/Object; access$100
PotionBrewer$PredicatedCombination c (LPotionBrewer$PredicatedCombination;)Ljava/lang/Object; access$200
RecipeArmorDye Y_ ()LRecipeSerializer; getSerializer
RecipeBannerDuplicate b (LInventoryCrafting;)LNonNullList; getRemainingItems
RecipeBannerDuplicate Y_ ()LRecipeSerializer; getSerializer
RecipeBannerDuplicate b (LIInventory;)LNonNullList; getRemainingItems
RecipeBlasting h ()LItemStack; getToastSymbol
RecipeBlasting Y_ ()LRecipeSerializer; getSerializer
RecipeBookClone b (LInventoryCrafting;)LNonNullList; getRemainingItems
RecipeBookClone Y_ ()LRecipeSerializer; getSerializer
RecipeBookClone b (LIInventory;)LNonNullList; getRemainingItems
RecipeCampfire h ()LItemStack; getToastSymbol
RecipeCampfire Y_ ()LRecipeSerializer; getSerializer
RecipeCrafting g ()LRecipes; getType
IRecipeComplex a id
IRecipeComplex f ()LMinecraftKey; getId
IRecipeComplex X_ ()Z isSpecial
IRecipeComplex c ()LItemStack; getResultItem
RecipeFireworks a PAPER_INGREDIENT
RecipeFireworks b GUNPOWDER_INGREDIENT
RecipeFireworks c STAR_INGREDIENT
RecipeFireworks c ()LItemStack; getResultItem
RecipeFireworks Y_ ()LRecipeSerializer; getSerializer
RecipeFireworksFade a STAR_INGREDIENT
RecipeFireworksFade Y_ ()LRecipeSerializer; getSerializer
RecipeFireworksStar a SHAPE_INGREDIENT
RecipeFireworksStar b TRAIL_INGREDIENT
RecipeFireworksStar c FLICKER_INGREDIENT
RecipeFireworksStar d SHAPE_BY_ITEM
RecipeFireworksStar e GUNPOWDER_INGREDIENT
RecipeFireworksStar c ()LItemStack; getResultItem
RecipeFireworksStar Y_ ()LRecipeSerializer; getSerializer
RecipeItemStack$StackProvider a item
RecipeItemStack$StackProvider b ()Lcom/google/gson/JsonObject; serialize
RecipeItemStack$TagValue a tag
RecipeItemStack$TagValue b ()Lcom/google/gson/JsonObject; serialize
RecipeItemStack$Provider b ()Lcom/google/gson/JsonObject; serialize
RecipeMapClone Y_ ()LRecipeSerializer; getSerializer
RecipeMapExtend X_ ()Z isSpecial
RecipeMapExtend Y_ ()LRecipeSerializer; getSerializer
RecipeSerializer a SHAPED_RECIPE
RecipeSerializer b SHAPELESS_RECIPE
RecipeSerializer c ARMOR_DYE
RecipeSerializer d BOOK_CLONING
RecipeSerializer e MAP_CLONING
RecipeSerializer f MAP_EXTENDING
RecipeSerializer g FIREWORK_ROCKET
RecipeSerializer h FIREWORK_STAR
RecipeSerializer i FIREWORK_STAR_FADE
RecipeSerializer j TIPPED_ARROW
RecipeSerializer k BANNER_DUPLICATE
RecipeSerializer l SHIELD_DECORATION
RecipeSerializer m SHULKER_BOX_COLORING
RecipeSerializer n SUSPICIOUS_STEW
RecipeSerializer o REPAIR_ITEM
RecipeSerializer p SMELTING_RECIPE
RecipeSerializer q BLASTING_RECIPE
RecipeSerializer r SMOKING_RECIPE
RecipeSerializer s CAMPFIRE_COOKING_RECIPE
RecipeSerializer t STONECUTTER
Recipes$1 g val$name
Recipes$1 toString ()Ljava/lang/String; toString
RecipeRepair Y_ ()LRecipeSerializer; getSerializer
ShapedRecipes$Serializer b (LMinecraftKey;Lcom/google/gson/JsonObject;)LShapedRecipes; fromJson
ShapedRecipes$Serializer b (LMinecraftKey;LPacketDataSerializer;)LShapedRecipes; fromNetwork
ShapelessRecipes$Serializer b (LMinecraftKey;Lcom/google/gson/JsonObject;)LShapelessRecipes; fromJson
ShapelessRecipes$Serializer b (LMinecraftKey;LPacketDataSerializer;)LShapelessRecipes; fromNetwork
RecipiesShield Y_ ()LRecipeSerializer; getSerializer
RecipeShulkerBox Y_ ()LRecipeSerializer; getSerializer
RecipeSerializerCooking u defaultCookingTime
RecipeSerializerCooking v factory
RecipeSerializerCooking b (LMinecraftKey;Lcom/google/gson/JsonObject;)LRecipeCooking; fromJson
RecipeSerializerCooking b (LMinecraftKey;LPacketDataSerializer;)LRecipeCooking; fromNetwork
RecipeSerializerCooking$CookieBaker create (LMinecraftKey;Ljava/lang/String;LRecipeItemStack;LItemStack;FI)LRecipeCooking; create
RecipeSerializerComplex u constructor
RecipeSingleItem$Serializer u factory
RecipeSingleItem$Serializer b (LMinecraftKey;Lcom/google/gson/JsonObject;)LRecipeSingleItem; fromJson
RecipeSingleItem$Serializer b (LMinecraftKey;LPacketDataSerializer;)LRecipeSingleItem; fromNetwork
RecipeSingleItem$Serializer$SingleItemMaker create (LMinecraftKey;Ljava/lang/String;LRecipeItemStack;LItemStack;)LRecipeSingleItem; create
FurnaceRecipe h ()LItemStack; getToastSymbol
FurnaceRecipe Y_ ()LRecipeSerializer; getSerializer
RecipeSmoking h ()LItemStack; getToastSymbol
RecipeSmoking Y_ ()LRecipeSerializer; getSerializer
RecipeStonecutting h ()LItemStack; getToastSymbol
RecipeSuspiciousStew Y_ ()LRecipeSerializer; getSerializer
RecipeTippedArrow Y_ ()LRecipeSerializer; getSerializer
EnchantmentArrowDamage b (I)I getMaxCost
EnchantmentFlameArrows b (I)I getMaxCost
EnchantmentInfiniteArrows b (I)I getMaxCost
EnchantmentArrowKnockback b (I)I getMaxCost
EnchantmentPiercing b (I)I getMaxCost
EnchantmentBinding b (I)I getMaxCost
EnchantmentBinding b ()Z isTreasureOnly
EnchantmentBinding c ()Z isCurse
EnchantmentWeaponDamage d NAMES
EnchantmentWeaponDamage e MIN_COST
EnchantmentWeaponDamage f LEVEL_COST
EnchantmentWeaponDamage g LEVEL_COST_SPAN
EnchantmentWeaponDamage a type
EnchantmentWeaponDamage b (I)I getMaxCost
EnchantmentDurability b (I)I getMaxCost
EnchantmentDigging b (I)I getMaxCost
EnchantmentManager$EnchantmentVisitor accept (LEnchantment;I)V accept
EnchantmentFire b (I)I getMaxCost
EnchantmentLure b (I)I getMaxCost
EnchantmentFrostWalker b (I)I getMaxCost
EnchantmentFrostWalker b ()Z isTreasureOnly
EnchantmentKnockback b (I)I getMaxCost
EnchantmentLootBonus b (I)I getMaxCost
EnchantmentMending b (I)I getMaxCost
EnchantmentMending b ()Z isTreasureOnly
EnchantmentMultishot b (I)I getMaxCost
EnchantmentOxygen b (I)I getMaxCost
EnchantmentProtection a type
EnchantmentProtection b (I)I getMaxCost
EnchantmentQuickCharge b (I)I getMaxCost
SoulSpeedEnchantment b (I)I getMaxCost
SoulSpeedEnchantment b ()Z isTreasureOnly
SoulSpeedEnchantment h ()Z isTradeable
SoulSpeedEnchantment i ()Z isDiscoverable
EnchantmentSweeping b (I)I getMaxCost
EnchantmentSweeping e (I)F getSweepingDamageRatio
EnchantmentThorns b (I)I getMaxCost
EnchantmentThorns b (LEntityLiving;LEntity;I)V doPostHurt
EnchantmentThorns b (ILjava/util/Random;)I getDamage
EnchantmentThorns b (Ljava/util/Map$Entry;LEntityLiving;)V lambda$doPostHurt$0
EnchantmentTridentChanneling b (I)I getMaxCost
EnchantmentTridentImpaling b (I)I getMaxCost
EnchantmentTridentLoyalty b (I)I getMaxCost
EnchantmentTridentRiptide b (I)I getMaxCost
EnchantmentSilkTouch b (I)I getMaxCost
EnchantmentVanishing b (I)I getMaxCost
EnchantmentVanishing b ()Z isTreasureOnly
EnchantmentVanishing c ()Z isCurse
EnchantmentDepthStrider b (I)I getMaxCost
EnchantmentWaterWorker b (I)I getMaxCost
MerchantRecipeList b (LPacketDataSerializer;)LMerchantRecipeList; createFromStream
BlockActionData a pos
BlockActionData b block
BlockActionData c paramA
BlockActionData d paramB
BlockActionData b ()LBlock; getBlock
BlockActionData c ()I getParamA
BlockActionData d ()I getParamB
BlockActionData equals (Ljava/lang/Object;)Z equals
BlockActionData hashCode ()I hashCode
BlockActionData toString ()Ljava/lang/String; toString
ChunkCoordIntPair$1 e pos
ChunkCoordIntPair$1 a val$from
ChunkCoordIntPair$1 b val$to
ChunkCoordIntPair$1 c val$zDiff
ChunkCoordIntPair$1 d val$xDiff
ChunkCoordIntPair$1 tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
TickListChunk a ticks
TickListChunk b toId
TickListChunk b (LBlockPosition;Ljava/lang/Object;)Z willTickThisTick
TickListChunk b ()Ljava/util/stream/Stream; ticks
RayTrace a from
RayTrace b to
RayTrace c block
RayTrace d fluid
RayTrace e collisionContext
RayTrace b ()LVec3D; getFrom
RayTrace$ShapeGetter get (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; get
ICollisionAccess$1 a checkedBorder
ICollisionAccess$1 b val$source
ICollisionAccess$1 c val$cursor
ICollisionAccess$1 d val$pos
ICollisionAccess$1 e val$context
ICollisionAccess$1 f val$testArea
ICollisionAccess$1 g this$0
ICollisionAccess$1 tryAdvance (Ljava/util/function/Consumer;)Z tryAdvance
ColorResolver getColor (LBiomeBase;DD)I getColor
TickListEmpty a INSTANCE
TickListEmpty b ()LTickListEmpty; empty
TickListEmpty b (LBlockPosition;Ljava/lang/Object;)Z willTickThisTick
FoliageColor a pixels
FoliageColor b ()I getBirchColor
FoliageColor c ()I getDefaultColor
ForcedChunk a chunks
ForcedChunk b (LNBTTagCompound;)LNBTTagCompound; save
GameRules$GameRuleBoolean a value
GameRules$GameRuleBoolean b (ZLjava/util/function/BiConsumer;)LGameRules$GameRuleDefinition; create
GameRules$GameRuleBoolean b (Z)LGameRules$GameRuleDefinition; create
GameRules$GameRuleBoolean b ()Ljava/lang/String; serialize
GameRules$GameRuleBoolean c ()I getCommandResult
GameRules$GameRuleBoolean d ()LGameRules$GameRuleBoolean; getSelf
GameRules$GameRuleBoolean e ()LGameRules$GameRuleValue; getSelf
GameRules$GameRuleInt a value
GameRules$GameRuleInt b (I)LGameRules$GameRuleDefinition; create
GameRules$GameRuleInt b ()Ljava/lang/String; serialize
GameRules$GameRuleInt b (Ljava/lang/String;)I safeParse
GameRules$GameRuleInt c ()I getCommandResult
GameRules$GameRuleInt d ()LGameRules$GameRuleInt; getSelf
GameRules$GameRuleInt e ()LGameRules$GameRuleValue; getSelf
GameRules$GameRuleKey a id
GameRules$GameRuleKey toString ()Ljava/lang/String; toString
GameRules$GameRuleKey equals (Ljava/lang/Object;)Z equals
GameRules$GameRuleKey hashCode ()I hashCode
GrassColor a pixels
SpawnerCreature$1 a $SwitchMap$net$minecraft$world$entity$SpawnPlacements$Type
NoiseColumn a column
NoiseColumn c (LBlockPosition;)LTileEntity; getBlockEntity
NoiseColumn d_ (LBlockPosition;)LIBlockData; getBlockState
NoiseColumn b (LBlockPosition;)LFluid; getFluidState
ChunkCache a centerX
ChunkCache b centerZ
ChunkCache c chunks
ChunkCache d allEmpty
ChunkCache e level
ChunkCache d (LBlockPosition;)LIChunkAccess; getChunk
ChunkCache s_ ()LWorldBorder; getWorldBorder
ChunkCache c (II)LIBlockAccess; getChunkForCollisions
ChunkCache c (LBlockPosition;)LTileEntity; getBlockEntity
ChunkCache d_ (LBlockPosition;)LIBlockData; getBlockState
ChunkCache b (LBlockPosition;)LFluid; getFluidState
TickList b (LBlockPosition;Ljava/lang/Object;)Z willTickThisTick
NextTickListEntry d counter
NextTickListEntry e type
NextTickListEntry a pos
NextTickListEntry b delay
NextTickListEntry c priority
NextTickListEntry f c
NextTickListEntry equals (Ljava/lang/Object;)Z equals
NextTickListEntry hashCode ()I hashCode
NextTickListEntry toString ()Ljava/lang/String; toString
NextTickListEntry b ()Ljava/lang/Object; getType
NextTickListEntry b (LNextTickListEntry;)LTickListPriority; lambda$createTimeComparator$1
NextTickListEntry c (LNextTickListEntry;)J lambda$createTimeComparator$0
AmbientAdditionsSettings a soundEvent
AmbientAdditionsSettings b tickChance
AmbientAdditionsSettings b ()D getTickChance
AmbientMoodSettings a LEGACY_CAVE_SETTINGS
AmbientMoodSettings b soundEvent
AmbientMoodSettings c tickDelay
AmbientMoodSettings d blockSearchExtent
AmbientMoodSettings e soundPositionOffset
AmbientMoodSettings b ()I getTickDelay
AmbientMoodSettings c ()I getBlockSearchExtent
AmbientMoodSettings d ()D getSoundPositionOffset
AmbientParticleSettings a particleType
AmbientParticleSettings b probability
AmbientParticleSettings c xVelocity
AmbientParticleSettings d yVelocity
AmbientParticleSettings e zVelocity
AmbientParticleSettings b (Ljava/util/Random;)D getXVelocity
AmbientParticleSettings c (Ljava/util/Random;)D getYVelocity
AmbientParticleSettings d (Ljava/util/Random;)D getZVelocity
BiomeBase$1 a this$0
BiomeBase$1 rehash (I)V rehash
BiomeBase$BiomeBuilder a surfaceBuilder
BiomeBase$BiomeBuilder b precipitation
BiomeBase$BiomeBuilder c biomeCategory
BiomeBase$BiomeBuilder d depth
BiomeBase$BiomeBuilder e scale
BiomeBase$BiomeBuilder f temperature
BiomeBase$BiomeBuilder g downfall
BiomeBase$BiomeBuilder h parent
BiomeBase$BiomeBuilder i optimalParameters
BiomeBase$BiomeBuilder j specialEffects
BiomeBase$BiomeBuilder b (F)LBiomeBase$BiomeBuilder; scale
BiomeBase$BiomeBuilder c (F)LBiomeBase$BiomeBuilder; temperature
BiomeBase$BiomeBuilder d (F)LBiomeBase$BiomeBuilder; downfall
BiomeBase$BiomeBuilder toString ()Ljava/lang/String; toString
BiomeBase$BiomeBuilder b (LBiomeBase$BiomeBuilder;)LBiomeBase$Precipitation; access$100
BiomeBase$BiomeBuilder c (LBiomeBase$BiomeBuilder;)LBiomeBase$Geography; access$200
BiomeBase$BiomeBuilder d (LBiomeBase$BiomeBuilder;)Ljava/lang/Float; access$300
BiomeBase$BiomeBuilder e (LBiomeBase$BiomeBuilder;)Ljava/lang/Float; access$400
BiomeBase$BiomeBuilder f (LBiomeBase$BiomeBuilder;)Ljava/lang/Float; access$500
BiomeBase$BiomeBuilder g (LBiomeBase$BiomeBuilder;)Ljava/lang/Float; access$600
BiomeBase$BiomeBuilder h (LBiomeBase$BiomeBuilder;)LBiomeSpecialEffects; access$700
BiomeBase$BiomeBuilder i (LBiomeBase$BiomeBuilder;)Ljava/lang/String; access$800
BiomeBase$BiomeBuilder j (LBiomeBase$BiomeBuilder;)Ljava/util/List; access$900
BiomeBase$ClimateParameters a temperature
BiomeBase$ClimateParameters b humidity
BiomeBase$ClimateParameters c altitude
BiomeBase$ClimateParameters d weirdness
BiomeBase$ClimateParameters e weight
BiomeBase$ClimateParameters equals (Ljava/lang/Object;)Z equals
BiomeBase$ClimateParameters hashCode ()I hashCode
BiomeBase$BiomeMeta b type
BiomeBase$BiomeMeta c minCount
BiomeBase$BiomeMeta d maxCount
BiomeBase$BiomeMeta toString ()Ljava/lang/String; toString
BiomeManager a noiseBiomeSource
BiomeManager b biomeZoomSeed
BiomeManager c zoomer
WorldChunkManager d PLAYER_SPAWN_BIOMES
WorldChunkManager a supportedStructures
WorldChunkManager b surfaceBlocks
WorldChunkManager c possibleBiomes
WorldChunkManager b ()Ljava/util/Set; getSurfaceBlocks
WorldChunkManager b (LStructureGenerator;)Ljava/lang/Boolean; lambda$canGenerateStructure$1
BiomeLayout a CHECKERBOARD
BiomeLayout b FIXED
BiomeLayout c VANILLA_LAYERED
BiomeLayout d THE_END
BiomeLayout e MULTI_NOISE
BiomeLayout f factory
BiomeLayout g settingsFactory
BiomeSpecialEffects a fogColor
BiomeSpecialEffects b waterColor
BiomeSpecialEffects c waterFogColor
BiomeSpecialEffects d ambientParticleSettings
BiomeSpecialEffects e ambientLoopSoundEvent
BiomeSpecialEffects f ambientMoodSettings
BiomeSpecialEffects g ambientAdditionsSettings
BiomeSpecialEffects b ()I getWaterColor
BiomeSpecialEffects c ()I getWaterFogColor
BiomeSpecialEffects d ()Ljava/util/Optional; getAmbientParticleSettings
BiomeSpecialEffects e ()Ljava/util/Optional; getAmbientLoopSoundEvent
BiomeSpecialEffects f ()Ljava/util/Optional; getAmbientMoodSettings
BiomeSpecialEffects g ()Ljava/util/Optional; getAmbientAdditionsSettings
BiomeSpecialEffects$Builder a fogColor
BiomeSpecialEffects$Builder b waterColor
BiomeSpecialEffects$Builder c waterFogColor
BiomeSpecialEffects$Builder d ambientParticle
BiomeSpecialEffects$Builder e ambientLoopSoundEvent
BiomeSpecialEffects$Builder f ambientMoodSettings
BiomeSpecialEffects$Builder g ambientAdditionsSettings
BiomeSpecialEffects$Builder b (I)LBiomeSpecialEffects$Builder; waterColor
BiomeSpecialEffects$Builder c (I)LBiomeSpecialEffects$Builder; waterFogColor
BiomeSpecialEffects$Builder b ()Ljava/lang/IllegalStateException; lambda$build$2
BiomeSpecialEffects$Builder c ()Ljava/lang/IllegalStateException; lambda$build$1
BiomeSpecialEffects$Builder d ()Ljava/lang/IllegalStateException; lambda$build$0
BiomeLayoutCheckerboardConfiguration a allowedBiomes
BiomeLayoutCheckerboardConfiguration b size
BiomeLayoutCheckerboardConfiguration b ()I getSize
WorldChunkManagerCheckerBoard d allowedBiomes
WorldChunkManagerCheckerBoard e bitShift
WorldChunkManagerCheckerBoard b (III)LBiomeBase; getNoiseBiome
CrimsonForestBiome b (Ljava/util/Random;)Ljava/lang/Double; lambda$new$1
CrimsonForestBiome c (Ljava/util/Random;)Ljava/lang/Double; lambda$new$0
BiomeFrozenDeepOcean t FROZEN_TEMPERATURE_NOISE
BiomeTheEndBarrenIsland c ()I getSkyColor
BiomeTheEndHighIsland c ()I getSkyColor
BiomeTheEndMediumIsland c ()I getSkyColor
WorldChunkManagerHell d biome
WorldChunkManagerHell b (III)LBiomeBase; getNoiseBiome
BiomeLayoutFixedConfiguration a biome
BiomeFrozenOcean t FROZEN_TEMPERATURE_NOISE
BiomeIcePlainsSpikes f ()F getCreatureProbability
MultiNoiseBiomeSource d temperatureNoise
MultiNoiseBiomeSource e humidityNoise
MultiNoiseBiomeSource f altitudeNoise
MultiNoiseBiomeSource g weirdnessNoise
MultiNoiseBiomeSource b (III)LBiomeBase; getNoiseBiome
MultiNoiseBiomeSourceSettings a seed
MultiNoiseBiomeSourceSettings b temperatureOctaves
MultiNoiseBiomeSourceSettings c humidityOctaves
MultiNoiseBiomeSourceSettings d altitudeOctaves
MultiNoiseBiomeSourceSettings e weirdnessOctaves
MultiNoiseBiomeSourceSettings f biomes
MultiNoiseBiomeSourceSettings b ()J getSeed
MultiNoiseBiomeSourceSettings c ()Lcom/google/common/collect/ImmutableList; getTemperatureOctaves
MultiNoiseBiomeSourceSettings b (Lcom/google/common/collect/ImmutableList;)LMultiNoiseBiomeSourceSettings; setHumidityOctaves
MultiNoiseBiomeSourceSettings d ()Lcom/google/common/collect/ImmutableList; getHumidityOctaves
MultiNoiseBiomeSourceSettings c (Lcom/google/common/collect/ImmutableList;)LMultiNoiseBiomeSourceSettings; setAltitudeOctaves
MultiNoiseBiomeSourceSettings e ()Lcom/google/common/collect/ImmutableList; getAltitudeOctaves
MultiNoiseBiomeSourceSettings d (Lcom/google/common/collect/ImmutableList;)LMultiNoiseBiomeSourceSettings; setWeirdnessOctaves
MultiNoiseBiomeSourceSettings f ()Lcom/google/common/collect/ImmutableList; getWeirdnessOctaves
NearestNeighborBiomeZoomer a INSTANCE
NearestNeighborBiomeZoomer b $VALUES
NearestNeighborBiomeZoomer values ()[LNearestNeighborBiomeZoomer; values
NearestNeighborBiomeZoomer valueOf (Ljava/lang/String;)LNearestNeighborBiomeZoomer; valueOf
WorldChunkManagerOverworld d noiseBiomeLayer
WorldChunkManagerOverworld e POSSIBLE_BIOMES
WorldChunkManagerOverworld b (III)LBiomeBase; getNoiseBiome
BiomeLayoutOverworldConfiguration a seed
BiomeLayoutOverworldConfiguration b generatorType
BiomeLayoutOverworldConfiguration c generatorSettings
BiomeLayoutOverworldConfiguration b ()LWorldType; getGeneratorType
BiomeLayoutOverworldConfiguration c ()LGeneratorSettingsOverworld; getGeneratorSettings
BiomeTheEndFloatingIslands c ()I getSkyColor
BiomeIceMountains f ()F getCreatureProbability
BiomeIcePlains f ()F getCreatureProbability
SoulSandValleyBiome b (Ljava/util/Random;)Ljava/lang/Double; lambda$new$1
SoulSandValleyBiome c (Ljava/util/Random;)Ljava/lang/Double; lambda$new$0
BiomeTheEnd c ()I getSkyColor
WorldChunkManagerTheEnd d islandNoise
WorldChunkManagerTheEnd e random
WorldChunkManagerTheEnd f POSSIBLE_BIOMES
WorldChunkManagerTheEnd b (III)LBiomeBase; getNoiseBiome
BiomeLayoutTheEndConfiguration a seed
WarpedForestBiome b (Ljava/util/Random;)Ljava/lang/Double; lambda$new$1
WarpedForestBiome c (Ljava/util/Random;)Ljava/lang/Double; lambda$new$0
BlockChestAbstract a blockEntityType
BlockGlassAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;)Z propagatesSkylightDown
BlockSkullAbstract a type
BlockSkullAbstract b ()LBlockSkull$AType; getType
BlockAir b (LIBlockData;)LEnumRenderType; getRenderShape
BlockAir b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockStemAttached a FACING
BlockStemAttached b fruit
BlockStemAttached c AABBS
BlockStemAttached b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockStemAttached c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockStemAttached b ()LItem; getSeedItem
BlockBamboo a SMALL_SHAPE
BlockBamboo b LARGE_SHAPE
BlockBamboo c COLLISION_SHAPE
BlockBamboo d AGE
BlockBamboo e LEAVES
BlockBamboo f STAGE
BlockBamboo Z_ ()LBlockBehaviour$OffsetType; getOffsetType
BlockBamboo b (LIBlockData;LIBlockAccess;LBlockPosition;)Z propagatesSkylightDown
BlockBamboo b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockBamboo c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockBamboo a_ (LIBlockData;)Z isRandomlyTicking
BlockBamboo b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockBamboo b (LIBlockAccess;LBlockPosition;)I getHeightBelowUpToMax
BlockBambooSapling a SAPLING_SHAPE
BlockBambooSapling Z_ ()LBlockBehaviour$OffsetType; getOffsetType
BlockBambooSapling b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockBambooSapling b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockBarrel a FACING
BlockBarrel b OPEN
BlockBarrel b (LIBlockData;)LEnumRenderType; getRenderShape
BlockBarrier b (LIBlockData;LIBlockAccess;LBlockPosition;)Z propagatesSkylightDown
BlockBarrier b (LIBlockData;)LEnumRenderType; getRenderShape
BlockCoralFanAbstract a AABB
BlockCoralFanAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCoralDead a SHAPE
BlockCoralDead b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCoralBase b WATERLOGGED
BlockCoralBase a AABB
BlockCoralBase c (LIBlockData;LIBlockAccess;LBlockPosition;)Z scanForWater
BlockCoralBase b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCoralBase d (LIBlockData;)LFluid; getFluidState
BlockCoralFanWallAbstract a FACING
BlockCoralFanWallAbstract c SHAPES
BlockCoralFanWallAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockTileEntity b (LIBlockData;)LEnumRenderType; getRenderShape
BlockTileEntity b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BaseFireBlock g fireDamage
BaseFireBlock a UP_AABB
BaseFireBlock b DOWN_AABB
BaseFireBlock c WEST_AABB
BaseFireBlock d EAST_AABB
BaseFireBlock e NORTH_AABB
BaseFireBlock f SOUTH_AABB
BaseFireBlock b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BaseFireBlock e (LIBlockData;)Z canBurn
BaseFireBlock b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockMinecartTrackAbstract a FLAT_AABB
BlockMinecartTrackAbstract b HALF_BLOCK_AABB
BlockMinecartTrackAbstract c isStraight
BlockMinecartTrackAbstract g (LIBlockData;)Z isRail
BlockMinecartTrackAbstract c ()Z isStraight
BlockMinecartTrackAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockMinecartTrackAbstract b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockMinecartTrackAbstract f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockMinecartTrackAbstract d ()LIBlockState; getShapeProperty
BlockBeacon b (LIBlockData;)LEnumRenderType; getRenderShape
BlockBed$1 a $SwitchMap$net$minecraft$core$Direction
BlockBeehive a SPAWN_DIRECTIONS
BlockBeehive b FACING
BlockBeehive c HONEY_LEVEL
BlockBeehive b (LWorld;LBlockPosition;)V angerNearbyBees
BlockBeehive d (LWorld;LBlockPosition;)Z hiveContainsBees
BlockBeehive b (LIBlockData;)LEnumRenderType; getRenderShape
BlockBeetroot a AGE
BlockBeetroot c SHAPE_BY_AGE
BlockBeetroot c ()LBlockStateInteger; getAgeProperty
BlockBeetroot d ()I getMaxAge
BlockBeetroot e ()LIMaterial; getBaseSeedId
BlockBeetroot b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockBeetroot b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockBell a FACING
BlockBell b ATTACHMENT
BlockBell c POWERED
BlockBell d NORTH_SOUTH_FLOOR_SHAPE
BlockBell e EAST_WEST_FLOOR_SHAPE
BlockBell f BELL_TOP_SHAPE
BlockBell g BELL_BOTTOM_SHAPE
BlockBell h BELL_SHAPE
BlockBell i NORTH_SOUTH_BETWEEN
BlockBell j EAST_WEST_BETWEEN
BlockBell k TO_WEST
BlockBell o TO_EAST
BlockBell p TO_NORTH
BlockBell q TO_SOUTH
BlockBell r CEILING_SHAPE
BlockBell h (LIBlockData;)LVoxelShape; getVoxelShape
BlockBell c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockBell b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockBell b (LIBlockData;)LEnumRenderType; getRenderShape
BlockBell l (LIBlockData;)LEnumDirection; getConnectedDirection
BlockBell f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockBell$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
Block$1 load (Ljava/lang/Object;)Ljava/lang/Object; load
Block$2 rehash (I)V rehash
Block$BlockStatePairKey a first
Block$BlockStatePairKey b second
Block$BlockStatePairKey c direction
Block$BlockStatePairKey equals (Ljava/lang/Object;)Z equals
Block$BlockStatePairKey hashCode ()I hashCode
BlockBubbleColumn a DRAG_DOWN
BlockBubbleColumn b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockBubbleColumn d (LIBlockData;)LFluid; getFluidState
BlockBubbleColumn b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockBubbleColumn b (LIBlockData;)LEnumRenderType; getRenderShape
BlockBubbleColumn b (LGeneratorAccess;LBlockPosition;LIBlockData;)LFluidType; takeLiquid
BlockPlant c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockPlant b (LIBlockData;LIBlockAccess;LBlockPosition;)Z propagatesSkylightDown
BlockButtonAbstract$1 a $SwitchMap$net$minecraft$core$Direction
BlockButtonAbstract$1 b $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
BlockCampfire a SHAPE
BlockCampfire b LIT
BlockCampfire c SIGNAL_FIRE
BlockCampfire d WATERLOGGED
BlockCampfire e FACING
BlockCampfire f VIRTUAL_FENCE_POST
BlockCampfire h (LIBlockData;)Z isSmokeSource
BlockCampfire b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCampfire b (LIBlockData;)LEnumRenderType; getRenderShape
BlockCampfire b (LWorld;LBlockPosition;I)Z isSmokeyPos
BlockCampfire l (LIBlockData;)Z isLitCampfire
BlockCampfire d (LIBlockData;)LFluid; getFluidState
BlockCarrots a SHAPE_BY_AGE
BlockCarrots e ()LIMaterial; getBaseSeedId
BlockCarrots b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCartographyTable a CONTAINER_TITLE
BlockCartographyTable b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockChest$1 b ()Ljava/lang/Object; acceptNone
BlockChest$2 b ()Ljava/lang/Object; acceptNone
BlockChest$2$1 a val$first
BlockChest$2$1 b val$second
BlockChest$2$1 c val$container
BlockChest$2$1 d this$0
BlockChest$2$1 createMenu (ILPlayerInventory;LEntityHuman;)LContainer; createMenu
BlockChest$2$1 d ()LIChatBaseComponent; getDisplayName
BlockChest$3 a val$entity
BlockChest$3 b ()Ljava/lang/Object; acceptNone
BlockChest$4 a $SwitchMap$net$minecraft$core$Direction
BlockCocoa$1 a $SwitchMap$net$minecraft$core$Direction
BlockCommand c LOGGER
BlockCommand a FACING
BlockCommand b CONDITIONAL
BlockCommand b (LIBlockData;)LEnumRenderType; getRenderShape
BlockComposter a LEVEL
BlockComposter b COMPOSTABLES
BlockComposter c OUTER_SHAPE
BlockComposter d SHAPES
BlockComposter c ()V bootStrap
BlockComposter b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockComposter a_ (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getInteractionShape
BlockComposter c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockComposter b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockComposter d (LIBlockData;LGeneratorAccess;LBlockPosition;)V empty
BlockComposter b (LIBlockData;LGeneratorAccess;LBlockPosition;LItemStack;)Z addItem
BlockComposter c (LIBlockData;LGeneratorAccess;LBlockPosition;)V access$000
BlockComposter$ContainerEmpty b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
BlockComposter$ContainerInput a state
BlockComposter$ContainerInput b level
BlockComposter$ContainerInput c pos
BlockComposter$ContainerInput d changed
BlockComposter$ContainerInput N_ ()I getMaxStackSize
BlockComposter$ContainerInput b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
BlockComposter$ContainerInput e ()V setChanged
BlockConduit a WATERLOGGED
BlockConduit b SHAPE
BlockConduit b (LIBlockData;)LEnumRenderType; getRenderShape
BlockConduit d (LIBlockData;)LFluid; getFluidState
BlockConduit b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCoral a deadBlock
BlockCoralFan a deadBlock
BlockCoralFan b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockCoralPlant c deadBlock
BlockCoralPlant a SHAPE
BlockCoralPlant b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockCoralPlant b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCoralFanWall c deadBlock
BlockCoralFanWall b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockWorkbench a CONTAINER_TITLE
BlockWorkbench b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockTall$1 a $SwitchMap$net$minecraft$world$level$block$Rotation
BlockTall$1 b $SwitchMap$net$minecraft$world$level$block$Mirror
BlockDeadBush a SHAPE
BlockDeadBush b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockDeadBush c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockMinecartDetector$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
BlockMinecartDetector$1 b $SwitchMap$net$minecraft$world$level$block$Rotation
BlockMinecartDetector$1 c $SwitchMap$net$minecraft$world$level$block$Mirror
BlockDoor$1 a $SwitchMap$net$minecraft$core$Direction
BlockDoor$1 b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
DoubleBlockFinder$Combiner b ()Ljava/lang/Object; acceptNone
DoubleBlockFinder$Result apply (LDoubleBlockFinder$Combiner;)Ljava/lang/Object; apply
DoubleBlockFinder$Result$Double a first
DoubleBlockFinder$Result$Double b second
DoubleBlockFinder$Result$Double apply (LDoubleBlockFinder$Combiner;)Ljava/lang/Object; apply
DoubleBlockFinder$Result$Single a single
DoubleBlockFinder$Result$Single apply (LDoubleBlockFinder$Combiner;)Ljava/lang/Object; apply
BlockDragonEgg a SHAPE
BlockDragonEgg b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockDragonEgg d (LIBlockData;LWorld;LBlockPosition;)V teleport
BlockDragonEgg c ()I getDelayAfterPlace
BlockDropper c DISPENSE_BEHAVIOUR
BlockEnchantmentTable a SHAPE
BlockEnchantmentTable c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockEnchantmentTable b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockEnchantmentTable b (LIBlockData;)LEnumRenderType; getRenderShape
BlockEnchantmentTable b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockEnderPortal a SHAPE
BlockEnderPortal b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockEndRod b Y_AXIS_AABB
BlockEndRod c Z_AXIS_AABB
BlockEndRod d X_AXIS_AABB
BlockEndRod b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockEndRod f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockEndRod$1 a $SwitchMap$net$minecraft$core$Direction$Axis
BlockAttachable$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
BlockFence i occlusionByIndex
BlockFence d (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getOcclusionShape
BlockFenceGate$1 a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
BlockFlowers a SHAPE
BlockFlowers b suspiciousStewEffect
BlockFlowers c effectDuration
BlockFlowers b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockFlowers Z_ ()LBlockBehaviour$OffsetType; getOffsetType
BlockFlowers c ()LMobEffectList; getSuspiciousStewEffect
BlockFlowers d ()I getEffectDuration
BlockFlowerPot b POTTED_BY_CONTENT
BlockFlowerPot a SHAPE
BlockFlowerPot c content
BlockFlowerPot b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockFlowerPot b (LIBlockData;)LEnumRenderType; getRenderShape
BlockFlowerPot c ()LBlock; getContent
BlockIceFrost a AGE
BlockIceFrost b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockIceFrost e (LIBlockData;LWorld;LBlockPosition;)Z slightlyMelt
FungusBlock a SHAPE
FungusBlock b feature
FungusBlock b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
FungusBlock c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockGlazedTerracotta f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockGrassPath a SHAPE
BlockGrassPath c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockGrassPath b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockGravel c (LIBlockData;LIBlockAccess;LBlockPosition;)I getDustColor
BlockGrindstone a FLOOR_NORTH_SOUTH_LEFT_POST
BlockGrindstone b FLOOR_NORTH_SOUTH_RIGHT_POST
BlockGrindstone c FLOOR_NORTH_SOUTH_LEFT_PIVOT
BlockGrindstone d FLOOR_NORTH_SOUTH_RIGHT_PIVOT
BlockGrindstone e FLOOR_NORTH_SOUTH_LEFT_LEG
BlockGrindstone f FLOOR_NORTH_SOUTH_RIGHT_LEG
BlockGrindstone g FLOOR_NORTH_SOUTH_ALL_LEGS
BlockGrindstone h FLOOR_NORTH_SOUTH_GRINDSTONE
BlockGrindstone i FLOOR_EAST_WEST_LEFT_POST
BlockGrindstone j FLOOR_EAST_WEST_RIGHT_POST
BlockGrindstone k FLOOR_EAST_WEST_LEFT_PIVOT
BlockGrindstone o FLOOR_EAST_WEST_RIGHT_PIVOT
BlockGrindstone p FLOOR_EAST_WEST_LEFT_LEG
BlockGrindstone q FLOOR_EAST_WEST_RIGHT_LEG
BlockGrindstone r FLOOR_EAST_WEST_ALL_LEGS
BlockGrindstone s FLOOR_EAST_WEST_GRINDSTONE
BlockGrindstone t WALL_SOUTH_LEFT_POST
BlockGrindstone v WALL_SOUTH_RIGHT_POST
BlockGrindstone w WALL_SOUTH_LEFT_PIVOT
BlockGrindstone x WALL_SOUTH_RIGHT_PIVOT
BlockGrindstone y WALL_SOUTH_LEFT_LEG
BlockGrindstone z WALL_SOUTH_RIGHT_LEG
BlockGrindstone A WALL_SOUTH_ALL_LEGS
BlockGrindstone B WALL_SOUTH_GRINDSTONE
BlockGrindstone C WALL_NORTH_LEFT_POST
BlockGrindstone D WALL_NORTH_RIGHT_POST
BlockGrindstone E WALL_NORTH_LEFT_PIVOT
BlockGrindstone F WALL_NORTH_RIGHT_PIVOT
BlockGrindstone G WALL_NORTH_LEFT_LEG
BlockGrindstone H WALL_NORTH_RIGHT_LEG
BlockGrindstone I WALL_NORTH_ALL_LEGS
BlockGrindstone J WALL_NORTH_GRINDSTONE
BlockGrindstone K WALL_WEST_LEFT_POST
BlockGrindstone L WALL_WEST_RIGHT_POST
BlockGrindstone M WALL_WEST_LEFT_PIVOT
BlockGrindstone N WALL_WEST_RIGHT_PIVOT
BlockGrindstone O WALL_WEST_LEFT_LEG
BlockGrindstone P WALL_WEST_RIGHT_LEG
BlockGrindstone Q WALL_WEST_ALL_LEGS
BlockGrindstone R WALL_WEST_GRINDSTONE
BlockGrindstone S WALL_EAST_LEFT_POST
BlockGrindstone T WALL_EAST_RIGHT_POST
BlockGrindstone U WALL_EAST_LEFT_PIVOT
BlockGrindstone V WALL_EAST_RIGHT_PIVOT
BlockGrindstone W WALL_EAST_LEFT_LEG
BlockGrindstone X WALL_EAST_RIGHT_LEG
BlockGrindstone Y WALL_EAST_ALL_LEGS
BlockGrindstone Z WALL_EAST_GRINDSTONE
BlockGrindstone aa CEILING_NORTH_SOUTH_LEFT_POST
BlockGrindstone ab CEILING_NORTH_SOUTH_RIGHT_POST
BlockGrindstone ac CEILING_NORTH_SOUTH_LEFT_PIVOT
BlockGrindstone ad CEILING_NORTH_SOUTH_RIGHT_PIVOT
BlockGrindstone ae CEILING_NORTH_SOUTH_LEFT_LEG
BlockGrindstone af CEILING_NORTH_SOUTH_RIGHT_LEG
BlockGrindstone ag CEILING_NORTH_SOUTH_ALL_LEGS
BlockGrindstone ah CEILING_NORTH_SOUTH_GRINDSTONE
BlockGrindstone ai CEILING_EAST_WEST_LEFT_POST
BlockGrindstone aj CEILING_EAST_WEST_RIGHT_POST
BlockGrindstone ak CEILING_EAST_WEST_LEFT_PIVOT
BlockGrindstone al CEILING_EAST_WEST_RIGHT_PIVOT
BlockGrindstone am CEILING_EAST_WEST_LEFT_LEG
BlockGrindstone an CEILING_EAST_WEST_RIGHT_LEG
BlockGrindstone ao CEILING_EAST_WEST_ALL_LEGS
BlockGrindstone ap CEILING_EAST_WEST_GRINDSTONE
BlockGrindstone aD CONTAINER_TITLE
BlockGrindstone b (LIBlockData;)LEnumRenderType; getRenderShape
BlockGrindstone l (LIBlockData;)LVoxelShape; getVoxelShape
BlockGrindstone c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockGrindstone b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockGrindstone b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockGrindstone$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
GrowingPlantBlock a growthDirection
GrowingPlantBlock b scheduleFluidTicks
GrowingPlantBlock c shape
GrowingPlantBlock b (LBlock;)Z canAttachToBlock
GrowingPlantBlock b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
GrowingPlantBlock c ()LGrowingPlantHeadBlock; getHeadBlock
GrowingPlantBlock d ()LBlock; getBodyBlock
GrowingPlantBodyBlock b (LIBlockAccess;LBlockPosition;LIBlockData;)Ljava/util/Optional; getHeadPos
GrowingPlantBodyBlock d ()LBlock; getBodyBlock
GrowingPlantHeadBlock d AGE
GrowingPlantHeadBlock e growPerTickProbability
GrowingPlantHeadBlock a_ (LIBlockData;)Z isRandomlyTicking
GrowingPlantHeadBlock b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
GrowingPlantHeadBlock h (LIBlockData;)Z canGrowInto
GrowingPlantHeadBlock c ()LGrowingPlantHeadBlock; getHeadBlock
BlockHoney a SHAPE
BlockHoney c (LEntity;)Z doesEntityDoHoneyBlockSlideEffects
BlockHoney c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockHoney d (LEntity;)V doSlideMovement
BlockHoney b (LEntity;)V showJumpParticles
BlockHopper$1 a $SwitchMap$net$minecraft$core$Direction
BlockHugeMushroom a NORTH
BlockHugeMushroom b EAST
BlockHugeMushroom c SOUTH
BlockHugeMushroom d WEST
BlockHugeMushroom e UP
BlockHugeMushroom f DOWN
BlockHugeMushroom g PROPERTY_BY_DIRECTION
BlockMonsterEggs a hostBlock
BlockMonsterEggs b BLOCK_BY_HOST_BLOCK
BlockMonsterEggs c ()LBlock; getHostBlock
BlockMonsterEggs h (LIBlockData;)Z isCompatibleHostBlock
BlockMonsterEggs b (LBlock;)LIBlockData; stateByHostBlock
BlockKelp e SHAPE
BlockKelp h (LIBlockData;)Z canGrowInto
BlockKelp d ()LBlock; getBodyBlock
BlockKelp b (LBlock;)Z canAttachToBlock
BlockKelp d (LIBlockData;)LFluid; getFluidState
BlockKelpPlant c ()LGrowingPlantHeadBlock; getHeadBlock
BlockKelpPlant d (LIBlockData;)LFluid; getFluidState
BlockLadder$1 a $SwitchMap$net$minecraft$core$Direction
BlockLantern a HANGING
BlockLantern b AABB
BlockLantern c HANGING_AABB
BlockLantern b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockLantern h (LIBlockData;)LEnumDirection; getConnectedDirection
BlockLantern f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockLectern$1 a $SwitchMap$net$minecraft$core$Direction
BlockLever$1 a $SwitchMap$net$minecraft$core$Direction$Axis
BlockLever$1 b $SwitchMap$net$minecraft$core$Direction
BlockLever$1 c $SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
BlockLoom a CONTAINER_TITLE
BlockLoom b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockMagma b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockMagma b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockMelon c ()LBlockStem; getStem
BlockMelon d ()LBlockStemAttached; getAttachedStem
EnumBlockMirror$1 a $SwitchMap$net$minecraft$world$level$block$Mirror
BlockMushroom a SHAPE
BlockMushroom b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockMushroom b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockMushroom c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockPortal$1 a $SwitchMap$net$minecraft$core$Direction$Axis
BlockPortal$1 b $SwitchMap$net$minecraft$world$level$block$Rotation
NetherSproutsBlock a SHAPE
NetherSproutsBlock b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
NetherVines a SHAPE
NyliumBlock b (LIBlockData;LIWorldReader;LBlockPosition;)Z canBeNylium
NyliumBlock b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockObserver b POWERED
BlockObserver b_ (LIBlockData;)Z isSignalSource
BlockObserver b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockObserver b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockSprawling i DIRECTIONS
BlockSprawling a NORTH
BlockSprawling b EAST
BlockSprawling c SOUTH
BlockSprawling d WEST
BlockSprawling e UP
BlockSprawling f DOWN
BlockSprawling g PROPERTY_BY_DIRECTION
BlockSprawling h shapeByIndex
BlockSprawling b (LIBlockData;LIBlockAccess;LBlockPosition;)Z propagatesSkylightDown
BlockSprawling b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockSprawling h (LIBlockData;)I getAABBIndex
BlockPotatoes a SHAPE_BY_AGE
BlockPotatoes e ()LIMaterial; getBaseSeedId
BlockPotatoes b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockPowered b_ (LIBlockData;)Z isSignalSource
BlockPoweredRail$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
BlockPoweredRail$1 b $SwitchMap$net$minecraft$world$level$block$Rotation
BlockPoweredRail$1 c $SwitchMap$net$minecraft$world$level$block$Mirror
BlockPressurePlateBinary$1 a $SwitchMap$net$minecraft$world$level$block$PressurePlateBlock$Sensitivity
BlockPumpkin c ()LBlockStem; getStem
BlockPumpkin d ()LBlockStemAttached; getAttachedStem
BlockMinecartTrack$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
BlockMinecartTrack$1 b $SwitchMap$net$minecraft$world$level$block$Rotation
BlockMinecartTrack$1 c $SwitchMap$net$minecraft$world$level$block$Mirror
MinecartTrackLogic a level
MinecartTrackLogic b pos
MinecartTrackLogic c block
MinecartTrackLogic d state
MinecartTrackLogic e isStraight
MinecartTrackLogic f connections
MinecartTrackLogic d ()V removeSoftConnections
MinecartTrackLogic b (LBlockPosition;)LMinecartTrackLogic; getRail
MinecartTrackLogic c (LBlockPosition;)Z hasConnection
MinecartTrackLogic b ()I countPotentialConnections
MinecartTrackLogic b (LMinecartTrackLogic;)Z canConnectTo
MinecartTrackLogic c (LMinecartTrackLogic;)V connectTo
MinecartTrackLogic d (LBlockPosition;)Z hasNeighborRail
MinecartTrackLogic c ()LIBlockData; getState
MinecartTrackLogic$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
BlockRedstoneWire$1 a $SwitchMap$net$minecraft$world$level$block$Rotation
BlockRedstoneWire$1 b $SwitchMap$net$minecraft$world$level$block$Mirror
BlockRedstoneLamp a LIT
BlockRedstoneLamp b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockRedstoneTorch$RedstoneUpdateInfo a pos
BlockRedstoneTorch$RedstoneUpdateInfo b when
BlockRedstoneTorch$RedstoneUpdateInfo b (LBlockRedstoneTorch$RedstoneUpdateInfo;)LBlockPosition; access$100
BlockRedstoneTorchWall b FACING
BlockRedstoneTorchWall c LIT
BlockRedstoneTorchWall h ()Ljava/lang/String; getDescriptionId
BlockRedstoneTorchWall b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
RespawnAnchorBlock a CHARGE
RespawnAnchorBlock b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
RespawnAnchorBlock c_ (LIBlockData;)Z useShapeForLightOcclusion
RootsBlock a SHAPE
RootsBlock b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
RootsBlock c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockRotatable$1 a $SwitchMap$net$minecraft$core$Direction$Axis
BlockRotatable$1 b $SwitchMap$net$minecraft$world$level$block$Rotation
EnumBlockRotation$1 a $SwitchMap$net$minecraft$world$level$block$Rotation
BlockSand a dustColor
BlockSand c (LIBlockData;LIBlockAccess;LBlockPosition;)I getDustColor
BlockScaffolding d STABLE_SHAPE
BlockScaffolding e UNSTABLE_SHAPE
BlockScaffolding f UNSTABLE_SHAPE_BOTTOM
BlockScaffolding g BELOW_BLOCK
BlockScaffolding a DISTANCE
BlockScaffolding b WATERLOGGED
BlockScaffolding c BOTTOM
BlockScaffolding b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockScaffolding a_ (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getInteractionShape
BlockScaffolding b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockScaffolding c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockScaffolding d (LIBlockData;)LFluid; getFluidState
BlockSeaPickle a PICKLES
BlockSeaPickle b WATERLOGGED
BlockSeaPickle c ONE_AABB
BlockSeaPickle d TWO_AABB
BlockSeaPickle e THREE_AABB
BlockSeaPickle f FOUR_AABB
BlockSeaPickle h (LIBlockData;)Z isDead
BlockSeaPickle c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockSeaPickle b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockSeaPickle d (LIBlockData;)LFluid; getFluidState
BlockSeaGrass a SHAPE
BlockSeaGrass b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockSeaGrass c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockSeaGrass d (LIBlockData;)LFluid; getFluidState
BlockTallPlantShearable b HALF
BlockShulkerBox$1 a $SwitchMap$net$minecraft$world$item$DyeColor
BlockSign a WATERLOGGED
BlockSign b SHAPE
BlockSign c type
BlockSign b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockSign aa_ ()Z isPossibleToRespawnInThis
BlockSign d (LIBlockData;)LFluid; getFluidState
BlockSign c ()LBlockPropertyWood; type
IBlockWaterlogged b (LGeneratorAccess;LBlockPosition;LIBlockData;)LFluidType; takeLiquid
BlockSkull a ROTATION
BlockSkull b SHAPE
BlockSkull b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockSkull d (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getOcclusionShape
BlockStepAbstract a TYPE
BlockStepAbstract b WATERLOGGED
BlockStepAbstract c BOTTOM_AABB
BlockStepAbstract d TOP_AABB
BlockStepAbstract c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockStepAbstract b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockStepAbstract d (LIBlockData;)LFluid; getFluidState
BlockStepAbstract$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
BlockStepAbstract$1 b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
BlockSmithingTable a CONTAINER_TITLE
BlockSmithingTable b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockSnow$1 a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
BlockDirtSnow a SNOWY
SoulFireBlock b (LBlock;)Z canSurviveOnBlock
SoulFireBlock e (LIBlockData;)Z canBurn
BlockSlowSand a SHAPE
BlockSlowSand c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockSlowSand e (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getBlockSupportShape
BlockSlowSand b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
SoundEffectType a WOOD
SoundEffectType b GRAVEL
SoundEffectType c GRASS
SoundEffectType d STONE
SoundEffectType e METAL
SoundEffectType f GLASS
SoundEffectType g WOOL
SoundEffectType h SAND
SoundEffectType i SNOW
SoundEffectType j LADDER
SoundEffectType k ANVIL
SoundEffectType l SLIME_BLOCK
SoundEffectType m HONEY_BLOCK
SoundEffectType n WET_GRASS
SoundEffectType o CORAL_BLOCK
SoundEffectType p BAMBOO
SoundEffectType q BAMBOO_SAPLING
SoundEffectType r SCAFFOLDING
SoundEffectType s SWEET_BERRY_BUSH
SoundEffectType t CROP
SoundEffectType u HARD_CROP
SoundEffectType v VINE
SoundEffectType w NETHER_WART
SoundEffectType x LANTERN
SoundEffectType y STEM
SoundEffectType z NYLIUM
SoundEffectType A FUNGUS
SoundEffectType B ROOTS
SoundEffectType C SHROOMLIGHT
SoundEffectType D WEEPING_VINES
SoundEffectType E TWISTING_VINES
SoundEffectType F SOUL_SAND
SoundEffectType G SOUL_SOIL
SoundEffectType H BASALT
SoundEffectType I WART_BLOCK
SoundEffectType J NETHERRACK
SoundEffectType K NETHER_BRICKS
SoundEffectType L NETHER_SPROUTS
SoundEffectType M NETHER_ORE
SoundEffectType N BONE_BLOCK
SoundEffectType O NETHERITE_BLOCK
SoundEffectType P ANCIENT_DEBRIS
SoundEffectType Q volume
SoundEffectType R pitch
SoundEffectType S breakSound
SoundEffectType T stepSound
SoundEffectType U placeSound
SoundEffectType V hitSound
SoundEffectType W fallSound
SoundEffectType b ()F getPitch
SoundEffectType c ()LSoundEffect; getBreakSound
SoundEffectType d ()LSoundEffect; getStepSound
SoundEffectType e ()LSoundEffect; getPlaceSound
SoundEffectType f ()LSoundEffect; getHitSound
SoundEffectType g ()LSoundEffect; getFallSound
BlockMobSpawner b (LIBlockData;)LEnumRenderType; getRenderShape
BlockSponge b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockSponge b (LWorld;LBlockPosition;)Z removeWaterBreadthFirstSearch
BlockDirtSnowSpreadable b (LIBlockData;LIWorldReader;LBlockPosition;)Z canBeGrass
BlockDirtSnowSpreadable c (LIBlockData;LIWorldReader;LBlockPosition;)Z canPropagate
BlockDirtSnowSpreadable b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockStairs$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
BlockStairs$1 b $SwitchMap$net$minecraft$world$level$block$Mirror
BlockStemmed c ()LBlockStem; getStem
BlockStemmed d ()LBlockStemAttached; getAttachedStem
BlockStonecutter c CONTAINER_TITLE
BlockStonecutter a FACING
BlockStonecutter b SHAPE
BlockStonecutter b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockStonecutter b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockStonecutter c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockStonecutter b (LIBlockData;)LEnumRenderType; getRenderShape
BlockStructure a MODE
BlockStructure b (LIBlockData;)LEnumRenderType; getRenderShape
BlockStructure$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
BlockStructureVoid a SHAPE
BlockStructureVoid b (LIBlockData;)LEnumRenderType; getRenderShape
BlockStructureVoid b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockStructureVoid f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockSweetBerryBush a AGE
BlockSweetBerryBush b SAPLING_SHAPE
BlockSweetBerryBush c MID_GROWTH_SHAPE
BlockSweetBerryBush b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockSweetBerryBush a_ (LIBlockData;)Z isRandomlyTicking
BlockSweetBerryBush b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockLongGrass a SHAPE
BlockLongGrass b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockLongGrass Z_ ()LBlockBehaviour$OffsetType; getOffsetType
BlockTallSeaGrass c HALF
BlockTallSeaGrass d SHAPE
BlockTallSeaGrass b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockTallSeaGrass c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockTallSeaGrass d (LIBlockData;)LFluid; getFluidState
TargetBlock a OUTPUT_POWER
TargetBlock b_ (LIBlockData;)Z isSignalSource
TargetBlock b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockTNT a UNSTABLE
BlockTNT b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockTorch d AABB
BlockTorch e flameParticle
BlockTorch b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockTrapdoor$1 a $SwitchMap$net$minecraft$core$Direction
BlockTrapdoor$1 b $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
BlockChestTrapped c ()LStatistic; getOpenChestStat
BlockChestTrapped b_ (LIBlockData;)Z isSignalSource
BlockChestTrapped b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockChestTrapped e ()LTileEntityTypes; lambda$new$0
BlockTripwire$1 a $SwitchMap$net$minecraft$world$level$block$Rotation
BlockTripwire$1 b $SwitchMap$net$minecraft$world$level$block$Mirror
BlockTripwireHook$1 a $SwitchMap$net$minecraft$core$Direction
BlockTurtleEgg c ONE_EGG_AABB
BlockTurtleEgg d MULTIPLE_EGGS_AABB
BlockTurtleEgg a HATCH
BlockTurtleEgg b EGGS
BlockTurtleEgg b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockTurtleEgg b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockTurtleEgg b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
TwistingVines e SHAPE
TwistingVines d ()LBlock; getBodyBlock
TwistingVines h (LIBlockData;)Z canGrowInto
TwistingVinesPlant c ()LGrowingPlantHeadBlock; getHeadBlock
BlockVine$1 a $SwitchMap$net$minecraft$world$level$block$Rotation
BlockVine$1 b $SwitchMap$net$minecraft$world$level$block$Mirror
BlockBannerWall a FACING
BlockBannerWall b SHAPES
BlockBannerWall h ()Ljava/lang/String; getDescriptionId
BlockBannerWall b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockCobbleWall$1 a $SwitchMap$net$minecraft$world$level$block$Rotation
BlockCobbleWall$1 b $SwitchMap$net$minecraft$world$level$block$Mirror
BlockSkullWall a FACING
BlockSkullWall b AABBS
BlockSkullWall h ()Ljava/lang/String; getDescriptionId
BlockSkullWall b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockTorchWall a FACING
BlockTorchWall b AABBS
BlockTorchWall h ()Ljava/lang/String; getDescriptionId
BlockTorchWall b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockTorchWall h (LIBlockData;)LVoxelShape; getShape
BlockWaterLily a AABB
BlockWaterLily b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockWaterLily c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
WeepingVines e SHAPE
WeepingVines d ()LBlock; getBodyBlock
WeepingVines h (LIBlockData;)Z canGrowInto
WeepingVinesPlant c ()LGrowingPlantHeadBlock; getHeadBlock
BlockWetSponge b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockWitherRose c (LIBlockData;LIBlockAccess;LBlockPosition;)Z mayPlaceOn
BlockWitherSkull c witherPatternFull
BlockWitherSkull d witherPatternBase
BlockWitherSkull b (LWorld;LBlockPosition;LItemStack;)Z canSpawnMob
BlockWitherSkull c ()LShapeDetector; getOrCreateWitherFull
BlockWitherSkull d ()LShapeDetector; getOrCreateWitherBase
BlockWitherSkull b (LShapeDetectorBlock;)Z lambda$getOrCreateWitherFull$0
TileEntityFurnace$1 a this$0
EnumBannerPatternType$Builder a patterns
TileEntityBeacon$1 a this$0
TileEntityBeacon$BeaconColorTracker a color
TileEntityBeacon$BeaconColorTracker b height
TileEntityBeacon$BeaconColorTracker b ()[F getColor
TileEntityBeacon$BeaconColorTracker c ()I getHeight
TileEntityBell g lastRingTimestamp
TileEntityBell a ticks
TileEntityBell b shaking
TileEntityBell c clickDirection
TileEntityBell h nearbyEntities
TileEntityBell i resonating
TileEntityBell j resonationTicks
TileEntityBell a_ (II)Z triggerEvent
TileEntityBell ab_ ()V tick
TileEntityBell d ()V playResonateSound
TileEntityBell f ()V updateEntities
TileEntityBell h ()Z areRaidersNearby
TileEntityBell b (LWorld;)V showBellParticles
TileEntityBell b (LEntityLiving;)V glow
TileEntityBlastFurnace g ()LIChatBaseComponent; getDefaultName
TileEntityTypes$Builder a factory
TileEntityTypes$Builder b validBlocks
TileEntityBrewingStand$1 a this$0
TileEntityCommand$1 b this$0
TileEntityCommand$1 d ()LWorldServer; getLevel
TileEntityCommand$1 e ()V onUpdated
TileEntityCommand$1 f ()LVec3D; getPosition
TileEntityCommand$1 h ()LCommandListenerWrapper; createCommandSourceStack
TileEntityComparator a output
TileEntityComparator b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityComparator d ()I getOutputSignal
TileEntityLightDetector ab_ ()V tick
TileEntityDropper g ()LIChatBaseComponent; getDefaultName
TileEntityEnderChest a openness
TileEntityEnderChest b oOpenness
TileEntityEnderChest c openCount
TileEntityEnderChest g tickInterval
TileEntityEnderChest ab_ ()V tick
TileEntityEnderChest a_ (II)Z triggerEvent
TileEntityEnderChest ad_ ()V setRemoved
TileEntityEnderChest d ()V startOpen
TileEntityEnderChest f ()V stopOpen
TileEntityFurnaceFurnace g ()LIChatBaseComponent; getDefaultName
TileEntityJigsaw a attachementType
TileEntityJigsaw b targetPool
TileEntityJigsaw c finalState
TileEntityJigsaw d ()LMinecraftKey; getAttachementType
TileEntityJigsaw f ()LMinecraftKey; getTargetPool
TileEntityJigsaw g ()Ljava/lang/String; getFinalState
TileEntityJigsaw b (LMinecraftKey;)V setTargetPool
TileEntityJigsaw b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityJigsaw b ()LNBTTagCompound; getUpdateTag
TileEntityLectern$1 a this$0
TileEntityLectern$1 Q_ ()I getContainerSize
TileEntityLectern$1 c ()Z isEmpty
TileEntityLectern$1 b (I)LItemStack; removeItemNoUpdate
TileEntityLectern$1 N_ ()I getMaxStackSize
TileEntityLectern$1 e ()V setChanged
TileEntityLectern$1 b (ILItemStack;)Z canPlaceItem
TileEntityLectern$1 P_ ()V clearContent
TileEntityLectern$2 a this$0
TileEntityShulkerBox$1 a $SwitchMap$net$minecraft$world$level$block$entity$ShulkerBoxBlockEntity$AnimationStatus
TileEntityShulkerBox$1 b $SwitchMap$net$minecraft$core$Direction$Axis
TileEntitySmoker g ()LIChatBaseComponent; getDefaultName
TileEntityMobSpawner$1 a this$0
TileEntityMobSpawner$1 b ()LBlockPosition; getPos
TileEntityStructure$1 a $SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
TileEntityChestTrapped h ()V signalOpenCount
BlockPistonMoving a FACING
BlockPistonMoving b TYPE
BlockPistonMoving b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockPistonMoving c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockPiston$1 a $SwitchMap$net$minecraft$core$Direction
BlockPiston$1 b $SwitchMap$net$minecraft$world$level$material$PushReaction
BlockPistonExtension$1 a $SwitchMap$net$minecraft$core$Direction
PistonUtil$1 a $SwitchMap$net$minecraft$core$Direction
TileEntityPiston a movedState
TileEntityPiston b direction
TileEntityPiston c extending
TileEntityPiston g isSourcePiston
TileEntityPiston h NOCLIP
TileEntityPiston i progress
TileEntityPiston j progressO
TileEntityPiston k lastTicked
TileEntityPiston b ()LNBTTagCompound; getUpdateTag
TileEntityPiston d ()Z isExtending
TileEntityPiston f ()LEnumDirection; getDirection
TileEntityPiston h ()Z isSourcePiston
TileEntityPiston b (F)F getXOff
TileEntityPiston c (F)F getYOff
TileEntityPiston d (F)F getZOff
TileEntityPiston e (F)F getExtendedProgress
TileEntityPiston x ()LIBlockData; getCollisionRelatedBlockState
TileEntityPiston f (F)V moveCollidedEntities
TileEntityPiston g (F)V moveStuckEntities
TileEntityPiston y ()Z isStickyForEntities
TileEntityPiston j ()LEnumDirection; getMovementDirection
TileEntityPiston k ()LIBlockData; getMovedState
TileEntityPiston l ()V finalTick
TileEntityPiston ab_ ()V tick
TileEntityPiston b (LNBTTagCompound;)LNBTTagCompound; save
TileEntityPiston m ()J getLastTicked
TileEntityPiston b (LAxisAlignedBB;LEntity;)Z lambda$moveStuckEntities$1
TileEntityPiston z ()LEnumDirection; lambda$static$0
TileEntityPiston$1 a $SwitchMap$net$minecraft$core$Direction$Axis
TileEntityPiston$1 b $SwitchMap$net$minecraft$core$Direction
BlockDataAbstract$1 apply (Ljava/lang/Object;)Ljava/lang/Object; apply
BlockBehaviour ar UPDATE_SHAPE_ORDER
BlockBehaviour as material
BlockBehaviour at hasCollision
BlockBehaviour au explosionResistance
BlockBehaviour av isRandomlyTicking
BlockBehaviour aw soundType
BlockBehaviour ax friction
BlockBehaviour ay speedFactor
BlockBehaviour az jumpFactor
BlockBehaviour aA dynamicShape
BlockBehaviour aB properties
BlockBehaviour aC drops
BlockBehaviour b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockBehaviour b (LIBlockData;)LEnumRenderType; getRenderShape
BlockBehaviour c_ (LIBlockData;)Z useShapeForLightOcclusion
BlockBehaviour b_ (LIBlockData;)Z isSignalSource
BlockBehaviour f (LIBlockData;)LEnumPistonReaction; getPistonPushReaction
BlockBehaviour d (LIBlockData;)LFluid; getFluidState
BlockBehaviour Z_ ()LBlockBehaviour$OffsetType; getOffsetType
BlockBehaviour d (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getOcclusionShape
BlockBehaviour e (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getBlockSupportShape
BlockBehaviour a_ (LIBlockData;LIBlockAccess;LBlockPosition;)LVoxelShape; getInteractionShape
BlockBehaviour f (LIBlockData;LIBlockAccess;LBlockPosition;)I getLightBlock
BlockBehaviour b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockBehaviour b (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getShape
BlockBehaviour c (LIBlockData;LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockBehaviour b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockBehaviour b (LIBlockData;LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockBehaviour q ()Z isEntityBlock
BlockBehaviour r ()LMinecraftKey; getLootTable
BlockBehaviour i ()LItem; asItem
BlockBehaviour p ()LBlock; asBlock
BlockBehaviour s ()Ljava/util/function/Function; materialColor
BlockBehaviour$1 a $SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
BlockBehaviour$BlockStateBase d lightEmission
BlockBehaviour$BlockStateBase e useShapeForLightOcclusion
BlockBehaviour$BlockStateBase f isAir
BlockBehaviour$BlockStateBase g material
BlockBehaviour$BlockStateBase h materialColor
BlockBehaviour$BlockStateBase i destroySpeed
BlockBehaviour$BlockStateBase j canOcclude
BlockBehaviour$BlockStateBase k isRedstoneConductor
BlockBehaviour$BlockStateBase l isSuffocating
BlockBehaviour$BlockStateBase m isViewBlocking
BlockBehaviour$BlockStateBase n hasPostProcess
BlockBehaviour$BlockStateBase o emissiveRendering
BlockBehaviour$BlockStateBase b cache
BlockBehaviour$BlockStateBase c ()V initCache
BlockBehaviour$BlockStateBase d ()LBlock; getBlock
BlockBehaviour$BlockStateBase e ()LMaterial; getMaterial
BlockBehaviour$BlockStateBase b (LIBlockAccess;LBlockPosition;)I getLightBlock
BlockBehaviour$BlockStateBase c (LIBlockAccess;LBlockPosition;)LVoxelShape; getOcclusionShape
BlockBehaviour$BlockStateBase f ()Z hasLargeCollisionShape
BlockBehaviour$BlockStateBase g ()Z useShapeForLightOcclusion
BlockBehaviour$BlockStateBase h ()I getLightEmission
BlockBehaviour$BlockStateBase i ()Z isAir
BlockBehaviour$BlockStateBase d (LIBlockAccess;LBlockPosition;)LMaterialMapColor; getMapColor
BlockBehaviour$BlockStateBase j ()LEnumRenderType; getRenderShape
BlockBehaviour$BlockStateBase e (LIBlockAccess;LBlockPosition;)Z emissiveRendering
BlockBehaviour$BlockStateBase f (LIBlockAccess;LBlockPosition;)F getShadeBrightness
BlockBehaviour$BlockStateBase g (LIBlockAccess;LBlockPosition;)Z isRedstoneConductor
BlockBehaviour$BlockStateBase k ()Z isSignalSource
BlockBehaviour$BlockStateBase b (LIBlockAccess;LBlockPosition;LEnumDirection;)I getSignal
BlockBehaviour$BlockStateBase l ()Z hasAnalogOutputSignal
BlockBehaviour$BlockStateBase h (LIBlockAccess;LBlockPosition;)F getDestroySpeed
BlockBehaviour$BlockStateBase c (LIBlockAccess;LBlockPosition;LEnumDirection;)I getDirectSignal
BlockBehaviour$BlockStateBase m ()LEnumPistonReaction; getPistonPushReaction
BlockBehaviour$BlockStateBase i (LIBlockAccess;LBlockPosition;)Z isSolidRender
BlockBehaviour$BlockStateBase n ()Z canOcclude
BlockBehaviour$BlockStateBase j (LIBlockAccess;LBlockPosition;)LVoxelShape; getShape
BlockBehaviour$BlockStateBase k (LIBlockAccess;LBlockPosition;)LVoxelShape; getCollisionShape
BlockBehaviour$BlockStateBase b (LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getCollisionShape
BlockBehaviour$BlockStateBase l (LIBlockAccess;LBlockPosition;)LVoxelShape; getBlockSupportShape
BlockBehaviour$BlockStateBase c (LIBlockAccess;LBlockPosition;LVoxelShapeCollision;)LVoxelShape; getVisualShape
BlockBehaviour$BlockStateBase m (LIBlockAccess;LBlockPosition;)LVoxelShape; getInteractionShape
BlockBehaviour$BlockStateBase n (LIBlockAccess;LBlockPosition;)LVec3D; getOffset
BlockBehaviour$BlockStateBase b (LGeneratorAccess;LBlockPosition;I)V updateIndirectNeighbourShapes
BlockBehaviour$BlockStateBase b (LWorld;LBlockPosition;LIBlockData;Z)V onRemove
BlockBehaviour$BlockStateBase b (LWorldServer;LBlockPosition;Ljava/util/Random;)V randomTick
BlockBehaviour$BlockStateBase o (LIBlockAccess;LBlockPosition;)Z isSuffocating
BlockBehaviour$BlockStateBase p (LIBlockAccess;LBlockPosition;)Z isViewBlocking
BlockBehaviour$BlockStateBase q (LIBlockAccess;LBlockPosition;)Z hasPostProcess
BlockBehaviour$BlockStateBase b (LWorld;LBlockPosition;)LITileInventory; getMenuProvider
BlockBehaviour$BlockStateBase o ()LFluid; getFluidState
BlockBehaviour$BlockStateBase p ()Z isRandomlyTicking
BlockBehaviour$BlockStateBase q ()LSoundEffectType; getSoundType
BlockBehaviour$BlockStateBase d (LIBlockAccess;LBlockPosition;LEnumDirection;)Z isFaceSturdy
BlockBehaviour$BlockStateBase r (LIBlockAccess;LBlockPosition;)Z isCollisionShapeFullBlock
BlockBehaviour$BlockStateBase r ()LIBlockData; asState
BlockBehaviour$BlockStateBase$Cache f DIRECTIONS
BlockBehaviour$BlockStateBase$Cache a solidRender
BlockBehaviour$BlockStateBase$Cache g propagatesSkylightDown
BlockBehaviour$BlockStateBase$Cache h lightBlock
BlockBehaviour$BlockStateBase$Cache i occlusionShapes
BlockBehaviour$BlockStateBase$Cache b collisionShape
BlockBehaviour$BlockStateBase$Cache c largeCollisionShape
BlockBehaviour$BlockStateBase$Cache d isFaceSturdy
BlockBehaviour$BlockStateBase$Cache e isCollisionShapeFullBlock
BlockBehaviour$BlockStateBase$Cache b (LBlockBehaviour$BlockStateBase$Cache;)I access$2300
BlockBehaviour$BlockStateBase$Cache c (LBlockBehaviour$BlockStateBase$Cache;)[LVoxelShape; access$2400
BlockBehaviour$OffsetType a NONE
BlockBehaviour$OffsetType b XZ
BlockBehaviour$OffsetType c XYZ
BlockBehaviour$OffsetType d $VALUES
BlockBehaviour$OffsetType values ()[LBlockBehaviour$OffsetType; values
BlockBehaviour$OffsetType valueOf (Ljava/lang/String;)LBlockBehaviour$OffsetType; valueOf
BlockBehaviour$Properties a material
BlockBehaviour$Properties b materialColor
BlockBehaviour$Properties c hasCollision
BlockBehaviour$Properties d soundType
BlockBehaviour$Properties e lightEmission
BlockBehaviour$Properties f explosionResistance
BlockBehaviour$Properties g destroyTime
BlockBehaviour$Properties h isRandomlyTicking
BlockBehaviour$Properties i friction
BlockBehaviour$Properties j speedFactor
BlockBehaviour$Properties k jumpFactor
BlockBehaviour$Properties l drops
BlockBehaviour$Properties m canOcclude
BlockBehaviour$Properties n isAir
BlockBehaviour$Properties o isValidSpawn
BlockBehaviour$Properties p isRedstoneConductor
BlockBehaviour$Properties q isSuffocating
BlockBehaviour$Properties r isViewBlocking
BlockBehaviour$Properties s hasPostProcess
BlockBehaviour$Properties t emissiveRendering
BlockBehaviour$Properties u dynamicShape
BlockBehaviour$Properties b ()LBlockBehaviour$Properties; noOcclusion
BlockBehaviour$Properties b (F)LBlockBehaviour$Properties; speedFactor
BlockBehaviour$Properties c (F)LBlockBehaviour$Properties; jumpFactor
BlockBehaviour$Properties c ()LBlockBehaviour$Properties; instabreak
BlockBehaviour$Properties d (F)LBlockBehaviour$Properties; strength
BlockBehaviour$Properties d ()LBlockBehaviour$Properties; randomTicks
BlockBehaviour$Properties e ()LBlockBehaviour$Properties; dynamicShape
BlockBehaviour$Properties f ()LBlockBehaviour$Properties; noDrops
BlockBehaviour$Properties g ()LBlockBehaviour$Properties; air
BlockBehaviour$Properties b (LBlockBehaviour$StatePredicate;)LBlockBehaviour$Properties; isSuffocating
BlockBehaviour$Properties c (LBlockBehaviour$StatePredicate;)LBlockBehaviour$Properties; isViewBlocking
BlockBehaviour$Properties d (LBlockBehaviour$StatePredicate;)LBlockBehaviour$Properties; hasPostProcess
BlockBehaviour$Properties e (LBlockBehaviour$StatePredicate;)LBlockBehaviour$Properties; emissiveRendering
BlockBehaviour$Properties b (LIBlockData;LIBlockAccess;LBlockPosition;)Z lambda$new$4
BlockBehaviour$Properties c (LIBlockData;LIBlockAccess;LBlockPosition;)Z lambda$new$3
BlockBehaviour$Properties d (LIBlockData;LIBlockAccess;LBlockPosition;)Z lambda$new$2
BlockBehaviour$Properties b (LBlockBehaviour$Properties;)Z access$100
BlockBehaviour$Properties c (LBlockBehaviour$Properties;)LMinecraftKey; access$200
BlockBehaviour$Properties d (LBlockBehaviour$Properties;)F access$300
BlockBehaviour$Properties e (LBlockBehaviour$Properties;)Z access$400
BlockBehaviour$Properties f (LBlockBehaviour$Properties;)LSoundEffectType; access$500
BlockBehaviour$Properties g (LBlockBehaviour$Properties;)F access$600
BlockBehaviour$Properties h (LBlockBehaviour$Properties;)F access$700
BlockBehaviour$Properties i (LBlockBehaviour$Properties;)F access$800
BlockBehaviour$Properties j (LBlockBehaviour$Properties;)Z access$900
BlockBehaviour$Properties k (LBlockBehaviour$Properties;)Ljava/util/function/Function; access$1000
BlockBehaviour$Properties l (LBlockBehaviour$Properties;)Ljava/util/function/ToIntFunction; access$1100
BlockBehaviour$Properties m (LBlockBehaviour$Properties;)Z access$1200
BlockBehaviour$Properties n (LBlockBehaviour$Properties;)F access$1300
BlockBehaviour$Properties o (LBlockBehaviour$Properties;)Z access$1400
BlockBehaviour$Properties p (LBlockBehaviour$Properties;)LBlockBehaviour$StatePredicate; access$1500
BlockBehaviour$Properties q (LBlockBehaviour$Properties;)LBlockBehaviour$StatePredicate; access$1600
BlockBehaviour$Properties r (LBlockBehaviour$Properties;)LBlockBehaviour$StatePredicate; access$1700
BlockBehaviour$Properties s (LBlockBehaviour$Properties;)LBlockBehaviour$StatePredicate; access$1800
BlockBehaviour$Properties t (LBlockBehaviour$Properties;)LBlockBehaviour$StatePredicate; access$1900
BlockBehaviour$Properties u (LBlockBehaviour$Properties;)LBlockBehaviour$StateArgumentPredicate; access$2100
BlockBehaviour$StateArgumentPredicate test (LIBlockData;LIBlockAccess;LBlockPosition;Ljava/lang/Object;)Z test
BlockBehaviour$StatePredicate test (LIBlockData;LIBlockAccess;LBlockPosition;)Z test
BlockStateList$Builder a owner
BlockStateList$Builder b properties
BlockStateList$Factory create (Ljava/lang/Object;Lcom/google/common/collect/ImmutableMap;)LBlockDataAbstract; create
ShapeDetector a pattern
ShapeDetector b depth
ShapeDetector c height
ShapeDetector d width
ShapeDetector b ()I getHeight
ShapeDetector c ()I getWidth
ShapeDetector d ()[[[Ljava/util/function/Predicate; getPattern
ShapeDetector$BlockLoader a level
ShapeDetector$BlockLoader b loadChunks
ShapeDetector$BlockLoader load (Ljava/lang/Object;)Ljava/lang/Object; load
ShapeDetectorBuilder a COMMA_JOINED
ShapeDetectorBuilder b pattern
ShapeDetectorBuilder c lookup
ShapeDetectorBuilder d height
ShapeDetectorBuilder e width
ShapeDetectorBuilder b ()LShapeDetector; build
ShapeDetectorBuilder c ()[[[Ljava/util/function/Predicate; createPattern
ShapeDetectorBuilder d ()V ensureAllCharactersMatched
MaterialPredicate a AIR
MaterialPredicate b material
MaterialPredicate test (Ljava/lang/Object;)Z test
MaterialPredicate$1 test (Ljava/lang/Object;)Z test
BlockPredicate a block
BlockPredicate test (Ljava/lang/Object;)Z test
BlockStatePredicate a ANY
BlockStatePredicate b definition
BlockStatePredicate c properties
BlockStatePredicate test (Ljava/lang/Object;)Z test
BlockStatePredicate b (LIBlockData;)Z lambda$static$0
BlockState a clazz
BlockState b name
BlockState c hashCode
BlockState b ()Ljava/lang/Class; getValueClass
BlockState toString ()Ljava/lang/String; toString
BlockState equals (Ljava/lang/Object;)Z equals
BlockState hashCode ()I hashCode
BlockState c ()I generateHashCode
BlockProperties a ATTACHED
BlockProperties b BOTTOM
BlockProperties c CONDITIONAL
BlockProperties d DISARMED
BlockProperties e DRAG
BlockProperties f ENABLED
BlockProperties g EXTENDED
BlockProperties h EYE
BlockProperties i FALLING
BlockProperties j HANGING
BlockProperties k HAS_BOTTLE_0
BlockProperties l HAS_BOTTLE_1
BlockProperties m HAS_BOTTLE_2
BlockProperties n HAS_RECORD
BlockProperties o HAS_BOOK
BlockProperties p INVERTED
BlockProperties q IN_WALL
BlockProperties r LIT
BlockProperties s LOCKED
BlockProperties t OCCUPIED
BlockProperties u OPEN
BlockProperties v PERSISTENT
BlockProperties w POWERED
BlockProperties x SHORT
BlockProperties y SIGNAL_FIRE
BlockProperties z SNOWY
BlockProperties A TRIGGERED
BlockProperties B UNSTABLE
BlockProperties C WATERLOGGED
BlockProperties D VINE_END
BlockProperties E HORIZONTAL_AXIS
BlockProperties F AXIS
BlockProperties G UP
BlockProperties H DOWN
BlockProperties I NORTH
BlockProperties J EAST
BlockProperties K SOUTH
BlockProperties L WEST
BlockProperties M FACING
BlockProperties N FACING_HOPPER
BlockProperties O HORIZONTAL_FACING
BlockProperties P ATTACH_FACE
BlockProperties Q BELL_ATTACHMENT
BlockProperties R EAST_WALL
BlockProperties S NORTH_WALL
BlockProperties T SOUTH_WALL
BlockProperties U WEST_WALL
BlockProperties V EAST_REDSTONE
BlockProperties W NORTH_REDSTONE
BlockProperties X SOUTH_REDSTONE
BlockProperties Y WEST_REDSTONE
BlockProperties Z DOUBLE_BLOCK_HALF
BlockProperties aa HALF
BlockProperties ab RAIL_SHAPE
BlockProperties ac RAIL_SHAPE_STRAIGHT
BlockProperties ad AGE_1
BlockProperties ae AGE_2
BlockProperties af AGE_3
BlockProperties ag AGE_5
BlockProperties ah AGE_7
BlockProperties ai AGE_15
BlockProperties aj AGE_25
BlockProperties ak BITES
BlockProperties al DELAY
BlockProperties am DISTANCE
BlockProperties an EGGS
BlockProperties ao HATCH
BlockProperties ap LAYERS
BlockProperties aq LEVEL_CAULDRON
BlockProperties ar LEVEL_COMPOSTER
BlockProperties as LEVEL_FLOWING
BlockProperties at LEVEL_HONEY
BlockProperties au LEVEL
BlockProperties av MOISTURE
BlockProperties aw NOTE
BlockProperties ax PICKLES
BlockProperties ay POWER
BlockProperties az STAGE
BlockProperties aA STABILITY_DISTANCE
BlockProperties aB RESPAWN_ANCHOR_CHARGES
BlockProperties aC ROTATION_16
BlockProperties aD BED_PART
BlockProperties aE CHEST_TYPE
BlockProperties aF MODE_COMPARATOR
BlockProperties aG DOOR_HINGE
BlockProperties aH NOTEBLOCK_INSTRUMENT
BlockProperties aI PISTON_TYPE
BlockProperties aJ SLAB_TYPE
BlockProperties aK STAIRS_SHAPE
BlockProperties aL STRUCTUREBLOCK_MODE
BlockProperties aM BAMBOO_LEAVES
WallSide a NONE
WallSide b LOW
WallSide c TALL
WallSide d name
WallSide e $VALUES
WallSide values ()[LWallSide; values
WallSide valueOf (Ljava/lang/String;)LWallSide; valueOf
WallSide toString ()Ljava/lang/String; toString
WallSide o ()Ljava/lang/String; getSerializedName
BlockPropertyWood i VALUES
BlockPropertyWood a OAK
BlockPropertyWood b SPRUCE
BlockPropertyWood c BIRCH
BlockPropertyWood d ACACIA
BlockPropertyWood e JUNGLE
BlockPropertyWood f DARK_OAK
BlockPropertyWood g CRIMSON
BlockPropertyWood h WARPED
BlockPropertyWood j name
BlockPropertyWood b ()Ljava/lang/String; name
IWorldBorderListener b (LWorldBorder;I)V onBorderSetWarningBlocks
IWorldBorderListener b (LWorldBorder;D)V onBorderSetDamagePerBlock
IWorldBorderListener c (LWorldBorder;D)V onBorderSetDamageSafeZOne
IWorldBorderListener$DelegateBorderChangeListener a worldBorder
IWorldBorderListener$DelegateBorderChangeListener b (LWorldBorder;I)V onBorderSetWarningBlocks
IWorldBorderListener$DelegateBorderChangeListener b (LWorldBorder;D)V onBorderSetDamagePerBlock
IWorldBorderListener$DelegateBorderChangeListener c (LWorldBorder;D)V onBorderSetDamageSafeZOne
BorderStatus a GROWING
BorderStatus b SHRINKING
BorderStatus c STATIONARY
BorderStatus d color
BorderStatus e $VALUES
BorderStatus values ()[LBorderStatus; values
BorderStatus valueOf (Ljava/lang/String;)LBorderStatus; valueOf
WorldBorder$BorderExtent b ()D getMaxX
WorldBorder$BorderExtent c ()D getMinZ
WorldBorder$BorderExtent d ()D getMaxZ
WorldBorder$BorderExtent e ()D getSize
WorldBorder$BorderExtent f ()D getLerpSpeed
WorldBorder$BorderExtent g ()J getLerpRemainingTime
WorldBorder$BorderExtent h ()D getLerpTarget
WorldBorder$BorderExtent i ()LBorderStatus; getStatus
WorldBorder$BorderExtent j ()V onAbsoluteMaxSizeChange
WorldBorder$BorderExtent k ()V onCenterChange
WorldBorder$BorderExtent l ()LWorldBorder$BorderExtent; update
WorldBorder$BorderExtent m ()LVoxelShape; getCollisionShape
WorldBorder$MovingBorderExtent b from
WorldBorder$MovingBorderExtent c to
WorldBorder$MovingBorderExtent d lerpEnd
WorldBorder$MovingBorderExtent e lerpBegin
WorldBorder$MovingBorderExtent f lerpDuration
WorldBorder$MovingBorderExtent a this$0
WorldBorder$MovingBorderExtent c ()D getMinZ
WorldBorder$MovingBorderExtent b ()D getMaxX
WorldBorder$MovingBorderExtent d ()D getMaxZ
WorldBorder$MovingBorderExtent e ()D getSize
WorldBorder$MovingBorderExtent f ()D getLerpSpeed
WorldBorder$MovingBorderExtent g ()J getLerpRemainingTime
WorldBorder$MovingBorderExtent h ()D getLerpTarget
WorldBorder$MovingBorderExtent i ()LBorderStatus; getStatus
WorldBorder$MovingBorderExtent k ()V onCenterChange
WorldBorder$MovingBorderExtent j ()V onAbsoluteMaxSizeChange
WorldBorder$MovingBorderExtent l ()LWorldBorder$BorderExtent; update
WorldBorder$MovingBorderExtent m ()LVoxelShape; getCollisionShape
WorldBorder$StaticBorderExtent b size
WorldBorder$StaticBorderExtent c minX
WorldBorder$StaticBorderExtent d minZ
WorldBorder$StaticBorderExtent e maxX
WorldBorder$StaticBorderExtent f maxZ
WorldBorder$StaticBorderExtent g shape
WorldBorder$StaticBorderExtent a this$0
WorldBorder$StaticBorderExtent b ()D getMaxX
WorldBorder$StaticBorderExtent c ()D getMinZ
WorldBorder$StaticBorderExtent d ()D getMaxZ
WorldBorder$StaticBorderExtent e ()D getSize
WorldBorder$StaticBorderExtent i ()LBorderStatus; getStatus
WorldBorder$StaticBorderExtent f ()D getLerpSpeed
WorldBorder$StaticBorderExtent g ()J getLerpRemainingTime
WorldBorder$StaticBorderExtent h ()D getLerpTarget
WorldBorder$StaticBorderExtent n ()V updateBox
WorldBorder$StaticBorderExtent j ()V onAbsoluteMaxSizeChange
WorldBorder$StaticBorderExtent k ()V onCenterChange
WorldBorder$StaticBorderExtent l ()LWorldBorder$BorderExtent; update
WorldBorder$StaticBorderExtent m ()LVoxelShape; getCollisionShape
BiomeStorage d LOGGER
BiomeStorage e WIDTH_BITS
BiomeStorage f HEIGHT_BITS
BiomeStorage a BIOMES_SIZE
BiomeStorage b HORIZONTAL_MASK
BiomeStorage c VERTICAL_MASK
BiomeStorage g biomes
BiomeStorage b ()LBiomeStorage; copy
BiomeStorage b (III)LBiomeBase; getNoiseBiome
ChunkGeneratorFactory create (LGeneratorAccess;LWorldChunkManager;LGeneratorSettingsDefault;)LChunkGenerator; create
ChunkGeneratorType a SURFACE
ChunkGeneratorType b CAVES
ChunkGeneratorType c FLOATING_ISLANDS
ChunkGeneratorType d DEBUG
ChunkGeneratorType e FLAT
ChunkGeneratorType f factory
ChunkGeneratorType g isPublic
ChunkGeneratorType h settingsFactory
ChunkGeneratorType create (LGeneratorAccess;LWorldChunkManager;LGeneratorSettingsDefault;)LChunkGenerator; create
ChunkGeneratorType b ()Z isPublic
ChunkStatus$GenerationTask doWork (LChunkStatus;LWorldServer;LChunkGenerator;LDefinedStructureManager;LLightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; doWork
ChunkStatus$LoadingTask doWork (LChunkStatus;LWorldServer;LDefinedStructureManager;LLightEngineThreaded;Ljava/util/function/Function;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; doWork
ChunkStatus$SimpleGenerationTask doWork (LChunkStatus;LWorldServer;LChunkGenerator;LDefinedStructureManager;LLightEngineThreaded;Ljava/util/function/Function;Ljava/util/List;LIChunkAccess;)Ljava/util/concurrent/CompletableFuture; doWork
ChunkStatus$SimpleGenerationTask doWork (LWorldServer;LChunkGenerator;Ljava/util/List;LIChunkAccess;)V doWork
ChunkEmpty b BIOMES
ChunkEmpty d_ (LBlockPosition;)LIBlockData; getBlockState
ChunkEmpty b (LBlockPosition;)LFluid; getFluidState
ChunkEmpty g (LBlockPosition;)I getLightBlock
ChunkEmpty e ()LLightEngine; getLightEngine
ChunkEmpty h (LBlockPosition;)I getLightEmission
ChunkEmpty b (LEntity;)V removeEntity
ChunkEmpty d (LBlockPosition;)V removeBlockEntity
ChunkEmpty s ()V markUnsaved
ChunkEmpty t ()Z isEmpty
ChunkEmpty u ()LPlayerChunk$State; getFullStatus
IStructureAccess b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
IStructureAccess v ()Ljava/util/Map; getAllReferences
IStructureAccess b (Ljava/util/Map;)V setAllReferences
DataPaletteGlobal a registry
DataPaletteGlobal b defaultValue
DataPaletteGlobal b (Ljava/lang/Object;)Z maybeHas
DataPaletteGlobal b (LPacketDataSerializer;)V write
DataPaletteGlobal b ()I getSize
DataPaletteHash a registry
DataPaletteHash b values
DataPaletteHash c resizeHandler
DataPaletteHash d reader
DataPaletteHash e writer
DataPaletteHash f bits
DataPaletteHash b (Ljava/lang/Object;)Z maybeHas
DataPaletteHash b (LPacketDataSerializer;)V write
DataPaletteHash b ()I getSize
DataPaletteHash b (LNBTTagList;)V write
ProtoChunkExtension a wrapped
ProtoChunkExtension c (LBlockPosition;)LTileEntity; getBlockEntity
ProtoChunkExtension d_ (LBlockPosition;)LIBlockData; getBlockState
ProtoChunkExtension b (LBlockPosition;)LFluid; getFluidState
ProtoChunkExtension G ()I getMaxLightLevel
ProtoChunkExtension d ()[LChunkSection; getSections
ProtoChunkExtension e ()LLightEngine; getLightEngine
ProtoChunkExtension c (LHeightMap$Type;)LHeightMap$Type; fixType
ProtoChunkExtension b (LHeightMap$Type;)LBlockPosition; getHeighestPosition
ProtoChunkExtension g ()LChunkCoordIntPair; getPos
ProtoChunkExtension h ()Ljava/util/Map; getAllStarts
ProtoChunkExtension b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
ProtoChunkExtension v ()Ljava/util/Map; getAllReferences
ProtoChunkExtension b (Ljava/util/Map;)V setAllReferences
ProtoChunkExtension i ()LBiomeStorage; getBiomes
ProtoChunkExtension j ()Z isUnsaved
ProtoChunkExtension k ()LChunkStatus; getStatus
ProtoChunkExtension d (LBlockPosition;)V removeBlockEntity
ProtoChunkExtension e (LBlockPosition;)V markPosForPostprocessing
ProtoChunkExtension f (LBlockPosition;)LNBTTagCompound; getBlockEntityNbt
ProtoChunkExtension i (LBlockPosition;)LNBTTagCompound; getBlockEntityNbtForSaving
ProtoChunkExtension m ()Ljava/util/stream/Stream; getLights
ProtoChunkExtension s ()LProtoChunkTickList; getBlockTicks
ProtoChunkExtension t ()LProtoChunkTickList; getLiquidTicks
ProtoChunkExtension u ()LChunk; getWrapped
ProtoChunkExtension r ()Z isLightCorrect
ProtoChunkExtension b (Z)V setLightCorrect
ProtoChunkExtension o ()LTickList; getLiquidTicks
ProtoChunkExtension n ()LTickList; getBlockTicks
DataPaletteLinear a registry
DataPaletteLinear b values
DataPaletteLinear c resizeHandler
DataPaletteLinear d reader
DataPaletteLinear e bits
DataPaletteLinear f size
DataPaletteLinear b (Ljava/lang/Object;)Z maybeHas
DataPaletteLinear b (LPacketDataSerializer;)V write
DataPaletteLinear b ()I getSize
OldNibbleArray a data
OldNibbleArray b depthBits
OldNibbleArray c depthBitsPlusFour
DataPalette b (Ljava/lang/Object;)Z maybeHas
DataPalette b (LPacketDataSerializer;)V write
DataPalette b ()I getSize
DataPaletteExpandable onResize (ILjava/lang/Object;)I onResize
DataPaletteBlock$CountConsumer accept (Ljava/lang/Object;I)V accept
ProtoChunk a LOGGER
ProtoChunk b chunkPos
ProtoChunk c isDirty
ProtoChunk d biomes
ProtoChunk e lightEngine
ProtoChunk f heightmaps
ProtoChunk g status
ProtoChunk h blockEntities
ProtoChunk i blockEntityNbts
ProtoChunk j sections
ProtoChunk k entities
ProtoChunk l lights
ProtoChunk m postProcessing
ProtoChunk n structureStarts
ProtoChunk o structuresRefences
ProtoChunk p upgradeData
ProtoChunk q blockTicks
ProtoChunk r liquidTicks
ProtoChunk s inhabitedTime
ProtoChunk t carvingMasks
ProtoChunk u isLightCorrect
ProtoChunk d_ (LBlockPosition;)LIBlockData; getBlockState
ProtoChunk b (LBlockPosition;)LFluid; getFluidState
ProtoChunk m ()Ljava/util/stream/Stream; getLights
ProtoChunk w ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPackedLights
ProtoChunk b (SI)V addLight
ProtoChunk j (LBlockPosition;)V addLight
ProtoChunk c ()Ljava/util/Set; getBlockEntitiesPos
ProtoChunk c (LBlockPosition;)LTileEntity; getBlockEntity
ProtoChunk x ()Ljava/util/Map; getBlockEntities
ProtoChunk b (LNBTTagCompound;)V addEntity
ProtoChunk y ()Ljava/util/List; getEntities
ProtoChunk i ()LBiomeStorage; getBiomes
ProtoChunk j ()Z isUnsaved
ProtoChunk k ()LChunkStatus; getStatus
ProtoChunk d ()[LChunkSection; getSections
ProtoChunk e ()LLightEngine; getLightEngine
ProtoChunk f ()Ljava/util/Collection; getHeightmaps
ProtoChunk b (LHeightMap$Type;)LBlockPosition; getHeighestPosition
ProtoChunk g ()LChunkCoordIntPair; getPos
ProtoChunk h ()Ljava/util/Map; getAllStarts
ProtoChunk b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; getReferencesForFeature
ProtoChunk v ()Ljava/util/Map; getAllReferences
ProtoChunk b (Ljava/util/Map;)V setAllReferences
ProtoChunk k (LBlockPosition;)S packOffsetCoordinates
ProtoChunk e (LBlockPosition;)V markPosForPostprocessing
ProtoChunk l ()[Lit/unimi/dsi/fastutil/shorts/ShortList; getPostProcessing
ProtoChunk s ()LProtoChunkTickList; getBlockTicks
ProtoChunk t ()LProtoChunkTickList; getLiquidTicks
ProtoChunk p ()LChunkConverter; getUpgradeData
ProtoChunk b (J)V setInhabitedTime
ProtoChunk q ()J getInhabitedTime
ProtoChunk z ()Ljava/util/Map; getBlockEntityNbts
ProtoChunk f (LBlockPosition;)LNBTTagCompound; getBlockEntityNbt
ProtoChunk i (LBlockPosition;)LNBTTagCompound; getBlockEntityNbtForSaving
ProtoChunk d (LBlockPosition;)V removeBlockEntity
ProtoChunk r ()Z isLightCorrect
ProtoChunk b (Z)V setLightCorrect
ProtoChunk o ()LTickList; getLiquidTicks
ProtoChunk n ()LTickList; getBlockTicks
ProtoChunk b (LWorldGenStage$Features;)Ljava/util/BitSet; lambda$getCarvingMask$5
ProtoChunk c (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$addReferenceForFeature$4
ProtoChunk d (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/LongSet; lambda$getReferencesForFeature$3
ProtoChunk c (LHeightMap$Type;)LHeightMap; lambda$getOrCreateHeightmapUnprimed$2
ProtoChunkTickList a ignore
ProtoChunkTickList b chunkPos
ProtoChunkTickList c toBeTicked
ProtoChunkTickList b ()LNBTTagList; save
ProtoChunkTickList b (LBlockPosition;Ljava/lang/Object;)Z willTickThisTick
ChunkConverter b LOGGER
ChunkConverter a EMPTY
ChunkConverter c DIRECTIONS
ChunkConverter d sides
ChunkConverter e index
ChunkConverter f MAP
ChunkConverter g CHUNKY_FIXERS
ChunkConverter b (LChunk;)V upgradeInside
ChunkConverter b ()LNBTTagCompound; write
ChunkConverter c ()Ljava/util/Map; access$200
ChunkConverter d ()Ljava/util/Set; access$300
ChunkConverter$BlockFixers$4 g queue
IOWorker a LOGGER
IOWorker b thread
IOWorker c shutdownRequested
IOWorker d inbox
IOWorker e storage
IOWorker f pendingWrites
IOWorker g running
IOWorker h shutdownListener
IOWorker b ()Ljava/util/concurrent/CompletableFuture; shutdown
IOWorker c ()V waitForQueueNonEmpty
IOWorker d ()V loop
IOWorker e ()Z storePendingChunk
IOWorker f ()V storeRemainingPendingChunks
IOWorker g ()V closeStorage
IOWorker h ()Z processInbox
IOWorker close ()V close
IOWorker b (Ljava/util/concurrent/CompletableFuture;)V lambda$null$11
IOWorker c (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/Runnable; lambda$shutdown$7
IOWorker d (Ljava/util/concurrent/CompletableFuture;)V lambda$null$6
IOWorker b (LChunkCoordIntPair;Ljava/util/concurrent/CompletableFuture;)V lambda$null$4
IOWorker b (LChunkCoordIntPair;LNBTTagCompound;Ljava/util/concurrent/CompletableFuture;)V lambda$null$2
IOWorker b (LChunkCoordIntPair;)LIOWorker$PendingStore; lambda$null$0
IOWorker$PendingStore a data
IOWorker$PendingStore b result
IOWorker$PendingStore b (LIOWorker$PendingStore;)Ljava/util/concurrent/CompletableFuture; access$100
OldChunkLoader$OldChunk a lastUpdated
OldChunkLoader$OldChunk b terrainPopulated
OldChunkLoader$OldChunk c heightmap
OldChunkLoader$OldChunk d blockLight
OldChunkLoader$OldChunk e skyLight
OldChunkLoader$OldChunk f data
OldChunkLoader$OldChunk g blocks
OldChunkLoader$OldChunk h entities
OldChunkLoader$OldChunk i blockEntities
OldChunkLoader$OldChunk j blockTicks
OldChunkLoader$OldChunk k x
OldChunkLoader$OldChunk l z
RegionFileBitSet a used
RegionFileBitSet b (II)V free
RegionFile$ChunkBuffer b pos
RegionFile$ChunkBuffer a this$0
RegionFile$ChunkBuffer close ()V close
RegionFile$CommitOp run ()V run
RegionFileCompression d VERSIONS
RegionFileCompression a VERSION_GZIP
RegionFileCompression b VERSION_DEFLATE
RegionFileCompression c VERSION_NONE
RegionFileCompression e id
RegionFileCompression f inputWrapper
RegionFileCompression g outputWrapper
RegionFileCompression b (I)Z isValidVersion
RegionFileCompression b (Ljava/io/OutputStream;)Ljava/io/OutputStream; lambda$static$1
RegionFileCompression b (Ljava/io/InputStream;)Ljava/io/InputStream; lambda$static$0
RegionFileCompression$StreamWrapper wrap (Ljava/lang/Object;)Ljava/lang/Object; wrap
RegionFileSection a LOGGER
RegionFileSection b worker
RegionFileSection c storage
RegionFileSection d dirty
RegionFileSection e deserializer
RegionFileSection f factory
RegionFileSection g fixerUpper
RegionFileSection h type
RegionFileSection c (J)Ljava/util/Optional; get
RegionFileSection d (J)Ljava/util/Optional; getOrLoad
RegionFileSection b (LSectionPosition;)Z outsideStoredRange
RegionFileSection e (J)LMinecraftSerializable; getOrCreate
RegionFileSection b (LChunkCoordIntPair;)V readColumn
RegionFileSection c (LChunkCoordIntPair;)LNBTTagCompound; tryRead
RegionFileSection d (LChunkCoordIntPair;)V writeColumn
RegionFileSection b (J)V onSectionLoad
RegionFileSection close ()V close
RegionFileSection f (J)V lambda$null$1
RegionFileSection g (J)V lambda$getOrCreate$0
WorldProviderHell k ()LChunkGenerator; createRandomLevelGenerator
WorldProviderHell l ()Z isNaturalDimension
WorldProviderHell m ()Z mayRespawn
WorldProviderHell h ()LWorldBorder; createWorldBorder
WorldProviderHell n ()LDimensionManager; getType
WorldProviderHell$1 a this$0
WorldProviderHell$1 g ()D getCenterX
WorldProviderHell$1 h ()D getCenterZ
WorldProviderNormal n ()LDimensionManager; getType
WorldProviderNormal k ()LChunkGenerator; createRandomLevelGenerator
WorldProviderNormal l ()Z isNaturalDimension
WorldProviderNormal m ()Z mayRespawn
WorldProviderTheEnd f END_SPAWN_POINT
WorldProviderTheEnd g dragonFight
WorldProviderTheEnd k ()LChunkGenerator; createRandomLevelGenerator
WorldProviderTheEnd b ()Z hasGround
WorldProviderTheEnd m ()Z mayRespawn
WorldProviderTheEnd l ()Z isNaturalDimension
WorldProviderTheEnd c ()LBlockPosition; getDimensionSpecificSpawn
WorldProviderTheEnd n ()LDimensionManager; getType
WorldProviderTheEnd i ()V saveData
WorldProviderTheEnd j ()V tick
WorldProviderTheEnd o ()LEnderDragonBattle; getDragonFight
ChunkGeneratorProvider a type
ChunkGeneratorProvider b settings
ChunkGeneratorProvider c supplier
ChunkGeneratorProvider b ()Lcom/mojang/datafixers/Dynamic; getSettings
ChunkGeneratorProvider b (LWorldType;Lcom/mojang/datafixers/Dynamic;)LChunkGeneratorProvider; createFlat
ChunkGeneratorProvider c (LWorldType;Lcom/mojang/datafixers/Dynamic;)LChunkGeneratorProvider; createBuffet
ChunkGeneratorProvider d (LWorldType;Lcom/mojang/datafixers/Dynamic;)LChunkGeneratorProvider; createDebug
ChunkGeneratorProvider b (LGeneratorAccess;)LChunkGenerator; lambda$createDebug$9
GeneratorSettingsDefault a villagesSpacing
GeneratorSettingsDefault b villagesSeparation
GeneratorSettingsDefault c monumentsSpacing
GeneratorSettingsDefault d monumentsSeparation
GeneratorSettingsDefault e strongholdsDistance
GeneratorSettingsDefault f strongholdsCount
GeneratorSettingsDefault g strongholdsSpread
GeneratorSettingsDefault h templesSpacing
GeneratorSettingsDefault i templesSeparation
GeneratorSettingsDefault j oceanRuinSpacing
GeneratorSettingsDefault k oceanRuinSeparation
GeneratorSettingsDefault l endCitySpacing
GeneratorSettingsDefault m endCitySeparation
GeneratorSettingsDefault n shipwreckSpacing
GeneratorSettingsDefault o shipwreckSeparation
GeneratorSettingsDefault p woodlandMansionSpacing
GeneratorSettingsDefault q woodlandMangionSeparation
GeneratorSettingsDefault r defaultBlock
GeneratorSettingsDefault s defaultFluid
GeneratorSettingsDefault b ()I getVillagesSeparation
GeneratorSettingsDefault c ()I getMonumentsSpacing
GeneratorSettingsDefault d ()I getMonumentsSeparation
GeneratorSettingsDefault e ()I getStrongholdsDistance
GeneratorSettingsDefault f ()I getStrongholdsCount
GeneratorSettingsDefault g ()I getStrongholdsSpread
GeneratorSettingsDefault h ()I getTemplesSpacing
GeneratorSettingsDefault i ()I getTemplesSeparation
GeneratorSettingsDefault j ()I getShipwreckSpacing
GeneratorSettingsDefault k ()I getShipwreckSeparation
GeneratorSettingsDefault l ()I getOceanRuinSpacing
GeneratorSettingsDefault m ()I getOceanRuinSeparation
GeneratorSettingsDefault n ()I getEndCitySpacing
GeneratorSettingsDefault o ()I getEndCitySeparation
GeneratorSettingsDefault p ()I getWoodlandMansionSpacing
GeneratorSettingsDefault q ()I getWoodlandMangionSeparation
GeneratorSettingsDefault r ()LIBlockData; getDefaultBlock
GeneratorSettingsDefault s ()LIBlockData; getDefaultFluid
GeneratorSettingsDefault b (LIBlockData;)V setDefaultFluid
GeneratorSettingsDefault t ()I getBedrockRoofPosition
GeneratorSettingsDefault u ()I getBedrockFloorPosition
ChunkProviderDebug g ALL_BLOCKS
ChunkProviderDebug h GRID_WIDTH
ChunkProviderDebug i GRID_HEIGHT
ChunkProviderDebug e AIR
ChunkProviderDebug f BARRIER
ChunkProviderDebug b ()I getSpawnHeight
ChunkProviderDebug b (LGeneratorAccess;LIChunkAccess;)V fillFromNoise
ChunkProviderDebug b (II)LIBlockData; getBlockStateFor
ChunkProviderFlat e biomeWrapper
ChunkProviderFlat f phantomSpawner
ChunkProviderFlat g catSpawner
ChunkProviderFlat g ()LBiomeBase; getBiomeFromSettings
ChunkProviderFlat b ()I getSpawnHeight
ChunkProviderFlat b (LGeneratorAccess;LIChunkAccess;)V fillFromNoise
ChunkProviderFlat b (LBiomeBase;LStructureGenerator;)LWorldGenFeatureConfiguration; getStructureConfiguration
ChunkProviderFlat$FlatLevelBiomeWrapper t this$0
HeightMap a NOT_AIR
HeightMap b MATERIAL_MOTION_BLOCKING
HeightMap c data
HeightMap d isOpaque
HeightMap e chunk
HeightMap b (II)I getHighestTaken
HeightMap c (II)I getIndex
HeightMap b (LIBlockData;)Z lambda$static$0
HeightMap b ()Ljava/util/function/Predicate; access$000
HeightMap c ()Ljava/util/function/Predicate; access$100
GeneratorSettingsNether u ()I getBedrockFloorPosition
GeneratorSettingsNether t ()I getBedrockRoofPosition
ChunkProviderHell h yOffsets
ChunkProviderHell b (II)[D getDepthAndScale
ChunkProviderHell j ()[D makeYOffsets
ChunkProviderHell b ()I getSpawnHeight
ChunkProviderHell e ()I getGenDepth
ChunkProviderHell f ()I getSeaLevel
ChunkGeneratorAbstract h BEARD_KERNEL
ChunkGeneratorAbstract i AIR
ChunkGeneratorAbstract j chunkHeight
ChunkGeneratorAbstract k chunkWidth
ChunkGeneratorAbstract l chunkCountX
ChunkGeneratorAbstract m chunkCountY
ChunkGeneratorAbstract n chunkCountZ
ChunkGeneratorAbstract e random
ChunkGeneratorAbstract o minLimitPerlinNoise
ChunkGeneratorAbstract p maxLimitPerlinNoise
ChunkGeneratorAbstract q mainPerlinNoise
ChunkGeneratorAbstract r surfaceNoise
ChunkGeneratorAbstract f defaultBlock
ChunkGeneratorAbstract g defaultFluid
ChunkGeneratorAbstract c (II)[D makeAndFillNoiseColumn
ChunkGeneratorAbstract b (II)[D getDepthAndScale
ChunkGeneratorAbstract g ()D getTopSlideStart
ChunkGeneratorAbstract h ()D getBottomSlideStart
ChunkGeneratorAbstract i ()I getNoiseSizeY
ChunkGeneratorAbstract b (LGeneratorAccess;LIChunkAccess;)V fillFromNoise
ChunkGeneratorAbstract b (III)D computeContribution
GeneratorSettingsOverworld t biomeSize
GeneratorSettingsOverworld u riverSize
GeneratorSettingsOverworld v fixedBiome
GeneratorSettingsOverworld w seaLevel
GeneratorSettingsOverworld v ()I getBiomeSize
GeneratorSettingsOverworld w ()I getRiverSize
GeneratorSettingsOverworld x ()I getFixedBiome
GeneratorSettingsOverworld y ()I getSeaLevel
GeneratorSettingsOverworld u ()I getBedrockFloorPosition
ChunkProviderGenerate h BIOME_WEIGHTS
ChunkProviderGenerate i depthNoise
ChunkProviderGenerate j isAmplified
ChunkProviderGenerate k phantomSpawner
ChunkProviderGenerate l patrolSpawner
ChunkProviderGenerate m catSpawner
ChunkProviderGenerate n villageSiege
ChunkProviderGenerate b (LRegionLimitedWorldAccess;)V spawnOriginalMobs
ChunkProviderGenerate b (II)[D getDepthAndScale
ChunkProviderGenerate d (II)D getRdepth
ChunkProviderGenerate b ()I getSpawnHeight
ChunkProviderGenerate f ()I getSeaLevel
MobSpawnerPatrol a nextTick
MobSpawnerPhantom a nextTick
GeneratorSettingsEnd t spawnPosition
GeneratorSettingsEnd v ()LBlockPosition; getSpawnPosition
ChunkProviderTheEnd h dimensionSpawnPosition
ChunkProviderTheEnd b (II)[D getDepthAndScale
ChunkProviderTheEnd g ()D getTopSlideStart
ChunkProviderTheEnd h ()D getBottomSlideStart
ChunkProviderTheEnd j ()LBlockPosition; getDimensionSpawnPosition
ChunkProviderTheEnd b ()I getSpawnHeight
ChunkProviderTheEnd f ()I getSeaLevel
SeededRandom a count
SeededRandom next (I)I next
SeededRandom b (JII)J setFeatureSeed
SeededRandom c (JII)J setLargeFeatureSeed
WorldGenCanyon m rs
WorldGenCarverConfiguration a NONE
WorldGenCaves b ()D getYScale
WorldGenCaves b (Ljava/util/Random;)I getCaveY
WorldGenCarverWrapper a worldCarver
WorldGenCarverWrapper b config
WorldGenCavesHell b ()D getYScale
WorldGenCavesHell b (Ljava/util/Random;)I getCaveY
WorldGenCarverAbstract a CAVE
WorldGenCarverAbstract b NETHER_CAVE
WorldGenCarverAbstract c CANYON
WorldGenCarverAbstract d UNDERWATER_CANYON
WorldGenCarverAbstract e UNDERWATER_CAVE
WorldGenCarverAbstract f AIR
WorldGenCarverAbstract g CAVE_AIR
WorldGenCarverAbstract h WATER
WorldGenCarverAbstract i LAVA
WorldGenCarverAbstract j replaceableBlocks
WorldGenCarverAbstract k liquids
WorldGenCarverAbstract m configurationFactory
WorldGenCarverAbstract l genHeight
WorldGenCarverAbstract c ()I getRange
WorldGenFlowers b (Ljava/util/Random;LBlockPosition;LWorldGenFeatureConfiguration;)LIBlockData; getRandomFlower
WorldGenTreeAbstract b (LVirtualLevelReadable;LBlockPosition;)Z isAir
WorldGenTreeAbstract c (LVirtualLevelReadable;LBlockPosition;)Z isDirt
WorldGenTreeAbstract d (LVirtualLevelReadable;LBlockPosition;)Z isVine
WorldGenTreeAbstract e (LVirtualLevelReadable;LBlockPosition;)Z isBlockWater
WorldGenTreeAbstract f (LVirtualLevelReadable;LBlockPosition;)Z isAirOrLeaves
WorldGenTreeAbstract g (LVirtualLevelReadable;LBlockPosition;)Z isGrassOrDirt
WorldGenTreeAbstract h (LVirtualLevelReadable;LBlockPosition;)Z isGrassOrDirtOrFarmland
WorldGenTreeAbstract i (LVirtualLevelReadable;LBlockPosition;)Z isReplaceablePlant
WorldGenTreeAbstract b (LVirtualLevelWritable;Ljava/util/Random;LBlockPosition;Ljava/util/Set;LStructureBoundingBox;LWorldGenFeatureTreeConfiguration;)Z placeLeaf
WorldGenTreeAbstract b (LIWorldWriter;LBlockPosition;LIBlockData;)V setBlockKnownShape
WorldGenTreeAbstract b (LIBlockData;)Z lambda$isGrassOrDirtOrFarmland$6
WorldGenTreeAbstract c (LIBlockData;)Z lambda$isGrassOrDirt$5
WorldGenTreeAbstract d (LIBlockData;)Z lambda$isAirOrLeaves$4
WorldGenTreeAbstract e (LIBlockData;)Z lambda$isBlockWater$3
WorldGenTreeAbstract f (LIBlockData;)Z lambda$isVine$2
WorldGenTreeAbstract g (LIBlockData;)Z lambda$isDirt$1
WorldGenTreeAbstract h (LIBlockData;)Z lambda$isFree$0
WorldGenFeatureBamboo a BAMBOO_TRUNK
WorldGenFeatureBamboo ax BAMBOO_FINAL_LARGE
WorldGenFeatureBamboo ay BAMBOO_TOP_LARGE
WorldGenFeatureBamboo az BAMBOO_TOP_SMALL
BasaltPillarFeature b (LGeneratorAccess;Ljava/util/Random;LBlockPosition;)Z placeHangOff
WorldGenBuriedTreasure b ()Ljava/lang/String; getFeatureName
WorldGenBuriedTreasure c ()I getLookupRange
WorldGenFeatureConfigured a LOGGER
WorldGenFeatureConfigured b feature
WorldGenFeatureConfigured c config
WorldGenFeatureCoral b (LGeneratorAccess;Ljava/util/Random;LBlockPosition;LIBlockData;)Z placeCoralBlock
WorldGenFeatureComposite toString ()Ljava/lang/String; toString
WorldGenFeatureFlower b (Ljava/util/Random;LBlockPosition;LWorldGenFeatureRandomPatchConfiguration;)LIBlockData; getRandomFlower
WorldGenFeatureFlower b (Ljava/util/Random;LBlockPosition;LWorldGenFeatureConfiguration;)LIBlockData; getRandomFlower
WorldGenFeatureDesertPyramid b ()Ljava/lang/String; getFeatureName
WorldGenFeatureDesertPyramid c ()I getLookupRange
WorldGenFeatureDesertPyramid d ()I getRandomSalt
WorldGenDesertWell a IS_SAND
WorldGenDesertWell ax sandSlab
WorldGenDesertWell ay sandstone
WorldGenDesertWell az water
WorldGenEndCity b ()Ljava/lang/String; getFeatureName
WorldGenEndCity c ()I getLookupRange
WorldGenEndCity b (IILChunkGenerator;)I getYPositionForFeature
WorldGenEndTrophy a END_PODIUM_LOCATION
WorldGenEndTrophy ax active
WorldGenBigTree b (II)Z trimBranches
WorldGenBigTree b (LVirtualLevelWritable;Ljava/util/Random;ILBlockPosition;Ljava/util/List;Ljava/util/Set;LStructureBoundingBox;LWorldGenFeatureSmallTreeConfigurationConfiguration;)V makeBranches
WorldGenBigTree b (LVirtualLevelWritable;Ljava/util/Random;LBlockPosition;ILjava/util/Set;LStructureBoundingBox;LWorldGenFeatureSmallTreeConfigurationConfiguration;)I checkLocation
WorldGenBigTree$FoliageCoords c branchBase
WorldGenBigTree$FoliageCoords p ()I getBranchBase
WorldGenFossils a SPINE_1
WorldGenFossils ax SPINE_2
WorldGenFossils ay SPINE_3
WorldGenFossils az SPINE_4
WorldGenFossils aA SPINE_1_COAL
WorldGenFossils aB SPINE_2_COAL
WorldGenFossils aC SPINE_3_COAL
WorldGenFossils aD SPINE_4_COAL
WorldGenFossils aE SKULL_1
WorldGenFossils aF SKULL_2
WorldGenFossils aG SKULL_3
WorldGenFossils aH SKULL_4
WorldGenFossils aI SKULL_1_COAL
WorldGenFossils aJ SKULL_2_COAL
WorldGenFossils aK SKULL_3_COAL
WorldGenFossils aL SKULL_4_COAL
WorldGenFossils aM fossils
WorldGenFossils aN fossilsCoal
HugeFungusConfiguration a HUGE_CRIMSON_FUNGI_PLANTED_CONFIG
HugeFungusConfiguration b HUGE_CRIMSON_FUNGI_NOT_PLANTED_CONFIG
HugeFungusConfiguration c HUGE_WARPED_FUNGI_PLANTED_CONFIG
HugeFungusConfiguration d HUGE_WARPED_FUNGI_NOT_PLANTED_CONFIG
HugeFungusConfiguration e validBaseState
HugeFungusConfiguration f stemState
HugeFungusConfiguration g hatState
HugeFungusConfiguration h decorState
HugeFungusConfiguration i planted
HugeFungusFeature b (LGeneratorAccess;LBlockPosition;)Z isReplaceable
HugeFungusFeature b (LGeneratorAccess;Ljava/util/Random;LHugeFungusConfiguration;LBlockPosition;IZ)V placeHat
WorldGenPackedIce1 a block
WorldGenFeatureIceburg b (III)I heightDependentRadiusEllipse
WorldGenFeatureIceburg b (Ljava/util/Random;III)I heightDependentRadiusSteep
WorldGenFeatureIceburg c (LBlock;)Z isIcebergBlock
WorldGenFeatureIgloo b ()Ljava/lang/String; getFeatureName
WorldGenFeatureIgloo c ()I getLookupRange
WorldGenFeatureIgloo d ()I getRandomSalt
WorldGenFeatureJunglePyramid b ()Ljava/lang/String; getFeatureName
WorldGenFeatureJunglePyramid c ()I getLookupRange
WorldGenFeatureJunglePyramid d ()I getRandomSalt
WorldGenLakes a AIR
WorldGenJungleTree c (LVirtualLevelWritable;Ljava/util/Random;LBlockPosition;ILjava/util/Set;LStructureBoundingBox;LWorldGenFeatureTreeConfiguration;)V createCrown
WorldGenMegaTreeAbstract b (LVirtualLevelWritable;LBlockPosition;)Z makeDirtFloor
WorldGenMegaTreeAbstract b (LVirtualLevelWritable;Ljava/util/Random;LBlockPosition;ILjava/util/Set;LStructureBoundingBox;LWorldGenFeatureTreeConfiguration;)V placeSingleTrunkLeaves
WorldGenMineshaft b ()Ljava/lang/String; getFeatureName
WorldGenMineshaft c ()I getLookupRange
WorldGenDungeons a LOGGER
WorldGenDungeons ax MOBS
WorldGenDungeons ay AIR
WorldGenNether a FORTRESS_ENEMIES
WorldGenNether b ()Ljava/lang/String; getFeatureName
WorldGenNether c ()I getLookupRange
WorldGenNether e ()Ljava/util/List; getSpecialEnemies
WorldGenMonument a MONUMENT_ENEMIES
WorldGenMonument b ()Ljava/lang/String; getFeatureName
WorldGenMonument c ()I getLookupRange
WorldGenMonument e ()Ljava/util/List; getSpecialEnemies
WorldGenMonument$OceanMonumentStart e isCreated
WorldGenMonument$OceanMonumentStart b (II)V generatePieces
WorldGenFeaturePillagerOutpost a OUTPOST_ENEMIES
WorldGenFeaturePillagerOutpost b ()Ljava/lang/String; getFeatureName
WorldGenFeaturePillagerOutpost c ()I getLookupRange
WorldGenFeaturePillagerOutpost e ()Ljava/util/List; getSpecialEnemies
WorldGenFeaturePillagerOutpost d ()I getRandomSalt
WorldGenFeatureShipwreck b ()Ljava/lang/String; getFeatureName
WorldGenFeatureShipwreck c ()I getLookupRange
WorldGenFeatureShipwreck d ()I getRandomSalt
WorldGenFeatureShipwreck b (LChunkGenerator;)I getSeparation
WorldGenEnder a SPIKE_CACHE
WorldGenEnder$Spike a centerX
WorldGenEnder$Spike b centerZ
WorldGenEnder$Spike c radius
WorldGenEnder$Spike d height
WorldGenEnder$Spike e guarded
WorldGenEnder$Spike f topBoundingBox
WorldGenEnder$Spike b ()I getCenterZ
WorldGenEnder$Spike c ()I getRadius
WorldGenEnder$Spike d ()I getHeight
WorldGenEnder$Spike e ()Z isGuarded
WorldGenEnder$Spike f ()LAxisAlignedBB; getTopBoundingBox
WorldGenEnder$SpikeCacheLoader load (Ljava/lang/Object;)Ljava/lang/Object; load
WorldGenStronghold a isSpotSelected
WorldGenStronghold ax strongholdPos
WorldGenStronghold ay discoveredStarts
WorldGenStronghold az currentSeed
WorldGenStronghold d ()V reset
WorldGenStronghold b ()Ljava/lang/String; getFeatureName
WorldGenStronghold c ()I getLookupRange
StructureGenerator$StructureStartFactory create (LStructureGenerator;IILStructureBoundingBox;IJ)LStructureStart; create
WorldGenFeatureStructurePieceType a MINE_SHAFT_CORRIDOR
WorldGenFeatureStructurePieceType b MINE_SHAFT_CROSSING
WorldGenFeatureStructurePieceType c MINE_SHAFT_ROOM
WorldGenFeatureStructurePieceType d MINE_SHAFT_STAIRS
WorldGenFeatureStructurePieceType e PILLAGER_OUTPOST
WorldGenFeatureStructurePieceType f VILLAGE
WorldGenFeatureStructurePieceType g NETHER_FORTRESS_BRIDGE_CROSSING
WorldGenFeatureStructurePieceType h NETHER_FORTRESS_BRIDGE_END_FILLER
WorldGenFeatureStructurePieceType i NETHER_FORTRESS_BRIDGE_STRAIGHT
WorldGenFeatureStructurePieceType j NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
WorldGenFeatureStructurePieceType k NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
WorldGenFeatureStructurePieceType l NETHER_FORTRESS_CASTLE_ENTRANCE
WorldGenFeatureStructurePieceType m NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
WorldGenFeatureStructurePieceType n NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
WorldGenFeatureStructurePieceType o NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
WorldGenFeatureStructurePieceType p NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
WorldGenFeatureStructurePieceType q NETHER_FORTRESS_CASTLE_STALK_ROOM
WorldGenFeatureStructurePieceType r NETHER_FORTRESS_MONSTER_THRONE
WorldGenFeatureStructurePieceType s NETHER_FORTRESS_ROOM_CROSSING
WorldGenFeatureStructurePieceType t NETHER_FORTRESS_STAIRS_ROOM
WorldGenFeatureStructurePieceType u NETHER_FORTRESS_START
WorldGenFeatureStructurePieceType v STRONGHOLD_CHEST_CORRIDOR
WorldGenFeatureStructurePieceType w STRONGHOLD_FILLER_CORRIDOR
WorldGenFeatureStructurePieceType x STRONGHOLD_FIVE_CROSSING
WorldGenFeatureStructurePieceType y STRONGHOLD_LEFT_TURN
WorldGenFeatureStructurePieceType z STRONGHOLD_LIBRARY
WorldGenFeatureStructurePieceType A STRONGHOLD_PORTAL_ROOM
WorldGenFeatureStructurePieceType B STRONGHOLD_PRISON_HALL
WorldGenFeatureStructurePieceType C STRONGHOLD_RIGHT_TURN
WorldGenFeatureStructurePieceType D STRONGHOLD_ROOM_CROSSING
WorldGenFeatureStructurePieceType E STRONGHOLD_STAIRS_DOWN
WorldGenFeatureStructurePieceType F STRONGHOLD_START
WorldGenFeatureStructurePieceType G STRONGHOLD_STRAIGHT
WorldGenFeatureStructurePieceType H STRONGHOLD_STRAIGHT_STAIRS_DOWN
WorldGenFeatureStructurePieceType I JUNGLE_PYRAMID_PIECE
WorldGenFeatureStructurePieceType J OCEAN_RUIN
WorldGenFeatureStructurePieceType K IGLOO
WorldGenFeatureStructurePieceType L SWAMPLAND_HUT
WorldGenFeatureStructurePieceType M DESERT_PYRAMID_PIECE
WorldGenFeatureStructurePieceType N OCEAN_MONUMENT_BUILDING
WorldGenFeatureStructurePieceType O OCEAN_MONUMENT_CORE_ROOM
WorldGenFeatureStructurePieceType P OCEAN_MONUMENT_DOUBLE_X_ROOM
WorldGenFeatureStructurePieceType Q OCEAN_MONUMENT_DOUBLE_XY_ROOM
WorldGenFeatureStructurePieceType R OCEAN_MONUMENT_DOUBLE_Y_ROOM
WorldGenFeatureStructurePieceType S OCEAN_MONUMENT_DOUBLE_YZ_ROOM
WorldGenFeatureStructurePieceType T OCEAN_MONUMENT_DOUBLE_Z_ROOM
WorldGenFeatureStructurePieceType U OCEAN_MONUMENT_ENTRY_ROOM
WorldGenFeatureStructurePieceType V OCEAN_MONUMENT_PENTHOUSE
WorldGenFeatureStructurePieceType W OCEAN_MONUMENT_SIMPLE_ROOM
WorldGenFeatureStructurePieceType X OCEAN_MONUMENT_SIMPLE_TOP_ROOM
WorldGenFeatureStructurePieceType Y OCEAN_MONUMENT_WING_ROOM
WorldGenFeatureStructurePieceType Z END_CITY_PIECE
WorldGenFeatureStructurePieceType aa WOODLAND_MANSION_PIECE
WorldGenFeatureStructurePieceType ab BURIED_TREASURE_PIECE
WorldGenFeatureStructurePieceType ac SHIPWRECK_PIECE
WorldGenFeatureStructurePieceType ad NETHER_FOSSIL
WorldGenFeatureStructurePieceType load (LDefinedStructureManager;LNBTTagCompound;)LStructurePiece; load
WorldGenFeatureSwampHut a SWAMPHUT_ENEMIES
WorldGenFeatureSwampHut ax SWAMPHUT_ANIMALS
WorldGenFeatureSwampHut b ()Ljava/lang/String; getFeatureName
WorldGenFeatureSwampHut c ()I getLookupRange
WorldGenFeatureSwampHut d ()I getRandomSalt
WorldGenFeatureSwampHut e ()Ljava/util/List; getSpecialEnemies
WorldGenFeatureSwampHut f ()Ljava/util/List; getSpecialAnimals
WorldGenFeatureSwampHut c (LGeneratorAccess;LBlockPosition;)Z isSwamphut
TwistingVinesFeature b (LGeneratorAccess;Ljava/util/Random;LBlockPosition;III)V placeTwistingVines
WorldGenVillage b ()Ljava/lang/String; getFeatureName
WorldGenVillage c ()I getLookupRange
WorldGenVillage g ()Z supportsProjection
WorldGenVines a DIRECTIONS
WorldGenFeatureEndPlatform a PLATFORM_ORIGIN
WorldGenFeatureEndPlatform ax PLATFORM_ORIGIN_CHUNK
WeepingVinesFeature a DIRECTIONS
WeepingVinesFeature b (LGeneratorAccess;Ljava/util/Random;LBlockPosition;)V placeRoofWeepingVines
WorldGenFeatureRandomChoiceConfigurationWeight a feature
WorldGenFeatureRandomChoiceConfigurationWeight b chance
WorldGenWoodlandMansion b ()Ljava/lang/String; getFeatureName
WorldGenWoodlandMansion c ()I getLookupRange
WorldGenBlockPlacer a type
WorldGenBlockPlacers a SIMPLE_BLOCK_PLACER
WorldGenBlockPlacers b DOUBLE_PLANT_PLACER
WorldGenBlockPlacers c COLUMN_PLACER
WorldGenBlockPlacers d deserializer
WorldGenBlockPlacerColumn b minSize
WorldGenBlockPlacerColumn c extraSize
WorldGenFeatureBlockOffsetConfiguration a state
WorldGenFeatureBlockOffsetConfiguration b startRadius
WorldGenFeatureBlockPileConfiguration a stateProvider
WorldGenFeatureLakeConfiguration a state
WorldGenBuriedTreasureConfiguration a probability
WorldGenFeatureChanceDecoratorRangeConfiguration a chance
WorldGenFeatureChanceDecoratorRangeConfiguration b bottomOffset
WorldGenFeatureChanceDecoratorRangeConfiguration c topOffset
WorldGenFeatureChanceDecoratorRangeConfiguration d top
WorldGenFeatureKelpConfiguration a count
WorldGenFeatureChanceDecoratorCountConfiguration a count
WorldGenFeatureChanceDecoratorCountConfiguration b bottomOffset
WorldGenFeatureChanceDecoratorCountConfiguration c topOffset
WorldGenFeatureChanceDecoratorCountConfiguration d maximum
WorldGenFeatureCompositeConfiguration a feature
WorldGenFeatureCompositeConfiguration b decorator
WorldGenFeatureCompositeConfiguration toString ()Ljava/lang/String; toString
WorldGenFeatureDecoratorConfiguration e NONE
WorldGenFeatureCircleConfiguration a state
WorldGenFeatureCircleConfiguration b radius
WorldGenFeatureCircleConfiguration c ySize
WorldGenFeatureCircleConfiguration d targets
WorldGenEndGatewayConfiguration a exit
WorldGenEndGatewayConfiguration b exact
WorldGenEndGatewayConfiguration b ()Ljava/util/Optional; getExit
WorldGenEndGatewayConfiguration c ()Z isExitExact
WorldGenFeatureConfiguration j NONE
WorldGenFeatureRadiusConfiguration a radius
WorldGenFeatureMushroomConfiguration a capProvider
WorldGenFeatureMushroomConfiguration b stemProvider
WorldGenFeatureMushroomConfiguration c foliageRadius
WorldGenFeatureFillConfiguration a height
WorldGenFeatureFillConfiguration b state
WorldGenMegaTreeConfiguration a heightInterval
WorldGenMegaTreeConfiguration b crownHeight
WorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder c decorators
WorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder d baseHeight
WorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder e heightInterval
WorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder f crownHeight
WorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder b (I)LWorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder; heightInterval
WorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder c (I)LWorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder; crownHeight
WorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder b ()LWorldGenFeatureTreeConfiguration; build
WorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder b (Ljava/util/List;)LWorldGenFeatureTreeConfiguration$TreeConfigurationBuilder; decorators
WorldGenMegaTreeConfiguration$MegaTreeConfigurationBuilder d (I)LWorldGenFeatureTreeConfiguration$TreeConfigurationBuilder; baseHeight
WorldGenMineshaftConfiguration a probability
WorldGenMineshaftConfiguration b type
WorldGenFeatureDecoratorNoiseConfiguration a noiseLevel
WorldGenFeatureDecoratorNoiseConfiguration b belowNoise
WorldGenFeatureDecoratorNoiseConfiguration c aboveNoise
WorldGenFeatureOceanRuinConfiguration a biomeTemp
WorldGenFeatureOceanRuinConfiguration b largeProbability
WorldGenFeatureOceanRuinConfiguration c clusterProbability
WorldGenFeatureOreConfiguration a target
WorldGenFeatureOreConfiguration b size
WorldGenFeatureOreConfiguration c state
WorldGenFeatureConfigurationChance b probability
WorldGenFeatureChoiceConfiguration a featureTrue
WorldGenFeatureChoiceConfiguration b featureFalse
WorldGenFeatureRandomChoiceConfiguration a features
WorldGenFeatureRandomChoiceConfiguration b defaultFeature
WorldGenFeatureRandomPatchConfiguration a stateProvider
WorldGenFeatureRandomPatchConfiguration b blockPlacer
WorldGenFeatureRandomPatchConfiguration c whitelist
WorldGenFeatureRandomPatchConfiguration d blacklist
WorldGenFeatureRandomPatchConfiguration e tries
WorldGenFeatureRandomPatchConfiguration f xspread
WorldGenFeatureRandomPatchConfiguration g yspread
WorldGenFeatureRandomPatchConfiguration h zspread
WorldGenFeatureRandomPatchConfiguration i canReplace
WorldGenFeatureRandomPatchConfiguration k project
WorldGenFeatureRandomPatchConfiguration l needWater
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder a stateProvider
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder b blockPlacer
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder c whitelist
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder d blacklist
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder e tries
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder f xspread
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder g yspread
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder h zspread
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder i canReplace
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder j project
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder k needWater
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder b (Ljava/util/Set;)LWorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder; blacklist
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder b (I)LWorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder; xspread
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder c (I)LWorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder; yspread
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder d (I)LWorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder; zspread
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder b ()LWorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder; noProjection
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder c ()LWorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder; needWater
WorldGenFeatureRandomPatchConfiguration$GrassConfigurationBuilder d ()LWorldGenFeatureRandomPatchConfiguration; build
WorldGenFeatureRandomConfiguration a features
WorldGenFeatureRandomConfiguration b count
WorldGenFeatureReplaceBlockConfiguration a target
WorldGenFeatureReplaceBlockConfiguration b state
WorldGenFeatureSeaGrassConfiguration a count
WorldGenFeatureSeaGrassConfiguration b tallSeagrassProbability
WorldGenFeatureShipwreckConfiguration a isBeached
WorldGenFeatureBlockConfiguration a toPlace
WorldGenFeatureBlockConfiguration b placeOn
WorldGenFeatureBlockConfiguration c placeIn
WorldGenFeatureBlockConfiguration d placeUnder
WorldGenFeatureBlockConfiguration b (Lcom/mojang/datafixers/types/DynamicOps;LIBlockData;)Ljava/lang/Object; lambda$serialize$1
WorldGenFeatureBlockConfiguration c (Lcom/mojang/datafixers/types/DynamicOps;LIBlockData;)Ljava/lang/Object; lambda$serialize$0
WorldGenFeatureRandom2 a features
WorldGenFeatureSmallTreeConfigurationConfiguration a foliagePlacer
WorldGenFeatureSmallTreeConfigurationConfiguration b heightRandA
WorldGenFeatureSmallTreeConfigurationConfiguration c heightRandB
WorldGenFeatureSmallTreeConfigurationConfiguration d trunkHeight
WorldGenFeatureSmallTreeConfigurationConfiguration e trunkHeightRandom
WorldGenFeatureSmallTreeConfigurationConfiguration f trunkTopOffset
WorldGenFeatureSmallTreeConfigurationConfiguration g trunkTopOffsetRandom
WorldGenFeatureSmallTreeConfigurationConfiguration h foliageHeight
WorldGenFeatureSmallTreeConfigurationConfiguration i foliageHeightRandom
WorldGenFeatureSmallTreeConfigurationConfiguration k maxWaterDepth
WorldGenFeatureSmallTreeConfigurationConfiguration l ignoreVines
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder c foliagePlacer
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder d decorators
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder e baseHeight
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder f heightRandA
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder g heightRandB
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder h trunkHeight
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder i trunkHeightRandom
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder j trunkTopOffset
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder k trunkTopOffsetRandom
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder l foliageHeight
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder m foliageHeightRandom
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder n maxWaterDepth
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder o ignoreVines
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder b (I)LWorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder; heightRandA
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder c (I)LWorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder; heightRandB
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder e (I)LWorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder; trunkHeight
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder f (I)LWorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder; trunkHeightRandom
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder g (I)LWorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder; trunkTopOffset
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder h (I)LWorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder; trunkTopOffsetRandom
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder i (I)LWorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder; foliageHeight
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder j (I)LWorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder; foliageHeightRandom
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder k (I)LWorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder; maxWaterDepth
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder c ()LWorldGenFeatureSmallTreeConfigurationConfiguration; build
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder b ()LWorldGenFeatureTreeConfiguration; build
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder b (Ljava/util/List;)LWorldGenFeatureTreeConfiguration$TreeConfigurationBuilder; decorators
WorldGenFeatureSmallTreeConfigurationConfiguration$SmallTreeConfigurationBuilder d (I)LWorldGenFeatureTreeConfiguration$TreeConfigurationBuilder; baseHeight
WorldGenFeatureEndSpikeConfiguration a crystalInvulnerable
WorldGenFeatureEndSpikeConfiguration b spikes
WorldGenFeatureEndSpikeConfiguration c crystalBeamTarget
WorldGenFeatureEndSpikeConfiguration b ()Ljava/util/List; getSpikes
WorldGenFeatureEndSpikeConfiguration c ()LBlockPosition; getCrystalBeamTarget
WorldGenFeatureEndSpikeConfiguration b (Lcom/mojang/datafixers/Dynamic;)Ljava/lang/Integer; lambda$deserialize$1
WorldGenFeatureHellFlowingLavaConfiguration a state
WorldGenFeatureHellFlowingLavaConfiguration b requiresBlockBelow
WorldGenFeatureHellFlowingLavaConfiguration c rockCount
WorldGenFeatureHellFlowingLavaConfiguration d holeCount
WorldGenFeatureHellFlowingLavaConfiguration e validBlocks
WorldGenFeatureHellFlowingLavaConfiguration b (Lcom/mojang/datafixers/Dynamic;)LBlock; lambda$deserialize$0
WorldGenFeatureTreeConfiguration m trunkProvider
WorldGenFeatureTreeConfiguration n leavesProvider
WorldGenFeatureTreeConfiguration o decorators
WorldGenFeatureTreeConfiguration p baseHeight
WorldGenFeatureTreeConfiguration q fromSapling
WorldGenFeatureTreeConfiguration b (Lcom/mojang/datafixers/Dynamic;)LWorldGenFeatureTreeConfiguration; deserialize
WorldGenFeatureTreeConfiguration$TreeConfigurationBuilder a trunkProvider
WorldGenFeatureTreeConfiguration$TreeConfigurationBuilder b leavesProvider
WorldGenFeatureTreeConfiguration$TreeConfigurationBuilder c decorators
WorldGenFeatureTreeConfiguration$TreeConfigurationBuilder d baseHeight
WorldGenFeatureTreeConfiguration$TreeConfigurationBuilder d (I)LWorldGenFeatureTreeConfiguration$TreeConfigurationBuilder; baseHeight
WorldGenFeatureTreeConfiguration$TreeConfigurationBuilder b (Ljava/util/List;)LWorldGenFeatureTreeConfiguration$TreeConfigurationBuilder; decorators
WorldGenFeatureTreeConfiguration$TreeConfigurationBuilder b ()LWorldGenFeatureTreeConfiguration; build
WorldGenFeatureVillageConfiguration a startPool
WorldGenFeatureVillageConfiguration b size
WorldGenFoilagePlacer a radius
WorldGenFoilagePlacer b radiusRandom
WorldGenFoilagePlacer c type
WorldGenFoilagePlacers a BLOB_FOLIAGE_PLACER
WorldGenFoilagePlacers b SPRUCE_FOLIAGE_PLACER
WorldGenFoilagePlacers c PINE_FOLIAGE_PLACER
WorldGenFoilagePlacers d ACACIA_FOLIAGE_PLACER
WorldGenFoilagePlacers e deserializer
WorldGenFeatureStateProvider a type
WorldGenFeatureStateProviders a SIMPLE_STATE_PROVIDER
WorldGenFeatureStateProviders b WEIGHTED_STATE_PROVIDER
WorldGenFeatureStateProviders c PLAIN_FLOWER_PROVIDER
WorldGenFeatureStateProviders d FOREST_FLOWER_PROVIDER
WorldGenFeatureStateProviders e deserializer
WorldGenFeatureStateProviderForestFlower b FLOWERS
WorldGenFeatureStateProviderPlainFlower b LOW_NOISE_FLOWERS
WorldGenFeatureStateProviderPlainFlower c HIGH_NOISE_FLOWERS
WorldGenFeatureStateProviderRotatedBlock b block
WorldGenFeatureStateProviderSimpl b state
WorldGenFeatureStateProviderWeighted b weightedList
WorldGenFeatureDefinedStructurePoolEmpty a INSTANCE
WorldGenFeatureDefinedStructurePoolEmpty toString ()Ljava/lang/String; toString
WorldGenFeatureDefinedStructurePoolFeature a feature
WorldGenFeatureDefinedStructurePoolFeature b defaultJigsawNBT
WorldGenFeatureDefinedStructurePoolFeature b ()LNBTTagCompound; fillDefaultJigsawNBT
WorldGenFeatureDefinedStructurePoolFeature toString ()Ljava/lang/String; toString
WorldGenFeatureDefinedStructureJigsawJunction a sourceX
WorldGenFeatureDefinedStructureJigsawJunction b sourceGroundY
WorldGenFeatureDefinedStructureJigsawJunction c sourceZ
WorldGenFeatureDefinedStructureJigsawJunction d deltaY
WorldGenFeatureDefinedStructureJigsawJunction e destProjection
WorldGenFeatureDefinedStructureJigsawJunction b ()I getSourceGroundY
WorldGenFeatureDefinedStructureJigsawJunction c ()I getSourceZ
WorldGenFeatureDefinedStructureJigsawJunction d ()I getDeltaY
WorldGenFeatureDefinedStructureJigsawJunction e ()LWorldGenFeatureDefinedStructurePoolTemplate$Matching; getDestProjection
WorldGenFeatureDefinedStructureJigsawJunction equals (Ljava/lang/Object;)Z equals
WorldGenFeatureDefinedStructureJigsawJunction hashCode ()I hashCode
WorldGenFeatureDefinedStructureJigsawJunction toString ()Ljava/lang/String; toString
WorldGenFeatureDefinedStructureJigsawPlacement b LOGGER
WorldGenFeatureDefinedStructureJigsawPlacement a POOLS
WorldGenFeatureDefinedStructureJigsawPlacement$PieceFactory create (LDefinedStructureManager;LWorldGenFeatureDefinedStructurePoolStructure;LBlockPosition;ILEnumBlockRotation;LStructureBoundingBox;)LWorldGenFeaturePillagerOutpostPoolPiece; create
WorldGenFeatureDefinedStructureJigsawPlacement$PieceState a piece
WorldGenFeatureDefinedStructureJigsawPlacement$PieceState b free
WorldGenFeatureDefinedStructureJigsawPlacement$PieceState c boundsTop
WorldGenFeatureDefinedStructureJigsawPlacement$PieceState d depth
WorldGenFeatureDefinedStructureJigsawPlacement$PieceState b (LWorldGenFeatureDefinedStructureJigsawPlacement$PieceState;)Ljava/util/concurrent/atomic/AtomicReference; access$200
WorldGenFeatureDefinedStructureJigsawPlacement$PieceState c (LWorldGenFeatureDefinedStructureJigsawPlacement$PieceState;)I access$300
WorldGenFeatureDefinedStructureJigsawPlacement$PieceState d (LWorldGenFeatureDefinedStructureJigsawPlacement$PieceState;)I access$400
WorldGenFeatureDefinedStructureJigsawPlacement$Placer a maxDepth
WorldGenFeatureDefinedStructureJigsawPlacement$Placer b factory
WorldGenFeatureDefinedStructureJigsawPlacement$Placer c chunkGenerator
WorldGenFeatureDefinedStructureJigsawPlacement$Placer d structureManager
WorldGenFeatureDefinedStructureJigsawPlacement$Placer e pieces
WorldGenFeatureDefinedStructureJigsawPlacement$Placer f random
WorldGenFeatureDefinedStructureJigsawPlacement$Placer g placing
WorldGenFeatureDefinedStructurePoolList a elements
WorldGenFeatureDefinedStructurePoolList toString ()Ljava/lang/String; toString
WorldGenFeatureDefinedStructurePoolList b (LWorldGenFeatureDefinedStructurePoolTemplate$Matching;)V setProjectionOnEachElement
WorldGenFeatureDefinedStructurePoolSingle a location
WorldGenFeatureDefinedStructurePoolSingle b processors
WorldGenFeatureDefinedStructurePoolSingle toString ()Ljava/lang/String; toString
WorldGenFeatureDefinedStructurePoolStructure a projection
WorldGenFeatureDefinedStructurePoolStructure c ()LWorldGenFeatureDefinedStructurePoolTemplate$Matching; getProjection
WorldGenFeatureDefinedStructurePoolStructure b (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
WorldGenFeatureDefinedStructurePoolStructure d ()I getGroundLevelDelta
WorldGenFeatureDefinedStructurePools b SINGLE
WorldGenFeatureDefinedStructurePools c LIST
WorldGenFeatureDefinedStructurePools d FEATURE
WorldGenFeatureDefinedStructurePools e EMPTY
WorldGenFeatureDefinedStructurePoolTemplate a EMPTY
WorldGenFeatureDefinedStructurePoolTemplate b INVALID
WorldGenFeatureDefinedStructurePoolTemplate c name
WorldGenFeatureDefinedStructurePoolTemplate d rawTemplates
WorldGenFeatureDefinedStructurePoolTemplate e templates
WorldGenFeatureDefinedStructurePoolTemplate f fallback
WorldGenFeatureDefinedStructurePoolTemplate g projection
WorldGenFeatureDefinedStructurePoolTemplate h maxSize
WorldGenFeatureDefinedStructurePoolTemplate b (Ljava/util/Random;)Ljava/util/List; getShuffledTemplates
WorldGenFeatureDefinedStructurePoolTemplate b ()LMinecraftKey; getName
WorldGenFeatureDefinedStructurePoolTemplate c ()I size
WorldGenFeatureDefinedStructurePoolTemplates a pools
WorldGenFeatureTreeAlterGround b provider
WorldGenFeatureTreeAlterGround b (LVirtualLevelWritable;Ljava/util/Random;LBlockPosition;)V placeBlockAt
WorldGenFeatureTreeBeehive b probability
WorldGenFeatureTreeCocoa b probability
WorldGenFeatureTree a type
WorldGenFeatureTrees a TRUNK_VINE
WorldGenFeatureTrees b LEAVE_VINE
WorldGenFeatureTrees c COCOA
WorldGenFeatureTrees d BEEHIVE
WorldGenFeatureTrees e ALTER_GROUND
WorldGenFeatureTrees f deserializer
WorldGenFlatLayerInfo a blockState
WorldGenFlatLayerInfo b height
WorldGenFlatLayerInfo c start
WorldGenFlatLayerInfo b ()LIBlockData; getBlockState
WorldGenFlatLayerInfo c ()I getStart
WorldGenFlatLayerInfo toString ()Ljava/lang/String; toString
GeneratorSettingsFlat w LOGGER
GeneratorSettingsFlat x MINESHAFT_COMPOSITE_FEATURE
GeneratorSettingsFlat y VILLAGE_COMPOSITE_FEATURE
GeneratorSettingsFlat z STRONGHOLD_COMPOSITE_FEATURE
GeneratorSettingsFlat A SWAMPHUT_COMPOSITE_FEATURE
GeneratorSettingsFlat B DESERT_PYRAMID_COMPOSITE_FEATURE
GeneratorSettingsFlat C JUNGLE_PYRAMID_COMPOSITE_FEATURE
GeneratorSettingsFlat D IGLOO_COMPOSITE_FEATURE
GeneratorSettingsFlat E SHIPWRECK_COMPOSITE_FEATURE
GeneratorSettingsFlat F OCEAN_MONUMENT_COMPOSITE_FEATURE
GeneratorSettingsFlat G WATER_LAKE_COMPOSITE_FEATURE
GeneratorSettingsFlat H LAVA_LAKE_COMPOSITE_FEATURE
GeneratorSettingsFlat I ENDCITY_COMPOSITE_FEATURE
GeneratorSettingsFlat J WOOLAND_MANSION_COMPOSITE_FEATURE
GeneratorSettingsFlat K FORTRESS_COMPOSITE_FEATURE
GeneratorSettingsFlat L OCEAN_RUIN_COMPOSITE_FEATURE
GeneratorSettingsFlat M PILLAGER_OUTPOST_COMPOSITE_FEATURE
GeneratorSettingsFlat t STRUCTURE_FEATURES_STEP
GeneratorSettingsFlat u STRUCTURE_FEATURES
GeneratorSettingsFlat v STRUCTURE_FEATURES_DEFAULT
GeneratorSettingsFlat N layersInfo
GeneratorSettingsFlat O structuresOptions
GeneratorSettingsFlat P biome
GeneratorSettingsFlat Q layers
GeneratorSettingsFlat R voidGen
GeneratorSettingsFlat S seaLevel
GeneratorSettingsFlat v ()LBiomeBase; getBiome
GeneratorSettingsFlat w ()Ljava/util/Map; getStructuresOptions
GeneratorSettingsFlat x ()Ljava/util/List; getLayersInfo
GeneratorSettingsFlat y ()V updateLayers
GeneratorSettingsFlat toString ()Ljava/lang/String; toString
GeneratorSettingsFlat c (Ljava/lang/String;)Ljava/util/List; getLayersInfoFromString
GeneratorSettingsFlat b (Ljava/lang/String;)LGeneratorSettingsFlat; fromString
GeneratorSettingsFlat d (Ljava/lang/String;)V addStructure
GeneratorSettingsFlat z ()LGeneratorSettingsFlat; getDefault
GeneratorSettingsFlat A ()Z isVoidGen
GeneratorSettingsFlat B ()I getSeaLevel
GeneratorSettingsFlat C ()[LIBlockData; getLayers
GeneratorSettingsFlat b (Lcom/mojang/datafixers/util/Pair;)Z lambda$fromObject$7
GeneratorSettingsFlat b (Lcom/mojang/datafixers/Dynamic;)Lcom/mojang/datafixers/util/Pair; lambda$fromObject$6
GeneratorSettingsFlat b (Lcom/mojang/datafixers/types/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair; lambda$null$4
GeneratorSettingsFlat b (Ljava/util/HashMap;)V lambda$static$1
GeneratorSettingsFlat c (Ljava/util/HashMap;)V lambda$static$0
WorldGenDecoratorCarveMaskConfiguration a step
WorldGenDecoratorCarveMaskConfiguration b probability
WorldGenDecoratorDungeonConfiguration a chance
WorldGenDecoratorConfigured a decorator
WorldGenDecoratorConfigured b config
WorldGenDecoratorHeightAverageConfiguration a count
WorldGenDecoratorHeightAverageConfiguration b baseline
WorldGenDecoratorHeightAverageConfiguration c spread
WorldGenDecorator a NOPE
WorldGenDecorator b COUNT_HEIGHTMAP
WorldGenDecorator c COUNT_TOP_SOLID
WorldGenDecorator d COUNT_HEIGHTMAP_32
WorldGenDecorator e COUNT_HEIGHTMAP_DOUBLE
WorldGenDecorator f COUNT_HEIGHT_64
WorldGenDecorator g NOISE_HEIGHTMAP_32
WorldGenDecorator h NOISE_HEIGHTMAP_DOUBLE
WorldGenDecorator i CHANCE_HEIGHTMAP
WorldGenDecorator j CHANCE_HEIGHTMAP_DOUBLE
WorldGenDecorator k CHANCE_PASSTHROUGH
WorldGenDecorator l CHANCE_TOP_SOLID_HEIGHTMAP
WorldGenDecorator m COUNT_EXTRA_HEIGHTMAP
WorldGenDecorator n COUNT_RANGE
WorldGenDecorator o COUNT_BIASED_RANGE
WorldGenDecorator p COUNT_VERY_BIASED_RANGE
WorldGenDecorator q RANDOM_COUNT_RANGE
WorldGenDecorator r CHANCE_RANGE
WorldGenDecorator s COUNT_CHANCE_HEIGHTMAP
WorldGenDecorator t COUNT_CHANCE_HEIGHTMAP_DOUBLE
WorldGenDecorator u COUNT_DEPTH_AVERAGE
WorldGenDecorator v TOP_SOLID_HEIGHTMAP
WorldGenDecorator w TOP_SOLID_HEIGHTMAP_RANGE
WorldGenDecorator x TOP_SOLID_HEIGHTMAP_NOISE_BIASED
WorldGenDecorator y CARVING_MASK
WorldGenDecorator z FOREST_ROCK
WorldGenDecorator A FIRE
WorldGenDecorator B MAGMA
WorldGenDecorator C EMERALD_ORE
WorldGenDecorator D LAVA_LAKE
WorldGenDecorator E WATER_LAKE
WorldGenDecorator F DUNGEONS
WorldGenDecorator G DARK_OAK_TREE
WorldGenDecorator H ICEBERG
WorldGenDecorator I LIGHT_GEM_CHANCE
WorldGenDecorator J END_ISLAND
WorldGenDecorator K CHORUS_PLANT
WorldGenDecorator L END_GATEWAY
WorldGenDecorator M configurationFactory
WorldGenDecorator toString ()Ljava/lang/String; toString
WorldGenDecoratorFrequencyChanceConfiguration a count
WorldGenDecoratorFrequencyChanceConfiguration b chance
WorldGenDecoratorFrequencyConfiguration a count
WorldGenDecoratorFrequencyExtraChanceConfiguration a count
WorldGenDecoratorFrequencyExtraChanceConfiguration b extraChance
WorldGenDecoratorFrequencyExtraChanceConfiguration c extraCount
WorldGenDecoratorNoiseConfiguration a noiseToCountRatio
WorldGenDecoratorNoiseConfiguration b noiseFactor
WorldGenDecoratorNoiseConfiguration c noiseOffset
WorldGenDecoratorNoiseConfiguration d heightmap
WorldGenDecoratorRangeConfiguration a min
WorldGenDecoratorRangeConfiguration b max
StructureAbstract b ()V calculateBoundingBox
StructureBoundingBox a x0
StructureBoundingBox b y0
StructureBoundingBox c z0
StructureBoundingBox d x1
StructureBoundingBox e y1
StructureBoundingBox f z1
StructureBoundingBox b (LStructureBoundingBox;)Z intersects
StructureBoundingBox b (IIIIII)Z intersects
StructureBoundingBox c (LStructureBoundingBox;)V expand
StructureBoundingBox d (LStructureBoundingBox;)LStructureBoundingBox; getIntersection
StructureBoundingBox b (III)LStructureBoundingBox; moved
StructureBoundingBox b (LBaseBlockPosition;)Z isInside
StructureBoundingBox b ()LBaseBlockPosition; getLength
StructureBoundingBox c ()I getXSpan
StructureBoundingBox d ()I getYSpan
StructureBoundingBox e ()I getZSpan
StructureBoundingBox f ()LBaseBlockPosition; getCenter
StructureBoundingBox toString ()Ljava/lang/String; toString
StructureBoundingBox g ()LNBTTagIntArray; createTag
StructureBoundingBox$1 a $SwitchMap$net$minecraft$core$Direction
WorldGenDesertPyramidPiece e hasPlacedChest
WorldGenEndCityPieces a OVERWRITE
WorldGenEndCityPieces b INSERT
WorldGenEndCityPieces c HOUSE_TOWER_GENERATOR
WorldGenEndCityPieces d TOWER_BRIDGES
WorldGenEndCityPieces e TOWER_GENERATOR
WorldGenEndCityPieces f TOWER_BRIDGE_GENERATOR
WorldGenEndCityPieces g FAT_TOWER_BRIDGES
WorldGenEndCityPieces h FAT_TOWER_GENERATOR
WorldGenEndCityPieces b (LDefinedStructureManager;LWorldGenEndCityPieces$Piece;LBlockPosition;Ljava/lang/String;LEnumBlockRotation;Z)LWorldGenEndCityPieces$Piece; addPiece
WorldGenEndCityPieces b (Ljava/util/List;LWorldGenEndCityPieces$Piece;)LWorldGenEndCityPieces$Piece; addHelper
WorldGenEndCityPieces b (LDefinedStructureManager;LWorldGenEndCityPieces$PieceGenerator;ILWorldGenEndCityPieces$Piece;LBlockPosition;Ljava/util/List;Ljava/util/Random;)Z recursiveChildren
WorldGenEndCityPieces b ()LDefinedStructureInfo; access$100
WorldGenEndCityPieces c ()LWorldGenEndCityPieces$PieceGenerator; access$400
WorldGenEndCityPieces d ()Ljava/util/List; access$600
WorldGenEndCityPieces e ()LWorldGenEndCityPieces$PieceGenerator; access$700
WorldGenEndCityPieces f ()LWorldGenEndCityPieces$PieceGenerator; access$800
WorldGenEndCityPieces g ()LWorldGenEndCityPieces$PieceGenerator; access$900
WorldGenEndCityPieces h ()Ljava/util/List; access$1000
WorldGenEndCityPieces$3 a shipCreated
WorldGenEndCityPieces$Piece d templateName
WorldGenEndCityPieces$Piece e rotation
WorldGenEndCityPieces$Piece f overwrite
WorldGenIglooPiece a STRUCTURE_LOCATION_IGLOO
WorldGenIglooPiece b STRUCTURE_LOCATION_LADDER
WorldGenIglooPiece c STRUCTURE_LOCATION_LABORATORY
WorldGenIglooPiece d PIVOTS
WorldGenIglooPiece e OFFSETS
WorldGenIglooPiece b ()Ljava/util/Map; access$100
WorldGenIglooPiece c ()LMinecraftKey; access$200
WorldGenIglooPiece$IglooPiece d templateLocation
WorldGenIglooPiece$IglooPiece e rotation
WorldGenJunglePyramidPiece e placedMainChest
WorldGenJunglePyramidPiece f placedHiddenChest
WorldGenJunglePyramidPiece g placedTrap1
WorldGenJunglePyramidPiece h placedTrap2
WorldGenJunglePyramidPiece i STONE_SELECTOR
PersistentStructureLegacy a CURRENT_TO_LEGACY_MAP
PersistentStructureLegacy b LEGACY_TO_CURRENT_MAP
PersistentStructureLegacy c hasLegacyData
PersistentStructureLegacy d dataMap
PersistentStructureLegacy e indexMap
PersistentStructureLegacy f legacyKeys
PersistentStructureLegacy g currentKeys
PersistentStructureLegacy b (Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap; lambda$populateCaches$2
PersistentStructureLegacy b (Ljava/util/HashMap;)V lambda$static$0
WorldGenMineshaftPieces b (LStructurePiece;Ljava/util/List;Ljava/util/Random;IIILEnumDirection;I)LWorldGenMineshaftPieces$MineShaftPiece; generateAndAddPiece
WorldGenMineshaftPieces$1 a $SwitchMap$net$minecraft$world$level$levelgen$feature$MineshaftFeature$Type
WorldGenMineshaftPieces$1 b $SwitchMap$net$minecraft$core$Direction
WorldGenMineshaftPieces$WorldGenMineshaftCorridor b hasRails
WorldGenMineshaftPieces$WorldGenMineshaftCorridor c spiderCorridor
WorldGenMineshaftPieces$WorldGenMineshaftCorridor d hasPlacedSpider
WorldGenMineshaftPieces$WorldGenMineshaftCorridor e numSections
WorldGenMineshaftPieces$WorldGenMineshaftCross b direction
WorldGenMineshaftPieces$WorldGenMineshaftCross c isTwoFloored
WorldGenMineshaftPieces$MineShaftPiece a type
WorldGenMineshaftPieces$MineShaftPiece b ()LIBlockData; getFenceBlock
WorldGenMineshaftPieces$WorldGenMineshaftRoom b childEntranceBoxes
WorldGenNetherPieces a BRIDGE_PIECE_WEIGHTS
WorldGenNetherPieces b CASTLE_PIECE_WEIGHTS
WorldGenNetherPieces b (LWorldGenNetherPieces$WorldGenNetherPieceWeight;Ljava/util/List;Ljava/util/Random;IIILEnumDirection;I)LWorldGenNetherPieces$WorldGenNetherPiece; findAndCreateBridgePieceFactory
WorldGenNetherPieces b ()[LWorldGenNetherPieces$WorldGenNetherPieceWeight; access$200
WorldGenNetherPieces$1 a $SwitchMap$net$minecraft$core$Direction
WorldGenNetherPieces$WorldGenNetherPiece2 a selfSeed
WorldGenNetherPieces$WorldGenNetherPiece8 a isNeedingChest
WorldGenNetherPieces$WorldGenNetherPiece10 a isNeedingChest
WorldGenNetherPieces$WorldGenNetherPiece12 a hasPlacedSpawner
WorldGenNetherPieces$WorldGenNetherPiece b (LWorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)LStructurePiece; generateChildLeft
WorldGenNetherPieces$WorldGenNetherPiece c (LWorldGenNetherPieces$WorldGenNetherPiece15;Ljava/util/List;Ljava/util/Random;IIZ)LStructurePiece; generateChildRight
WorldGenNetherPieces$WorldGenNetherPiece b (LGeneratorAccess;Ljava/util/Random;LStructureBoundingBox;III)V generateLightPostFacingLeft
WorldGenNetherPieces$WorldGenNetherPiece c (LGeneratorAccess;Ljava/util/Random;LStructureBoundingBox;III)V generateLightPostFacingUp
WorldGenNetherPieces$WorldGenNetherPiece d (LGeneratorAccess;Ljava/util/Random;LStructureBoundingBox;III)V generateLightPostFacingDown
WorldGenNetherPieces$WorldGenNetherPieceWeight a pieceClass
WorldGenNetherPieces$WorldGenNetherPieceWeight b weight
WorldGenNetherPieces$WorldGenNetherPieceWeight c placeCount
WorldGenNetherPieces$WorldGenNetherPieceWeight d maxPlaceCount
WorldGenNetherPieces$WorldGenNetherPieceWeight e allowInRow
WorldGenNetherPieces$WorldGenNetherPiece15 a previousPiece
WorldGenNetherPieces$WorldGenNetherPiece15 b availableBridgePieces
WorldGenNetherPieces$WorldGenNetherPiece15 c availableCastlePieces
WorldGenNetherPieces$WorldGenNetherPiece15 d pendingChildren
NetherFossilFeature d ()I getRandomSalt
NetherFossilFeature b ()Ljava/lang/String; getFeatureName
NetherFossilFeature b (LChunkGenerator;)I getSeparation
NetherFossilFeature c ()I getLookupRange
NetherFossilPieces a FOSSILS
NetherFossilPieces$NetherFossilPiece d templateLocation
NetherFossilPieces$NetherFossilPiece e rotation
WorldGenMonumentPieces$1 a $SwitchMap$net$minecraft$core$Direction
WorldGenMonumentPieces$WorldGenMonumentPiece1 p sourceRoom
WorldGenMonumentPieces$WorldGenMonumentPiece1 q coreRoom
WorldGenMonumentPieces$WorldGenMonumentPiece1 r childPieces
WorldGenMonumentPieces$WorldGenMonumentPiece1 b (LGeneratorAccess;Ljava/util/Random;LStructureBoundingBox;)V generateEntranceWall
WorldGenMonumentPieces$WorldGenMonumentPiece1 c (LGeneratorAccess;Ljava/util/Random;LStructureBoundingBox;)V generateRoofPiece
WorldGenMonumentPieces$WorldGenMonumentPiece1 d (LGeneratorAccess;Ljava/util/Random;LStructureBoundingBox;)V generateLowerWall
WorldGenMonumentPieces$WorldGenMonumentPiece1 e (LGeneratorAccess;Ljava/util/Random;LStructureBoundingBox;)V generateMiddleWall
WorldGenMonumentPieces$WorldGenMonumentPiece1 f (LGeneratorAccess;Ljava/util/Random;LStructureBoundingBox;)V generateUpperWall
WorldGenMonumentPieces$WorldGenMonumentPiece a BASE_GRAY
WorldGenMonumentPieces$WorldGenMonumentPiece b BASE_LIGHT
WorldGenMonumentPieces$WorldGenMonumentPiece c BASE_BLACK
WorldGenMonumentPieces$WorldGenMonumentPiece d DOT_DECO_DATA
WorldGenMonumentPieces$WorldGenMonumentPiece e LAMP_BLOCK
WorldGenMonumentPieces$WorldGenMonumentPiece f FILL_BLOCK
WorldGenMonumentPieces$WorldGenMonumentPiece g FILL_KEEP
WorldGenMonumentPieces$WorldGenMonumentPiece h GRIDROOM_SOURCE_INDEX
WorldGenMonumentPieces$WorldGenMonumentPiece i GRIDROOM_TOP_CONNECT_INDEX
WorldGenMonumentPieces$WorldGenMonumentPiece j GRIDROOM_LEFTWING_CONNECT_INDEX
WorldGenMonumentPieces$WorldGenMonumentPiece k GRIDROOM_RIGHTWING_CONNECT_INDEX
WorldGenMonumentPieces$WorldGenMonumentPiece l roomDefinition
WorldGenMonumentPieces$WorldGenMonumentPiece b (III)I getRoomIndex
WorldGenMonumentPieces$WorldGenMonumentPiece b (I)I getRoomY
WorldGenMonumentPieces$WorldGenMonumentPiece c (I)I getRoomZ
WorldGenMonumentPieces$WorldGenMonumentPieceSimple p mainDesign
WorldGenMonumentPieces$WorldGenMonumentPiece8 p mainDesign
WorldGenMonumentPieces$WorldGenMonumentStateTracker a index
WorldGenMonumentPieces$WorldGenMonumentStateTracker b connections
WorldGenMonumentPieces$WorldGenMonumentStateTracker c hasOpening
WorldGenMonumentPieces$WorldGenMonumentStateTracker d claimed
WorldGenMonumentPieces$WorldGenMonumentStateTracker e isSource
WorldGenMonumentPieces$WorldGenMonumentStateTracker f scanIndex
WorldGenMonumentPieces$WorldGenMonumentStateTracker b ()Z isSpecial
WorldGenMonumentPieces$WorldGenMonumentStateTracker c ()I countOpenings
WorldGenMonumentPieces$WorldGenMonumentStateTracker b (LWorldGenMonumentPieces$WorldGenMonumentStateTracker;)Z access$100
WorldGenMonumentPieces$WorldGenMonumentStateTracker b (LWorldGenMonumentPieces$WorldGenMonumentStateTracker;Z)Z access$902
WorldGenMonumentPieces$WorldGenMonumentStateTracker c (LWorldGenMonumentPieces$WorldGenMonumentStateTracker;)[LWorldGenMonumentPieces$WorldGenMonumentStateTracker; access$1000
WorldGenMonumentPieces$WorldGenMonumentStateTracker d (LWorldGenMonumentPieces$WorldGenMonumentStateTracker;)[Z access$1100
WorldGenFeatureOceanRuin b ()Ljava/lang/String; getFeatureName
WorldGenFeatureOceanRuin c ()I getLookupRange
WorldGenFeatureOceanRuin b (LChunkGenerator;)I getSeparation
WorldGenFeatureOceanRuin d ()I getRandomSalt
WorldGenFeatureOceanRuinPieces a WARM_RUINS
WorldGenFeatureOceanRuinPieces b RUINS_BRICK
WorldGenFeatureOceanRuinPieces c RUINS_CRACKED
WorldGenFeatureOceanRuinPieces d RUINS_MOSSY
WorldGenFeatureOceanRuinPieces e BIG_RUINS_BRICK
WorldGenFeatureOceanRuinPieces f BIG_RUINS_MOSSY
WorldGenFeatureOceanRuinPieces g BIG_RUINS_CRACKED
WorldGenFeatureOceanRuinPieces h BIG_WARM_RUINS
WorldGenFeatureOceanRuinPieces b (Ljava/util/Random;)LMinecraftKey; getBigWarmRuin
WorldGenFeatureOceanRuinPieces$OceanRuinPiece d biomeType
WorldGenFeatureOceanRuinPieces$OceanRuinPiece e integrity
WorldGenFeatureOceanRuinPieces$OceanRuinPiece f templateLocation
WorldGenFeatureOceanRuinPieces$OceanRuinPiece g rotation
WorldGenFeatureOceanRuinPieces$OceanRuinPiece h isLarge
WorldGenFeaturePillagerOutpostPoolPiece a element
WorldGenFeaturePillagerOutpostPoolPiece b position
WorldGenFeaturePillagerOutpostPoolPiece d groundLevelDelta
WorldGenFeaturePillagerOutpostPoolPiece c rotation
WorldGenFeaturePillagerOutpostPoolPiece e junctions
WorldGenFeaturePillagerOutpostPoolPiece f structureManager
WorldGenFeaturePillagerOutpostPoolPiece af_ ()LEnumBlockRotation; getRotation
WorldGenFeaturePillagerOutpostPoolPiece toString ()Ljava/lang/String; toString
WorldGenFeaturePillagerOutpostPoolPiece b ()LWorldGenFeatureDefinedStructurePoolStructure; getElement
WorldGenFeaturePillagerOutpostPoolPiece c ()LBlockPosition; getPosition
WorldGenFeaturePillagerOutpostPoolPiece d ()I getGroundLevelDelta
WorldGenFeaturePillagerOutpostPoolPiece e ()Ljava/util/List; getJunctions
WorldGenScatteredPiece a width
WorldGenScatteredPiece b height
WorldGenScatteredPiece c depth
WorldGenScatteredPiece d heightPosition
WorldGenShipwreck a PIVOT
WorldGenShipwreck b STRUCTURE_LOCATION_BEACHED
WorldGenShipwreck c STRUCTURE_LOCATION_OCEAN
WorldGenShipwreck$ShipwreckPiece d rotation
WorldGenShipwreck$ShipwreckPiece e templateLocation
WorldGenShipwreck$ShipwreckPiece f isBeached
WorldGenStrongholdPieces a STRONGHOLD_PIECE_WEIGHTS
WorldGenStrongholdPieces b currentPieces
WorldGenStrongholdPieces c imposedPiece
WorldGenStrongholdPieces d totalWeight
WorldGenStrongholdPieces e SMOOTH_STONE_SELECTOR
WorldGenStrongholdPieces c ()Z updatePieceWeight
WorldGenStrongholdPieces b (LWorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILEnumDirection;I)LWorldGenStrongholdPieces$WorldGenStrongholdPiece; generatePieceFromSmallDoor
WorldGenStrongholdPieces c (LWorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;IIILEnumDirection;I)LStructurePiece; generateAndAddPiece
WorldGenStrongholdPieces b ()LWorldGenStrongholdPieces$WorldGenStrongholdStones; access$200
WorldGenStrongholdPieces$3 a $SwitchMap$net$minecraft$world$level$levelgen$structure$StrongholdPieces$StrongholdPiece$SmallDoorType
WorldGenStrongholdPieces$3 b $SwitchMap$net$minecraft$core$Direction
WorldGenStrongholdPieces$WorldGenStrongholdChestCorridor a hasPlacedChest
WorldGenStrongholdPieces$WorldGenStrongholdCorridor a steps
WorldGenStrongholdPieces$WorldGenStrongholdCrossing a leftLow
WorldGenStrongholdPieces$WorldGenStrongholdCrossing b leftHigh
WorldGenStrongholdPieces$WorldGenStrongholdCrossing c rightLow
WorldGenStrongholdPieces$WorldGenStrongholdCrossing e rightHigh
WorldGenStrongholdPieces$WorldGenStrongholdLibrary a isTall
WorldGenStrongholdPieces$WorldGenStrongholdPieceWeight a pieceClass
WorldGenStrongholdPieces$WorldGenStrongholdPieceWeight b weight
WorldGenStrongholdPieces$WorldGenStrongholdPieceWeight c placeCount
WorldGenStrongholdPieces$WorldGenStrongholdPieceWeight d maxPlaceCount
WorldGenStrongholdPieces$WorldGenStrongholdPortalRoom a hasPlacedSpawner
WorldGenStrongholdPieces$WorldGenStrongholdRoomCrossing a type
WorldGenStrongholdPieces$WorldGenStrongholdStairs2 a isSource
WorldGenStrongholdPieces$WorldGenStrongholdStart a previousPiece
WorldGenStrongholdPieces$WorldGenStrongholdStart b portalRoomPiece
WorldGenStrongholdPieces$WorldGenStrongholdStart c pendingChildren
WorldGenStrongholdPieces$WorldGenStrongholdStart ae_ ()LBlockPosition; getLocatorPosition
WorldGenStrongholdPieces$WorldGenStrongholdStairs a leftChild
WorldGenStrongholdPieces$WorldGenStrongholdStairs b rightChild
WorldGenStrongholdPieces$WorldGenStrongholdPiece d entryDoor
WorldGenStrongholdPieces$WorldGenStrongholdPiece b (LWorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)LStructurePiece; generateSmallDoorChildLeft
WorldGenStrongholdPieces$WorldGenStrongholdPiece c (LWorldGenStrongholdPieces$WorldGenStrongholdStart;Ljava/util/List;Ljava/util/Random;II)LStructurePiece; generateSmallDoorChildRight
WorldGenFactory q LOGGER
WorldGenFactory a MINESHAFT
WorldGenFactory b PILLAGER_OUTPOST
WorldGenFactory c NETHER_FORTRESS
WorldGenFactory d STRONGHOLD
WorldGenFactory e JUNGLE_PYRAMID
WorldGenFactory f OCEAN_RUIN
WorldGenFactory g DESERT_PYRAMID
WorldGenFactory h IGLOO
WorldGenFactory i SWAMP_HUT
WorldGenFactory j OCEAN_MONUMENT
WorldGenFactory k END_CITY
WorldGenFactory l WOODLAND_MANSION
WorldGenFactory m BURIED_TREASURE
WorldGenFactory n SHIPWRECK
WorldGenFactory o VILLAGE
WorldGenFactory p NETHER_FOSSIL
PersistentIndexed a all
PersistentIndexed b remaining
PersistentIndexed b (LNBTTagCompound;)LNBTTagCompound; save
PersistentIndexed b (J)Z hasStartIndex
PersistentIndexed c (J)Z hasUnhandledIndex
PersistentIndexed d (J)V removeIndex
StructurePiece m CAVE_AIR
StructurePiece n boundingBox
StructurePiece a orientation
StructurePiece b mirror
StructurePiece c rotation
StructurePiece o genDepth
StructurePiece d type
StructurePiece e SHAPE_CHECK_BLOCKS
StructurePiece f ()LNBTTagCompound; createTag
StructurePiece g ()LStructureBoundingBox; getBoundingBox
StructurePiece h ()I getGenDepth
StructurePiece ae_ ()LBlockPosition; getLocatorPosition
StructurePiece c (III)LBlockPosition; getWorldPos
StructurePiece d (I)I getWorldY
StructurePiece b (II)I getWorldZ
StructurePiece b (LGeneratorAccess;LStructureBoundingBox;IIIIII)V generateAirBox
StructurePiece b (LGeneratorAccess;LIBlockData;IIILStructureBoundingBox;)V fillColumnDown
StructurePiece i ()LEnumDirection; getOrientation
StructurePiece af_ ()LEnumBlockRotation; getRotation
StructurePiece j ()LEnumBlockMirror; getMirror
StructurePiece k ()LWorldGenFeatureStructurePieceType; getType
StructurePiece$1 a $SwitchMap$net$minecraft$core$Direction
StructurePiece$StructurePieceBlockSelector a next
StructureStart a INVALID_START
StructureStart e feature
StructureStart b pieces
StructureStart c boundingBox
StructureStart f chunkX
StructureStart g chunkZ
StructureStart h references
StructureStart d random
StructureStart c ()LStructureBoundingBox; getBoundingBox
StructureStart d ()Ljava/util/List; getPieces
StructureStart b ()V calculateBoundingBox
StructureStart e ()Z isValid
StructureStart f ()I getChunkX
StructureStart g ()I getChunkZ
StructureStart h ()Z canBeReferenced
StructureStart i ()V addReference
StructureStart j ()I getReferences
StructureStart k ()I getMaxReferences
StructureStart l ()LStructureGenerator; getFeature
WorldGenWitchHut e spawnedWitch
WorldGenWitchHut f spawnedCat
DefinedStructurePiece d LOGGER
DefinedStructurePiece a template
DefinedStructurePiece b placeSettings
DefinedStructurePiece c templatePosition
DefinedStructurePiece af_ ()LEnumBlockRotation; getRotation
WorldGenWoodlandMansionPieces$FirstFloorRoomCollection b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
WorldGenWoodlandMansionPieces$FirstFloorRoomCollection b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
WorldGenWoodlandMansionPieces$FirstFloorRoomCollection c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
WorldGenWoodlandMansionPieces$FirstFloorRoomCollection d (Ljava/util/Random;)Ljava/lang/String; get2x2
WorldGenWoodlandMansionPieces$FirstFloorRoomCollection e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
WorldGenWoodlandMansionPieces$FloorRoomCollection b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
WorldGenWoodlandMansionPieces$FloorRoomCollection b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
WorldGenWoodlandMansionPieces$FloorRoomCollection c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
WorldGenWoodlandMansionPieces$FloorRoomCollection d (Ljava/util/Random;)Ljava/lang/String; get2x2
WorldGenWoodlandMansionPieces$FloorRoomCollection e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
WorldGenWoodlandMansionPieces$MansionGrid a random
WorldGenWoodlandMansionPieces$MansionGrid b baseGrid
WorldGenWoodlandMansionPieces$MansionGrid c thirdFloorGrid
WorldGenWoodlandMansionPieces$MansionGrid d floorRooms
WorldGenWoodlandMansionPieces$MansionGrid e entranceX
WorldGenWoodlandMansionPieces$MansionGrid f entranceY
WorldGenWoodlandMansionPieces$MansionGrid b (LWorldGenWoodlandMansionPieces$SimpleGrid;IIII)LEnumDirection; get1x2RoomDirection
WorldGenWoodlandMansionPieces$MansionGrid b ()V setupThirdFloor
WorldGenWoodlandMansionPieces$MansionGrid b (LWorldGenWoodlandMansionPieces$MansionGrid;)LWorldGenWoodlandMansionPieces$SimpleGrid; access$200
WorldGenWoodlandMansionPieces$MansionGrid c (LWorldGenWoodlandMansionPieces$MansionGrid;)I access$300
WorldGenWoodlandMansionPieces$MansionGrid d (LWorldGenWoodlandMansionPieces$MansionGrid;)I access$400
WorldGenWoodlandMansionPieces$MansionGrid e (LWorldGenWoodlandMansionPieces$MansionGrid;)[LWorldGenWoodlandMansionPieces$SimpleGrid; access$1000
WorldGenWoodlandMansionPieces$MansionPiecePlacer a structureManager
WorldGenWoodlandMansionPieces$MansionPiecePlacer b random
WorldGenWoodlandMansionPieces$MansionPiecePlacer c startX
WorldGenWoodlandMansionPieces$MansionPiecePlacer d startY
WorldGenWoodlandMansionPieces$MansionPiecePlacer b (Ljava/util/List;LWorldGenWoodlandMansionPieces$PlacementData;)V traverseWallPiece
WorldGenWoodlandMansionPieces$MansionPiecePlacer c (Ljava/util/List;LWorldGenWoodlandMansionPieces$PlacementData;)V traverseTurn
WorldGenWoodlandMansionPieces$MansionPiecePlacer d (Ljava/util/List;LWorldGenWoodlandMansionPieces$PlacementData;)V traverseInnerTurn
WorldGenWoodlandMansionPieces$PlacementData a rotation
WorldGenWoodlandMansionPieces$PlacementData b position
WorldGenWoodlandMansionPieces$PlacementData c wallType
WorldGenWoodlandMansionPieces$SecondFloorRoomCollection b (Ljava/util/Random;)Ljava/lang/String; get1x1Secret
WorldGenWoodlandMansionPieces$SecondFloorRoomCollection b (Ljava/util/Random;Z)Ljava/lang/String; get1x2FrontEntrance
WorldGenWoodlandMansionPieces$SecondFloorRoomCollection c (Ljava/util/Random;)Ljava/lang/String; get1x2Secret
WorldGenWoodlandMansionPieces$SecondFloorRoomCollection d (Ljava/util/Random;)Ljava/lang/String; get2x2
WorldGenWoodlandMansionPieces$SecondFloorRoomCollection e (Ljava/util/Random;)Ljava/lang/String; get2x2Secret
WorldGenWoodlandMansionPieces$SimpleGrid a grid
WorldGenWoodlandMansionPieces$SimpleGrid b width
WorldGenWoodlandMansionPieces$SimpleGrid c height
WorldGenWoodlandMansionPieces$SimpleGrid d valueIfOutside
WorldGenWoodlandMansionPieces$SimpleGrid b (III)Z edgesTo
WorldGenWoodlandMansionPieces$SimpleGrid b (LWorldGenWoodlandMansionPieces$SimpleGrid;)I access$600
WorldGenWoodlandMansionPieces$WoodlandMansionPiece d templateName
WorldGenWoodlandMansionPieces$WoodlandMansionPiece e rotation
WorldGenWoodlandMansionPieces$WoodlandMansionPiece f mirror
DefinedStructureTestTrue a INSTANCE
DefinedStructureProcessorBlockIgnore a STRUCTURE_BLOCK
DefinedStructureProcessorBlockIgnore b AIR
DefinedStructureProcessorBlockIgnore c STRUCTURE_AND_AIR
DefinedStructureProcessorBlockIgnore d toIgnore
DefinedStructureTestBlock a block
DefinedStructureProcessorRotation a integrity
DefinedStructureTestBlockState a blockState
DefinedStructureProcessorGravity a heightmap
DefinedStructureProcessorGravity b offset
DefinedStructureProcessorJigsawReplacement a INSTANCE
DefinedStructureProcessorNop a INSTANCE
DefinedStructureProcessorPredicates a inputPredicate
DefinedStructureProcessorPredicates b locPredicate
DefinedStructureProcessorPredicates c outputState
DefinedStructureProcessorPredicates d outputTag
DefinedStructureProcessorPredicates b ()LNBTTagCompound; getOutputTag
DefinedStructureProcessorPredicates b (Lcom/mojang/datafixers/Dynamic;)LNBTBase; lambda$deserialize$0
DefinedStructureTestRandomBlock a block
DefinedStructureTestRandomBlock b probability
DefinedStructureTestRandomBlockState a blockState
DefinedStructureTestRandomBlockState b probability
DefinedStructureProcessorRule a rules
DefinedStructureRuleTest b (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
DefinedStructureRuleTestType b ALWAYS_TRUE_TEST
DefinedStructureRuleTestType c BLOCK_TEST
DefinedStructureRuleTestType d BLOCKSTATE_TEST
DefinedStructureRuleTestType e TAG_TEST
DefinedStructureRuleTestType f RANDOM_BLOCK_TEST
DefinedStructureRuleTestType g RANDOM_BLOCKSTATE_TEST
DefinedStructureManager a LOGGER
DefinedStructureManager b structureRepository
DefinedStructureManager c fixerUpper
DefinedStructureManager d server
DefinedStructureManager e generatedDir
DefinedStructureManager b (LMinecraftKey;)LDefinedStructure; get
DefinedStructureManager e (LMinecraftKey;)LDefinedStructure; loadFromResource
DefinedStructureManager f (LMinecraftKey;)LDefinedStructure; loadFromGenerated
DefinedStructureManager c (LMinecraftKey;)Z save
DefinedStructureManager b (LMinecraftKey;Ljava/lang/String;)Ljava/nio/file/Path; createAndValidatePathToStructure
DefinedStructureManager d (LMinecraftKey;)V remove
DefinedStructureManager g (LMinecraftKey;)LDefinedStructure; lambda$get$0
DefinedStructureInfo a mirror
DefinedStructureInfo b rotation
DefinedStructureInfo c rotationPivot
DefinedStructureInfo d ignoreEntities
DefinedStructureInfo e chunkPos
DefinedStructureInfo f boundingBox
DefinedStructureInfo g keepLiquids
DefinedStructureInfo h random
DefinedStructureInfo i palette
DefinedStructureInfo j processors
DefinedStructureInfo k knownShape
DefinedStructureInfo b (Z)LDefinedStructureInfo; setKeepLiquids
DefinedStructureInfo c (Z)LDefinedStructureInfo; setKnownShape
DefinedStructureInfo b ()LDefinedStructureInfo; clearProcessors
DefinedStructureInfo b (LDefinedStructureProcessor;)LDefinedStructureInfo; popProcessor
DefinedStructureInfo c ()LEnumBlockMirror; getMirror
DefinedStructureInfo d ()LEnumBlockRotation; getRotation
DefinedStructureInfo e ()LBlockPosition; getRotationPivot
DefinedStructureInfo f ()LChunkCoordIntPair; getChunkPos
DefinedStructureInfo b (LBlockPosition;)Ljava/util/Random; getRandom
DefinedStructureInfo g ()Z isIgnoreEntities
DefinedStructureInfo h ()LStructureBoundingBox; getBoundingBox
DefinedStructureInfo i ()Z getKnownShape
DefinedStructureInfo j ()Ljava/util/List; getProcessors
DefinedStructureInfo k ()V updateBoundingBoxFromChunkPos
DefinedStructureInfo l ()Z shouldKeepLiquids
DefinedStructureInfo b (LChunkCoordIntPair;)LStructureBoundingBox; calculateBoundingBox
DefinedStructureProcessor b (Lcom/mojang/datafixers/types/DynamicOps;)Lcom/mojang/datafixers/Dynamic; serialize
DefinedStructureStructureProcessorType b BLOCK_IGNORE
DefinedStructureStructureProcessorType c BLOCK_ROT
DefinedStructureStructureProcessorType d GRAVITY
DefinedStructureStructureProcessorType e JIGSAW_REPLACEMENT
DefinedStructureStructureProcessorType f RULE
DefinedStructureStructureProcessorType g NOP
DefinedStructureStructureProcessorType b (Lcom/mojang/datafixers/Dynamic;)LDefinedStructureProcessor; lambda$static$0
DefinedStructure a palettes
DefinedStructure b entityInfoList
DefinedStructure c size
DefinedStructure d author
DefinedStructure b ()Ljava/lang/String; getAuthor
DefinedStructure b (LGeneratorAccess;LBlockPosition;LDefinedStructureInfo;)V placeInWorld
DefinedStructure b (LDefinedStructureInfo;LBlockPosition;)LStructureBoundingBox; getBoundingBox
DefinedStructure b (LNBTTagCompound;)V load
DefinedStructure$1 a $SwitchMap$net$minecraft$world$level$block$Rotation
DefinedStructure$1 b $SwitchMap$net$minecraft$world$level$block$Mirror
DefinedStructure$SimplePalette a DEFAULT_BLOCK_STATE
DefinedStructure$SimplePalette b ids
DefinedStructure$SimplePalette c lastId
DefinedStructure$SimplePalette iterator ()Ljava/util/Iterator; iterator
DefinedStructure$BlockInfo a pos
DefinedStructure$BlockInfo b state
DefinedStructure$BlockInfo c nbt
DefinedStructure$BlockInfo toString ()Ljava/lang/String; toString
DefinedStructure$EntityInfo a pos
DefinedStructure$EntityInfo b blockPos
DefinedStructure$EntityInfo c nbt
DefinedStructureTestTag a tag
WorldGenSurfaceMesa ac WHITE_TERRACOTTA
WorldGenSurfaceMesa ad ORANGE_TERRACOTTA
WorldGenSurfaceMesa ae TERRACOTTA
WorldGenSurfaceMesa af YELLOW_TERRACOTTA
WorldGenSurfaceMesa ag BROWN_TERRACOTTA
WorldGenSurfaceMesa ah RED_TERRACOTTA
WorldGenSurfaceMesa ai LIGHT_GRAY_TERRACOTTA
WorldGenSurfaceMesa a clayBands
WorldGenSurfaceMesa b seed
WorldGenSurfaceMesa c pillarNoise
WorldGenSurfaceMesa d pillarRoofNoise
WorldGenSurfaceMesa e clayBandsOffsetNoise
WorldGenSurfaceMesa b (J)V generateBands
WorldGenSurfaceComposite a surfaceBuilder
WorldGenSurfaceComposite b config
WorldGenSurfaceMesaBryce ac WHITE_TERRACOTTA
WorldGenSurfaceMesaBryce ad ORANGE_TERRACOTTA
WorldGenSurfaceMesaBryce ae TERRACOTTA
WorldGenSurfaceFrozenOcean a PACKED_ICE
WorldGenSurfaceFrozenOcean b SNOW_BLOCK
WorldGenSurfaceFrozenOcean c AIR
WorldGenSurfaceFrozenOcean d GRAVEL
WorldGenSurfaceFrozenOcean e ICE
WorldGenSurfaceFrozenOcean ac icebergNoise
WorldGenSurfaceFrozenOcean ad icebergRoofNoise
WorldGenSurfaceFrozenOcean ae seed
NetherForestSurfaceBuilder b AIR
NetherForestSurfaceBuilder a seed
NetherForestSurfaceBuilder c decorationNoise
WorldGenSurfaceNether c AIR
WorldGenSurfaceNether d GRAVEL
WorldGenSurfaceNether e SOUL_SAND
WorldGenSurfaceNether a seed
WorldGenSurfaceNether b decorationNoise
SoulSandValleySurfaceBuilder a GRAVEL
SoulSandValleySurfaceBuilder b SOUL_SAND
SoulSandValleySurfaceBuilder c SOUL_SOIL
SoulSandValleySurfaceBuilder d seed
SoulSandValleySurfaceBuilder e soulSandNoiseFloor
SoulSandValleySurfaceBuilder ac soulSoilNoiseFloor
SoulSandValleySurfaceBuilder ad soulSandNoiseCeiling
SoulSandValleySurfaceBuilder ae soulSoilNoiseCeiling
SoulSandValleySurfaceBuilder af gravelNoise
WorldGenSurface f AIR
WorldGenSurface g DIRT
WorldGenSurface h GRASS_BLOCK
WorldGenSurface i PODZOL
WorldGenSurface j GRAVEL
WorldGenSurface k STONE
WorldGenSurface l COARSE_DIRT
WorldGenSurface m SAND
WorldGenSurface n RED_SAND
WorldGenSurface o WHITE_TERRACOTTA
WorldGenSurface p MYCELIUM
WorldGenSurface q SOUL_SAND
WorldGenSurface r NETHERRACK
WorldGenSurface s ENDSTONE
WorldGenSurface t CRIMSON_NYLIUM
WorldGenSurface u WARPED_NYLIUM
WorldGenSurface v NETHER_WART_BLOCK
WorldGenSurface w WARPED_WART_BLOCK
WorldGenSurface x CONFIG_EMPTY
WorldGenSurface y CONFIG_PODZOL
WorldGenSurface z CONFIG_GRAVEL
WorldGenSurface A CONFIG_GRASS
WorldGenSurface B CONFIG_DIRT
WorldGenSurface C CONFIG_STONE
WorldGenSurface D CONFIG_COARSE_DIRT
WorldGenSurface E CONFIG_DESERT
WorldGenSurface F CONFIG_OCEAN_SAND
WorldGenSurface G CONFIG_FULL_SAND
WorldGenSurface H CONFIG_BADLANDS
WorldGenSurface I CONFIG_MYCELIUM
WorldGenSurface J CONFIG_HELL
WorldGenSurface K CONFIG_SOUL_SAND_VALLEY
WorldGenSurface L CONFIG_THEEND
WorldGenSurface M CONFIG_CRIMSON_FOREST
WorldGenSurface N CONFIG_WARPED_FOREST
WorldGenSurface O DEFAULT
WorldGenSurface P MOUNTAIN
WorldGenSurface Q SHATTERED_SAVANNA
WorldGenSurface R GRAVELLY_MOUNTAIN
WorldGenSurface S GIANT_TREE_TAIGA
WorldGenSurface T SWAMP
WorldGenSurface U BADLANDS
WorldGenSurface V WOODED_BADLANDS
WorldGenSurface W ERODED_BADLANDS
WorldGenSurface X FROZEN_OCEAN
WorldGenSurface Y NETHER
WorldGenSurface Z NETHER_FOREST
WorldGenSurface aa SOUL_SAND_VALLEY
WorldGenSurface ab NOPE
WorldGenSurface a configurationFactory
WorldGenSurfaceConfigurationBase a topMaterial
WorldGenSurfaceConfigurationBase b underMaterial
WorldGenSurfaceConfigurationBase c underwaterMaterial
WorldGenSurfaceConfigurationBase b ()LIBlockData; getUnderMaterial
WorldGenSurfaceConfigurationBase c ()LIBlockData; getUnderwaterMaterial
WorldGenSurfaceConfiguration b ()LIBlockData; getUnderMaterial
WorldGenSurfaceConfiguration c ()LIBlockData; getUnderwaterMaterial
WorldGenSurfaceMesaForest ac WHITE_TERRACOTTA
WorldGenSurfaceMesaForest ad ORANGE_TERRACOTTA
WorldGenSurfaceMesaForest ae TERRACOTTA
NoiseGeneratorPerlin d p
NoiseGeneratorPerlin a xo
NoiseGeneratorPerlin b yo
NoiseGeneratorPerlin c zo
NoiseGeneratorOctaves a noiseLevels
NoiseGeneratorOctaves b highestFreqValueFactor
NoiseGeneratorOctaves c highestFreqInputFactor
NoiseGenerator3 a noiseLevels
NoiseGenerator3 b highestFreqValueFactor
NoiseGenerator3 c highestFreqInputFactor
NoiseGenerator3Handler a GRADIENT
NoiseGenerator3Handler e SQRT_3
NoiseGenerator3Handler f F2
NoiseGenerator3Handler g G2
NoiseGenerator3Handler h p
NoiseGenerator3Handler b xo
NoiseGenerator3Handler c yo
NoiseGenerator3Handler d zo
LightEngineBlock e DIRECTIONS
LightEngineBlock f pos
LightEngineBlock d (J)I getLightEmission
LightEngineBlock b (JJI)I computeLevelFromNeighbor
LightEngineStorageBlock d (J)I getLightValue
LightEngineStorageBlock$BlockDataLayerStorageMap b ()LLightEngineStorageArray; copy
LightEngineStorageArray b lastSectionKeys
LightEngineStorageArray c lastSections
LightEngineStorageArray d cacheEnabled
LightEngineStorageArray a map
LightEngineStorageArray b ()LLightEngineStorageArray; copy
LightEngineStorageArray b (J)Z hasLayer
LightEngineStorageArray c (J)LNibbleArray; getLayer
LightEngineStorageArray d (J)LNibbleArray; removeLayer
LightEngineStorageArray c ()V clearCache
LightEngineStorageArray d ()V disableCache
LightEngineGraph a levelCount
LightEngineGraph b queues
LightEngineGraph c computedLevels
LightEngineGraph d firstQueuedLevel
LightEngineGraph e hasWork
LightEngineGraph e (J)V removeFromQueue
LightEngineGraph f (J)V checkNode
LightEngineGraph b (JJIZ)V checkNeighbor
LightEngineGraph b ()Z hasWork
LightEngineGraph b (I)I runUpdates
LightEngineGraph c ()I getQueueSize
LightEngineGraph c (J)I getLevel
LightEngineGraph b (JJI)I computeLevelFromNeighbor
LightEngineGraph$1 a val$minQueueSize
LightEngineGraph$1 b this$0
LightEngineGraph$1 rehash (I)V rehash
LightEngineGraph$2 a val$minMapSize
LightEngineGraph$2 b this$0
LightEngineGraph$2 rehash (I)V rehash
NibbleArrayFlat b (III)I getIndex
LightEngineLayer e DIRECTIONS
LightEngineLayer a chunkSource
LightEngineLayer b layer
LightEngineLayer c storage
LightEngineLayer f runningLightUpdates
LightEngineLayer d pos
LightEngineLayer g lastChunkPos
LightEngineLayer h lastChunk
LightEngineLayer f (J)V checkNode
LightEngineLayer d ()V clearCache
LightEngineLayer c (J)I getLevel
LightEngineLayer b (JJI)I computeLevelFromNeighbor
LightEngineLayer b (LBlockPosition;)I getLightValue
LightEngineLayer b (J)Ljava/lang/String; getDebugData
LightEngineLayer b (LChunkCoordIntPair;Z)V retainData
LightEngineLayerEventListener b (LBlockPosition;)I getLightValue
LightEngineStorage a EMPTY_DATA
LightEngineStorage k DIRECTIONS
LightEngineStorage l layer
LightEngineStorage m chunkSource
LightEngineStorage b dataSectionSet
LightEngineStorage c toMarkNoData
LightEngineStorage d toMarkData
LightEngineStorage e visibleSectionData
LightEngineStorage f updatingSectionData
LightEngineStorage g changedSections
LightEngineStorage h sectionsAffectedByLightUpdates
LightEngineStorage i queuedSections
LightEngineStorage n columnsToRetainQueuedDataFor
LightEngineStorage o toRemove
LightEngineStorage j hasToRemove
LightEngineStorage g (J)Z storingLightForSection
LightEngineStorage h (J)LNibbleArray; getDataLayerData
LightEngineStorage d (J)I getLightValue
LightEngineStorage i (J)I getStoredLevel
LightEngineStorage b (JI)V setStoredLevel
LightEngineStorage c (J)I getLevel
LightEngineStorage b (J)I getLevelFromSource
LightEngineStorage j (J)LNibbleArray; createDataLayer
LightEngineStorage k (J)V onNodeAdded
LightEngineStorage l (J)V onNodeRemoved
LightEngineStorage b (JZ)V enableLightSources
LightEngineStorage c (JZ)V retainData
LightEngineStorage d (JZ)V updateSectionStatus
LightEngineStorage d ()V runAllUpdates
LightEngineStorage e ()V swapSectionMap
LightEngineStorage$1 a $SwitchMap$net$minecraft$core$Direction
LightEngine a blockEngine
LightEngine b skyEngine
LightEngine b (LChunkCoordIntPair;Z)V retainData
LightEngine b (LBlockPosition;I)I getRawBrightness
LightEngineSky e DIRECTIONS
LightEngineSky f HORIZONTALS
LightEngineSky b (JJI)I computeLevelFromNeighbor
LightEngineSky f (J)V checkNode
LightEngineSky b (J)Ljava/lang/String; getDebugData
LightEngineStorageSky k HORIZONTALS
LightEngineStorageSky l sectionsWithSources
LightEngineStorageSky m sectionsToAddSourcesTo
LightEngineStorageSky n sectionsToRemoveSourcesFrom
LightEngineStorageSky o columnsWithSkySources
LightEngineStorageSky p hasSourceInconsistencies
LightEngineStorageSky d (J)I getLightValue
LightEngineStorageSky k (J)V onNodeAdded
LightEngineStorageSky p (J)V queueRemoveSource
LightEngineStorageSky q (J)V queueAddSource
LightEngineStorageSky f ()V recheckInconsistencyFlag
LightEngineStorageSky l (J)V onNodeRemoved
LightEngineStorageSky b (JZ)V enableLightSources
LightEngineStorageSky j (J)LNibbleArray; createDataLayer
LightEngineStorageSky m (J)Z hasLightSource
LightEngineStorageSky n (J)Z isAboveData
LightEngineStorageSky o (J)Z lightOnInSection
LightEngineStorageSky$1 a $SwitchMap$net$minecraft$core$Direction
LightEngineStorageSky$SkyDataLayerStorageMap b currentLowestY
LightEngineStorageSky$SkyDataLayerStorageMap c topSections
LightEngineStorageSky$SkyDataLayerStorageMap b ()LLightEngineStorageArray; copy
LightEngineStorageSky$SkyDataLayerStorageMap b (LLightEngineStorageSky$SkyDataLayerStorageMap;)I access$100
SpatialLongSet a map
SpatialLongSet add (J)Z add
SpatialLongSet rem (J)Z rem
SpatialLongSet removeFirstLong ()J removeFirstLong
SpatialLongSet size ()I size
SpatialLongSet isEmpty ()Z isEmpty
SpatialLongSet$InternalMap a X_BITS
SpatialLongSet$InternalMap b Z_BITS
SpatialLongSet$InternalMap c Y_BITS
SpatialLongSet$InternalMap d Z_OFFSET
SpatialLongSet$InternalMap e X_OFFSET
SpatialLongSet$InternalMap g OUTER_MASK
SpatialLongSet$InternalMap h lastPos
SpatialLongSet$InternalMap i lastOuterKey
SpatialLongSet$InternalMap j minSize
SpatialLongSet$InternalMap b (J)I getInnerKey
SpatialLongSet$InternalMap c (J)Z addBit
SpatialLongSet$InternalMap d (J)Z removeBit
SpatialLongSet$InternalMap e (J)Z removeFromNullEntry
SpatialLongSet$InternalMap b (IJ)Z removeFromEntry
SpatialLongSet$InternalMap rehash (I)V rehash
FluidTypeEmpty b ()Z isEmpty
FluidTypeEmpty c ()F getExplosionResistance
FluidTypeEmpty b (LFluid;)LIBlockData; createLegacyBlock
FluidTypeEmpty c (LFluid;)Z isSource
FluidTypeEmpty d (LFluid;)I getAmount
FluidTypeEmpty b (LFluid;LIBlockAccess;LBlockPosition;)LVoxelShape; getShape
FluidTypeFlowing$1 rehash (I)V rehash
FluidType c FLUID_STATE_REGISTRY
FluidType d stateDefinition
FluidType a defaultFluidState
FluidType g ()LBlockStateList; getStateDefinition
FluidType f (LFluid;)V registerDefaultState
FluidType h ()LFluid; defaultFluidState
FluidType b (LWorld;LBlockPosition;LFluid;Ljava/util/Random;)V randomTick
FluidType i ()LParticleParam; getDripParticle
FluidType j ()Z isRandomlyTicking
FluidType b ()Z isEmpty
FluidType c ()F getExplosionResistance
FluidType b (LFluid;)LIBlockData; createLegacyBlock
FluidType c (LFluid;)Z isSource
FluidType d (LFluid;)I getAmount
FluidType b (LFluid;LIBlockAccess;LBlockPosition;)LVoxelShape; getShape
FluidImpl c ()LFluidType; getType
FluidTypeLava d ()LFluidType; getFlowing
FluidTypeLava e ()LFluidType; getSource
FluidTypeLava b (LWorld;LBlockPosition;LFluid;Ljava/util/Random;)V randomTick
FluidTypeLava b (LIWorldReader;LBlockPosition;)Z isFlammable
FluidTypeLava i ()LParticleParam; getDripParticle
FluidTypeLava b (LIWorldReader;)I getSlopeFindDistance
FluidTypeLava b (LFluid;)LIBlockData; createLegacyBlock
FluidTypeLava c (LIWorldReader;)I getDropOff
FluidTypeLava f ()Z canConvertToSource
FluidTypeLava j ()Z isRandomlyTicking
FluidTypeLava c ()F getExplosionResistance
FluidTypeLava$Flowing d (LFluid;)I getAmount
FluidTypeLava$Flowing c (LFluid;)Z isSource
FluidTypeLava$Source d (LFluid;)I getAmount
FluidTypeLava$Source c (LFluid;)Z isSource
Material$Builder a pushReaction
Material$Builder b blocksMotion
Material$Builder c flammable
Material$Builder d isAlwaysDestroyable
Material$Builder e liquid
Material$Builder f replaceable
Material$Builder g solid
Material$Builder h color
Material$Builder i solidBlocking
Material$Builder b ()LMaterial$Builder; nonSolid
Material$Builder c ()LMaterial$Builder; noCollider
Material$Builder j ()LMaterial$Builder; notSolidBlocking
Material$Builder d ()LMaterial$Builder; notAlwaysDestroyable
Material$Builder e ()LMaterial$Builder; flammable
Material$Builder f ()LMaterial$Builder; replaceable
Material$Builder g ()LMaterial$Builder; destroyOnPush
Material$Builder h ()LMaterial$Builder; notPushable
Material$Builder i ()LMaterial; build
FluidTypeWater d ()LFluidType; getFlowing
FluidTypeWater e ()LFluidType; getSource
FluidTypeWater i ()LParticleParam; getDripParticle
FluidTypeWater f ()Z canConvertToSource
FluidTypeWater b (LIWorldReader;)I getSlopeFindDistance
FluidTypeWater b (LFluid;)LIBlockData; createLegacyBlock
FluidTypeWater c (LIWorldReader;)I getDropOff
FluidTypeWater c ()F getExplosionResistance
FluidTypeWater$Flowing d (LFluid;)I getAmount
FluidTypeWater$Flowing c (LFluid;)Z isSource
FluidTypeWater$Source d (LFluid;)I getAmount
FluidTypeWater$Source c (LFluid;)Z isSource
AreaFactory make ()LArea; make
AreaLazy a transformer
AreaLazy b cache
AreaLazy c maxCache
WorldGenContext b ()LNoiseGeneratorPerlin; getBiomeNoise
WorldGenContextArea a cache
WorldGenContextArea b maxCache
WorldGenContextArea c biomeNoise
WorldGenContextArea d seed
WorldGenContextArea e rval
WorldGenContextArea b (LAreaTransformer8;)LAreaLazy; createResult
WorldGenContextArea b ()LNoiseGeneratorPerlin; getBiomeNoise
WorldGenContextArea b (JJ)J mixSeed
GenLayerBiome a BIRCH_FOREST
GenLayerBiome b DESERT
GenLayerBiome c MOUNTAINS
GenLayerBiome d FOREST
GenLayerBiome e SNOWY_TUNDRA
GenLayerBiome f JUNGLE
GenLayerBiome g BADLANDS_PLATEAU
GenLayerBiome h WOODED_BADLANDS_PLATEAU
GenLayerBiome i MUSHROOM_FIELDS
GenLayerBiome j PLAINS
GenLayerBiome k GIANT_TREE_TAIGA
GenLayerBiome l DARK_FOREST
GenLayerBiome m SAVANNA
GenLayerBiome n SWAMP
GenLayerBiome o TAIGA
GenLayerBiome p SNOWY_TAIGA
GenLayerBiome q LEGACY_WARM_BIOMES
GenLayerBiome r WARM_BIOMES
GenLayerBiome s MEDIUM_BIOMES
GenLayerBiome t COLD_BIOMES
GenLayerBiome u ICE_BIOMES
GenLayerBiome v fixedBiome
GenLayerBiome w warmBiomes
GenLayer a LOGGER
GenLayer b area
GenLayers a WARM_OCEAN
GenLayers b LUKEWARM_OCEAN
GenLayers c OCEAN
GenLayers d COLD_OCEAN
GenLayers e FROZEN_OCEAN
GenLayers f DEEP_WARM_OCEAN
GenLayers g DEEP_LUKEWARM_OCEAN
GenLayers h DEEP_OCEAN
GenLayers i DEEP_COLD_OCEAN
GenLayers j DEEP_FROZEN_OCEAN
GenLayers b (I)Z isShallowOcean
AreaTransformer1 b (LAreaContextTransformed;)LArea; lambda$run$1
AreaTransformer2 b (LAreaContextTransformed;LArea;II)I lambda$null$0
AreaTransformerIdentity b (I)I getParentY
AreaTransformerOffset1 b (I)I getParentY
AreaTransformer b (I)I getParentY
AreaTransformer8 apply (II)I apply
Path a heap
Path b size
Path b ()LPathPoint; peek
Path c ()LPathPoint; pop
Path b (LPathPoint;)V remove
Path d ()I size
Path b (I)V downHeap
Path e ()Z isEmpty
Path f ()[LPathPoint; getHeap
PathfinderFlying b ()LPathPoint; getStart
PathfinderFlying b (LPathPoint;)Z isOpen
PathPoint a x
PathPoint b y
PathPoint c z
PathPoint m hash
PathPoint d heapIdx
PathPoint e g
PathPoint f h
PathPoint g f
PathPoint h cameFrom
PathPoint i closed
PathPoint j walkedDistance
PathPoint k costMalus
PathPoint l type
PathPoint b (III)I createHash
PathPoint b (LPathPoint;)F distanceToSqr
PathPoint b (LBlockPosition;)F distanceToSqr
PathPoint c (LPathPoint;)F distanceManhattan
PathPoint c (LBlockPosition;)F distanceManhattan
PathPoint b ()LVec3D; asVec3
PathPoint equals (Ljava/lang/Object;)Z equals
PathPoint hashCode ()I hashCode
PathPoint c ()Z inOpenSet
PathPoint toString ()Ljava/lang/String; toString
PathPoint b (LPacketDataSerializer;)LPathPoint; createFromStream
PathfinderAbstract a level
PathfinderAbstract b mob
PathfinderAbstract c nodes
PathfinderAbstract d entityWidth
PathfinderAbstract e entityHeight
PathfinderAbstract f entityDepth
PathfinderAbstract g canPassDoors
PathfinderAbstract h canOpenDoors
PathfinderAbstract i canFloat
PathfinderAbstract b ()LPathPoint; getStart
PathfinderAbstract b (Z)V setCanOpenDoors
PathfinderAbstract c (Z)V setCanFloat
PathfinderAbstract c ()Z canPassDoors
PathfinderAbstract d ()Z canOpenDoors
PathfinderAbstract e ()Z canFloat
PathEntity a nodes
PathEntity b openSet
PathEntity c closedSet
PathEntity d targetNodes
PathEntity e index
PathEntity f target
PathEntity g distToTarget
PathEntity h reached
PathEntity b ()Z isDone
PathEntity c ()LPathPoint; last
PathEntity d ()Ljava/util/List; getNodes
PathEntity b (I)V truncate
PathEntity e ()I getSize
PathEntity f ()I getIndex
PathEntity c (I)V setIndex
PathEntity g ()LBaseBlockPosition; currentPos
PathEntity h ()Z canReach
PathEntity i ()[LPathPoint; getOpenSet
PathEntity j ()[LPathPoint; getClosedSet
PathEntity b (LPacketDataSerializer;)LPathEntity; createFromStream
PathEntity toString ()Ljava/lang/String; toString
PathEntity k ()LBlockPosition; getTarget
PathEntity l ()F getDistToTarget
Pathfinder a neighbors
Pathfinder b maxVisitedNodes
Pathfinder c nodeEvaluator
Pathfinder d openSet
Pathfinder b (Ljava/util/Map;LPathDestination;)LPathEntity; lambda$findPath$2
PathfinderWater j allowBreaching
PathfinderWater b ()LPathPoint; getStart
PathfinderWater b (III)LPathPoint; getWaterNode
PathfinderWater c (III)LPathType; isFree
PathDestination m bestHeuristic
PathDestination n bestNode
PathDestination o reached
PathDestination d ()LPathPoint; getBestNode
PathDestination e ()V setReached
PathDestination f ()Z isReached
PathDestination c (LPacketDataSerializer;)LPathDestination; createFromStream
PathfinderTurtle k oldWalkableCost
PathfinderTurtle l oldWaterBorderCost
PathfinderTurtle b ()LPathPoint; getStart
PathfinderNormal j oldWaterCost
PathfinderNormal b ()LPathPoint; getStart
PathfinderNormal b (LIBlockAccess;III)LPathType; getBlockPathTypeStatic
PathfinderNormal c (LIBlockAccess;III)LPathType; getBlockPathTypeRaw
RunnableSaveScoreboard a savedData
RunnableSaveScoreboard run ()V run
MapIconBanner a pos
MapIconBanner b color
MapIconBanner c name
MapIconBanner b ()LEnumColor; getColor
MapIconBanner c ()LMapIcon$Type; getDecoration
MapIconBanner d ()LIChatBaseComponent; getName
MapIconBanner equals (Ljava/lang/Object;)Z equals
MapIconBanner hashCode ()I hashCode
MapIconBanner e ()LNBTTagCompound; save
MapIconBanner f ()Ljava/lang/String; getId
MapIconBanner b (LIBlockAccess;LBlockPosition;)LIBlockData; lambda$fromWorld$0
MapIconBanner$1 a $SwitchMap$net$minecraft$world$item$DyeColor
WorldMapFrame a pos
WorldMapFrame b rotation
WorldMapFrame c entityId
WorldMapFrame b ()LBlockPosition; getPos
WorldMapFrame c ()I getRotation
WorldMapFrame d ()I getEntityId
WorldMapFrame e ()Ljava/lang/String; getId
PersistentIdCounts a usedAuxIds
PersistentIdCounts b (LNBTTagCompound;)LNBTTagCompound; save
PersistentCommandStorage a namespaces
PersistentCommandStorage b storage
PersistentCommandStorage b (Ljava/lang/String;Ljava/lang/String;)LPersistentCommandStorage$Container; lambda$set$1
PersistentCommandStorage c (Ljava/lang/String;Ljava/lang/String;)LPersistentCommandStorage$Container; lambda$get$0
PersistentCommandStorage$Container a storage
PersistentCommandStorage$Container b (LNBTTagCompound;)LNBTTagCompound; save
PersistentCommandStorage$Container b (Ljava/lang/String;)Ljava/util/stream/Stream; getKeys
SecondaryWorldData b wrapped
SecondaryWorldData b ()I getXSpawn
SecondaryWorldData c ()I getYSpawn
SecondaryWorldData d ()I getZSpawn
SecondaryWorldData e ()J getGameTime
SecondaryWorldData f ()J getDayTime
SecondaryWorldData g ()J getSizeOnDisk
SecondaryWorldData h ()LNBTTagCompound; getLoadedPlayerTag
SecondaryWorldData i ()Ljava/lang/String; getLevelName
SecondaryWorldData j ()I getVersion
SecondaryWorldData k ()J getLastPlayed
SecondaryWorldData l ()Z isThundering
SecondaryWorldData m ()I getThunderTime
SecondaryWorldData n ()Z isRaining
SecondaryWorldData o ()I getRainTime
SecondaryWorldData p ()LEnumGamemode; getGameType
SecondaryWorldData b (I)V setYSpawn
SecondaryWorldData c (I)V setZSpawn
SecondaryWorldData b (J)V setDayTime
SecondaryWorldData d (I)V setVersion
SecondaryWorldData e (I)V setThunderTime
SecondaryWorldData b (Z)V setRaining
SecondaryWorldData f (I)V setRainTime
SecondaryWorldData q ()Z isGenerateMapFeatures
SecondaryWorldData r ()Z isHardcore
SecondaryWorldData s ()LWorldType; getGeneratorType
SecondaryWorldData t ()Z getAllowCommands
SecondaryWorldData c (Z)V setAllowCommands
SecondaryWorldData u ()Z isInitialized
SecondaryWorldData d (Z)V setInitialized
SecondaryWorldData v ()LGameRules; getGameRules
SecondaryWorldData w ()LEnumDifficulty; getDifficulty
SecondaryWorldData x ()Z isDifficultyLocked
SecondaryWorldData e (Z)V setDifficultyLocked
SecondaryWorldData y ()LCustomFunctionCallbackTimerQueue; getScheduledEvents
Convertable$1 a val$rootPath
Convertable$1 b val$levelPath
Convertable$1 c val$stream
Convertable$1 d this$0
Convertable$1 visitFile (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; visitFile
LevelSummary a levelId
LevelSummary b levelName
LevelSummary c lastPlayed
LevelSummary d sizeOnDisk
LevelSummary e requiresConversion
LevelSummary f gameMode
LevelSummary g hardcore
LevelSummary h hasCheats
LevelSummary i worldVersionName
LevelSummary j worldVersion
LevelSummary k snapshot
LevelSummary l generatorType
LevelSummary b ()Ljava/lang/String; getLevelName
LevelSummary c ()J getSizeOnDisk
LevelSummary d ()Z isRequiresConversion
LevelSummary e ()J getLastPlayed
LevelSummary f ()LEnumGamemode; getGameMode
LevelSummary g ()Z isHardcore
LevelSummary h ()Z hasCheats
LevelSummary i ()LIChatBaseComponent; getWorldVersionName
LevelSummary j ()I getWorldVersion
LevelSummary k ()Z isSnapshot
LevelSummary l ()Z markVersionInList
LevelSummary m ()Z askToOpenWorld
LevelSummary n ()Z isOldCustomizedWorld
LevelSummary o ()Z shouldBackup
LevelSummary compareTo (Ljava/lang/Object;)I compareTo
WorldUpgraderIterator a LOGGER
LootValueBinomial d n
LootValueBinomial e p
LootValueBinomial b (LLootValueBinomial;)F access$100
LootValueBinomial$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
LootValueBinomial$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
LootTables au LOCATIONS
LootTables av IMMUTABLE_LOCATIONS
LootTables a EMPTY
LootTables b SPAWN_BONUS_CHEST
LootTables c END_CITY_TREASURE
LootTables d SIMPLE_DUNGEON
LootTables e VILLAGE_WEAPONSMITH
LootTables f VILLAGE_TOOLSMITH
LootTables g VILLAGE_ARMORER
LootTables h VILLAGE_CARTOGRAPHER
LootTables i VILLAGE_MASON
LootTables j VILLAGE_SHEPHERD
LootTables k VILLAGE_BUTCHER
LootTables l VILLAGE_FLETCHER
LootTables m VILLAGE_FISHER
LootTables n VILLAGE_TANNERY
LootTables o VILLAGE_TEMPLE
LootTables p VILLAGE_DESERT_HOUSE
LootTables q VILLAGE_PLAINS_HOUSE
LootTables r VILLAGE_TAIGA_HOUSE
LootTables s VILLAGE_SNOWY_HOUSE
LootTables t VILLAGE_SAVANNA_HOUSE
LootTables u ABANDONED_MINESHAFT
LootTables v NETHER_BRIDGE
LootTables w STRONGHOLD_LIBRARY
LootTables x STRONGHOLD_CROSSING
LootTables y STRONGHOLD_CORRIDOR
LootTables z DESERT_PYRAMID
LootTables A JUNGLE_TEMPLE
LootTables B JUNGLE_TEMPLE_DISPENSER
LootTables C IGLOO_CHEST
LootTables D WOODLAND_MANSION
LootTables E UNDERWATER_RUIN_SMALL
LootTables F UNDERWATER_RUIN_BIG
LootTables G BURIED_TREASURE
LootTables H SHIPWRECK_MAP
LootTables I SHIPWRECK_SUPPLY
LootTables J SHIPWRECK_TREASURE
LootTables K PILLAGER_OUTPOST
LootTables L SHEEP_WHITE
LootTables M SHEEP_ORANGE
LootTables N SHEEP_MAGENTA
LootTables O SHEEP_LIGHT_BLUE
LootTables P SHEEP_YELLOW
LootTables Q SHEEP_LIME
LootTables R SHEEP_PINK
LootTables S SHEEP_GRAY
LootTables T SHEEP_LIGHT_GRAY
LootTables U SHEEP_CYAN
LootTables V SHEEP_PURPLE
LootTables W SHEEP_BLUE
LootTables X SHEEP_BROWN
LootTables Y SHEEP_GREEN
LootTables Z SHEEP_RED
LootTables aa SHEEP_BLACK
LootTables ab FISHING
LootTables ac FISHING_JUNK
LootTables ad FISHING_TREASURE
LootTables ae FISHING_FISH
LootTables af CAT_MORNING_GIFT
LootTables ag ARMORER_GIFT
LootTables ah BUTCHER_GIFT
LootTables ai CARTOGRAPHER_GIFT
LootTables aj CLERIC_GIFT
LootTables ak FARMER_GIFT
LootTables al FISHERMAN_GIFT
LootTables am FLETCHER_GIFT
LootTables an LEATHERWORKER_GIFT
LootTables ao LIBRARIAN_GIFT
LootTables ap MASON_GIFT
LootTables aq SHEPHERD_GIFT
LootTables ar TOOLSMITH_GIFT
LootTables as WEAPONSMITH_GIFT
LootTables at PIGLIN_BARTERING
LootValueConstant d value
LootValueConstant$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
LootValueConstant$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
LootIntegerLimit a min
LootIntegerLimit b max
LootIntegerLimit c op
LootIntegerLimit b (I)LLootIntegerLimit; upperBound
LootIntegerLimit applyAsInt (I)I applyAsInt
LootIntegerLimit b (II)I lambda$new$2
LootIntegerLimit c (II)I lambda$new$1
LootIntegerLimit c (I)I lambda$new$0
LootIntegerLimit b (LLootIntegerLimit;)Ljava/lang/Integer; access$200
LootIntegerLimit$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
LootIntegerLimit$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
LootTableInfo$DynamicDrop add (LLootTableInfo;Ljava/util/function/Consumer;)V add
LootTableInfo$EntityTarget$Serializer read (Lcom/google/gson/stream/JsonReader;)Ljava/lang/Object; read
LootTableInfo$EntityTarget$Serializer write (Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V write
LootSelector a entries
LootSelector b conditions
LootSelector c compositeCondition
LootSelector d functions
LootSelector e compositeFunction
LootSelector f rolls
LootSelector g bonusRolls
LootSelector b (Ljava/util/function/Consumer;LLootTableInfo;)V addRandomItem
LootSelector b (LLootSelector;)[LLootEntryAbstract; access$200
LootSelector c (LLootSelector;)LLootValueBounds; access$300
LootSelector d (LLootSelector;)[LLootItemCondition; access$400
LootSelector e (LLootSelector;)[LLootItemFunction; access$500
LootSelector$Builder a entries
LootSelector$Builder b conditions
LootSelector$Builder c functions
LootSelector$Builder d rolls
LootSelector$Builder e bonusRolls
LootSelector$Builder b ()LLootSelector; build
LootSelector$Builder c ()Ljava/lang/Object; unwrap
LootSelector$Builder b (LLootItemFunction$Builder;)Ljava/lang/Object; apply
LootSelector$Builder b (LLootItemCondition$Builder;)Ljava/lang/Object; when
LootSelector$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
LootSelector$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
LootTable$Builder a pools
LootTable$Builder b functions
LootTable$Builder c paramSet
LootTable$Builder b ()LLootTable; build
LootTable$Builder c ()Ljava/lang/Object; unwrap
LootTable$Builder b (LLootItemFunction$Builder;)Ljava/lang/Object; apply
LootTable$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
LootTable$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
LootPredicateManager a LOGGER
LootPredicateManager b GSON
LootPredicateManager c conditions
LootPredicateManager b (LMinecraftKey;)LLootTable; lambda$apply$1
LootValue a CONSTANT
LootValue b UNIFORM
LootValue c BINOMIAL
LootValueGenerators a GENERATORS
LootValueBounds d min
LootValueBounds e max
LootValueBounds b ()F getMin
LootValueBounds c ()F getMax
LootValueBounds b (Ljava/util/Random;)F getFloat
LootValueBounds b (LLootValueBounds;)F access$100
LootValueBounds$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
LootValueBounds$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
LootCollector a problems
LootCollector b context
LootCollector c params
LootCollector d conditionResolver
LootCollector e visitedConditions
LootCollector f tableResolver
LootCollector g visitedTables
LootCollector h contextCache
LootCollector b ()Ljava/lang/String; getContext
LootCollector b (Ljava/lang/String;)LLootCollector; forChild
LootCollector b (Ljava/lang/String;LMinecraftKey;)LLootCollector; enterCondition
LootCollector b (LMinecraftKey;)Z hasVisitedCondition
LootCollector c (LMinecraftKey;)LLootTable; resolveLootTable
LootCollector d (LMinecraftKey;)LLootItemCondition; resolveCondition
LootCollector c (Ljava/lang/String;)Ljava/lang/String; lambda$enterCondition$3
LootCollector d (Ljava/lang/String;)Ljava/lang/String; lambda$enterTable$2
LootCollector e (Ljava/lang/String;)Ljava/lang/String; lambda$forChild$1
LootCollector c ()Ljava/lang/String; lambda$new$0
LootEntryAlternatives$Builder a entries
LootEntryAlternatives$Builder b ()LLootEntryAbstract; build
LootEntryAlternatives$Builder d ()LLootEntryAbstract$Builder; getThis
LootEntryChildren a ALWAYS_FALSE
LootEntryChildren b ALWAYS_TRUE
LootEntryChildren expand (LLootTableInfo;Ljava/util/function/Consumer;)Z expand
LootEntryChildren b (LLootEntryChildren;)LLootEntryChildren; or
LootEntryChildren b (LLootEntryChildren;LLootTableInfo;Ljava/util/function/Consumer;)Z lambda$and$2
LootEntryChildren b (LLootTableInfo;Ljava/util/function/Consumer;)Z lambda$static$0
LootEntryChildrenAbstract c children
LootEntryChildrenAbstract e composedChildren
LootEntryChildrenAbstract expand (LLootTableInfo;Ljava/util/function/Consumer;)Z expand
LootEntryChildrenAbstract$1 a val$constructor
LootEntryChildrenAbstract$CompositeEntryConstructor create ([LLootEntryAbstract;[LLootItemCondition;)LLootEntryChildrenAbstract; create
LootEntryChildrenAbstract$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootEntryAbstract; deserialize
LootSelectorDynamic c TYPE
LootSelectorDynamic h name
LootSelectorDynamic$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[LLootItemCondition;[LLootItemFunction;)LLootSelectorEntry; deserialize
LootSelectorEmpty$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[LLootItemCondition;[LLootItemFunction;)LLootSelectorEntry; deserialize
LootEntryGroup$Builder a entries
LootEntryGroup$Builder b (LLootEntryAbstract$Builder;)LLootEntryGroup$Builder; append
LootEntryGroup$Builder b ()LLootEntryAbstract; build
LootEntryGroup$Builder d ()LLootEntryAbstract$Builder; getThis
LootItem c item
LootItem$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[LLootItemCondition;[LLootItemFunction;)LLootSelectorEntry; deserialize
LootEntries a ID_TO_SERIALIZER
LootEntries b CLASS_TO_SERIALIZER
LootEntries b ()Ljava/util/Map; access$100
LootEntries$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
LootEntries$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
LootEntryAbstract d conditions
LootEntryAbstract c compositeCondition
LootEntryAbstract$Builder a conditions
LootEntryAbstract$Builder d ()LLootEntryAbstract$Builder; getThis
LootEntryAbstract$Builder e ()LLootEntryAbstract$Builder; unwrap
LootEntryAbstract$Builder f ()[LLootItemCondition; getConditions
LootEntryAbstract$Builder b (LLootEntryAbstract$Builder;)LLootEntryGroup$Builder; append
LootEntryAbstract$Builder c (LLootEntryAbstract$Builder;)LLootEntrySequence$Builder; then
LootEntryAbstract$Builder b ()LLootEntryAbstract; build
LootEntryAbstract$Builder c ()Ljava/lang/Object; unwrap
LootEntryAbstract$Builder b (LLootItemCondition$Builder;)Ljava/lang/Object; when
LootEntryAbstract$Serializer a name
LootEntryAbstract$Serializer b clazz
LootEntryAbstract$Serializer b ()Ljava/lang/Class; getContainerClass
LootEntryAbstract$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootEntryAbstract; deserialize
LootSelectorEntry e weight
LootSelectorEntry f quality
LootSelectorEntry g functions
LootSelectorEntry c compositeFunction
LootSelectorEntry h entry
LootSelectorEntry expand (LLootTableInfo;Ljava/util/function/Consumer;)Z expand
LootSelectorEntry$1 a this$0
LootSelectorEntry$Builder a weight
LootSelectorEntry$Builder b quality
LootSelectorEntry$Builder c functions
LootSelectorEntry$Builder b (I)LLootSelectorEntry$Builder; setQuality
LootSelectorEntry$Builder b (LLootItemFunction$Builder;)Ljava/lang/Object; apply
LootSelectorEntry$DummyBuilder c constructor
LootSelectorEntry$DummyBuilder g ()LLootSelectorEntry$DummyBuilder; getThis
LootSelectorEntry$DummyBuilder b ()LLootEntryAbstract; build
LootSelectorEntry$DummyBuilder d ()LLootEntryAbstract$Builder; getThis
LootSelectorEntry$EntryBase b this$0
LootSelectorEntry$EntryConstructor build (II[LLootItemCondition;[LLootItemFunction;)LLootSelectorEntry; build
LootSelectorEntry$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[LLootItemCondition;[LLootItemFunction;)LLootSelectorEntry; deserialize
LootSelectorEntry$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootEntryAbstract; deserialize
LootSelectorLootTable c name
LootSelectorLootTable$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[LLootItemCondition;[LLootItemFunction;)LLootSelectorEntry; deserialize
LootEntrySequence$Builder a entries
LootEntrySequence$Builder c (LLootEntryAbstract$Builder;)LLootEntrySequence$Builder; then
LootEntrySequence$Builder b ()LLootEntryAbstract; build
LootEntrySequence$Builder d ()LLootEntryAbstract$Builder; getThis
LootSelectorTag c tag
LootSelectorTag h expand
LootSelectorTag expand (LLootTableInfo;Ljava/util/function/Consumer;)Z expand
LootSelectorTag b (LTag;)LLootSelectorEntry$Builder; expandTag
LootSelectorTag b (LTag;II[LLootItemCondition;[LLootItemFunction;)LLootSelectorEntry; lambda$tagContents$1
LootSelectorTag b (LLootSelectorTag;)Z access$100
LootSelectorTag$1 a val$item
LootSelectorTag$1 c this$0
LootSelectorTag$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[LLootItemCondition;[LLootItemFunction;)LLootSelectorEntry; deserialize
LootItemFunctionApplyBonus a FORMULAS
LootItemFunctionApplyBonus c enchantment
LootItemFunctionApplyBonus d formula
LootItemFunctionApplyBonus b (LEnchantment;)LLootItemFunctionConditional$Builder; addUniformBonusCount
LootItemFunctionApplyBonus b (LEnchantment;[LLootItemCondition;)LLootItemFunction; lambda$addOreBonusCount$1
LootItemFunctionApplyBonus b (LLootItemFunctionApplyBonus;)LLootItemFunctionApplyBonus$Formula; access$100
LootItemFunctionApplyBonus b ()Ljava/util/Map; access$200
LootItemFunctionApplyBonus$BinomialWithBonusCount a TYPE
LootItemFunctionApplyBonus$BinomialWithBonusCount b extraRounds
LootItemFunctionApplyBonus$BinomialWithBonusCount c probability
LootItemFunctionApplyBonus$FormulaDeserializer deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemFunctionApplyBonus$Formula; deserialize
LootItemFunctionApplyBonus$OreDrops a TYPE
LootItemFunctionApplyBonus$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionApplyBonus$UniformBonusCount a TYPE
LootItemFunctionApplyBonus$UniformBonusCount b bonusMultiplier
LootItemFunctionExplosionDecay b ()LLootItemFunctionConditional$Builder; explosionDecay
LootItemFunctionExplosionDecay$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionCopyState a block
LootItemFunctionCopyState c properties
LootItemFunctionCopyState b (LLootItemFunctionCopyState;)Ljava/util/Set; access$300
LootItemFunctionCopyState$Builder a block
LootItemFunctionCopyState$Builder b properties
LootItemFunctionCopyState$Builder b ()LLootItemFunction; build
LootItemFunctionCopyState$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionCopyState$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionCopyName a source
LootItemFunctionCopyName$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionCopyNBT a source
LootItemFunctionCopyNBT c operations
LootItemFunctionCopyNBT d ENTITY_GETTER
LootItemFunctionCopyNBT e BLOCK_ENTITY_GETTER
LootItemFunctionCopyNBT b (Ljava/lang/String;)LArgumentNBTKey$NbtPath; compileNbtPath
LootItemFunctionCopyNBT b ()Ljava/util/function/Function; access$600
LootItemFunctionCopyNBT c ()Ljava/util/function/Function; access$700
LootItemFunctionCopyNBT b (LLootItemFunctionCopyNBT;)Ljava/util/List; access$900
LootItemFunctionCopyNBT$Builder a source
LootItemFunctionCopyNBT$Builder b ops
LootItemFunctionCopyNBT$Builder b ()LLootItemFunction; build
LootItemFunctionCopyNBT$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionCopyNBT$CopyOperation a sourcePathText
LootItemFunctionCopyNBT$CopyOperation b sourcePath
LootItemFunctionCopyNBT$CopyOperation c targetPathText
LootItemFunctionCopyNBT$CopyOperation d targetPath
LootItemFunctionCopyNBT$CopyOperation e op
LootItemFunctionCopyNBT$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionEnchant a LOGGER
LootItemFunctionEnchant c enchantments
LootItemFunctionEnchant b ()LLootItemFunctionEnchant$Builder; randomEnchantment
LootItemFunctionEnchant c ()LLootItemFunctionConditional$Builder; randomApplicableEnchantment
LootItemFunctionEnchant$Builder a enchantments
LootItemFunctionEnchant$Builder b ()LLootItemFunction; build
LootItemFunctionEnchant$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionEnchant$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootEnchantLevel a levels
LootEnchantLevel c treasure
LootEnchantLevel b (LLootEnchantLevel;)Z access$200
LootEnchantLevel$Builder a levels
LootEnchantLevel$Builder b treasure
LootEnchantLevel$Builder e ()LLootEnchantLevel$Builder; allowTreasure
LootEnchantLevel$Builder b ()LLootItemFunction; build
LootEnchantLevel$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootEnchantLevel$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionExplorationMap c LOGGER
LootItemFunctionExplorationMap a DEFAULT_DECORATION
LootItemFunctionExplorationMap d destination
LootItemFunctionExplorationMap e mapDecoration
LootItemFunctionExplorationMap f zoom
LootItemFunctionExplorationMap g searchRadius
LootItemFunctionExplorationMap h skipKnownStructures
LootItemFunctionExplorationMap b ()LLootItemFunctionExplorationMap$Builder; makeExplorationMap
LootItemFunctionExplorationMap b (LLootItemFunctionExplorationMap;)LMapIcon$Type; access$200
LootItemFunctionExplorationMap c (LLootItemFunctionExplorationMap;)B access$300
LootItemFunctionExplorationMap d (LLootItemFunctionExplorationMap;)I access$400
LootItemFunctionExplorationMap e (LLootItemFunctionExplorationMap;)Z access$500
LootItemFunctionExplorationMap c ()Lorg/apache/logging/log4j/Logger; access$600
LootItemFunctionExplorationMap$Builder a destination
LootItemFunctionExplorationMap$Builder b mapDecoration
LootItemFunctionExplorationMap$Builder c zoom
LootItemFunctionExplorationMap$Builder d searchRadius
LootItemFunctionExplorationMap$Builder e skipKnownStructures
LootItemFunctionExplorationMap$Builder b ()LLootItemFunction; build
LootItemFunctionExplorationMap$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionExplorationMap$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionFillPlayerHead a entityTarget
LootItemFunctionFillPlayerHead$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionUser b (LLootItemFunction$Builder;)Ljava/lang/Object; apply
LootItemFunctionUser c ()Ljava/lang/Object; unwrap
LootItemFunctionLimitCount a limiter
LootItemFunctionLimitCount$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionConditional b predicates
LootItemFunctionConditional a compositePredicates
LootItemFunctionConditional b (LItemStack;LLootTableInfo;)LItemStack; apply
LootItemFunctionConditional apply (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; apply
LootItemFunctionConditional$Builder a conditions
LootItemFunctionConditional$Builder f ()LLootItemFunctionConditional$Builder; unwrap
LootItemFunctionConditional$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionConditional$Builder g ()[LLootItemCondition; getConditions
LootItemFunctionConditional$Builder c ()Ljava/lang/Object; unwrap
LootItemFunctionConditional$Builder b (LLootItemCondition$Builder;)Ljava/lang/Object; when
LootItemFunctionConditional$DummyBuilder a constructor
LootItemFunctionConditional$DummyBuilder b ()LLootItemFunction; build
LootItemFunctionConditional$DummyBuilder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionConditional$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionConditional$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemFunction; deserialize
LootItemFunction$Builder b ()LLootItemFunction; build
LootItemFunction$Serializer a name
LootItemFunction$Serializer b clazz
LootItemFunction$Serializer b ()Ljava/lang/Class; getFunctionClass
LootItemFunction$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemFunction; deserialize
LootItemFunctions b FUNCTIONS_BY_NAME
LootItemFunctions c FUNCTIONS_BY_CLASS
LootItemFunctions a IDENTITY
LootItemFunctions$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
LootItemFunctions$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
LootEnchantFunction a value
LootEnchantFunction c limit
LootEnchantFunction b ()Z hasLimit
LootEnchantFunction b (LLootEnchantFunction;)Z access$200
LootEnchantFunction c (LLootEnchantFunction;)I access$300
LootEnchantFunction$Builder a count
LootEnchantFunction$Builder b limit
LootEnchantFunction$Builder b ()LLootItemFunction; build
LootEnchantFunction$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootEnchantFunction$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSetAttribute a modifiers
LootItemFunctionSetAttribute b ()LLootItemFunctionSetAttribute$Builder; setAttributes
LootItemFunctionSetAttribute$1 a $SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
LootItemFunctionSetAttribute$Builder a modifiers
LootItemFunctionSetAttribute$Builder b ()LLootItemFunction; build
LootItemFunctionSetAttribute$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionSetAttribute$Modifier a name
LootItemFunctionSetAttribute$Modifier b attribute
LootItemFunctionSetAttribute$Modifier c operation
LootItemFunctionSetAttribute$Modifier d amount
LootItemFunctionSetAttribute$Modifier e id
LootItemFunctionSetAttribute$Modifier f slots
LootItemFunctionSetAttribute$Modifier b (LLootItemFunctionSetAttribute$Modifier;)[LEnumItemSlot; access$100
LootItemFunctionSetAttribute$Modifier c (LLootItemFunctionSetAttribute$Modifier;)Ljava/lang/String; access$200
LootItemFunctionSetAttribute$Modifier d (LLootItemFunctionSetAttribute$Modifier;)Ljava/lang/String; access$300
LootItemFunctionSetAttribute$Modifier e (LLootItemFunctionSetAttribute$Modifier;)LLootValueBounds; access$400
LootItemFunctionSetAttribute$Modifier f (LLootItemFunctionSetAttribute$Modifier;)LAttributeModifier$Operation; access$500
LootItemFunctionSetAttribute$ModifierBuilder a name
LootItemFunctionSetAttribute$ModifierBuilder b attribute
LootItemFunctionSetAttribute$ModifierBuilder c operation
LootItemFunctionSetAttribute$ModifierBuilder d amount
LootItemFunctionSetAttribute$ModifierBuilder e id
LootItemFunctionSetAttribute$ModifierBuilder f slots
LootItemFunctionSetAttribute$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSetContents a entries
LootItemFunctionSetContents b ()LLootItemFunctionSetContents$Builder; setContents
LootItemFunctionSetContents$Builder a entries
LootItemFunctionSetContents$Builder b ()LLootItemFunction; build
LootItemFunctionSetContents$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionSetContents$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSetTable a name
LootItemFunctionSetTable c seed
LootItemFunctionSetTable b (LLootItemFunctionSetTable;)J access$100
LootItemFunctionSetTable$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSetCount a value
LootItemFunctionSetCount$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSetDamage a LOGGER
LootItemFunctionSetDamage c damage
LootItemFunctionSetDamage$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSetLore a replace
LootItemFunctionSetLore c lore
LootItemFunctionSetLore d resolutionContext
LootItemFunctionSetLore b ()LLootItemFunctionSetLore$Builder; setLore
LootItemFunctionSetLore b (LLootItemFunctionSetLore;)Ljava/util/List; access$100
LootItemFunctionSetLore c (LLootItemFunctionSetLore;)LLootTableInfo$EntityTarget; access$200
LootItemFunctionSetLore$Builder a replace
LootItemFunctionSetLore$Builder b resolutionContext
LootItemFunctionSetLore$Builder c lore
LootItemFunctionSetLore$Builder b ()LLootItemFunction; build
LootItemFunctionSetLore$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionSetLore$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSetName a LOGGER
LootItemFunctionSetName c name
LootItemFunctionSetName d resolutionContext
LootItemFunctionSetName b (LIChatBaseComponent;)LIChatBaseComponent; lambda$createResolver$1
LootItemFunctionSetName b (LLootItemFunctionSetName;)LLootTableInfo$EntityTarget; access$100
LootItemFunctionSetName$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSetTag a tag
LootItemFunctionSetTag$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSetStewEffect a effectDurationMap
LootItemFunctionSetStewEffect b ()LLootItemFunctionSetStewEffect$Builder; stewEffect
LootItemFunctionSetStewEffect$Builder a effectDurationMap
LootItemFunctionSetStewEffect$Builder b ()LLootItemFunction; build
LootItemFunctionSetStewEffect$Builder d ()LLootItemFunctionConditional$Builder; getThis
LootItemFunctionSetStewEffect$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootItemFunctionSmelt a LOGGER
LootItemFunctionSmelt b ()LLootItemFunctionConditional$Builder; smelted
LootItemFunctionSmelt$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootItemFunctionConditional; deserialize
LootContextParameter a name
LootContextParameter toString ()Ljava/lang/String; toString
LootContextParameterSet a required
LootContextParameterSet b all
LootContextParameterSet b ()Ljava/util/Set; getAllowed
LootContextParameterSet toString ()Ljava/lang/String; toString
LootContextParameterSet c ()LLootContextParameterSet$Builder; builder
LootContextParameterSet b (LLootContextParameter;)Ljava/lang/String; lambda$toString$0
LootContextParameterSet$Builder a required
LootContextParameterSet$Builder b optional
LootContextParameterSet$Builder b (LLootContextParameter;)LLootContextParameterSet$Builder; optional
LootItemConditionAlternative a terms
LootItemConditionAlternative b composedPredicate
LootItemConditionAlternative test (Ljava/lang/Object;)Z test
LootItemConditionAlternative$Builder a terms
LootItemConditionAlternative$Builder build ()LLootItemCondition; build
LootItemConditionAlternative$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionTableBonus a enchantment
LootItemConditionTableBonus b values
LootItemConditionTableBonus test (Ljava/lang/Object;)Z test
LootItemConditionTableBonus b (LEnchantment;[F)LLootItemCondition; lambda$bonusLevelFlatChance$0
LootItemConditionTableBonus b (LLootItemConditionTableBonus;)[F access$100
LootItemConditionTableBonus$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionReference a LOGGER
LootItemConditionReference b name
LootItemConditionReference test (Ljava/lang/Object;)Z test
LootItemConditionReference b (LMinecraftKey;)LLootItemCondition; lambda$conditionReference$0
LootItemConditionReference$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionUser b (LLootItemCondition$Builder;)Ljava/lang/Object; when
LootItemConditionUser c ()Ljava/lang/Object; unwrap
LootItemConditionDamageSourceProperties a predicate
LootItemConditionDamageSourceProperties test (Ljava/lang/Object;)Z test
LootItemConditionDamageSourceProperties b (LCriterionConditionDamageSource$Builder;)LLootItemCondition; lambda$hasDamageSource$0
LootItemConditionDamageSourceProperties$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionEntityScore a scores
LootItemConditionEntityScore b entityTarget
LootItemConditionEntityScore test (Ljava/lang/Object;)Z test
LootItemConditionEntityScore b (LLootItemConditionEntityScore;)LLootTableInfo$EntityTarget; access$200
LootItemConditionEntityScore$Builder a scores
LootItemConditionEntityScore$Builder b entityTarget
LootItemConditionEntityScore$Builder build ()LLootItemCondition; build
LootItemConditionEntityScore$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionSurvivesExplosion a INSTANCE
LootItemConditionSurvivesExplosion b ()LLootItemCondition$Builder; survivesExplosion
LootItemConditionSurvivesExplosion test (Ljava/lang/Object;)Z test
LootItemConditionSurvivesExplosion d ()LLootItemCondition; lambda$survivesExplosion$0
LootItemConditionSurvivesExplosion c ()LLootItemConditionSurvivesExplosion; access$000
LootItemConditionSurvivesExplosion$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionInverted a term
LootItemConditionInverted test (Ljava/lang/Object;)Z test
LootItemConditionInverted b (LLootItemConditionInverted;)LLootItemCondition; lambda$invert$0
LootItemConditionInverted$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionLocationCheck a predicate
LootItemConditionLocationCheck b offset
LootItemConditionLocationCheck test (Ljava/lang/Object;)Z test
LootItemConditionLocationCheck b (LCriterionConditionLocation$Builder;LBlockPosition;)LLootItemCondition; lambda$checkLocation$1
LootItemConditionLocationCheck b (LCriterionConditionLocation$Builder;)LLootItemCondition; lambda$checkLocation$0
LootItemConditionLocationCheck b (LLootItemConditionLocationCheck;)LBlockPosition; access$100
LootItemConditionLocationCheck$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionBlockStateProperty a block
LootItemConditionBlockStateProperty b properties
LootItemConditionBlockStateProperty test (Ljava/lang/Object;)Z test
LootItemConditionBlockStateProperty b (LLootItemConditionBlockStateProperty;)LCriterionTriggerProperties; access$200
LootItemConditionBlockStateProperty$Builder a block
LootItemConditionBlockStateProperty$Builder b properties
LootItemConditionBlockStateProperty$Builder build ()LLootItemCondition; build
LootItemConditionBlockStateProperty$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemCondition$Builder build ()LLootItemCondition; build
LootItemCondition$Serializer a name
LootItemCondition$Serializer b clazz
LootItemCondition$Serializer b ()Ljava/lang/Class; getPredicateClass
LootItemCondition$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditions a CONDITIONS_BY_NAME
LootItemConditions b CONDITIONS_BY_CLASS
LootItemConditions b ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; orConditions
LootItemConditions b ([Ljava/util/function/Predicate;Ljava/lang/Object;)Z lambda$andConditions$1
LootItemConditions b (Ljava/lang/Object;)Z lambda$andConditions$0
LootItemConditions$Serializer serialize (Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; serialize
LootItemConditions$Serializer deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; deserialize
LootItemConditionEntityProperty a predicate
LootItemConditionEntityProperty b entityTarget
LootItemConditionEntityProperty test (Ljava/lang/Object;)Z test
LootItemConditionEntityProperty b (LLootItemConditionEntityProperty;)LLootTableInfo$EntityTarget; access$100
LootItemConditionEntityProperty$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionKilledByPlayer a INSTANCE
LootItemConditionKilledByPlayer b ()LLootItemCondition$Builder; killedByPlayer
LootItemConditionKilledByPlayer test (Ljava/lang/Object;)Z test
LootItemConditionKilledByPlayer d ()LLootItemCondition; lambda$killedByPlayer$0
LootItemConditionKilledByPlayer c ()LLootItemConditionKilledByPlayer; access$000
LootItemConditionKilledByPlayer$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionRandomChance a probability
LootItemConditionRandomChance test (Ljava/lang/Object;)Z test
LootItemConditionRandomChance b (F)LLootItemCondition; lambda$randomChance$0
LootItemConditionRandomChance$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionRandomChanceWithLooting a percent
LootItemConditionRandomChanceWithLooting b lootingMultiplier
LootItemConditionRandomChanceWithLooting test (Ljava/lang/Object;)Z test
LootItemConditionRandomChanceWithLooting b (FF)LLootItemCondition; lambda$randomChanceAndLootingBoost$0
LootItemConditionRandomChanceWithLooting b (LLootItemConditionRandomChanceWithLooting;)F access$100
LootItemConditionRandomChanceWithLooting$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionMatchTool a predicate
LootItemConditionMatchTool test (Ljava/lang/Object;)Z test
LootItemConditionMatchTool b (LCriterionConditionItem$Builder;)LLootItemCondition; lambda$toolMatches$0
LootItemConditionMatchTool$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionTimeCheck a period
LootItemConditionTimeCheck b value
LootItemConditionTimeCheck test (Ljava/lang/Object;)Z test
LootItemConditionTimeCheck b (LLootItemConditionTimeCheck;)LLootValueBounds; access$200
LootItemConditionTimeCheck$Builder a period
LootItemConditionTimeCheck$Builder b value
LootItemConditionTimeCheck$Builder b ()LLootItemConditionTimeCheck; build
LootItemConditionTimeCheck$Builder build ()LLootItemCondition; build
LootItemConditionTimeCheck$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
LootItemConditionWeatherCheck a isRaining
LootItemConditionWeatherCheck b isThundering
LootItemConditionWeatherCheck b ()LLootItemConditionWeatherCheck$Builder; weather
LootItemConditionWeatherCheck test (Ljava/lang/Object;)Z test
LootItemConditionWeatherCheck b (LLootItemConditionWeatherCheck;)Ljava/lang/Boolean; access$200
LootItemConditionWeatherCheck$Builder a isRaining
LootItemConditionWeatherCheck$Builder b isThundering
LootItemConditionWeatherCheck$Builder b (Ljava/lang/Boolean;)LLootItemConditionWeatherCheck$Builder; setThundering
LootItemConditionWeatherCheck$Builder b ()LLootItemConditionWeatherCheck; build
LootItemConditionWeatherCheck$Builder build ()LLootItemCondition; build
LootItemConditionWeatherCheck$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)LLootItemCondition; deserialize
CustomFunctionCallback a functionId
CustomFunctionCallback$Serializer b (LNBTTagCompound;)LCustomFunctionCallbackTimer; deserialize
CustomFunctionCallbackTag a tagId
CustomFunctionCallbackTag$Serializer b (LNBTTagCompound;)LCustomFunctionCallbackTimer; deserialize
CustomFunctionCallbackTimer$Serializer a id
CustomFunctionCallbackTimer$Serializer b cls
CustomFunctionCallbackTimer$Serializer b ()Ljava/lang/Class; getCls
CustomFunctionCallbackTimer$Serializer b (LNBTTagCompound;)LCustomFunctionCallbackTimer; deserialize
CustomFunctionCallbackTimers b LOGGER
CustomFunctionCallbackTimers a SERVER_CALLBACKS
CustomFunctionCallbackTimers c idToSerializer
CustomFunctionCallbackTimers d classToSerializer
CustomFunctionCallbackTimerQueue a LOGGER
CustomFunctionCallbackTimerQueue b callbacksRegistry
CustomFunctionCallbackTimerQueue c queue
CustomFunctionCallbackTimerQueue d sequentialId
CustomFunctionCallbackTimerQueue e events
CustomFunctionCallbackTimerQueue c ()Ljava/util/Comparator; createComparator
CustomFunctionCallbackTimerQueue b ()LNBTTagList; store
CustomFunctionCallbackTimerQueue b (LCustomFunctionCallbackTimerQueue$Event;)Lcom/google/common/primitives/UnsignedLong; lambda$createComparator$1
CustomFunctionCallbackTimerQueue c (LCustomFunctionCallbackTimerQueue$Event;)J lambda$createComparator$0
CustomFunctionCallbackTimerQueue$Event a triggerTime
CustomFunctionCallbackTimerQueue$Event b sequentialId
CustomFunctionCallbackTimerQueue$Event c id
CustomFunctionCallbackTimerQueue$Event d callback
PosAndRot a pos
PosAndRot b xRot
PosAndRot c yRot
PosAndRot b ()F xRot
PosAndRot c ()F yRot
PosAndRot equals (Ljava/lang/Object;)Z equals
PosAndRot hashCode ()I hashCode
PosAndRot toString ()Ljava/lang/String; toString
Vec2F a ZERO
Vec2F b ONE
Vec2F c UNIT_X
Vec2F d NEG_UNIT_X
Vec2F e UNIT_Y
Vec2F f NEG_UNIT_Y
Vec2F g MAX
Vec2F h MIN
Vec2F i x
Vec2F j y
Vec2F b (LVec2F;)LVec2F; add
Vec2F b (F)LVec2F; add
Vec2F c (LVec2F;)Z equals
Vec2F b ()F length
Vec2F c ()F lengthSquared
Vec2F d (LVec2F;)F distanceToSqr
Vec2F d ()LVec2F; negated
VoxelShapeArray b xs
VoxelShapeArray c ys
VoxelShapeArray d zs
VoxelShapeArray$1 a $SwitchMap$net$minecraft$core$Direction$Axis
VoxelShapeBitSet d storage
VoxelShapeBitSet e xMin
VoxelShapeBitSet f yMin
VoxelShapeBitSet g zMin
VoxelShapeBitSet h xMax
VoxelShapeBitSet i yMax
VoxelShapeBitSet j zMax
VoxelShapeBitSet b (III)Z isFull
VoxelShapeBitSet b (LEnumDirection$EnumAxis;)I lastFull
VoxelShapeCollision b ()Z isDescending
VoxelShapeCubePoint a parts
VoxelShapeCubePoint getDouble (I)D getDouble
VoxelShapeCubePoint size ()I size
VoxelShapeCubeMerger a result
VoxelShapeCubeMerger b firstSize
VoxelShapeCubeMerger c secondSize
VoxelShapeCubeMerger d gcd
VoxelShapeDiscrete d AXIS_VALUES
VoxelShapeDiscrete a xSize
VoxelShapeDiscrete b ySize
VoxelShapeDiscrete c zSize
VoxelShapeDiscrete c (III)Z isFullWide
VoxelShapeDiscrete b (LEnumAxisCycle;III)Z isFull
VoxelShapeDiscrete b (III)Z isFull
VoxelShapeDiscrete b (LEnumDirection$EnumAxis;)I lastFull
VoxelShapeDiscrete b (LEnumDirection$EnumAxis;II)I lastFull
VoxelShapeDiscrete c (LEnumDirection$EnumAxis;)I getSize
VoxelShapeDiscrete b ()I getXSize
VoxelShapeDiscrete c ()I getYSize
VoxelShapeDiscrete d ()I getZSize
VoxelShapeDiscrete b (LVoxelShapeDiscrete$IntLineConsumer;Z)V forAllBoxes
VoxelShapeDiscrete$IntFaceConsumer consume (LEnumDirection;III)V consume
VoxelShapeDiscrete$IntLineConsumer consume (IIIIII)V consume
VoxelShapeCollisionEntity a EMPTY
VoxelShapeCollisionEntity b descending
VoxelShapeCollisionEntity c entityBottom
VoxelShapeCollisionEntity d heldItem
VoxelShapeCollisionEntity b ()Z isDescending
VoxelShapeMergerIdentical a coords
VoxelShapeMerger$IndexConsumer merge (III)Z merge
VoxelShapeMergerList a result
VoxelShapeMergerList b firstIndices
VoxelShapeMergerList c secondIndices
IntPointRange a parts
IntPointRange b origin
IntPointRange getDouble (I)D getDouble
IntPointRange size ()I size
VoxelShapeMergerDisjoint a lower
VoxelShapeMergerDisjoint b upper
VoxelShapeMergerDisjoint c swap
VoxelShapeMergerDisjoint size ()I size
VoxelShapeMergerDisjoint b (LVoxelShapeMerger$IndexConsumer;)Z forNonSwappedIndexes
VoxelShapeMergerDisjoint getDouble (I)D getDouble
DoubleListOffset a delegate
DoubleListOffset b offset
DoubleListOffset getDouble (I)D getDouble
DoubleListOffset size ()I size
VoxelShapes$DoubleLineConsumer consume (DDDDDD)V consume
VoxelShapeSlice b delegate
VoxelShapeSlice c axis
VoxelShapeSlice d SLICE_COORDS
VoxelShapeDiscreteSlice d parent
VoxelShapeDiscreteSlice e startX
VoxelShapeDiscreteSlice f startY
VoxelShapeDiscreteSlice g startZ
VoxelShapeDiscreteSlice h endX
VoxelShapeDiscreteSlice i endY
VoxelShapeDiscreteSlice j endZ
VoxelShapeDiscreteSlice b (III)Z isFull
VoxelShapeDiscreteSlice b (LEnumDirection$EnumAxis;)I lastFull
WorldRegionIndirectVoxelShape b x
WorldRegionIndirectVoxelShape c y
WorldRegionIndirectVoxelShape d z
PersistentScoreboard a LOGGER
PersistentScoreboard b scoreboard
PersistentScoreboard c delayLoad
PersistentScoreboard c (LNBTTagCompound;)V loadDisplaySlots
PersistentScoreboard b (LNBTTagList;)V loadObjectives
PersistentScoreboard b (LNBTTagCompound;)LNBTTagCompound; save
PersistentScoreboard d (LNBTTagCompound;)V saveDisplaySlots
PersistentScoreboard e ()LNBTTagList; saveObjectives
